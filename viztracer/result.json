{"traceEvents": [{"ph": "M", "pid": 78036, "tid": 78036, "name": "process_name", "args": {"name": "MainProcess"}}, {"ph": "M", "pid": 78036, "tid": 82312, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 78036, "tid": 82312, "ts": 438509138618.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 78036, "tid": 82312, "ts": 438509138620.3, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 78036, "tid": 82312, "ts": 438509138629.4, "ph": "X", "cat": "fee", "dur": 2.3, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 78036, "tid": 82312, "ts": 438509138619.8, "ph": "X", "cat": "fee", "dur": 12.0, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 78036, "tid": 82312, "ts": 438509138632.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 78036, "tid": 82312, "ts": 438509138633.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rpartition"}, {"pid": 78036, "tid": 82312, "ts": 438509138634.8, "ph": "X", "cat": "fee", "dur": 711.3, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 78036, "tid": 82312, "ts": 438509139347.1, "ph": "X", "cat": "fee", "dur": 757747.7, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 78036, "tid": 82312, "ts": 438509138633.1, "ph": "X", "cat": "fee", "dur": 758462.4, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 78036, "tid": 82312, "ts": 438509897096.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 78036, "tid": 82312, "ts": 438509897096.5, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 78036, "tid": 82312, "ts": 438509897098.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 78036, "tid": 82312, "ts": 438509897098.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 78036, "tid": 82312, "ts": 438509897099.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 78036, "tid": 82312, "ts": 438509897098.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 78036, "tid": 82312, "ts": 438509138617.7, "ph": "X", "cat": "fee", "dur": 758483.4, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 78036, "tid": 82312, "ts": 438509897103.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 78036, "tid": 82312, "ts": 438509897104.4, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 78036, "tid": 82312, "ts": 438509897109.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 78036, "tid": 82312, "ts": 438509897104.3, "ph": "X", "cat": "fee", "dur": 6.7, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 78036, "tid": 82312, "ts": 438509897111.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 78036, "tid": 82312, "ts": 438509897111.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 78036, "tid": 82312, "ts": 438509897112.7, "ph": "X", "cat": "fee", "dur": 113708.3, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 78036, "tid": 82312, "ts": 438510010823.7, "ph": "X", "cat": "fee", "dur": 349.9, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 78036, "tid": 82312, "ts": 438510011174.4, "ph": "X", "cat": "fee", "dur": 365361.8, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 78036, "tid": 82312, "ts": 438510376538.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "str.rpartition"}, {"pid": 78036, "tid": 82312, "ts": 438510376539.2, "ph": "X", "cat": "fee", "dur": 1.6, "name": "builtins.setattr"}, {"pid": 78036, "tid": 82312, "ts": 438509897111.6, "ph": "X", "cat": "fee", "dur": 479429.3, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 78036, "tid": 82312, "ts": 438510376543.8, "ph": "X", "cat": "fee", "dur": 5.2, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 78036, "tid": 82312, "ts": 438510376542.7, "ph": "X", "cat": "fee", "dur": 6.5, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 78036, "tid": 82312, "ts": 438510376551.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_imp.acquire_lock"}, {"pid": 78036, "tid": 82312, "ts": 438510376551.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 78036, "tid": 82312, "ts": 438510376552.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 78036, "tid": 82312, "ts": 438510376550.3, "ph": "X", "cat": "fee", "dur": 2.8, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 78036, "tid": 82312, "ts": 438509897103.2, "ph": "X", "cat": "fee", "dur": 479455.9, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 78036, "tid": 82312, "ts": 438510376574.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 78036, "tid": 82312, "ts": 438510376574.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 78036, "tid": 82312, "ts": 438510376573.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 78036, "tid": 82312, "ts": 438510376577.9, "ph": "X", "cat": "fee", "dur": 1.7, "name": "inner (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 78036, "tid": 82312, "ts": 438510376581.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "inner (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)"}, {"pid": 78036, "tid": 82312, "ts": 438510376589.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.isinstance"}, {"pid": 78036, "tid": 82312, "ts": 438510376591.0, "ph": "X", "cat": "fee", "dur": 117.6, "name": "__new__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\polygon.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510376710.2, "ph": "X", "cat": "fee", "dur": 32.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510376743.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 78036, "tid": 82312, "ts": 438510376588.3, "ph": "X", "cat": "fee", "dur": 154.9, "name": "__new__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\polygon.py:221)"}, {"pid": 78036, "tid": 82312, "ts": 438510376980.6, "ph": "X", "cat": "fee", "dur": 9.9, "name": "getpreferredencoding (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\_bootlocale.py:11)"}, {"pid": 78036, "tid": 82312, "ts": 438510376745.9, "ph": "X", "cat": "fee", "dur": 259.4, "name": "io.open"}, {"pid": 78036, "tid": 82312, "ts": 438510377011.0, "ph": "X", "cat": "fee", "dur": 60.7, "name": "_io.TextIOWrapper.read"}, {"pid": 78036, "tid": 82312, "ts": 438510377074.2, "ph": "X", "cat": "fee", "dur": 17.9, "name": "loads (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:299)"}, {"pid": 78036, "tid": 82312, "ts": 438510377009.9, "ph": "X", "cat": "fee", "dur": 82.8, "name": "load (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:274)"}, {"pid": 78036, "tid": 82312, "ts": 438510377093.5, "ph": "X", "cat": "fee", "dur": 18.0, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 78036, "tid": 82312, "ts": 438510377113.2, "ph": "X", "cat": "fee", "dur": 372.8, "name": "nt.listdir"}, {"pid": 78036, "tid": 82312, "ts": 438510377488.6, "ph": "X", "cat": "fee", "dur": 77.5, "name": "<listcomp> (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:65)"}, {"pid": 78036, "tid": 82312, "ts": 438510377570.7, "ph": "X", "cat": "fee", "dur": 12.6, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377583.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377587.0, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377589.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377592.2, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377594.9, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377597.4, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377600.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377602.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377605.4, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377608.0, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377610.7, "ph": "X", "cat": "fee", "dur": 2.5, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377613.5, "ph": "X", "cat": "fee", "dur": 2.5, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377616.3, "ph": "X", "cat": "fee", "dur": 2.5, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377619.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377622.1, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377624.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377627.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377630.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377632.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377635.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377637.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377640.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377642.7, "ph": "X", "cat": "fee", "dur": 2.5, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377645.4, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377648.2, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377650.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377653.6, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377656.2, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377658.9, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377661.5, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377664.1, "ph": "X", "cat": "fee", "dur": 2.6, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377666.9, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377669.7, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377672.3, "ph": "X", "cat": "fee", "dur": 2.8, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377675.3, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377678.0, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377680.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377683.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377685.6, "ph": "X", "cat": "fee", "dur": 3.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377690.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377693.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377696.4, "ph": "X", "cat": "fee", "dur": 2.8, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377699.5, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377702.3, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377705.0, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377707.5, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377710.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377712.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377715.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377717.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377720.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377722.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377725.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377727.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377730.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377732.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377735.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377737.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377739.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377742.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377744.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377747.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377749.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377752.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377754.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377757.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377759.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377762.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377764.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377766.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377769.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377771.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377774.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377776.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377779.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377781.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377784.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377787.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377789.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377791.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377794.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377796.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377799.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377801.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377804.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377806.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377810.0, "ph": "X", "cat": "fee", "dur": 3.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377813.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377816.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377818.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377821.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377823.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377826.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377828.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377831.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377833.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377835.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377838.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377840.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377843.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377845.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377848.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377850.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377852.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377855.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377857.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377860.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377862.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377865.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377867.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377870.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377872.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377874.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377877.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377879.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377882.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377884.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377887.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377889.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377891.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377894.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377896.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377899.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377901.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377904.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377906.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377908.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377911.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377914.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377916.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377919.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377921.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377924.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377927.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377929.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377932.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377934.8, "ph": "X", "cat": "fee", "dur": 3.0, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377938.1, "ph": "X", "cat": "fee", "dur": 2.6, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377941.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377943.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377945.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377948.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377950.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377953.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377955.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377958.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377960.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377963.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377965.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377968.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377970.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377973.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377975.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377978.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377980.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377982.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377985.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377987.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377990.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377992.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377995.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377997.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378000.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378002.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378004.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378007.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378009.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378012.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378014.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378017.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378019.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378021.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378024.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378027.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378029.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378032.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378034.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378037.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378039.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378042.8, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378045.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378048.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378050.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378052.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378055.4, "ph": "X", "cat": "fee", "dur": 2.7, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378058.5, "ph": "X", "cat": "fee", "dur": 2.7, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378061.5, "ph": "X", "cat": "fee", "dur": 3.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378065.2, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378067.8, "ph": "X", "cat": "fee", "dur": 2.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378070.5, "ph": "X", "cat": "fee", "dur": 2.7, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378073.5, "ph": "X", "cat": "fee", "dur": 2.8, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378076.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378079.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378081.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378084.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378086.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378088.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378091.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378093.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378096.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378099.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378101.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378104.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378106.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378108.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378111.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378113.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378116.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378118.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378121.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378123.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378126.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378128.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378130.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378133.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378135.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378138.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378140.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378143.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378145.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378147.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378150.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378152.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378155.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378157.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378160.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378163.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378165.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378168.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378170.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378173.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378175.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378178.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378181.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378183.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378185.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378188.3, "ph": "X", "cat": "fee", "dur": 3.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378191.7, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378194.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378196.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378199.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378201.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378204.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378206.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378208.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378211.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378213.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378216.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378218.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378221.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378223.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378225.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378228.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378230.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378233.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378235.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378238.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378240.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378243.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378245.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378247.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378250.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378252.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378255.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378257.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378260.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378262.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378264.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378267.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378270.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378272.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378275.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378278.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378281.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378283.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378285.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378288.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378290.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378293.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378295.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378298.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378300.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378303.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378305.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378307.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378310.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378312.7, "ph": "X", "cat": "fee", "dur": 3.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378316.2, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378318.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378321.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378323.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378326.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378328.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378330.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378333.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378335.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378338.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378340.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378343.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378345.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378347.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378350.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378352.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378355.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378357.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378360.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378362.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378364.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378367.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378370.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378372.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378375.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378377.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378380.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378382.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378384.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378387.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378389.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378393.3, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378395.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378398.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378400.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378403.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378405.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378408.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378410.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378412.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378415.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378417.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378420.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378422.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378425.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378427.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378430.0, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378432.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378435.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378437.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378440.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378443.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378445.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378448.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378450.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378453.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378455.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378458.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378460.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378462.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378465.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378467.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378470.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378472.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378475.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378478.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378480.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378483.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378485.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378487.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378490.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378492.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378495.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378497.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378500.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378502.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378504.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378507.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378510.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378513.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378515.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378518.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378520.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378523.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378525.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378528.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378530.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378532.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378535.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378537.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378540.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378542.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378545.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378547.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378549.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378552.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378554.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378557.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378559.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378562.0, "ph": "X", "cat": "fee", "dur": 3.5, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378565.7, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378568.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378570.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378573.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378575.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378578.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378580.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378582.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378585.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378587.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378590.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378592.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378595.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378598.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378600.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378603.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378605.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378608.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378610.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378612.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378615.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378617.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378620.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378622.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378626.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378628.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378631.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378633.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378635.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378638.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378640.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378643.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378645.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378648.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378650.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378653.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378655.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378657.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378660.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378662.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378665.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378667.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378670.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378672.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378674.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378677.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378679.7, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378682.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378684.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378687.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378690.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378693.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378695.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378697.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378700.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378702.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378705.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378707.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378710.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378712.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378714.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378717.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378719.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378722.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378724.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378727.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378729.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378732.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378734.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378737.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378739.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378743.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378745.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378748.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378750.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378753.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378755.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378757.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378760.3, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378762.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378765.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378767.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378770.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378772.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378775.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378777.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378779.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378782.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378784.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378787.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378789.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378792.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378794.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378796.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378799.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378801.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378804.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378806.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378809.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378811.6, "ph": "X", "cat": "fee", "dur": 3.4, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378815.3, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378817.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378820.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378822.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378825.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378827.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378830.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378832.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378834.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378837.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378839.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378842.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378844.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378847.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378849.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378851.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378854.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378857.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378860.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378862.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378865.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378867.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378870.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378872.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378874.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378877.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378879.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378882.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378884.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378887.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378889.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378892.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378894.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378897.4, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378899.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378902.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378904.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378907.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378909.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378912.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378914.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378917.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378919.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378921.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378924.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378926.8, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378929.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378931.7, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378934.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378936.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378940.0, "ph": "X", "cat": "fee", "dur": 2.3, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378942.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378945.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510378947.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)"}, {"pid": 78036, "tid": 82312, "ts": 438510377568.1, "ph": "X", "cat": "fee", "dur": 1381.6, "name": "<listcomp> (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:66)"}, {"pid": 78036, "tid": 82312, "ts": 438510378959.0, "ph": "X", "cat": "fee", "dur": 60288.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510439249.1, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510439253.6, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510439279.0, "ph": "X", "cat": "fee", "dur": 86276.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510378957.8, "ph": "X", "cat": "fee", "dur": 146599.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510525561.7, "ph": "X", "cat": "fee", "dur": 38.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510525602.0, "ph": "X", "cat": "fee", "dur": 96.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510525560.0, "ph": "X", "cat": "fee", "dur": 139.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510525702.4, "ph": "X", "cat": "fee", "dur": 125.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510525700.1, "ph": "X", "cat": "fee", "dur": 130.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510525833.9, "ph": "X", "cat": "fee", "dur": 46.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510525832.7, "ph": "X", "cat": "fee", "dur": 47.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510525882.8, "ph": "X", "cat": "fee", "dur": 11.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510525895.3, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510525881.4, "ph": "X", "cat": "fee", "dur": 18.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510525904.1, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510525911.2, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510525916.0, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510525938.7, "ph": "X", "cat": "fee", "dur": 69545.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510525903.2, "ph": "X", "cat": "fee", "dur": 69582.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510595584.8, "ph": "X", "cat": "fee", "dur": 21.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510595606.9, "ph": "X", "cat": "fee", "dur": 52.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510595584.1, "ph": "X", "cat": "fee", "dur": 75.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510595661.9, "ph": "X", "cat": "fee", "dur": 515.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510595660.1, "ph": "X", "cat": "fee", "dur": 518.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510596181.4, "ph": "X", "cat": "fee", "dur": 48.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510596180.1, "ph": "X", "cat": "fee", "dur": 49.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510596231.7, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510596241.6, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510596230.7, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510596248.3, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510596254.8, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510596259.7, "ph": "X", "cat": "fee", "dur": 19.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510596280.7, "ph": "X", "cat": "fee", "dur": 56239.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510596247.3, "ph": "X", "cat": "fee", "dur": 56274.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510652634.2, "ph": "X", "cat": "fee", "dur": 27.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510652662.2, "ph": "X", "cat": "fee", "dur": 57.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510652633.3, "ph": "X", "cat": "fee", "dur": 86.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510652723.2, "ph": "X", "cat": "fee", "dur": 579.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510652720.7, "ph": "X", "cat": "fee", "dur": 581.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510653305.6, "ph": "X", "cat": "fee", "dur": 44.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510653304.5, "ph": "X", "cat": "fee", "dur": 45.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510653352.7, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510653362.7, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510653351.8, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510653370.4, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510653377.4, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510653383.5, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510653408.6, "ph": "X", "cat": "fee", "dur": 72686.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510653369.3, "ph": "X", "cat": "fee", "dur": 72727.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510726217.7, "ph": "X", "cat": "fee", "dur": 34.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510726253.4, "ph": "X", "cat": "fee", "dur": 82.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510726216.6, "ph": "X", "cat": "fee", "dur": 119.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510726339.0, "ph": "X", "cat": "fee", "dur": 875.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510726337.0, "ph": "X", "cat": "fee", "dur": 878.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510727221.3, "ph": "X", "cat": "fee", "dur": 32.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510727219.4, "ph": "X", "cat": "fee", "dur": 38.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510727260.2, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510727271.1, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510727258.9, "ph": "X", "cat": "fee", "dur": 17.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510727280.8, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510727289.7, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510727295.8, "ph": "X", "cat": "fee", "dur": 24.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510727323.0, "ph": "X", "cat": "fee", "dur": 64589.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510727279.6, "ph": "X", "cat": "fee", "dur": 64633.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510792020.6, "ph": "X", "cat": "fee", "dur": 20.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510792042.0, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510792019.7, "ph": "X", "cat": "fee", "dur": 74.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510792096.9, "ph": "X", "cat": "fee", "dur": 591.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510792094.8, "ph": "X", "cat": "fee", "dur": 594.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510792693.2, "ph": "X", "cat": "fee", "dur": 29.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510792691.8, "ph": "X", "cat": "fee", "dur": 31.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510792725.0, "ph": "X", "cat": "fee", "dur": 21.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510792746.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510792724.1, "ph": "X", "cat": "fee", "dur": 25.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510792750.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438510792754.5, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510792761.0, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510792766.1, "ph": "X", "cat": "fee", "dur": 20.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510792788.4, "ph": "X", "cat": "fee", "dur": 55089.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510792753.5, "ph": "X", "cat": "fee", "dur": 55125.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510847980.0, "ph": "X", "cat": "fee", "dur": 21.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510848002.4, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510847979.3, "ph": "X", "cat": "fee", "dur": 75.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510848057.4, "ph": "X", "cat": "fee", "dur": 712.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510848055.4, "ph": "X", "cat": "fee", "dur": 715.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510848777.6, "ph": "X", "cat": "fee", "dur": 47.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510848774.9, "ph": "X", "cat": "fee", "dur": 50.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510848828.8, "ph": "X", "cat": "fee", "dur": 12.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510848842.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510848827.5, "ph": "X", "cat": "fee", "dur": 21.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510848849.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438510848856.5, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510848866.5, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510848874.9, "ph": "X", "cat": "fee", "dur": 30.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510848908.0, "ph": "X", "cat": "fee", "dur": 29233.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510848854.2, "ph": "X", "cat": "fee", "dur": 29287.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510878237.8, "ph": "X", "cat": "fee", "dur": 18.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510878257.1, "ph": "X", "cat": "fee", "dur": 50.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510878237.1, "ph": "X", "cat": "fee", "dur": 70.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510878311.1, "ph": "X", "cat": "fee", "dur": 73.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510878309.3, "ph": "X", "cat": "fee", "dur": 75.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510878400.2, "ph": "X", "cat": "fee", "dur": 29.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510878399.2, "ph": "X", "cat": "fee", "dur": 30.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510878431.8, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510878441.9, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510878430.9, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510878448.1, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510878454.4, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510878459.6, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510878481.4, "ph": "X", "cat": "fee", "dur": 96748.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510878447.2, "ph": "X", "cat": "fee", "dur": 96784.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438510975327.9, "ph": "X", "cat": "fee", "dur": 20.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438510975349.2, "ph": "X", "cat": "fee", "dur": 52.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438510975327.1, "ph": "X", "cat": "fee", "dur": 74.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438510975404.4, "ph": "X", "cat": "fee", "dur": 237.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510975402.5, "ph": "X", "cat": "fee", "dur": 240.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438510975647.0, "ph": "X", "cat": "fee", "dur": 45.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510975645.6, "ph": "X", "cat": "fee", "dur": 46.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438510975695.9, "ph": "X", "cat": "fee", "dur": 14.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438510975710.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438510975694.5, "ph": "X", "cat": "fee", "dur": 20.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510975720.4, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438510975729.2, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438510975735.7, "ph": "X", "cat": "fee", "dur": 30.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438510975769.0, "ph": "X", "cat": "fee", "dur": 91358.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438510975719.3, "ph": "X", "cat": "fee", "dur": 91409.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511067220.5, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511067241.4, "ph": "X", "cat": "fee", "dur": 51.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511067219.9, "ph": "X", "cat": "fee", "dur": 73.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511067295.8, "ph": "X", "cat": "fee", "dur": 503.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511067294.1, "ph": "X", "cat": "fee", "dur": 505.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511067802.8, "ph": "X", "cat": "fee", "dur": 31.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511067801.7, "ph": "X", "cat": "fee", "dur": 33.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511067837.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511067847.5, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511067836.3, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511067854.8, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511067861.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511067866.3, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511067888.5, "ph": "X", "cat": "fee", "dur": 100452.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511067853.8, "ph": "X", "cat": "fee", "dur": 100487.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511168436.8, "ph": "X", "cat": "fee", "dur": 19.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511168457.0, "ph": "X", "cat": "fee", "dur": 51.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511168436.0, "ph": "X", "cat": "fee", "dur": 72.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511168511.3, "ph": "X", "cat": "fee", "dur": 581.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511168509.6, "ph": "X", "cat": "fee", "dur": 583.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511169096.9, "ph": "X", "cat": "fee", "dur": 30.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511169095.9, "ph": "X", "cat": "fee", "dur": 32.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511169132.6, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511169142.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511169131.7, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511169149.3, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511169156.1, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511169161.3, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511169184.3, "ph": "X", "cat": "fee", "dur": 99258.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511169147.9, "ph": "X", "cat": "fee", "dur": 99296.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511268538.2, "ph": "X", "cat": "fee", "dur": 20.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511268559.7, "ph": "X", "cat": "fee", "dur": 53.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511268537.5, "ph": "X", "cat": "fee", "dur": 76.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511268616.9, "ph": "X", "cat": "fee", "dur": 1112.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511268614.4, "ph": "X", "cat": "fee", "dur": 1116.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511269734.5, "ph": "X", "cat": "fee", "dur": 28.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511269732.7, "ph": "X", "cat": "fee", "dur": 30.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511269765.5, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511269775.3, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511269764.1, "ph": "X", "cat": "fee", "dur": 15.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511269783.7, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511269791.7, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511269797.3, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511269820.8, "ph": "X", "cat": "fee", "dur": 63534.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511269782.6, "ph": "X", "cat": "fee", "dur": 63574.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511333543.8, "ph": "X", "cat": "fee", "dur": 47.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511333592.9, "ph": "X", "cat": "fee", "dur": 96.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511333540.7, "ph": "X", "cat": "fee", "dur": 148.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511333692.6, "ph": "X", "cat": "fee", "dur": 542.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511333690.3, "ph": "X", "cat": "fee", "dur": 544.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511334238.6, "ph": "X", "cat": "fee", "dur": 35.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511334237.5, "ph": "X", "cat": "fee", "dur": 36.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511334276.3, "ph": "X", "cat": "fee", "dur": 10.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511334287.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511334275.3, "ph": "X", "cat": "fee", "dur": 16.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511334295.5, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511334302.8, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511334308.6, "ph": "X", "cat": "fee", "dur": 23.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511334333.4, "ph": "X", "cat": "fee", "dur": 66490.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511334294.3, "ph": "X", "cat": "fee", "dur": 66531.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511400950.1, "ph": "X", "cat": "fee", "dur": 22.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511400973.9, "ph": "X", "cat": "fee", "dur": 53.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511400949.4, "ph": "X", "cat": "fee", "dur": 77.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511401030.3, "ph": "X", "cat": "fee", "dur": 324.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511401028.4, "ph": "X", "cat": "fee", "dur": 327.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511401360.9, "ph": "X", "cat": "fee", "dur": 27.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511401359.9, "ph": "X", "cat": "fee", "dur": 28.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511401391.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511401403.8, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511401390.1, "ph": "X", "cat": "fee", "dur": 16.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511401411.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511401417.9, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511401422.8, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511401445.0, "ph": "X", "cat": "fee", "dur": 85185.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511401410.1, "ph": "X", "cat": "fee", "dur": 85221.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511486747.4, "ph": "X", "cat": "fee", "dur": 29.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511486777.9, "ph": "X", "cat": "fee", "dur": 63.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511486746.6, "ph": "X", "cat": "fee", "dur": 95.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511486844.7, "ph": "X", "cat": "fee", "dur": 585.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511486842.9, "ph": "X", "cat": "fee", "dur": 587.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511487434.7, "ph": "X", "cat": "fee", "dur": 33.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511487433.0, "ph": "X", "cat": "fee", "dur": 35.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511487470.5, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511487481.3, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511487469.7, "ph": "X", "cat": "fee", "dur": 16.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511487490.7, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511487499.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511487505.7, "ph": "X", "cat": "fee", "dur": 22.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511487530.4, "ph": "X", "cat": "fee", "dur": 54192.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511487489.6, "ph": "X", "cat": "fee", "dur": 54234.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511541847.9, "ph": "X", "cat": "fee", "dur": 30.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511541879.5, "ph": "X", "cat": "fee", "dur": 70.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511541846.7, "ph": "X", "cat": "fee", "dur": 103.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511541952.4, "ph": "X", "cat": "fee", "dur": 384.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511541950.8, "ph": "X", "cat": "fee", "dur": 387.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511542343.7, "ph": "X", "cat": "fee", "dur": 33.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511542342.0, "ph": "X", "cat": "fee", "dur": 35.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511542380.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511542390.1, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511542379.4, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511542399.6, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511542408.5, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511542414.5, "ph": "X", "cat": "fee", "dur": 23.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511542439.8, "ph": "X", "cat": "fee", "dur": 66357.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511542398.5, "ph": "X", "cat": "fee", "dur": 66399.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511608917.5, "ph": "X", "cat": "fee", "dur": 24.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511608942.8, "ph": "X", "cat": "fee", "dur": 53.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511608916.6, "ph": "X", "cat": "fee", "dur": 79.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511608999.5, "ph": "X", "cat": "fee", "dur": 484.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511608997.8, "ph": "X", "cat": "fee", "dur": 487.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511609488.6, "ph": "X", "cat": "fee", "dur": 36.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511609487.4, "ph": "X", "cat": "fee", "dur": 38.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511609528.0, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511609537.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511609526.9, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511609547.9, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511609554.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511609559.5, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511609581.9, "ph": "X", "cat": "fee", "dur": 52510.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511609546.9, "ph": "X", "cat": "fee", "dur": 52547.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511662209.6, "ph": "X", "cat": "fee", "dur": 20.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511662231.2, "ph": "X", "cat": "fee", "dur": 54.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511662208.9, "ph": "X", "cat": "fee", "dur": 76.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511662288.7, "ph": "X", "cat": "fee", "dur": 86.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511662287.0, "ph": "X", "cat": "fee", "dur": 88.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511662379.0, "ph": "X", "cat": "fee", "dur": 33.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511662377.5, "ph": "X", "cat": "fee", "dur": 35.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511662414.7, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511662425.0, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511662413.8, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511662432.7, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511662439.4, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511662444.6, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511662466.2, "ph": "X", "cat": "fee", "dur": 26944.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511662431.1, "ph": "X", "cat": "fee", "dur": 26981.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511689547.8, "ph": "X", "cat": "fee", "dur": 33.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511689582.8, "ph": "X", "cat": "fee", "dur": 72.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511689546.7, "ph": "X", "cat": "fee", "dur": 108.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511689659.7, "ph": "X", "cat": "fee", "dur": 97.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511689657.0, "ph": "X", "cat": "fee", "dur": 101.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511689762.2, "ph": "X", "cat": "fee", "dur": 41.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511689761.0, "ph": "X", "cat": "fee", "dur": 43.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511689807.2, "ph": "X", "cat": "fee", "dur": 10.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511689818.4, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511689805.9, "ph": "X", "cat": "fee", "dur": 16.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511689828.4, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511689836.8, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511689843.9, "ph": "X", "cat": "fee", "dur": 28.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511689873.7, "ph": "X", "cat": "fee", "dur": 28455.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511689827.1, "ph": "X", "cat": "fee", "dur": 28503.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511718477.3, "ph": "X", "cat": "fee", "dur": 37.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511718515.8, "ph": "X", "cat": "fee", "dur": 99.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511718475.7, "ph": "X", "cat": "fee", "dur": 140.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511718619.5, "ph": "X", "cat": "fee", "dur": 1077.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511718617.2, "ph": "X", "cat": "fee", "dur": 1081.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511719707.4, "ph": "X", "cat": "fee", "dur": 45.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511719704.1, "ph": "X", "cat": "fee", "dur": 49.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511719757.1, "ph": "X", "cat": "fee", "dur": 12.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511719770.1, "ph": "X", "cat": "fee", "dur": 9.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511719755.4, "ph": "X", "cat": "fee", "dur": 24.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511719787.3, "ph": "X", "cat": "fee", "dur": 12.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511719812.7, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511719820.6, "ph": "X", "cat": "fee", "dur": 34.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511719858.3, "ph": "X", "cat": "fee", "dur": 36921.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511719785.9, "ph": "X", "cat": "fee", "dur": 36995.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511756915.4, "ph": "X", "cat": "fee", "dur": 29.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511756945.3, "ph": "X", "cat": "fee", "dur": 81.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511756914.1, "ph": "X", "cat": "fee", "dur": 113.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511757030.7, "ph": "X", "cat": "fee", "dur": 469.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511757028.5, "ph": "X", "cat": "fee", "dur": 472.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511757505.9, "ph": "X", "cat": "fee", "dur": 34.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511757504.2, "ph": "X", "cat": "fee", "dur": 36.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511757543.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511757553.1, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511757542.1, "ph": "X", "cat": "fee", "dur": 16.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511757562.4, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511757571.1, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511757577.1, "ph": "X", "cat": "fee", "dur": 32.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511757611.6, "ph": "X", "cat": "fee", "dur": 22772.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511757561.4, "ph": "X", "cat": "fee", "dur": 22823.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511780501.2, "ph": "X", "cat": "fee", "dur": 29.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511780531.6, "ph": "X", "cat": "fee", "dur": 58.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511780500.4, "ph": "X", "cat": "fee", "dur": 90.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511780594.1, "ph": "X", "cat": "fee", "dur": 87.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511780592.1, "ph": "X", "cat": "fee", "dur": 89.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511780685.0, "ph": "X", "cat": "fee", "dur": 35.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511780683.9, "ph": "X", "cat": "fee", "dur": 36.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511780722.9, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511780733.4, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511780722.1, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511780741.2, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511780748.3, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511780754.1, "ph": "X", "cat": "fee", "dur": 23.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511780779.0, "ph": "X", "cat": "fee", "dur": 14826.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511780739.9, "ph": "X", "cat": "fee", "dur": 14866.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511795699.7, "ph": "X", "cat": "fee", "dur": 19.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511795719.6, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511795699.0, "ph": "X", "cat": "fee", "dur": 72.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511795773.8, "ph": "X", "cat": "fee", "dur": 561.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511795772.1, "ph": "X", "cat": "fee", "dur": 563.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511796339.9, "ph": "X", "cat": "fee", "dur": 21.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511796338.2, "ph": "X", "cat": "fee", "dur": 23.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511796364.0, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511796374.1, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511796362.5, "ph": "X", "cat": "fee", "dur": 15.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511796382.5, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511796390.5, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511796396.5, "ph": "X", "cat": "fee", "dur": 23.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511796435.2, "ph": "X", "cat": "fee", "dur": 44595.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511796381.6, "ph": "X", "cat": "fee", "dur": 44650.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511841124.3, "ph": "X", "cat": "fee", "dur": 20.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511841145.4, "ph": "X", "cat": "fee", "dur": 52.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511841123.6, "ph": "X", "cat": "fee", "dur": 74.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511841200.8, "ph": "X", "cat": "fee", "dur": 74.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511841198.8, "ph": "X", "cat": "fee", "dur": 76.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511841278.8, "ph": "X", "cat": "fee", "dur": 38.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511841277.9, "ph": "X", "cat": "fee", "dur": 39.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511841319.9, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511841329.8, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511841318.9, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511841336.6, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511841342.9, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511841347.3, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511841369.1, "ph": "X", "cat": "fee", "dur": 44351.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511841335.6, "ph": "X", "cat": "fee", "dur": 44386.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511885834.5, "ph": "X", "cat": "fee", "dur": 21.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511885856.5, "ph": "X", "cat": "fee", "dur": 54.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511885833.9, "ph": "X", "cat": "fee", "dur": 77.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511885914.7, "ph": "X", "cat": "fee", "dur": 1116.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511885912.4, "ph": "X", "cat": "fee", "dur": 1119.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511887038.5, "ph": "X", "cat": "fee", "dur": 24.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511887036.8, "ph": "X", "cat": "fee", "dur": 26.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511887067.1, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511887078.6, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511887064.9, "ph": "X", "cat": "fee", "dur": 18.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511887089.2, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511887097.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511887104.1, "ph": "X", "cat": "fee", "dur": 24.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511887130.5, "ph": "X", "cat": "fee", "dur": 23847.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511887087.7, "ph": "X", "cat": "fee", "dur": 23891.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511911090.0, "ph": "X", "cat": "fee", "dur": 25.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511911116.6, "ph": "X", "cat": "fee", "dur": 58.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511911089.0, "ph": "X", "cat": "fee", "dur": 86.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511911178.3, "ph": "X", "cat": "fee", "dur": 359.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511911176.4, "ph": "X", "cat": "fee", "dur": 361.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511911541.6, "ph": "X", "cat": "fee", "dur": 31.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511911540.5, "ph": "X", "cat": "fee", "dur": 32.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511911575.6, "ph": "X", "cat": "fee", "dur": 10.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511911587.1, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511911574.8, "ph": "X", "cat": "fee", "dur": 15.52, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511911593.8, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511911600.4, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511911605.6, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511911628.8, "ph": "X", "cat": "fee", "dur": 65635.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511911592.7, "ph": "X", "cat": "fee", "dur": 65680.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438511977362.7, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438511977383.2, "ph": "X", "cat": "fee", "dur": 50.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438511977362.0, "ph": "X", "cat": "fee", "dur": 71.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438511977436.3, "ph": "X", "cat": "fee", "dur": 1204.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511977434.4, "ph": "X", "cat": "fee", "dur": 1207.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438511978645.2, "ph": "X", "cat": "fee", "dur": 41.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511978643.9, "ph": "X", "cat": "fee", "dur": 43.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438511978689.2, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438511978698.8, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438511978688.2, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438511978705.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438511978711.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438511978716.6, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438511978739.2, "ph": "X", "cat": "fee", "dur": 32669.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438511978704.5, "ph": "X", "cat": "fee", "dur": 32705.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512011533.4, "ph": "X", "cat": "fee", "dur": 27.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512011562.3, "ph": "X", "cat": "fee", "dur": 65.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512011532.5, "ph": "X", "cat": "fee", "dur": 95.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512011630.4, "ph": "X", "cat": "fee", "dur": 90.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512011628.4, "ph": "X", "cat": "fee", "dur": 92.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512011726.1, "ph": "X", "cat": "fee", "dur": 45.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512011725.0, "ph": "X", "cat": "fee", "dur": 46.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512011774.8, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512011785.4, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512011773.6, "ph": "X", "cat": "fee", "dur": 16.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512011794.4, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512011801.8, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512011808.5, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512011835.4, "ph": "X", "cat": "fee", "dur": 92125.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512011793.2, "ph": "X", "cat": "fee", "dur": 92169.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512104093.1, "ph": "X", "cat": "fee", "dur": 37.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512104132.2, "ph": "X", "cat": "fee", "dur": 81.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512104091.6, "ph": "X", "cat": "fee", "dur": 122.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512104217.6, "ph": "X", "cat": "fee", "dur": 547.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512104215.5, "ph": "X", "cat": "fee", "dur": 550.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512104772.3, "ph": "X", "cat": "fee", "dur": 72.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512104770.3, "ph": "X", "cat": "fee", "dur": 74.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512104859.6, "ph": "X", "cat": "fee", "dur": 12.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512104872.8, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512104858.0, "ph": "X", "cat": "fee", "dur": 21.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512104885.5, "ph": "X", "cat": "fee", "dur": 9.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512104896.1, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512104903.7, "ph": "X", "cat": "fee", "dur": 33.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512104940.4, "ph": "X", "cat": "fee", "dur": 65922.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512104884.0, "ph": "X", "cat": "fee", "dur": 65980.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512170994.2, "ph": "X", "cat": "fee", "dur": 31.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512171034.2, "ph": "X", "cat": "fee", "dur": 79.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512170992.6, "ph": "X", "cat": "fee", "dur": 121.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512171117.0, "ph": "X", "cat": "fee", "dur": 360.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512171115.1, "ph": "X", "cat": "fee", "dur": 363.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512171483.0, "ph": "X", "cat": "fee", "dur": 51.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512171481.4, "ph": "X", "cat": "fee", "dur": 53.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512171537.9, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512171548.6, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512171536.7, "ph": "X", "cat": "fee", "dur": 16.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512171558.4, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512171566.4, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512171573.6, "ph": "X", "cat": "fee", "dur": 25.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512171601.3, "ph": "X", "cat": "fee", "dur": 21197.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512171556.9, "ph": "X", "cat": "fee", "dur": 21243.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512192931.2, "ph": "X", "cat": "fee", "dur": 30.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512192962.3, "ph": "X", "cat": "fee", "dur": 71.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512192930.1, "ph": "X", "cat": "fee", "dur": 104.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512193037.7, "ph": "X", "cat": "fee", "dur": 990.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512193035.5, "ph": "X", "cat": "fee", "dur": 993.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512194032.8, "ph": "X", "cat": "fee", "dur": 18.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512194031.5, "ph": "X", "cat": "fee", "dur": 20.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512194054.6, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512194066.5, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512194053.8, "ph": "X", "cat": "fee", "dur": 17.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512194074.9, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512194082.5, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512194088.2, "ph": "X", "cat": "fee", "dur": 24.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512194114.4, "ph": "X", "cat": "fee", "dur": 81173.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512194073.7, "ph": "X", "cat": "fee", "dur": 81215.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512275431.9, "ph": "X", "cat": "fee", "dur": 36.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512275469.9, "ph": "X", "cat": "fee", "dur": 81.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512275430.8, "ph": "X", "cat": "fee", "dur": 120.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512275555.0, "ph": "X", "cat": "fee", "dur": 107.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512275552.9, "ph": "X", "cat": "fee", "dur": 110.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512275667.5, "ph": "X", "cat": "fee", "dur": 51.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512275666.5, "ph": "X", "cat": "fee", "dur": 52.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512275722.9, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512275733.3, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512275721.6, "ph": "X", "cat": "fee", "dur": 16.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512275743.2, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512275753.5, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512275760.3, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512275787.2, "ph": "X", "cat": "fee", "dur": 47786.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512275742.0, "ph": "X", "cat": "fee", "dur": 47832.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512323675.6, "ph": "X", "cat": "fee", "dur": 21.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512323697.7, "ph": "X", "cat": "fee", "dur": 55.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512323675.0, "ph": "X", "cat": "fee", "dur": 88.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512323766.3, "ph": "X", "cat": "fee", "dur": 76.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512323764.5, "ph": "X", "cat": "fee", "dur": 78.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512323850.4, "ph": "X", "cat": "fee", "dur": 59.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512323849.5, "ph": "X", "cat": "fee", "dur": 60.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512323912.5, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512323922.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512323911.6, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512323929.6, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512323936.0, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512323941.1, "ph": "X", "cat": "fee", "dur": 21.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512323963.9, "ph": "X", "cat": "fee", "dur": 56596.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512323928.6, "ph": "X", "cat": "fee", "dur": 56633.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512380679.9, "ph": "X", "cat": "fee", "dur": 26.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512380707.5, "ph": "X", "cat": "fee", "dur": 69.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512380678.4, "ph": "X", "cat": "fee", "dur": 99.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512380780.5, "ph": "X", "cat": "fee", "dur": 714.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512380778.2, "ph": "X", "cat": "fee", "dur": 717.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512381499.7, "ph": "X", "cat": "fee", "dur": 32.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512381497.9, "ph": "X", "cat": "fee", "dur": 34.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512381534.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512381544.5, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512381533.8, "ph": "X", "cat": "fee", "dur": 15.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512381553.8, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512381561.3, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512381567.6, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512381591.7, "ph": "X", "cat": "fee", "dur": 13324.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512381552.4, "ph": "X", "cat": "fee", "dur": 13365.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512395037.9, "ph": "X", "cat": "fee", "dur": 24.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512395063.9, "ph": "X", "cat": "fee", "dur": 62.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512395037.1, "ph": "X", "cat": "fee", "dur": 89.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512395130.2, "ph": "X", "cat": "fee", "dur": 664.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512395128.0, "ph": "X", "cat": "fee", "dur": 668.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512395801.4, "ph": "X", "cat": "fee", "dur": 24.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512395799.9, "ph": "X", "cat": "fee", "dur": 25.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512395828.8, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512395839.1, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512395827.3, "ph": "X", "cat": "fee", "dur": 17.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512395849.7, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512395858.0, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512395864.4, "ph": "X", "cat": "fee", "dur": 26.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512395893.0, "ph": "X", "cat": "fee", "dur": 40550.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512395848.4, "ph": "X", "cat": "fee", "dur": 40596.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512436567.8, "ph": "X", "cat": "fee", "dur": 35.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512436604.2, "ph": "X", "cat": "fee", "dur": 79.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512436566.4, "ph": "X", "cat": "fee", "dur": 117.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512436686.7, "ph": "X", "cat": "fee", "dur": 281.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512436684.7, "ph": "X", "cat": "fee", "dur": 295.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512436983.5, "ph": "X", "cat": "fee", "dur": 24.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512436982.3, "ph": "X", "cat": "fee", "dur": 25.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512437010.6, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512437020.7, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512437009.5, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512437030.5, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512437038.8, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512437044.7, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512437068.9, "ph": "X", "cat": "fee", "dur": 41750.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512437029.4, "ph": "X", "cat": "fee", "dur": 41791.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512478935.9, "ph": "X", "cat": "fee", "dur": 20.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512478957.7, "ph": "X", "cat": "fee", "dur": 57.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512478935.2, "ph": "X", "cat": "fee", "dur": 79.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512479018.4, "ph": "X", "cat": "fee", "dur": 450.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512479016.1, "ph": "X", "cat": "fee", "dur": 453.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512479472.6, "ph": "X", "cat": "fee", "dur": 28.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512479471.4, "ph": "X", "cat": "fee", "dur": 30.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512479504.1, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512479514.0, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512479503.2, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512479521.3, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512479528.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512479534.5, "ph": "X", "cat": "fee", "dur": 23.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512479559.2, "ph": "X", "cat": "fee", "dur": 35796.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512479520.2, "ph": "X", "cat": "fee", "dur": 35836.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512515475.1, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512515499.4, "ph": "X", "cat": "fee", "dur": 53.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512515474.3, "ph": "X", "cat": "fee", "dur": 78.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512515556.4, "ph": "X", "cat": "fee", "dur": 631.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512515554.5, "ph": "X", "cat": "fee", "dur": 634.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512516192.0, "ph": "X", "cat": "fee", "dur": 38.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512516190.8, "ph": "X", "cat": "fee", "dur": 40.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512516233.2, "ph": "X", "cat": "fee", "dur": 12.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512516245.6, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512516232.3, "ph": "X", "cat": "fee", "dur": 16.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512516249.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438512516253.8, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512516261.0, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512516266.4, "ph": "X", "cat": "fee", "dur": 34.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512516302.3, "ph": "X", "cat": "fee", "dur": 50802.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512516252.7, "ph": "X", "cat": "fee", "dur": 50853.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512567244.1, "ph": "X", "cat": "fee", "dur": 27.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512567273.2, "ph": "X", "cat": "fee", "dur": 70.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512567243.3, "ph": "X", "cat": "fee", "dur": 100.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512567347.1, "ph": "X", "cat": "fee", "dur": 317.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512567345.1, "ph": "X", "cat": "fee", "dur": 320.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512567672.1, "ph": "X", "cat": "fee", "dur": 33.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512567670.9, "ph": "X", "cat": "fee", "dur": 35.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512567709.4, "ph": "X", "cat": "fee", "dur": 10.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512567720.4, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512567708.1, "ph": "X", "cat": "fee", "dur": 16.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512567725.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438512567729.7, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512567736.9, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512567742.9, "ph": "X", "cat": "fee", "dur": 23.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512567768.3, "ph": "X", "cat": "fee", "dur": 27063.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512567728.5, "ph": "X", "cat": "fee", "dur": 27104.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512594941.6, "ph": "X", "cat": "fee", "dur": 24.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512594966.6, "ph": "X", "cat": "fee", "dur": 56.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512594940.9, "ph": "X", "cat": "fee", "dur": 82.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512595026.0, "ph": "X", "cat": "fee", "dur": 505.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512595024.1, "ph": "X", "cat": "fee", "dur": 507.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512595535.0, "ph": "X", "cat": "fee", "dur": 27.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512595533.9, "ph": "X", "cat": "fee", "dur": 29.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512595565.7, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512595575.6, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512595564.3, "ph": "X", "cat": "fee", "dur": 14.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512595583.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512595589.8, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512595594.6, "ph": "X", "cat": "fee", "dur": 20.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512595617.0, "ph": "X", "cat": "fee", "dur": 62097.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512595582.0, "ph": "X", "cat": "fee", "dur": 62133.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512657807.6, "ph": "X", "cat": "fee", "dur": 19.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512657828.3, "ph": "X", "cat": "fee", "dur": 49.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512657806.9, "ph": "X", "cat": "fee", "dur": 70.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512657880.1, "ph": "X", "cat": "fee", "dur": 71.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512657878.5, "ph": "X", "cat": "fee", "dur": 73.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512657956.0, "ph": "X", "cat": "fee", "dur": 41.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512657955.2, "ph": "X", "cat": "fee", "dur": 42.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512657999.5, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512658009.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512657998.4, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512658015.1, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512658021.2, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512658026.2, "ph": "X", "cat": "fee", "dur": 27.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512658054.9, "ph": "X", "cat": "fee", "dur": 14992.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512658014.3, "ph": "X", "cat": "fee", "dur": 15034.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512673151.1, "ph": "X", "cat": "fee", "dur": 23.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512673175.9, "ph": "X", "cat": "fee", "dur": 58.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512673150.3, "ph": "X", "cat": "fee", "dur": 84.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512673238.1, "ph": "X", "cat": "fee", "dur": 666.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512673236.1, "ph": "X", "cat": "fee", "dur": 668.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512673919.0, "ph": "X", "cat": "fee", "dur": 28.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512673916.8, "ph": "X", "cat": "fee", "dur": 30.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512673950.2, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512673960.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512673948.7, "ph": "X", "cat": "fee", "dur": 18.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512673973.3, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512673983.5, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512673991.9, "ph": "X", "cat": "fee", "dur": 29.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512674023.5, "ph": "X", "cat": "fee", "dur": 31853.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512673971.8, "ph": "X", "cat": "fee", "dur": 31907.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512705993.8, "ph": "X", "cat": "fee", "dur": 22.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512706017.6, "ph": "X", "cat": "fee", "dur": 63.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512705993.0, "ph": "X", "cat": "fee", "dur": 87.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512706083.9, "ph": "X", "cat": "fee", "dur": 91.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512706082.3, "ph": "X", "cat": "fee", "dur": 93.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512706179.3, "ph": "X", "cat": "fee", "dur": 42.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512706178.3, "ph": "X", "cat": "fee", "dur": 44.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512706224.8, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512706234.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512706223.9, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512706242.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512706248.9, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512706254.3, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512706277.1, "ph": "X", "cat": "fee", "dur": 22635.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512706240.9, "ph": "X", "cat": "fee", "dur": 22672.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512728999.0, "ph": "X", "cat": "fee", "dur": 19.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512729019.0, "ph": "X", "cat": "fee", "dur": 50.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512728998.1, "ph": "X", "cat": "fee", "dur": 71.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512729072.5, "ph": "X", "cat": "fee", "dur": 650.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512729070.7, "ph": "X", "cat": "fee", "dur": 653.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512729731.8, "ph": "X", "cat": "fee", "dur": 35.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512729730.5, "ph": "X", "cat": "fee", "dur": 37.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512729771.0, "ph": "X", "cat": "fee", "dur": 13.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512729785.2, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512729769.3, "ph": "X", "cat": "fee", "dur": 20.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512729797.2, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512729806.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512729813.1, "ph": "X", "cat": "fee", "dur": 32.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512729848.2, "ph": "X", "cat": "fee", "dur": 74994.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512729795.4, "ph": "X", "cat": "fee", "dur": 75049.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512804933.4, "ph": "X", "cat": "fee", "dur": 18.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512804953.0, "ph": "X", "cat": "fee", "dur": 49.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512804932.7, "ph": "X", "cat": "fee", "dur": 69.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512805005.0, "ph": "X", "cat": "fee", "dur": 322.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512805003.3, "ph": "X", "cat": "fee", "dur": 324.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512805331.1, "ph": "X", "cat": "fee", "dur": 39.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512805330.0, "ph": "X", "cat": "fee", "dur": 40.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512805376.5, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512805385.8, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512805375.1, "ph": "X", "cat": "fee", "dur": 13.92, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512805392.7, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512805399.1, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512805403.4, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512805425.0, "ph": "X", "cat": "fee", "dur": 127800.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512805391.7, "ph": "X", "cat": "fee", "dur": 127834.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512933320.9, "ph": "X", "cat": "fee", "dur": 20.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512933341.8, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512933320.2, "ph": "X", "cat": "fee", "dur": 72.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512933395.8, "ph": "X", "cat": "fee", "dur": 127.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512933394.1, "ph": "X", "cat": "fee", "dur": 129.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512933530.2, "ph": "X", "cat": "fee", "dur": 84.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512933528.6, "ph": "X", "cat": "fee", "dur": 86.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512933616.9, "ph": "X", "cat": "fee", "dur": 11.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512933629.3, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512933615.9, "ph": "X", "cat": "fee", "dur": 17.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512933639.4, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512933648.3, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512933655.5, "ph": "X", "cat": "fee", "dur": 32.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512933690.5, "ph": "X", "cat": "fee", "dur": 57083.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512933638.1, "ph": "X", "cat": "fee", "dur": 57136.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438512990869.3, "ph": "X", "cat": "fee", "dur": 19.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438512990889.7, "ph": "X", "cat": "fee", "dur": 51.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438512990868.5, "ph": "X", "cat": "fee", "dur": 73.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438512990944.0, "ph": "X", "cat": "fee", "dur": 837.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512990942.4, "ph": "X", "cat": "fee", "dur": 839.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438512991785.7, "ph": "X", "cat": "fee", "dur": 25.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512991784.5, "ph": "X", "cat": "fee", "dur": 27.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438512991814.7, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438512991825.1, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438512991813.5, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438512991831.9, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438512991838.5, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438512991843.1, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438512991864.7, "ph": "X", "cat": "fee", "dur": 79065.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438512991830.8, "ph": "X", "cat": "fee", "dur": 79100.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513071018.8, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513071039.7, "ph": "X", "cat": "fee", "dur": 49.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513071018.1, "ph": "X", "cat": "fee", "dur": 71.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513071092.6, "ph": "X", "cat": "fee", "dur": 812.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513071090.4, "ph": "X", "cat": "fee", "dur": 815.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513071908.6, "ph": "X", "cat": "fee", "dur": 48.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513071907.4, "ph": "X", "cat": "fee", "dur": 50.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513071960.4, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513071972.8, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513071959.4, "ph": "X", "cat": "fee", "dur": 17.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513071980.0, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513071986.8, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513071991.8, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513072014.3, "ph": "X", "cat": "fee", "dur": 76080.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513071979.0, "ph": "X", "cat": "fee", "dur": 76116.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513148206.6, "ph": "X", "cat": "fee", "dur": 20.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513148227.7, "ph": "X", "cat": "fee", "dur": 53.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513148205.6, "ph": "X", "cat": "fee", "dur": 75.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513148283.7, "ph": "X", "cat": "fee", "dur": 565.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513148281.8, "ph": "X", "cat": "fee", "dur": 568.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513148854.2, "ph": "X", "cat": "fee", "dur": 34.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513148852.7, "ph": "X", "cat": "fee", "dur": 36.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513148891.2, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513148900.7, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513148890.3, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513148908.6, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513148917.0, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513148925.9, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513148949.8, "ph": "X", "cat": "fee", "dur": 81322.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513148907.6, "ph": "X", "cat": "fee", "dur": 81366.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513230393.5, "ph": "X", "cat": "fee", "dur": 22.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513230416.8, "ph": "X", "cat": "fee", "dur": 52.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513230392.7, "ph": "X", "cat": "fee", "dur": 76.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513230472.5, "ph": "X", "cat": "fee", "dur": 924.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513230470.5, "ph": "X", "cat": "fee", "dur": 927.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513231401.8, "ph": "X", "cat": "fee", "dur": 19.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513231400.2, "ph": "X", "cat": "fee", "dur": 21.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513231424.5, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513231433.7, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513231423.5, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513231441.7, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513231448.7, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513231453.5, "ph": "X", "cat": "fee", "dur": 21.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513231476.3, "ph": "X", "cat": "fee", "dur": 123118.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513231440.6, "ph": "X", "cat": "fee", "dur": 123159.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513354910.6, "ph": "X", "cat": "fee", "dur": 58.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513354970.8, "ph": "X", "cat": "fee", "dur": 115.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513354908.5, "ph": "X", "cat": "fee", "dur": 178.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513355091.1, "ph": "X", "cat": "fee", "dur": 128.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513355088.5, "ph": "X", "cat": "fee", "dur": 131.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513355224.8, "ph": "X", "cat": "fee", "dur": 46.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513355223.3, "ph": "X", "cat": "fee", "dur": 48.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513355275.0, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513355287.2, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513355273.5, "ph": "X", "cat": "fee", "dur": 20.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513355308.1, "ph": "X", "cat": "fee", "dur": 11.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513355320.6, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513355327.9, "ph": "X", "cat": "fee", "dur": 28.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513355358.3, "ph": "X", "cat": "fee", "dur": 115492.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513355307.0, "ph": "X", "cat": "fee", "dur": 115545.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513470993.7, "ph": "X", "cat": "fee", "dur": 35.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513471031.1, "ph": "X", "cat": "fee", "dur": 84.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513470992.1, "ph": "X", "cat": "fee", "dur": 123.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513471118.8, "ph": "X", "cat": "fee", "dur": 375.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513471116.7, "ph": "X", "cat": "fee", "dur": 378.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513471501.7, "ph": "X", "cat": "fee", "dur": 87.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513471499.9, "ph": "X", "cat": "fee", "dur": 89.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513471592.3, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513471603.1, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513471591.0, "ph": "X", "cat": "fee", "dur": 19.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513471616.2, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513471626.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513471632.7, "ph": "X", "cat": "fee", "dur": 27.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513471662.6, "ph": "X", "cat": "fee", "dur": 143989.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513471614.8, "ph": "X", "cat": "fee", "dur": 144039.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513615754.9, "ph": "X", "cat": "fee", "dur": 22.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513615778.3, "ph": "X", "cat": "fee", "dur": 52.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513615754.3, "ph": "X", "cat": "fee", "dur": 77.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513615834.5, "ph": "X", "cat": "fee", "dur": 851.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513615832.6, "ph": "X", "cat": "fee", "dur": 854.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513616691.1, "ph": "X", "cat": "fee", "dur": 47.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513616689.5, "ph": "X", "cat": "fee", "dur": 49.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513616741.6, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513616751.3, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513616740.9, "ph": "X", "cat": "fee", "dur": 16.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513616761.9, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513616769.7, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513616775.8, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513616801.5, "ph": "X", "cat": "fee", "dur": 111691.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513616760.7, "ph": "X", "cat": "fee", "dur": 111733.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513728620.4, "ph": "X", "cat": "fee", "dur": 33.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513728655.1, "ph": "X", "cat": "fee", "dur": 78.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513728619.2, "ph": "X", "cat": "fee", "dur": 114.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513728737.1, "ph": "X", "cat": "fee", "dur": 431.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513728734.8, "ph": "X", "cat": "fee", "dur": 434.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513729174.9, "ph": "X", "cat": "fee", "dur": 37.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513729173.3, "ph": "X", "cat": "fee", "dur": 38.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513729214.5, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513729226.2, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513729213.7, "ph": "X", "cat": "fee", "dur": 18.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513729236.6, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513729248.6, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513729254.9, "ph": "X", "cat": "fee", "dur": 26.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513729283.5, "ph": "X", "cat": "fee", "dur": 107025.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513729235.5, "ph": "X", "cat": "fee", "dur": 107075.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513836410.7, "ph": "X", "cat": "fee", "dur": 24.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513836436.4, "ph": "X", "cat": "fee", "dur": 52.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513836409.4, "ph": "X", "cat": "fee", "dur": 79.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513836491.1, "ph": "X", "cat": "fee", "dur": 90.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513836489.5, "ph": "X", "cat": "fee", "dur": 92.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513836585.6, "ph": "X", "cat": "fee", "dur": 49.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513836584.6, "ph": "X", "cat": "fee", "dur": 51.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513836638.1, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513836647.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513836637.2, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513836654.3, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513836660.9, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513836665.7, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513836687.0, "ph": "X", "cat": "fee", "dur": 76435.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513836653.4, "ph": "X", "cat": "fee", "dur": 76470.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513913217.3, "ph": "X", "cat": "fee", "dur": 22.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513913240.3, "ph": "X", "cat": "fee", "dur": 54.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513913216.7, "ph": "X", "cat": "fee", "dur": 78.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513913297.8, "ph": "X", "cat": "fee", "dur": 847.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513913296.0, "ph": "X", "cat": "fee", "dur": 849.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513914148.9, "ph": "X", "cat": "fee", "dur": 35.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513914147.7, "ph": "X", "cat": "fee", "dur": 36.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513914186.3, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513914196.1, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513914185.4, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513914203.3, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513914209.8, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513914214.9, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513914237.4, "ph": "X", "cat": "fee", "dur": 65910.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513914202.2, "ph": "X", "cat": "fee", "dur": 65946.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438513980268.3, "ph": "X", "cat": "fee", "dur": 28.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438513980297.5, "ph": "X", "cat": "fee", "dur": 67.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438513980266.9, "ph": "X", "cat": "fee", "dur": 98.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438513980368.6, "ph": "X", "cat": "fee", "dur": 456.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513980366.7, "ph": "X", "cat": "fee", "dur": 458.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438513980829.6, "ph": "X", "cat": "fee", "dur": 35.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513980828.6, "ph": "X", "cat": "fee", "dur": 37.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438513980867.9, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438513980877.7, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438513980867.0, "ph": "X", "cat": "fee", "dur": 14.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438513980885.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438513980892.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438513980897.4, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438513980931.5, "ph": "X", "cat": "fee", "dur": 50904.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438513980884.2, "ph": "X", "cat": "fee", "dur": 50952.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514031934.4, "ph": "X", "cat": "fee", "dur": 21.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514031957.2, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514031933.7, "ph": "X", "cat": "fee", "dur": 75.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514032012.6, "ph": "X", "cat": "fee", "dur": 79.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514032010.5, "ph": "X", "cat": "fee", "dur": 82.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514032097.0, "ph": "X", "cat": "fee", "dur": 41.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514032096.1, "ph": "X", "cat": "fee", "dur": 42.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514032140.9, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514032150.7, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514032140.0, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514032157.1, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514032163.9, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514032168.7, "ph": "X", "cat": "fee", "dur": 21.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514032191.5, "ph": "X", "cat": "fee", "dur": 66893.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514032156.1, "ph": "X", "cat": "fee", "dur": 66929.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514099173.2, "ph": "X", "cat": "fee", "dur": 20.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514099194.3, "ph": "X", "cat": "fee", "dur": 48.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514099172.4, "ph": "X", "cat": "fee", "dur": 70.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514099246.5, "ph": "X", "cat": "fee", "dur": 1155.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514099244.4, "ph": "X", "cat": "fee", "dur": 1158.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514100405.8, "ph": "X", "cat": "fee", "dur": 31.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514100404.7, "ph": "X", "cat": "fee", "dur": 33.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514100439.8, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514100449.9, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514100438.9, "ph": "X", "cat": "fee", "dur": 14.52, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514100457.2, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514100463.5, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514100468.7, "ph": "X", "cat": "fee", "dur": 21.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514100491.9, "ph": "X", "cat": "fee", "dur": 23816.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514100456.0, "ph": "X", "cat": "fee", "dur": 23853.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514124419.8, "ph": "X", "cat": "fee", "dur": 22.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514124442.6, "ph": "X", "cat": "fee", "dur": 55.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514124418.9, "ph": "X", "cat": "fee", "dur": 79.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514124501.2, "ph": "X", "cat": "fee", "dur": 1208.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514124498.9, "ph": "X", "cat": "fee", "dur": 1211.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514125714.7, "ph": "X", "cat": "fee", "dur": 30.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514125713.2, "ph": "X", "cat": "fee", "dur": 32.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514125748.5, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514125758.0, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514125747.5, "ph": "X", "cat": "fee", "dur": 15.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514125766.9, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514125774.8, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514125780.4, "ph": "X", "cat": "fee", "dur": 23.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514125805.3, "ph": "X", "cat": "fee", "dur": 88306.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514125765.9, "ph": "X", "cat": "fee", "dur": 88347.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514214244.1, "ph": "X", "cat": "fee", "dur": 28.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514214273.5, "ph": "X", "cat": "fee", "dur": 68.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514214243.4, "ph": "X", "cat": "fee", "dur": 99.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514214345.7, "ph": "X", "cat": "fee", "dur": 1884.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514214343.9, "ph": "X", "cat": "fee", "dur": 1886.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514216236.1, "ph": "X", "cat": "fee", "dur": 43.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514216233.8, "ph": "X", "cat": "fee", "dur": 46.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514216283.2, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514216293.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514216282.2, "ph": "X", "cat": "fee", "dur": 17.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514216304.5, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514216313.5, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514216319.2, "ph": "X", "cat": "fee", "dur": 33.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514216355.1, "ph": "X", "cat": "fee", "dur": 59326.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514216303.2, "ph": "X", "cat": "fee", "dur": 59379.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514275776.3, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514275796.6, "ph": "X", "cat": "fee", "dur": 49.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514275775.4, "ph": "X", "cat": "fee", "dur": 71.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514275849.4, "ph": "X", "cat": "fee", "dur": 76.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514275847.6, "ph": "X", "cat": "fee", "dur": 78.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514275929.5, "ph": "X", "cat": "fee", "dur": 31.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514275928.6, "ph": "X", "cat": "fee", "dur": 32.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514275963.2, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514275972.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514275962.4, "ph": "X", "cat": "fee", "dur": 13.32, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514275978.9, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514275985.2, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514275989.9, "ph": "X", "cat": "fee", "dur": 19.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514276011.1, "ph": "X", "cat": "fee", "dur": 69741.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514275978.0, "ph": "X", "cat": "fee", "dur": 69776.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514345882.3, "ph": "X", "cat": "fee", "dur": 36.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514345919.3, "ph": "X", "cat": "fee", "dur": 88.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514345880.4, "ph": "X", "cat": "fee", "dur": 127.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514346011.7, "ph": "X", "cat": "fee", "dur": 310.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514346009.0, "ph": "X", "cat": "fee", "dur": 313.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514346339.6, "ph": "X", "cat": "fee", "dur": 33.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514346338.4, "ph": "X", "cat": "fee", "dur": 35.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514346376.1, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514346386.7, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514346375.2, "ph": "X", "cat": "fee", "dur": 16.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514346396.0, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514346404.5, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514346410.5, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514346437.6, "ph": "X", "cat": "fee", "dur": 72825.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514346394.8, "ph": "X", "cat": "fee", "dur": 72870.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514419400.8, "ph": "X", "cat": "fee", "dur": 33.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514419436.5, "ph": "X", "cat": "fee", "dur": 80.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514419399.5, "ph": "X", "cat": "fee", "dur": 117.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514419520.3, "ph": "X", "cat": "fee", "dur": 1009.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514419518.0, "ph": "X", "cat": "fee", "dur": 1013.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514420548.0, "ph": "X", "cat": "fee", "dur": 43.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514420544.3, "ph": "X", "cat": "fee", "dur": 47.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514420594.7, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514420605.0, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514420593.6, "ph": "X", "cat": "fee", "dur": 18.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514420618.0, "ph": "X", "cat": "fee", "dur": 10.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514420629.3, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514420636.5, "ph": "X", "cat": "fee", "dur": 29.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514420667.8, "ph": "X", "cat": "fee", "dur": 40731.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514420616.8, "ph": "X", "cat": "fee", "dur": 40784.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514461522.2, "ph": "X", "cat": "fee", "dur": 29.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514461552.7, "ph": "X", "cat": "fee", "dur": 72.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514461520.7, "ph": "X", "cat": "fee", "dur": 104.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514461628.9, "ph": "X", "cat": "fee", "dur": 98.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514461626.7, "ph": "X", "cat": "fee", "dur": 100.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514461730.9, "ph": "X", "cat": "fee", "dur": 28.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514461729.9, "ph": "X", "cat": "fee", "dur": 29.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514461762.1, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514461772.3, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514461761.2, "ph": "X", "cat": "fee", "dur": 15.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514461780.6, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514461787.8, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514461793.1, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514461817.7, "ph": "X", "cat": "fee", "dur": 45687.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514461779.5, "ph": "X", "cat": "fee", "dur": 45726.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514507620.8, "ph": "X", "cat": "fee", "dur": 28.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514507650.1, "ph": "X", "cat": "fee", "dur": 68.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514507619.7, "ph": "X", "cat": "fee", "dur": 98.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514507721.8, "ph": "X", "cat": "fee", "dur": 90.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514507719.7, "ph": "X", "cat": "fee", "dur": 92.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514507815.9, "ph": "X", "cat": "fee", "dur": 33.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514507815.0, "ph": "X", "cat": "fee", "dur": 34.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514507852.3, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514507862.0, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514507851.4, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514507869.6, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514507876.5, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514507881.7, "ph": "X", "cat": "fee", "dur": 21.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514507904.4, "ph": "X", "cat": "fee", "dur": 69131.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514507868.4, "ph": "X", "cat": "fee", "dur": 69169.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514577141.0, "ph": "X", "cat": "fee", "dur": 22.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514577164.4, "ph": "X", "cat": "fee", "dur": 54.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514577140.3, "ph": "X", "cat": "fee", "dur": 78.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514577221.7, "ph": "X", "cat": "fee", "dur": 2559.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514577219.9, "ph": "X", "cat": "fee", "dur": 2562.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514579789.9, "ph": "X", "cat": "fee", "dur": 36.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514579787.0, "ph": "X", "cat": "fee", "dur": 39.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514579829.4, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514579839.9, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514579828.5, "ph": "X", "cat": "fee", "dur": 18.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514579852.3, "ph": "X", "cat": "fee", "dur": 8.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514579861.9, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514579868.3, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514579895.5, "ph": "X", "cat": "fee", "dur": 14096.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514579851.1, "ph": "X", "cat": "fee", "dur": 14141.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514594088.6, "ph": "X", "cat": "fee", "dur": 19.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514594109.3, "ph": "X", "cat": "fee", "dur": 52.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514594088.0, "ph": "X", "cat": "fee", "dur": 73.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514594164.7, "ph": "X", "cat": "fee", "dur": 747.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514594163.0, "ph": "X", "cat": "fee", "dur": 749.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514594915.9, "ph": "X", "cat": "fee", "dur": 18.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514594914.7, "ph": "X", "cat": "fee", "dur": 20.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514594936.9, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514594946.5, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514594935.9, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514594953.8, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514594960.1, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514594964.6, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514594987.2, "ph": "X", "cat": "fee", "dur": 25390.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514594952.8, "ph": "X", "cat": "fee", "dur": 25426.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514620503.2, "ph": "X", "cat": "fee", "dur": 35.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514620539.2, "ph": "X", "cat": "fee", "dur": 73.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514620501.8, "ph": "X", "cat": "fee", "dur": 110.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514620615.8, "ph": "X", "cat": "fee", "dur": 463.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514620613.5, "ph": "X", "cat": "fee", "dur": 466.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514621084.9, "ph": "X", "cat": "fee", "dur": 35.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514621083.1, "ph": "X", "cat": "fee", "dur": 37.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514621123.8, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514621134.5, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514621122.5, "ph": "X", "cat": "fee", "dur": 19.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514621146.7, "ph": "X", "cat": "fee", "dur": 9.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514621157.2, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514621164.9, "ph": "X", "cat": "fee", "dur": 31.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514621198.6, "ph": "X", "cat": "fee", "dur": 54609.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514621145.8, "ph": "X", "cat": "fee", "dur": 54663.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514675909.3, "ph": "X", "cat": "fee", "dur": 22.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514675932.5, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514675908.7, "ph": "X", "cat": "fee", "dur": 75.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514675987.9, "ph": "X", "cat": "fee", "dur": 1050.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514675985.6, "ph": "X", "cat": "fee", "dur": 1054.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514677044.1, "ph": "X", "cat": "fee", "dur": 38.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514677042.6, "ph": "X", "cat": "fee", "dur": 40.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514677085.3, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514677095.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514677084.3, "ph": "X", "cat": "fee", "dur": 15.52, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514677103.8, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514677111.5, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514677117.1, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514677141.0, "ph": "X", "cat": "fee", "dur": 25879.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514677102.8, "ph": "X", "cat": "fee", "dur": 25920.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514703181.9, "ph": "X", "cat": "fee", "dur": 40.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514703223.9, "ph": "X", "cat": "fee", "dur": 94.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514703180.3, "ph": "X", "cat": "fee", "dur": 138.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514703323.5, "ph": "X", "cat": "fee", "dur": 117.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514703320.5, "ph": "X", "cat": "fee", "dur": 121.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514703446.5, "ph": "X", "cat": "fee", "dur": 34.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514703445.4, "ph": "X", "cat": "fee", "dur": 35.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514703483.7, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514703494.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514703482.8, "ph": "X", "cat": "fee", "dur": 15.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514703503.0, "ph": "X", "cat": "fee", "dur": 8.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514703512.3, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514703518.7, "ph": "X", "cat": "fee", "dur": 27.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514703548.1, "ph": "X", "cat": "fee", "dur": 39439.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514703501.8, "ph": "X", "cat": "fee", "dur": 39486.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514743100.6, "ph": "X", "cat": "fee", "dur": 22.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514743124.1, "ph": "X", "cat": "fee", "dur": 54.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514743099.9, "ph": "X", "cat": "fee", "dur": 78.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514743181.7, "ph": "X", "cat": "fee", "dur": 320.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514743179.9, "ph": "X", "cat": "fee", "dur": 323.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514743511.8, "ph": "X", "cat": "fee", "dur": 46.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514743510.5, "ph": "X", "cat": "fee", "dur": 47.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514743560.9, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514743570.8, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514743559.5, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514743578.1, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514743585.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514743590.1, "ph": "X", "cat": "fee", "dur": 22.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514743613.8, "ph": "X", "cat": "fee", "dur": 23190.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514743577.1, "ph": "X", "cat": "fee", "dur": 23228.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514766914.6, "ph": "X", "cat": "fee", "dur": 23.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514766939.1, "ph": "X", "cat": "fee", "dur": 52.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514766913.9, "ph": "X", "cat": "fee", "dur": 77.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514766994.7, "ph": "X", "cat": "fee", "dur": 72.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514766992.8, "ph": "X", "cat": "fee", "dur": 74.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514767071.5, "ph": "X", "cat": "fee", "dur": 34.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514767070.3, "ph": "X", "cat": "fee", "dur": 36.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514767108.8, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514767118.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514767107.9, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514767125.0, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514767131.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514767136.2, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514767157.6, "ph": "X", "cat": "fee", "dur": 55190.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514767124.0, "ph": "X", "cat": "fee", "dur": 55225.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514822451.0, "ph": "X", "cat": "fee", "dur": 19.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514822471.7, "ph": "X", "cat": "fee", "dur": 52.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514822450.2, "ph": "X", "cat": "fee", "dur": 74.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514822527.4, "ph": "X", "cat": "fee", "dur": 79.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514822525.2, "ph": "X", "cat": "fee", "dur": 81.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514822609.3, "ph": "X", "cat": "fee", "dur": 38.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514822608.4, "ph": "X", "cat": "fee", "dur": 39.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514822649.9, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514822660.3, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514822648.9, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514822667.6, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514822673.9, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514822679.7, "ph": "X", "cat": "fee", "dur": 22.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514822703.8, "ph": "X", "cat": "fee", "dur": 20135.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514822666.1, "ph": "X", "cat": "fee", "dur": 20174.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514842934.2, "ph": "X", "cat": "fee", "dur": 17.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514842953.0, "ph": "X", "cat": "fee", "dur": 49.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514842933.6, "ph": "X", "cat": "fee", "dur": 68.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514843005.7, "ph": "X", "cat": "fee", "dur": 74.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514843003.4, "ph": "X", "cat": "fee", "dur": 77.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514843084.6, "ph": "X", "cat": "fee", "dur": 29.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514843083.7, "ph": "X", "cat": "fee", "dur": 30.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514843116.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514843126.0, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514843115.3, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514843132.5, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514843138.7, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514843143.6, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514843165.1, "ph": "X", "cat": "fee", "dur": 17604.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514843131.5, "ph": "X", "cat": "fee", "dur": 17639.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514860867.0, "ph": "X", "cat": "fee", "dur": 21.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514860889.0, "ph": "X", "cat": "fee", "dur": 57.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514860866.4, "ph": "X", "cat": "fee", "dur": 80.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514860950.1, "ph": "X", "cat": "fee", "dur": 87.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514860947.9, "ph": "X", "cat": "fee", "dur": 90.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514861041.6, "ph": "X", "cat": "fee", "dur": 36.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514861040.5, "ph": "X", "cat": "fee", "dur": 38.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514861081.3, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514861091.3, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514861080.6, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514861099.6, "ph": "X", "cat": "fee", "dur": 9.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514861110.5, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514861118.9, "ph": "X", "cat": "fee", "dur": 22.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514861143.3, "ph": "X", "cat": "fee", "dur": 34124.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514861098.2, "ph": "X", "cat": "fee", "dur": 34170.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514895360.0, "ph": "X", "cat": "fee", "dur": 18.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514895379.3, "ph": "X", "cat": "fee", "dur": 49.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514895359.2, "ph": "X", "cat": "fee", "dur": 69.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514895431.8, "ph": "X", "cat": "fee", "dur": 207.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514895429.9, "ph": "X", "cat": "fee", "dur": 209.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514895643.3, "ph": "X", "cat": "fee", "dur": 23.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514895642.2, "ph": "X", "cat": "fee", "dur": 25.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514895669.8, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514895679.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514895668.7, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514895686.4, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514895692.5, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514895697.4, "ph": "X", "cat": "fee", "dur": 19.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514895718.5, "ph": "X", "cat": "fee", "dur": 47160.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514895685.4, "ph": "X", "cat": "fee", "dur": 47195.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514943014.6, "ph": "X", "cat": "fee", "dur": 30.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514943046.6, "ph": "X", "cat": "fee", "dur": 59.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514943013.7, "ph": "X", "cat": "fee", "dur": 92.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514943108.6, "ph": "X", "cat": "fee", "dur": 702.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514943106.7, "ph": "X", "cat": "fee", "dur": 704.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514943815.0, "ph": "X", "cat": "fee", "dur": 30.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514943813.8, "ph": "X", "cat": "fee", "dur": 31.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514943848.4, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514943857.9, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514943846.8, "ph": "X", "cat": "fee", "dur": 16.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514943867.1, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514943874.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514943881.1, "ph": "X", "cat": "fee", "dur": 27.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514943911.0, "ph": "X", "cat": "fee", "dur": 36832.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514943865.9, "ph": "X", "cat": "fee", "dur": 36879.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438514980852.8, "ph": "X", "cat": "fee", "dur": 25.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438514980878.9, "ph": "X", "cat": "fee", "dur": 57.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438514980852.0, "ph": "X", "cat": "fee", "dur": 84.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438514980939.5, "ph": "X", "cat": "fee", "dur": 71.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514980937.6, "ph": "X", "cat": "fee", "dur": 73.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438514981014.7, "ph": "X", "cat": "fee", "dur": 29.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514981013.8, "ph": "X", "cat": "fee", "dur": 31.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438514981047.2, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438514981056.8, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438514981046.1, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438514981063.6, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438514981069.9, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438514981074.4, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438514981095.8, "ph": "X", "cat": "fee", "dur": 79178.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438514981062.6, "ph": "X", "cat": "fee", "dur": 79212.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515060375.0, "ph": "X", "cat": "fee", "dur": 21.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515060397.6, "ph": "X", "cat": "fee", "dur": 50.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515060374.4, "ph": "X", "cat": "fee", "dur": 74.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515060451.9, "ph": "X", "cat": "fee", "dur": 2745.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515060449.7, "ph": "X", "cat": "fee", "dur": 2748.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515063201.5, "ph": "X", "cat": "fee", "dur": 50.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515063200.0, "ph": "X", "cat": "fee", "dur": 51.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515063254.3, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515063264.5, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515063253.3, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515063273.3, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515063280.5, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515063285.9, "ph": "X", "cat": "fee", "dur": 22.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515063310.0, "ph": "X", "cat": "fee", "dur": 71847.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515063272.2, "ph": "X", "cat": "fee", "dur": 71886.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515135261.9, "ph": "X", "cat": "fee", "dur": 17.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515135280.6, "ph": "X", "cat": "fee", "dur": 50.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515135261.3, "ph": "X", "cat": "fee", "dur": 69.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515135333.9, "ph": "X", "cat": "fee", "dur": 764.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515135332.1, "ph": "X", "cat": "fee", "dur": 766.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515136103.2, "ph": "X", "cat": "fee", "dur": 55.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515136101.6, "ph": "X", "cat": "fee", "dur": 57.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515136161.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515136170.6, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515136160.2, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515136179.0, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515136186.5, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515136191.8, "ph": "X", "cat": "fee", "dur": 29.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515136223.6, "ph": "X", "cat": "fee", "dur": 55771.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515136178.0, "ph": "X", "cat": "fee", "dur": 55818.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515192090.6, "ph": "X", "cat": "fee", "dur": 18.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515192109.8, "ph": "X", "cat": "fee", "dur": 49.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515192090.0, "ph": "X", "cat": "fee", "dur": 69.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515192162.5, "ph": "X", "cat": "fee", "dur": 75.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515192160.6, "ph": "X", "cat": "fee", "dur": 77.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515192241.5, "ph": "X", "cat": "fee", "dur": 51.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515192240.6, "ph": "X", "cat": "fee", "dur": 52.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515192295.3, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515192305.4, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515192294.2, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515192312.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515192318.7, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515192323.7, "ph": "X", "cat": "fee", "dur": 19.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515192344.7, "ph": "X", "cat": "fee", "dur": 15932.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515192311.3, "ph": "X", "cat": "fee", "dur": 15966.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515208391.6, "ph": "X", "cat": "fee", "dur": 26.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515208419.3, "ph": "X", "cat": "fee", "dur": 61.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515208391.0, "ph": "X", "cat": "fee", "dur": 89.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515208483.9, "ph": "X", "cat": "fee", "dur": 569.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515208481.7, "ph": "X", "cat": "fee", "dur": 572.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515209058.1, "ph": "X", "cat": "fee", "dur": 26.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515209056.8, "ph": "X", "cat": "fee", "dur": 28.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515209087.7, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515209097.8, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515209086.8, "ph": "X", "cat": "fee", "dur": 15.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515209106.5, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515209114.5, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515209120.7, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515209144.5, "ph": "X", "cat": "fee", "dur": 42575.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515209105.3, "ph": "X", "cat": "fee", "dur": 42615.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515251813.5, "ph": "X", "cat": "fee", "dur": 20.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515251834.6, "ph": "X", "cat": "fee", "dur": 50.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515251812.8, "ph": "X", "cat": "fee", "dur": 72.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515251888.1, "ph": "X", "cat": "fee", "dur": 75.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515251886.3, "ph": "X", "cat": "fee", "dur": 77.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515251967.0, "ph": "X", "cat": "fee", "dur": 45.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515251966.2, "ph": "X", "cat": "fee", "dur": 46.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515252015.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515252024.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515252014.1, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515252031.4, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515252037.9, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515252042.7, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515252063.8, "ph": "X", "cat": "fee", "dur": 44708.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515252030.4, "ph": "X", "cat": "fee", "dur": 44743.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515296862.8, "ph": "X", "cat": "fee", "dur": 19.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515296883.2, "ph": "X", "cat": "fee", "dur": 50.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515296862.1, "ph": "X", "cat": "fee", "dur": 71.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515296936.3, "ph": "X", "cat": "fee", "dur": 70.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515296934.4, "ph": "X", "cat": "fee", "dur": 73.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515297010.8, "ph": "X", "cat": "fee", "dur": 42.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515297009.6, "ph": "X", "cat": "fee", "dur": 43.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515297055.4, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515297064.9, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515297054.5, "ph": "X", "cat": "fee", "dur": 13.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515297071.2, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515297077.5, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515297082.4, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515297103.9, "ph": "X", "cat": "fee", "dur": 43172.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515297070.3, "ph": "X", "cat": "fee", "dur": 43207.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515340381.5, "ph": "X", "cat": "fee", "dur": 22.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515340405.1, "ph": "X", "cat": "fee", "dur": 53.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515340380.7, "ph": "X", "cat": "fee", "dur": 78.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515340461.8, "ph": "X", "cat": "fee", "dur": 815.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515340459.7, "ph": "X", "cat": "fee", "dur": 818.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515341282.3, "ph": "X", "cat": "fee", "dur": 30.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515341280.7, "ph": "X", "cat": "fee", "dur": 32.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515341315.6, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515341325.7, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515341314.8, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515341333.9, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515341341.0, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515341346.1, "ph": "X", "cat": "fee", "dur": 21.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515341369.5, "ph": "X", "cat": "fee", "dur": 18219.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515341332.9, "ph": "X", "cat": "fee", "dur": 18257.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515359707.3, "ph": "X", "cat": "fee", "dur": 28.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515359736.4, "ph": "X", "cat": "fee", "dur": 70.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515359706.2, "ph": "X", "cat": "fee", "dur": 101.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515359810.1, "ph": "X", "cat": "fee", "dur": 85.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515359808.1, "ph": "X", "cat": "fee", "dur": 88.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515359900.4, "ph": "X", "cat": "fee", "dur": 40.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515359899.5, "ph": "X", "cat": "fee", "dur": 41.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515359943.7, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515359954.6, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515359942.6, "ph": "X", "cat": "fee", "dur": 15.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515359961.5, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515359967.5, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515359972.7, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515359995.3, "ph": "X", "cat": "fee", "dur": 25720.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515359960.3, "ph": "X", "cat": "fee", "dur": 25757.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515385849.1, "ph": "X", "cat": "fee", "dur": 26.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515385877.0, "ph": "X", "cat": "fee", "dur": 69.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515385848.3, "ph": "X", "cat": "fee", "dur": 98.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515385950.1, "ph": "X", "cat": "fee", "dur": 83.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515385947.8, "ph": "X", "cat": "fee", "dur": 86.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515386038.6, "ph": "X", "cat": "fee", "dur": 36.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515386037.2, "ph": "X", "cat": "fee", "dur": 38.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515386078.2, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515386088.5, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515386077.0, "ph": "X", "cat": "fee", "dur": 15.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515386096.3, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515386103.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515386107.7, "ph": "X", "cat": "fee", "dur": 23.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515386132.7, "ph": "X", "cat": "fee", "dur": 30209.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515386094.9, "ph": "X", "cat": "fee", "dur": 30248.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515416431.5, "ph": "X", "cat": "fee", "dur": 18.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515416450.8, "ph": "X", "cat": "fee", "dur": 48.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515416430.8, "ph": "X", "cat": "fee", "dur": 69.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515416502.9, "ph": "X", "cat": "fee", "dur": 72.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515416501.1, "ph": "X", "cat": "fee", "dur": 74.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515416578.8, "ph": "X", "cat": "fee", "dur": 33.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515416577.8, "ph": "X", "cat": "fee", "dur": 35.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515416614.9, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515416624.4, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515416613.8, "ph": "X", "cat": "fee", "dur": 13.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515416630.4, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515416636.7, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515416641.7, "ph": "X", "cat": "fee", "dur": 20.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515416663.3, "ph": "X", "cat": "fee", "dur": 15011.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515416629.4, "ph": "X", "cat": "fee", "dur": 15046.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515431759.4, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515431779.5, "ph": "X", "cat": "fee", "dur": 49.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515431758.7, "ph": "X", "cat": "fee", "dur": 70.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515431831.9, "ph": "X", "cat": "fee", "dur": 834.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515431830.4, "ph": "X", "cat": "fee", "dur": 836.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515432670.9, "ph": "X", "cat": "fee", "dur": 25.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515432669.2, "ph": "X", "cat": "fee", "dur": 27.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515432698.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515432708.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515432697.9, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515432715.6, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515432722.4, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515432727.7, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515432750.8, "ph": "X", "cat": "fee", "dur": 44694.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515432714.5, "ph": "X", "cat": "fee", "dur": 44731.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515477557.0, "ph": "X", "cat": "fee", "dur": 20.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515477578.7, "ph": "X", "cat": "fee", "dur": 50.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515477556.3, "ph": "X", "cat": "fee", "dur": 73.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515477632.6, "ph": "X", "cat": "fee", "dur": 74.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515477630.8, "ph": "X", "cat": "fee", "dur": 76.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515477711.0, "ph": "X", "cat": "fee", "dur": 39.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515477710.0, "ph": "X", "cat": "fee", "dur": 40.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515477753.2, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515477763.3, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515477752.2, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515477769.5, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515477775.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515477780.4, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515477802.4, "ph": "X", "cat": "fee", "dur": 30087.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515477768.6, "ph": "X", "cat": "fee", "dur": 30123.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515508046.7, "ph": "X", "cat": "fee", "dur": 35.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515508083.4, "ph": "X", "cat": "fee", "dur": 79.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515508045.5, "ph": "X", "cat": "fee", "dur": 118.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515508167.6, "ph": "X", "cat": "fee", "dur": 115.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515508165.0, "ph": "X", "cat": "fee", "dur": 118.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515508289.5, "ph": "X", "cat": "fee", "dur": 36.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515508288.1, "ph": "X", "cat": "fee", "dur": 37.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515508331.1, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515508341.8, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515508329.4, "ph": "X", "cat": "fee", "dur": 17.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515508351.8, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515508362.6, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515508371.1, "ph": "X", "cat": "fee", "dur": 29.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515508403.5, "ph": "X", "cat": "fee", "dur": 22165.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515508350.6, "ph": "X", "cat": "fee", "dur": 22219.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515530686.8, "ph": "X", "cat": "fee", "dur": 27.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515530715.5, "ph": "X", "cat": "fee", "dur": 67.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515530685.8, "ph": "X", "cat": "fee", "dur": 97.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515530786.8, "ph": "X", "cat": "fee", "dur": 87.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515530784.5, "ph": "X", "cat": "fee", "dur": 90.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515530877.5, "ph": "X", "cat": "fee", "dur": 33.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515530876.6, "ph": "X", "cat": "fee", "dur": 34.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515530913.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515530923.3, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515530912.6, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515530931.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515530938.3, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515530943.2, "ph": "X", "cat": "fee", "dur": 23.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515530968.2, "ph": "X", "cat": "fee", "dur": 19792.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515530930.1, "ph": "X", "cat": "fee", "dur": 19832.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515550873.9, "ph": "X", "cat": "fee", "dur": 24.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515550899.1, "ph": "X", "cat": "fee", "dur": 73.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515550873.1, "ph": "X", "cat": "fee", "dur": 99.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515550975.8, "ph": "X", "cat": "fee", "dur": 649.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515550974.0, "ph": "X", "cat": "fee", "dur": 652.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515551632.6, "ph": "X", "cat": "fee", "dur": 34.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515551630.7, "ph": "X", "cat": "fee", "dur": 36.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515551669.8, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515551680.1, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515551668.5, "ph": "X", "cat": "fee", "dur": 18.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515551691.8, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515551701.2, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515551707.6, "ph": "X", "cat": "fee", "dur": 25.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515551735.0, "ph": "X", "cat": "fee", "dur": 12501.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515551690.8, "ph": "X", "cat": "fee", "dur": 12546.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515564331.9, "ph": "X", "cat": "fee", "dur": 21.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515564354.4, "ph": "X", "cat": "fee", "dur": 49.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515564331.2, "ph": "X", "cat": "fee", "dur": 73.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515564407.8, "ph": "X", "cat": "fee", "dur": 405.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515564405.5, "ph": "X", "cat": "fee", "dur": 408.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515564817.2, "ph": "X", "cat": "fee", "dur": 19.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515564816.0, "ph": "X", "cat": "fee", "dur": 21.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515564839.9, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515564849.3, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515564838.8, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515564857.0, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515564864.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515564869.3, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515564891.9, "ph": "X", "cat": "fee", "dur": 52865.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515564855.9, "ph": "X", "cat": "fee", "dur": 52902.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515617855.0, "ph": "X", "cat": "fee", "dur": 21.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515617877.0, "ph": "X", "cat": "fee", "dur": 53.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515617854.3, "ph": "X", "cat": "fee", "dur": 76.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515617933.7, "ph": "X", "cat": "fee", "dur": 190.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515617931.7, "ph": "X", "cat": "fee", "dur": 192.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515618127.3, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515618126.1, "ph": "X", "cat": "fee", "dur": 33.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515618161.9, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515618171.0, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515618161.0, "ph": "X", "cat": "fee", "dur": 13.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515618177.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515618183.9, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515618188.8, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515618210.4, "ph": "X", "cat": "fee", "dur": 20264.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515618176.7, "ph": "X", "cat": "fee", "dur": 20300.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515638589.8, "ph": "X", "cat": "fee", "dur": 23.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515638614.0, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515638589.0, "ph": "X", "cat": "fee", "dur": 77.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515638669.1, "ph": "X", "cat": "fee", "dur": 76.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515638667.1, "ph": "X", "cat": "fee", "dur": 79.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515638749.5, "ph": "X", "cat": "fee", "dur": 26.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515638748.5, "ph": "X", "cat": "fee", "dur": 28.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515638779.0, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515638789.2, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515638778.0, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515638796.1, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515638803.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515638808.9, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515638831.0, "ph": "X", "cat": "fee", "dur": 31795.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515638795.1, "ph": "X", "cat": "fee", "dur": 31833.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515670744.9, "ph": "X", "cat": "fee", "dur": 26.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515670772.7, "ph": "X", "cat": "fee", "dur": 80.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515670744.1, "ph": "X", "cat": "fee", "dur": 109.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515670858.0, "ph": "X", "cat": "fee", "dur": 107.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515670855.1, "ph": "X", "cat": "fee", "dur": 111.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515670970.8, "ph": "X", "cat": "fee", "dur": 50.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515670969.5, "ph": "X", "cat": "fee", "dur": 52.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515671024.0, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515671034.3, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515671022.8, "ph": "X", "cat": "fee", "dur": 16.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515671043.7, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515671051.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515671057.5, "ph": "X", "cat": "fee", "dur": 26.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515671085.4, "ph": "X", "cat": "fee", "dur": 24122.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515671042.1, "ph": "X", "cat": "fee", "dur": 24167.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515695330.4, "ph": "X", "cat": "fee", "dur": 38.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515695369.6, "ph": "X", "cat": "fee", "dur": 75.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515695329.2, "ph": "X", "cat": "fee", "dur": 115.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515695448.2, "ph": "X", "cat": "fee", "dur": 459.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515695446.3, "ph": "X", "cat": "fee", "dur": 462.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515695912.5, "ph": "X", "cat": "fee", "dur": 28.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515695911.4, "ph": "X", "cat": "fee", "dur": 30.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515695943.8, "ph": "X", "cat": "fee", "dur": 10.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515695955.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515695942.7, "ph": "X", "cat": "fee", "dur": 17.12, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515695964.6, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515695972.2, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515695978.1, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515696004.9, "ph": "X", "cat": "fee", "dur": 14068.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515695963.6, "ph": "X", "cat": "fee", "dur": 14110.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515710244.0, "ph": "X", "cat": "fee", "dur": 41.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515710287.6, "ph": "X", "cat": "fee", "dur": 100.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515710242.3, "ph": "X", "cat": "fee", "dur": 145.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515710392.2, "ph": "X", "cat": "fee", "dur": 84.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515710389.7, "ph": "X", "cat": "fee", "dur": 87.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515710481.2, "ph": "X", "cat": "fee", "dur": 29.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515710480.3, "ph": "X", "cat": "fee", "dur": 30.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515710512.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515710522.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515710511.7, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515710528.7, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515710535.1, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515710540.6, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515710563.1, "ph": "X", "cat": "fee", "dur": 49438.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515710527.8, "ph": "X", "cat": "fee", "dur": 49475.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515760111.2, "ph": "X", "cat": "fee", "dur": 23.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515760135.7, "ph": "X", "cat": "fee", "dur": 55.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515760110.4, "ph": "X", "cat": "fee", "dur": 80.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515760193.8, "ph": "X", "cat": "fee", "dur": 419.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515760192.1, "ph": "X", "cat": "fee", "dur": 421.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515760616.4, "ph": "X", "cat": "fee", "dur": 23.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515760615.1, "ph": "X", "cat": "fee", "dur": 25.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515760643.0, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515760652.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515760642.0, "ph": "X", "cat": "fee", "dur": 13.72, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515760659.6, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515760666.1, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515760670.8, "ph": "X", "cat": "fee", "dur": 27.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515760699.5, "ph": "X", "cat": "fee", "dur": 28424.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515760658.6, "ph": "X", "cat": "fee", "dur": 28466.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515789241.2, "ph": "X", "cat": "fee", "dur": 26.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515789268.2, "ph": "X", "cat": "fee", "dur": 62.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515789240.2, "ph": "X", "cat": "fee", "dur": 90.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515789333.9, "ph": "X", "cat": "fee", "dur": 352.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515789332.1, "ph": "X", "cat": "fee", "dur": 354.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515789690.8, "ph": "X", "cat": "fee", "dur": 24.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515789689.7, "ph": "X", "cat": "fee", "dur": 25.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515789717.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515789727.3, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515789716.5, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515789734.7, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515789741.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515789747.4, "ph": "X", "cat": "fee", "dur": 21.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515789770.5, "ph": "X", "cat": "fee", "dur": 26127.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515789733.8, "ph": "X", "cat": "fee", "dur": 26166.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515816010.8, "ph": "X", "cat": "fee", "dur": 27.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515816039.0, "ph": "X", "cat": "fee", "dur": 61.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515816010.1, "ph": "X", "cat": "fee", "dur": 90.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515816103.8, "ph": "X", "cat": "fee", "dur": 80.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515816101.7, "ph": "X", "cat": "fee", "dur": 83.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515816188.0, "ph": "X", "cat": "fee", "dur": 33.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515816187.1, "ph": "X", "cat": "fee", "dur": 35.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515816224.5, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515816234.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515816223.4, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515816241.5, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515816249.3, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515816254.7, "ph": "X", "cat": "fee", "dur": 22.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515816279.1, "ph": "X", "cat": "fee", "dur": 40255.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515816240.5, "ph": "X", "cat": "fee", "dur": 40295.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515856643.7, "ph": "X", "cat": "fee", "dur": 36.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515856681.6, "ph": "X", "cat": "fee", "dur": 66.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515856643.1, "ph": "X", "cat": "fee", "dur": 105.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515856751.6, "ph": "X", "cat": "fee", "dur": 337.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515856749.5, "ph": "X", "cat": "fee", "dur": 340.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515857095.4, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515857094.2, "ph": "X", "cat": "fee", "dur": 33.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515857130.9, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515857140.7, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515857129.7, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515857148.4, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515857155.7, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515857160.6, "ph": "X", "cat": "fee", "dur": 21.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515857184.5, "ph": "X", "cat": "fee", "dur": 15679.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515857147.4, "ph": "X", "cat": "fee", "dur": 15717.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515872985.7, "ph": "X", "cat": "fee", "dur": 28.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515873015.4, "ph": "X", "cat": "fee", "dur": 67.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515872984.9, "ph": "X", "cat": "fee", "dur": 98.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515873086.2, "ph": "X", "cat": "fee", "dur": 87.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515873084.2, "ph": "X", "cat": "fee", "dur": 89.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515873178.4, "ph": "X", "cat": "fee", "dur": 33.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515873177.2, "ph": "X", "cat": "fee", "dur": 34.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515873215.0, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515873225.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515873213.5, "ph": "X", "cat": "fee", "dur": 15.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515873233.3, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515873241.2, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515873247.4, "ph": "X", "cat": "fee", "dur": 24.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515873273.9, "ph": "X", "cat": "fee", "dur": 9586.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515873232.1, "ph": "X", "cat": "fee", "dur": 9629.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515882948.8, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515882969.0, "ph": "X", "cat": "fee", "dur": 50.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515882948.0, "ph": "X", "cat": "fee", "dur": 71.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515883022.7, "ph": "X", "cat": "fee", "dur": 264.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515883021.0, "ph": "X", "cat": "fee", "dur": 266.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515883289.9, "ph": "X", "cat": "fee", "dur": 17.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515883288.7, "ph": "X", "cat": "fee", "dur": 18.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515883309.7, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515883319.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515883308.5, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515883325.8, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515883331.8, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515883336.2, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515883357.8, "ph": "X", "cat": "fee", "dur": 9773.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515883324.9, "ph": "X", "cat": "fee", "dur": 9808.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515893244.4, "ph": "X", "cat": "fee", "dur": 22.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515893268.0, "ph": "X", "cat": "fee", "dur": 53.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515893243.7, "ph": "X", "cat": "fee", "dur": 78.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515893325.2, "ph": "X", "cat": "fee", "dur": 180.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515893323.2, "ph": "X", "cat": "fee", "dur": 183.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515893509.7, "ph": "X", "cat": "fee", "dur": 17.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515893508.2, "ph": "X", "cat": "fee", "dur": 18.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515893529.6, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515893553.4, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515893528.5, "ph": "X", "cat": "fee", "dur": 28.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515893561.5, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515893568.2, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515893574.0, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515893597.3, "ph": "X", "cat": "fee", "dur": 22592.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515893560.0, "ph": "X", "cat": "fee", "dur": 22630.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515916277.1, "ph": "X", "cat": "fee", "dur": 20.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515916298.4, "ph": "X", "cat": "fee", "dur": 49.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515916276.3, "ph": "X", "cat": "fee", "dur": 71.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515916351.5, "ph": "X", "cat": "fee", "dur": 726.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515916349.2, "ph": "X", "cat": "fee", "dur": 729.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515917081.7, "ph": "X", "cat": "fee", "dur": 28.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515917080.6, "ph": "X", "cat": "fee", "dur": 30.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515917113.1, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515917122.4, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515917112.1, "ph": "X", "cat": "fee", "dur": 13.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515917129.2, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515917135.7, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515917140.9, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515917163.2, "ph": "X", "cat": "fee", "dur": 14263.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515917128.3, "ph": "X", "cat": "fee", "dur": 14299.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515931520.5, "ph": "X", "cat": "fee", "dur": 19.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515931541.2, "ph": "X", "cat": "fee", "dur": 50.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515931519.8, "ph": "X", "cat": "fee", "dur": 71.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515931594.5, "ph": "X", "cat": "fee", "dur": 275.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515931592.7, "ph": "X", "cat": "fee", "dur": 277.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515931874.5, "ph": "X", "cat": "fee", "dur": 24.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515931873.4, "ph": "X", "cat": "fee", "dur": 26.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515931901.6, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515931910.9, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515931900.8, "ph": "X", "cat": "fee", "dur": 13.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515931917.8, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515931924.4, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515931929.2, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515931950.9, "ph": "X", "cat": "fee", "dur": 21342.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515931916.8, "ph": "X", "cat": "fee", "dur": 21378.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515953419.7, "ph": "X", "cat": "fee", "dur": 27.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515953448.4, "ph": "X", "cat": "fee", "dur": 62.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515953418.4, "ph": "X", "cat": "fee", "dur": 92.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515953513.9, "ph": "X", "cat": "fee", "dur": 80.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515953511.9, "ph": "X", "cat": "fee", "dur": 82.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515953597.5, "ph": "X", "cat": "fee", "dur": 30.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515953596.6, "ph": "X", "cat": "fee", "dur": 31.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515953630.1, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515953640.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515953629.2, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515953647.5, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515953653.8, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515953659.3, "ph": "X", "cat": "fee", "dur": 22.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515953682.8, "ph": "X", "cat": "fee", "dur": 23699.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515953646.1, "ph": "X", "cat": "fee", "dur": 23737.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438515977521.8, "ph": "X", "cat": "fee", "dur": 27.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438515977550.9, "ph": "X", "cat": "fee", "dur": 68.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438515977521.0, "ph": "X", "cat": "fee", "dur": 99.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438515977623.4, "ph": "X", "cat": "fee", "dur": 93.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515977621.5, "ph": "X", "cat": "fee", "dur": 95.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438515977720.4, "ph": "X", "cat": "fee", "dur": 34.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515977719.4, "ph": "X", "cat": "fee", "dur": 35.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438515977757.6, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438515977767.5, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438515977756.6, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438515977774.5, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438515977781.2, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438515977786.6, "ph": "X", "cat": "fee", "dur": 24.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438515977812.5, "ph": "X", "cat": "fee", "dur": 24584.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438515977773.5, "ph": "X", "cat": "fee", "dur": 24625.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516002489.2, "ph": "X", "cat": "fee", "dur": 21.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516002511.6, "ph": "X", "cat": "fee", "dur": 51.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516002488.5, "ph": "X", "cat": "fee", "dur": 74.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516002566.2, "ph": "X", "cat": "fee", "dur": 247.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516002564.5, "ph": "X", "cat": "fee", "dur": 249.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516002818.0, "ph": "X", "cat": "fee", "dur": 28.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516002816.7, "ph": "X", "cat": "fee", "dur": 30.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516002848.9, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516002858.4, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516002847.9, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516002865.8, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516002873.2, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516002878.7, "ph": "X", "cat": "fee", "dur": 23.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516002903.3, "ph": "X", "cat": "fee", "dur": 31292.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516002864.8, "ph": "X", "cat": "fee", "dur": 31333.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516034347.6, "ph": "X", "cat": "fee", "dur": 43.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516034392.8, "ph": "X", "cat": "fee", "dur": 98.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516034345.5, "ph": "X", "cat": "fee", "dur": 145.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516034494.8, "ph": "X", "cat": "fee", "dur": 114.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516034492.3, "ph": "X", "cat": "fee", "dur": 117.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516034615.0, "ph": "X", "cat": "fee", "dur": 38.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516034613.4, "ph": "X", "cat": "fee", "dur": 40.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516034657.5, "ph": "X", "cat": "fee", "dur": 12.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516034671.2, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516034656.3, "ph": "X", "cat": "fee", "dur": 20.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516034682.5, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516034692.0, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516034699.8, "ph": "X", "cat": "fee", "dur": 28.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516034730.4, "ph": "X", "cat": "fee", "dur": 26418.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516034680.8, "ph": "X", "cat": "fee", "dur": 26469.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516061340.7, "ph": "X", "cat": "fee", "dur": 38.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516061380.7, "ph": "X", "cat": "fee", "dur": 94.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516061339.0, "ph": "X", "cat": "fee", "dur": 136.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516061478.9, "ph": "X", "cat": "fee", "dur": 1383.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516061476.7, "ph": "X", "cat": "fee", "dur": 1388.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516062875.5, "ph": "X", "cat": "fee", "dur": 50.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516062871.3, "ph": "X", "cat": "fee", "dur": 55.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516062930.4, "ph": "X", "cat": "fee", "dur": 11.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516062942.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516062928.8, "ph": "X", "cat": "fee", "dur": 23.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516062957.6, "ph": "X", "cat": "fee", "dur": 13.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516062972.1, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516062980.0, "ph": "X", "cat": "fee", "dur": 33.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516063016.2, "ph": "X", "cat": "fee", "dur": 40237.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516062956.6, "ph": "X", "cat": "fee", "dur": 40298.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516103385.5, "ph": "X", "cat": "fee", "dur": 26.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516103413.4, "ph": "X", "cat": "fee", "dur": 62.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516103384.4, "ph": "X", "cat": "fee", "dur": 92.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516103479.4, "ph": "X", "cat": "fee", "dur": 79.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516103477.7, "ph": "X", "cat": "fee", "dur": 81.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516103561.9, "ph": "X", "cat": "fee", "dur": 33.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516103561.0, "ph": "X", "cat": "fee", "dur": 34.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516103598.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516103607.9, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516103597.0, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516103615.3, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516103622.2, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516103627.2, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516103650.4, "ph": "X", "cat": "fee", "dur": 17913.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516103614.2, "ph": "X", "cat": "fee", "dur": 17951.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516121687.4, "ph": "X", "cat": "fee", "dur": 27.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516121715.8, "ph": "X", "cat": "fee", "dur": 64.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516121686.2, "ph": "X", "cat": "fee", "dur": 94.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516121784.1, "ph": "X", "cat": "fee", "dur": 382.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516121782.2, "ph": "X", "cat": "fee", "dur": 385.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516122171.2, "ph": "X", "cat": "fee", "dur": 23.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516122170.1, "ph": "X", "cat": "fee", "dur": 24.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516122198.0, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516122208.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516122196.5, "ph": "X", "cat": "fee", "dur": 16.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516122217.7, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516122226.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516122232.5, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516122259.7, "ph": "X", "cat": "fee", "dur": 23359.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516122216.6, "ph": "X", "cat": "fee", "dur": 23404.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516145729.5, "ph": "X", "cat": "fee", "dur": 30.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516145761.4, "ph": "X", "cat": "fee", "dur": 58.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516145728.8, "ph": "X", "cat": "fee", "dur": 91.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516145822.9, "ph": "X", "cat": "fee", "dur": 777.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516145821.1, "ph": "X", "cat": "fee", "dur": 780.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516146606.7, "ph": "X", "cat": "fee", "dur": 33.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516146604.9, "ph": "X", "cat": "fee", "dur": 35.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516146643.3, "ph": "X", "cat": "fee", "dur": 10.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516146654.2, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516146641.9, "ph": "X", "cat": "fee", "dur": 18.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516146666.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516146676.2, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516146683.3, "ph": "X", "cat": "fee", "dur": 25.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516146711.5, "ph": "X", "cat": "fee", "dur": 36874.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516146664.7, "ph": "X", "cat": "fee", "dur": 36922.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516183681.9, "ph": "X", "cat": "fee", "dur": 18.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516183701.6, "ph": "X", "cat": "fee", "dur": 50.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516183681.2, "ph": "X", "cat": "fee", "dur": 70.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516183754.9, "ph": "X", "cat": "fee", "dur": 381.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516183753.1, "ph": "X", "cat": "fee", "dur": 383.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516184140.2, "ph": "X", "cat": "fee", "dur": 51.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516184138.7, "ph": "X", "cat": "fee", "dur": 53.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516184194.6, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516184204.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516184193.4, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516184211.4, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516184217.8, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516184222.4, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516184244.0, "ph": "X", "cat": "fee", "dur": 18617.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516184210.4, "ph": "X", "cat": "fee", "dur": 18652.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516202954.4, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516202974.7, "ph": "X", "cat": "fee", "dur": 49.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516202953.6, "ph": "X", "cat": "fee", "dur": 71.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516203027.5, "ph": "X", "cat": "fee", "dur": 72.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516203025.7, "ph": "X", "cat": "fee", "dur": 74.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516203104.8, "ph": "X", "cat": "fee", "dur": 38.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516203103.9, "ph": "X", "cat": "fee", "dur": 39.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516203146.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516203155.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516203144.8, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516203162.6, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516203169.5, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516203174.6, "ph": "X", "cat": "fee", "dur": 22.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516203199.1, "ph": "X", "cat": "fee", "dur": 25059.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516203161.6, "ph": "X", "cat": "fee", "dur": 25098.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516228349.6, "ph": "X", "cat": "fee", "dur": 19.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516228370.2, "ph": "X", "cat": "fee", "dur": 49.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516228348.9, "ph": "X", "cat": "fee", "dur": 71.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516228423.3, "ph": "X", "cat": "fee", "dur": 631.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516228421.1, "ph": "X", "cat": "fee", "dur": 634.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516229059.1, "ph": "X", "cat": "fee", "dur": 29.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516229057.8, "ph": "X", "cat": "fee", "dur": 30.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516229091.4, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516229101.0, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516229090.0, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516229109.3, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516229116.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516229121.5, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516229144.3, "ph": "X", "cat": "fee", "dur": 13648.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516229108.2, "ph": "X", "cat": "fee", "dur": 13686.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516242896.8, "ph": "X", "cat": "fee", "dur": 22.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516242920.5, "ph": "X", "cat": "fee", "dur": 50.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516242896.0, "ph": "X", "cat": "fee", "dur": 75.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516242974.4, "ph": "X", "cat": "fee", "dur": 485.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516242972.4, "ph": "X", "cat": "fee", "dur": 487.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516243463.5, "ph": "X", "cat": "fee", "dur": 25.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516243462.1, "ph": "X", "cat": "fee", "dur": 26.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516243491.0, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516243500.3, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516243490.0, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516243507.2, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516243514.3, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516243519.4, "ph": "X", "cat": "fee", "dur": 27.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516243548.4, "ph": "X", "cat": "fee", "dur": 30154.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516243506.2, "ph": "X", "cat": "fee", "dur": 30197.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516273802.9, "ph": "X", "cat": "fee", "dur": 22.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516273826.2, "ph": "X", "cat": "fee", "dur": 55.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516273802.2, "ph": "X", "cat": "fee", "dur": 79.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516273885.6, "ph": "X", "cat": "fee", "dur": 904.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516273883.1, "ph": "X", "cat": "fee", "dur": 907.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516274794.1, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516274792.6, "ph": "X", "cat": "fee", "dur": 34.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516274828.8, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516274838.1, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516274827.8, "ph": "X", "cat": "fee", "dur": 14.32, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516274846.0, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516274853.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516274858.2, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516274880.8, "ph": "X", "cat": "fee", "dur": 50521.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516274845.0, "ph": "X", "cat": "fee", "dur": 50558.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516325503.2, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516325524.3, "ph": "X", "cat": "fee", "dur": 52.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516325502.5, "ph": "X", "cat": "fee", "dur": 74.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516325579.9, "ph": "X", "cat": "fee", "dur": 76.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516325578.0, "ph": "X", "cat": "fee", "dur": 79.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516325660.7, "ph": "X", "cat": "fee", "dur": 38.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516325659.7, "ph": "X", "cat": "fee", "dur": 39.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516325701.4, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516325711.2, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516325700.4, "ph": "X", "cat": "fee", "dur": 14.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516325718.1, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516325724.6, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516325729.8, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516325752.0, "ph": "X", "cat": "fee", "dur": 17143.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516325717.1, "ph": "X", "cat": "fee", "dur": 17179.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516342994.5, "ph": "X", "cat": "fee", "dur": 19.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516343014.7, "ph": "X", "cat": "fee", "dur": 51.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516342993.7, "ph": "X", "cat": "fee", "dur": 72.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516343069.4, "ph": "X", "cat": "fee", "dur": 76.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516343067.6, "ph": "X", "cat": "fee", "dur": 78.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516343149.5, "ph": "X", "cat": "fee", "dur": 26.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516343148.5, "ph": "X", "cat": "fee", "dur": 27.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516343178.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516343188.0, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516343177.4, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516343194.4, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516343200.7, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516343206.1, "ph": "X", "cat": "fee", "dur": 20.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516343228.0, "ph": "X", "cat": "fee", "dur": 50161.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516343193.5, "ph": "X", "cat": "fee", "dur": 50197.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516393487.9, "ph": "X", "cat": "fee", "dur": 21.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516393509.8, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516393487.2, "ph": "X", "cat": "fee", "dur": 72.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516393562.9, "ph": "X", "cat": "fee", "dur": 73.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516393561.1, "ph": "X", "cat": "fee", "dur": 76.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516393640.1, "ph": "X", "cat": "fee", "dur": 45.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516393639.2, "ph": "X", "cat": "fee", "dur": 46.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516393688.4, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516393697.9, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516393687.4, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516393705.1, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516393711.3, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516393716.1, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516393737.9, "ph": "X", "cat": "fee", "dur": 37101.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516393703.9, "ph": "X", "cat": "fee", "dur": 37136.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516430932.4, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516430952.6, "ph": "X", "cat": "fee", "dur": 49.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516430931.8, "ph": "X", "cat": "fee", "dur": 70.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516431005.4, "ph": "X", "cat": "fee", "dur": 72.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516431003.9, "ph": "X", "cat": "fee", "dur": 74.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516431081.0, "ph": "X", "cat": "fee", "dur": 27.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516431080.2, "ph": "X", "cat": "fee", "dur": 28.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516431110.3, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516431119.7, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516431109.3, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516431126.5, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516431132.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516431137.6, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516431159.1, "ph": "X", "cat": "fee", "dur": 31283.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516431125.4, "ph": "X", "cat": "fee", "dur": 31319.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516462535.4, "ph": "X", "cat": "fee", "dur": 18.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516462554.6, "ph": "X", "cat": "fee", "dur": 50.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516462534.8, "ph": "X", "cat": "fee", "dur": 70.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516462608.8, "ph": "X", "cat": "fee", "dur": 74.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516462606.6, "ph": "X", "cat": "fee", "dur": 77.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516462686.9, "ph": "X", "cat": "fee", "dur": 35.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516462685.7, "ph": "X", "cat": "fee", "dur": 37.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516462725.1, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516462735.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516462724.2, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516462742.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516462749.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516462754.1, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516462776.1, "ph": "X", "cat": "fee", "dur": 42745.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516462740.9, "ph": "X", "cat": "fee", "dur": 42782.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516505729.3, "ph": "X", "cat": "fee", "dur": 45.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516505776.4, "ph": "X", "cat": "fee", "dur": 110.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516505727.0, "ph": "X", "cat": "fee", "dur": 159.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516505891.2, "ph": "X", "cat": "fee", "dur": 370.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516505888.2, "ph": "X", "cat": "fee", "dur": 374.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516506267.5, "ph": "X", "cat": "fee", "dur": 32.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516506266.0, "ph": "X", "cat": "fee", "dur": 34.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516506304.5, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516506314.6, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516506303.0, "ph": "X", "cat": "fee", "dur": 16.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516506323.6, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516506332.8, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516506338.1, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516506364.4, "ph": "X", "cat": "fee", "dur": 21607.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516506322.5, "ph": "X", "cat": "fee", "dur": 21650.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516528084.7, "ph": "X", "cat": "fee", "dur": 27.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516528113.2, "ph": "X", "cat": "fee", "dur": 63.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516528083.7, "ph": "X", "cat": "fee", "dur": 92.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516528180.1, "ph": "X", "cat": "fee", "dur": 88.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516528177.9, "ph": "X", "cat": "fee", "dur": 90.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516528273.1, "ph": "X", "cat": "fee", "dur": 36.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516528271.9, "ph": "X", "cat": "fee", "dur": 37.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516528312.4, "ph": "X", "cat": "fee", "dur": 12.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516528325.0, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516528310.9, "ph": "X", "cat": "fee", "dur": 18.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516528329.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438516528334.0, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516528341.3, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516528346.5, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516528369.5, "ph": "X", "cat": "fee", "dur": 33975.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516528332.9, "ph": "X", "cat": "fee", "dur": 34014.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516562462.3, "ph": "X", "cat": "fee", "dur": 33.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516562497.0, "ph": "X", "cat": "fee", "dur": 73.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516562461.1, "ph": "X", "cat": "fee", "dur": 109.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516562574.1, "ph": "X", "cat": "fee", "dur": 1407.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516562572.2, "ph": "X", "cat": "fee", "dur": 1409.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516563986.9, "ph": "X", "cat": "fee", "dur": 47.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516563985.3, "ph": "X", "cat": "fee", "dur": 49.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516564037.8, "ph": "X", "cat": "fee", "dur": 13.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516564052.0, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516564036.4, "ph": "X", "cat": "fee", "dur": 22.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516564059.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438516564065.9, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516564075.5, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516564081.8, "ph": "X", "cat": "fee", "dur": 28.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516564112.2, "ph": "X", "cat": "fee", "dur": 134232.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516564064.7, "ph": "X", "cat": "fee", "dur": 134281.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516698469.9, "ph": "X", "cat": "fee", "dur": 29.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516698500.7, "ph": "X", "cat": "fee", "dur": 73.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516698468.8, "ph": "X", "cat": "fee", "dur": 105.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516698577.1, "ph": "X", "cat": "fee", "dur": 91.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516698575.3, "ph": "X", "cat": "fee", "dur": 93.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516698672.3, "ph": "X", "cat": "fee", "dur": 54.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516698671.4, "ph": "X", "cat": "fee", "dur": 56.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516698730.4, "ph": "X", "cat": "fee", "dur": 13.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516698744.4, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516698729.3, "ph": "X", "cat": "fee", "dur": 18.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516698748.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438516698752.9, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516698761.2, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516698766.9, "ph": "X", "cat": "fee", "dur": 25.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516698793.9, "ph": "X", "cat": "fee", "dur": 30363.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516698751.9, "ph": "X", "cat": "fee", "dur": 30406.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516729287.2, "ph": "X", "cat": "fee", "dur": 39.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516729328.2, "ph": "X", "cat": "fee", "dur": 73.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516729286.2, "ph": "X", "cat": "fee", "dur": 115.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516729404.9, "ph": "X", "cat": "fee", "dur": 316.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516729403.1, "ph": "X", "cat": "fee", "dur": 318.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516729726.2, "ph": "X", "cat": "fee", "dur": 27.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516729724.9, "ph": "X", "cat": "fee", "dur": 28.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516729757.0, "ph": "X", "cat": "fee", "dur": 12.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516729769.5, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516729755.5, "ph": "X", "cat": "fee", "dur": 18.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516729774.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438516729780.0, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516729787.6, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516729793.3, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516729818.4, "ph": "X", "cat": "fee", "dur": 15243.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516729778.4, "ph": "X", "cat": "fee", "dur": 15284.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516745176.5, "ph": "X", "cat": "fee", "dur": 27.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516745204.6, "ph": "X", "cat": "fee", "dur": 59.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516745175.7, "ph": "X", "cat": "fee", "dur": 88.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516745266.6, "ph": "X", "cat": "fee", "dur": 877.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516745264.9, "ph": "X", "cat": "fee", "dur": 880.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516746149.2, "ph": "X", "cat": "fee", "dur": 27.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516746147.8, "ph": "X", "cat": "fee", "dur": 29.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516746179.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516746189.2, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516746178.6, "ph": "X", "cat": "fee", "dur": 14.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516746197.5, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516746204.6, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516746210.3, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516746234.3, "ph": "X", "cat": "fee", "dur": 31901.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516746196.5, "ph": "X", "cat": "fee", "dur": 31940.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516778256.1, "ph": "X", "cat": "fee", "dur": 24.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516778281.1, "ph": "X", "cat": "fee", "dur": 53.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516778255.5, "ph": "X", "cat": "fee", "dur": 79.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516778337.5, "ph": "X", "cat": "fee", "dur": 76.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516778335.7, "ph": "X", "cat": "fee", "dur": 79.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516778417.7, "ph": "X", "cat": "fee", "dur": 38.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516778416.8, "ph": "X", "cat": "fee", "dur": 39.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516778458.1, "ph": "X", "cat": "fee", "dur": 11.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516778469.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516778457.1, "ph": "X", "cat": "fee", "dur": 15.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516778476.3, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516778483.2, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516778487.9, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516778509.4, "ph": "X", "cat": "fee", "dur": 47104.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516778475.4, "ph": "X", "cat": "fee", "dur": 47141.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516825792.6, "ph": "X", "cat": "fee", "dur": 41.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516825835.6, "ph": "X", "cat": "fee", "dur": 148.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516825791.2, "ph": "X", "cat": "fee", "dur": 193.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516825993.4, "ph": "X", "cat": "fee", "dur": 405.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516825988.4, "ph": "X", "cat": "fee", "dur": 412.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516826411.6, "ph": "X", "cat": "fee", "dur": 78.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516826408.8, "ph": "X", "cat": "fee", "dur": 81.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516826495.3, "ph": "X", "cat": "fee", "dur": 11.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516826507.3, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516826493.2, "ph": "X", "cat": "fee", "dur": 22.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516826525.0, "ph": "X", "cat": "fee", "dur": 14.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516826541.2, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516826552.1, "ph": "X", "cat": "fee", "dur": 33.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516826588.8, "ph": "X", "cat": "fee", "dur": 26351.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516826523.2, "ph": "X", "cat": "fee", "dur": 26418.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516853061.8, "ph": "X", "cat": "fee", "dur": 30.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516853093.0, "ph": "X", "cat": "fee", "dur": 71.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516853060.7, "ph": "X", "cat": "fee", "dur": 104.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516853167.7, "ph": "X", "cat": "fee", "dur": 1613.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516853165.8, "ph": "X", "cat": "fee", "dur": 1617.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516854797.5, "ph": "X", "cat": "fee", "dur": 68.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516854793.0, "ph": "X", "cat": "fee", "dur": 73.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516854870.5, "ph": "X", "cat": "fee", "dur": 12.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516854883.0, "ph": "X", "cat": "fee", "dur": 10.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516854868.9, "ph": "X", "cat": "fee", "dur": 24.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516854902.9, "ph": "X", "cat": "fee", "dur": 13.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516854917.0, "ph": "X", "cat": "fee", "dur": 9.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516854927.5, "ph": "X", "cat": "fee", "dur": 34.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516854964.5, "ph": "X", "cat": "fee", "dur": 13413.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516854901.1, "ph": "X", "cat": "fee", "dur": 13478.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516868474.9, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516868495.6, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516868474.2, "ph": "X", "cat": "fee", "dur": 72.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516868550.0, "ph": "X", "cat": "fee", "dur": 74.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516868547.9, "ph": "X", "cat": "fee", "dur": 77.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516868628.3, "ph": "X", "cat": "fee", "dur": 29.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516868627.4, "ph": "X", "cat": "fee", "dur": 31.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516868660.5, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516868670.3, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516868659.6, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516868677.4, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516868684.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516868689.1, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516868712.3, "ph": "X", "cat": "fee", "dur": 39167.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516868676.3, "ph": "X", "cat": "fee", "dur": 39205.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516907995.9, "ph": "X", "cat": "fee", "dur": 30.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516908027.6, "ph": "X", "cat": "fee", "dur": 65.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516907995.0, "ph": "X", "cat": "fee", "dur": 97.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516908096.3, "ph": "X", "cat": "fee", "dur": 535.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516908094.1, "ph": "X", "cat": "fee", "dur": 537.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516908636.2, "ph": "X", "cat": "fee", "dur": 52.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516908634.9, "ph": "X", "cat": "fee", "dur": 54.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516908691.9, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516908702.1, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516908690.8, "ph": "X", "cat": "fee", "dur": 16.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516908712.0, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516908719.8, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516908724.8, "ph": "X", "cat": "fee", "dur": 24.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516908751.1, "ph": "X", "cat": "fee", "dur": 17767.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516908710.9, "ph": "X", "cat": "fee", "dur": 17809.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516926614.7, "ph": "X", "cat": "fee", "dur": 19.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516926634.6, "ph": "X", "cat": "fee", "dur": 53.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516926614.0, "ph": "X", "cat": "fee", "dur": 74.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516926690.8, "ph": "X", "cat": "fee", "dur": 556.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516926689.0, "ph": "X", "cat": "fee", "dur": 558.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516927252.1, "ph": "X", "cat": "fee", "dur": 28.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516927250.8, "ph": "X", "cat": "fee", "dur": 29.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516927283.1, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516927292.6, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516927282.1, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516927299.9, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516927306.6, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516927311.5, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516927333.6, "ph": "X", "cat": "fee", "dur": 15042.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516927298.9, "ph": "X", "cat": "fee", "dur": 15078.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516942487.4, "ph": "X", "cat": "fee", "dur": 25.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516942513.6, "ph": "X", "cat": "fee", "dur": 53.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516942486.7, "ph": "X", "cat": "fee", "dur": 80.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516942570.7, "ph": "X", "cat": "fee", "dur": 197.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516942568.6, "ph": "X", "cat": "fee", "dur": 199.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516942772.0, "ph": "X", "cat": "fee", "dur": 29.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516942770.9, "ph": "X", "cat": "fee", "dur": 31.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516942804.4, "ph": "X", "cat": "fee", "dur": 10.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516942815.4, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516942803.4, "ph": "X", "cat": "fee", "dur": 15.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516942822.5, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516942829.1, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516942834.0, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516942856.4, "ph": "X", "cat": "fee", "dur": 23234.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516942821.4, "ph": "X", "cat": "fee", "dur": 23270.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516966186.0, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516966206.3, "ph": "X", "cat": "fee", "dur": 50.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516966184.9, "ph": "X", "cat": "fee", "dur": 72.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516966259.8, "ph": "X", "cat": "fee", "dur": 75.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516966257.9, "ph": "X", "cat": "fee", "dur": 77.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516966338.4, "ph": "X", "cat": "fee", "dur": 42.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516966337.6, "ph": "X", "cat": "fee", "dur": 44.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516966384.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516966394.1, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516966383.1, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516966400.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516966407.0, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516966411.6, "ph": "X", "cat": "fee", "dur": 26.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516966439.7, "ph": "X", "cat": "fee", "dur": 22510.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516966400.0, "ph": "X", "cat": "fee", "dur": 22552.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438516989168.8, "ph": "X", "cat": "fee", "dur": 49.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438516989219.9, "ph": "X", "cat": "fee", "dur": 124.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438516989166.5, "ph": "X", "cat": "fee", "dur": 177.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438516989349.5, "ph": "X", "cat": "fee", "dur": 839.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516989346.2, "ph": "X", "cat": "fee", "dur": 844.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438516990202.0, "ph": "X", "cat": "fee", "dur": 56.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516990198.3, "ph": "X", "cat": "fee", "dur": 60.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438516990262.4, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438516990274.3, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438516990260.7, "ph": "X", "cat": "fee", "dur": 21.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438516990289.0, "ph": "X", "cat": "fee", "dur": 12.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438516990302.3, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438516990310.7, "ph": "X", "cat": "fee", "dur": 32.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438516990345.2, "ph": "X", "cat": "fee", "dur": 21904.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438516990287.8, "ph": "X", "cat": "fee", "dur": 21963.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517012369.7, "ph": "X", "cat": "fee", "dur": 24.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517012394.7, "ph": "X", "cat": "fee", "dur": 54.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517012368.8, "ph": "X", "cat": "fee", "dur": 80.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517012452.6, "ph": "X", "cat": "fee", "dur": 87.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517012450.5, "ph": "X", "cat": "fee", "dur": 89.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517012544.0, "ph": "X", "cat": "fee", "dur": 32.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517012543.1, "ph": "X", "cat": "fee", "dur": 34.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517012579.5, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517012589.7, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517012578.5, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517012596.3, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517012603.1, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517012608.4, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517012630.9, "ph": "X", "cat": "fee", "dur": 19507.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517012595.2, "ph": "X", "cat": "fee", "dur": 19545.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517032304.8, "ph": "X", "cat": "fee", "dur": 27.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517032333.3, "ph": "X", "cat": "fee", "dur": 57.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517032304.0, "ph": "X", "cat": "fee", "dur": 87.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517032395.1, "ph": "X", "cat": "fee", "dur": 84.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517032392.8, "ph": "X", "cat": "fee", "dur": 87.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517032490.2, "ph": "X", "cat": "fee", "dur": 38.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517032488.9, "ph": "X", "cat": "fee", "dur": 39.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517032531.9, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517032542.2, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517032530.2, "ph": "X", "cat": "fee", "dur": 16.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517032553.2, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517032560.7, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517032566.4, "ph": "X", "cat": "fee", "dur": 22.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517032590.9, "ph": "X", "cat": "fee", "dur": 11872.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517032551.9, "ph": "X", "cat": "fee", "dur": 11913.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517044651.7, "ph": "X", "cat": "fee", "dur": 32.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517044685.1, "ph": "X", "cat": "fee", "dur": 83.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517044650.4, "ph": "X", "cat": "fee", "dur": 117.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517044772.0, "ph": "X", "cat": "fee", "dur": 282.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517044769.6, "ph": "X", "cat": "fee", "dur": 285.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517045060.0, "ph": "X", "cat": "fee", "dur": 32.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517045058.3, "ph": "X", "cat": "fee", "dur": 34.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517045096.8, "ph": "X", "cat": "fee", "dur": 12.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517045109.9, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517045095.1, "ph": "X", "cat": "fee", "dur": 20.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517045120.8, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517045132.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517045138.9, "ph": "X", "cat": "fee", "dur": 29.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517045171.0, "ph": "X", "cat": "fee", "dur": 16241.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517045119.5, "ph": "X", "cat": "fee", "dur": 16294.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517061615.1, "ph": "X", "cat": "fee", "dur": 49.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517061666.0, "ph": "X", "cat": "fee", "dur": 121.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517061613.7, "ph": "X", "cat": "fee", "dur": 173.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517061792.7, "ph": "X", "cat": "fee", "dur": 1522.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517061789.0, "ph": "X", "cat": "fee", "dur": 1532.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517063342.2, "ph": "X", "cat": "fee", "dur": 665.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517063336.2, "ph": "X", "cat": "fee", "dur": 675.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517064026.5, "ph": "X", "cat": "fee", "dur": 63.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517064091.2, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517064021.7, "ph": "X", "cat": "fee", "dur": 81.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517064113.8, "ph": "X", "cat": "fee", "dur": 16.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517064131.8, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517064142.0, "ph": "X", "cat": "fee", "dur": 47.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517064194.0, "ph": "X", "cat": "fee", "dur": 22425.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517064111.8, "ph": "X", "cat": "fee", "dur": 22509.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517086739.8, "ph": "X", "cat": "fee", "dur": 24.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517086764.9, "ph": "X", "cat": "fee", "dur": 60.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517086739.1, "ph": "X", "cat": "fee", "dur": 86.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517086828.4, "ph": "X", "cat": "fee", "dur": 86.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517086826.5, "ph": "X", "cat": "fee", "dur": 89.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517086924.7, "ph": "X", "cat": "fee", "dur": 32.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517086923.5, "ph": "X", "cat": "fee", "dur": 33.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517086960.7, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517086971.0, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517086958.8, "ph": "X", "cat": "fee", "dur": 18.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517086983.6, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517086990.6, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517086996.2, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517087021.5, "ph": "X", "cat": "fee", "dur": 14846.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517086982.4, "ph": "X", "cat": "fee", "dur": 14886.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517101963.2, "ph": "X", "cat": "fee", "dur": 21.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517101985.3, "ph": "X", "cat": "fee", "dur": 53.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517101962.3, "ph": "X", "cat": "fee", "dur": 76.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517102042.5, "ph": "X", "cat": "fee", "dur": 555.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517102040.2, "ph": "X", "cat": "fee", "dur": 557.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517102601.6, "ph": "X", "cat": "fee", "dur": 26.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517102600.5, "ph": "X", "cat": "fee", "dur": 27.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517102630.3, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517102639.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517102629.4, "ph": "X", "cat": "fee", "dur": 13.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517102647.1, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517102653.5, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517102658.2, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517102679.8, "ph": "X", "cat": "fee", "dur": 9590.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517102645.8, "ph": "X", "cat": "fee", "dur": 9626.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517112399.3, "ph": "X", "cat": "fee", "dur": 30.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517112430.9, "ph": "X", "cat": "fee", "dur": 77.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517112397.9, "ph": "X", "cat": "fee", "dur": 110.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517112512.5, "ph": "X", "cat": "fee", "dur": 192.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517112509.7, "ph": "X", "cat": "fee", "dur": 195.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517112710.3, "ph": "X", "cat": "fee", "dur": 22.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517112709.1, "ph": "X", "cat": "fee", "dur": 23.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517112736.2, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517112746.9, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517112734.6, "ph": "X", "cat": "fee", "dur": 17.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517112756.8, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517112764.3, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517112771.4, "ph": "X", "cat": "fee", "dur": 25.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517112798.3, "ph": "X", "cat": "fee", "dur": 20372.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517112755.6, "ph": "X", "cat": "fee", "dur": 20416.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517133277.1, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517133297.8, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517133276.4, "ph": "X", "cat": "fee", "dur": 72.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517133352.3, "ph": "X", "cat": "fee", "dur": 405.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517133350.3, "ph": "X", "cat": "fee", "dur": 407.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517133761.4, "ph": "X", "cat": "fee", "dur": 25.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517133760.2, "ph": "X", "cat": "fee", "dur": 26.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517133789.2, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517133798.8, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517133788.2, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517133806.2, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517133813.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517133817.8, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517133840.4, "ph": "X", "cat": "fee", "dur": 13381.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517133805.2, "ph": "X", "cat": "fee", "dur": 13418.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517147320.5, "ph": "X", "cat": "fee", "dur": 18.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517147339.9, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517147319.8, "ph": "X", "cat": "fee", "dur": 70.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517147393.3, "ph": "X", "cat": "fee", "dur": 301.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517147391.3, "ph": "X", "cat": "fee", "dur": 304.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517147699.1, "ph": "X", "cat": "fee", "dur": 27.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517147697.9, "ph": "X", "cat": "fee", "dur": 28.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517147728.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517147738.4, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517147727.7, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517147745.9, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517147753.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517147758.1, "ph": "X", "cat": "fee", "dur": 22.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517147782.3, "ph": "X", "cat": "fee", "dur": 30591.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517147744.8, "ph": "X", "cat": "fee", "dur": 30630.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517178475.5, "ph": "X", "cat": "fee", "dur": 21.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517178497.8, "ph": "X", "cat": "fee", "dur": 52.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517178474.7, "ph": "X", "cat": "fee", "dur": 75.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517178553.6, "ph": "X", "cat": "fee", "dur": 634.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517178551.6, "ph": "X", "cat": "fee", "dur": 637.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517179191.8, "ph": "X", "cat": "fee", "dur": 26.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517179190.5, "ph": "X", "cat": "fee", "dur": 28.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517179221.3, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517179231.4, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517179220.1, "ph": "X", "cat": "fee", "dur": 15.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517179239.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517179245.9, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517179251.0, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517179274.4, "ph": "X", "cat": "fee", "dur": 8326.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517179237.9, "ph": "X", "cat": "fee", "dur": 8364.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517187745.9, "ph": "X", "cat": "fee", "dur": 31.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517187778.8, "ph": "X", "cat": "fee", "dur": 74.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517187744.4, "ph": "X", "cat": "fee", "dur": 108.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517187856.2, "ph": "X", "cat": "fee", "dur": 83.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517187853.9, "ph": "X", "cat": "fee", "dur": 86.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517187943.9, "ph": "X", "cat": "fee", "dur": 22.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517187943.0, "ph": "X", "cat": "fee", "dur": 23.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517187968.7, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517187979.1, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517187967.6, "ph": "X", "cat": "fee", "dur": 15.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517187986.8, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517187993.2, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517187999.2, "ph": "X", "cat": "fee", "dur": 22.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517188023.6, "ph": "X", "cat": "fee", "dur": 19801.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517187985.8, "ph": "X", "cat": "fee", "dur": 19840.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517207937.6, "ph": "X", "cat": "fee", "dur": 22.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517207961.1, "ph": "X", "cat": "fee", "dur": 52.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517207936.6, "ph": "X", "cat": "fee", "dur": 77.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517208016.7, "ph": "X", "cat": "fee", "dur": 224.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517208014.6, "ph": "X", "cat": "fee", "dur": 227.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517208245.4, "ph": "X", "cat": "fee", "dur": 31.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517208244.3, "ph": "X", "cat": "fee", "dur": 32.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517208280.3, "ph": "X", "cat": "fee", "dur": 10.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517208291.4, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517208278.5, "ph": "X", "cat": "fee", "dur": 16.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517208299.0, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517208305.5, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517208310.4, "ph": "X", "cat": "fee", "dur": 21.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517208333.6, "ph": "X", "cat": "fee", "dur": 9273.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517208298.1, "ph": "X", "cat": "fee", "dur": 9309.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517217694.9, "ph": "X", "cat": "fee", "dur": 19.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517217715.0, "ph": "X", "cat": "fee", "dur": 48.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517217694.1, "ph": "X", "cat": "fee", "dur": 69.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517217766.1, "ph": "X", "cat": "fee", "dur": 71.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517217764.2, "ph": "X", "cat": "fee", "dur": 73.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517217846.1, "ph": "X", "cat": "fee", "dur": 29.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517217845.3, "ph": "X", "cat": "fee", "dur": 30.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517217879.0, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517217888.5, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517217877.5, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517217895.1, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517217901.6, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517217906.0, "ph": "X", "cat": "fee", "dur": 20.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517217928.1, "ph": "X", "cat": "fee", "dur": 20782.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517217894.1, "ph": "X", "cat": "fee", "dur": 20818.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517238920.7, "ph": "X", "cat": "fee", "dur": 49.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517238970.9, "ph": "X", "cat": "fee", "dur": 115.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517238918.7, "ph": "X", "cat": "fee", "dur": 168.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517239089.9, "ph": "X", "cat": "fee", "dur": 385.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517239087.9, "ph": "X", "cat": "fee", "dur": 388.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517239480.9, "ph": "X", "cat": "fee", "dur": 37.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517239479.5, "ph": "X", "cat": "fee", "dur": 39.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517239522.7, "ph": "X", "cat": "fee", "dur": 12.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517239535.5, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517239520.5, "ph": "X", "cat": "fee", "dur": 22.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517239548.0, "ph": "X", "cat": "fee", "dur": 10.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517239559.4, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517239565.8, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517239605.1, "ph": "X", "cat": "fee", "dur": 11057.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517239546.8, "ph": "X", "cat": "fee", "dur": 11116.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517250757.0, "ph": "X", "cat": "fee", "dur": 20.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517250778.1, "ph": "X", "cat": "fee", "dur": 53.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517250756.3, "ph": "X", "cat": "fee", "dur": 75.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517250834.9, "ph": "X", "cat": "fee", "dur": 198.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517250833.1, "ph": "X", "cat": "fee", "dur": 201.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517251037.7, "ph": "X", "cat": "fee", "dur": 22.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517251036.8, "ph": "X", "cat": "fee", "dur": 23.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517251062.8, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517251072.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517251062.0, "ph": "X", "cat": "fee", "dur": 13.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517251078.6, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517251085.6, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517251090.2, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517251112.4, "ph": "X", "cat": "fee", "dur": 12479.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517251077.6, "ph": "X", "cat": "fee", "dur": 12515.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517263682.2, "ph": "X", "cat": "fee", "dur": 18.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517263701.4, "ph": "X", "cat": "fee", "dur": 50.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517263681.5, "ph": "X", "cat": "fee", "dur": 70.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517263754.5, "ph": "X", "cat": "fee", "dur": 70.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517263752.9, "ph": "X", "cat": "fee", "dur": 72.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517263827.7, "ph": "X", "cat": "fee", "dur": 27.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517263826.8, "ph": "X", "cat": "fee", "dur": 28.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517263857.8, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517263867.3, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517263856.9, "ph": "X", "cat": "fee", "dur": 13.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517263873.6, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517263879.7, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517263884.6, "ph": "X", "cat": "fee", "dur": 19.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517263905.6, "ph": "X", "cat": "fee", "dur": 15477.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517263872.6, "ph": "X", "cat": "fee", "dur": 15511.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517279469.7, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517279489.5, "ph": "X", "cat": "fee", "dur": 49.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517279468.9, "ph": "X", "cat": "fee", "dur": 70.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517279541.6, "ph": "X", "cat": "fee", "dur": 251.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517279539.9, "ph": "X", "cat": "fee", "dur": 253.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517279796.1, "ph": "X", "cat": "fee", "dur": 32.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517279795.1, "ph": "X", "cat": "fee", "dur": 33.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517279831.1, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517279840.9, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517279830.2, "ph": "X", "cat": "fee", "dur": 13.72, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517279847.2, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517279854.2, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517279859.2, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517279880.6, "ph": "X", "cat": "fee", "dur": 23799.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517279846.3, "ph": "X", "cat": "fee", "dur": 23835.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517303799.6, "ph": "X", "cat": "fee", "dur": 30.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517303831.2, "ph": "X", "cat": "fee", "dur": 60.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517303798.7, "ph": "X", "cat": "fee", "dur": 93.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517303895.1, "ph": "X", "cat": "fee", "dur": 986.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517303893.3, "ph": "X", "cat": "fee", "dur": 989.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517304888.4, "ph": "X", "cat": "fee", "dur": 33.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517304886.7, "ph": "X", "cat": "fee", "dur": 35.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517304924.7, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517304935.6, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517304923.5, "ph": "X", "cat": "fee", "dur": 17.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517304947.5, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517304957.6, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517304964.5, "ph": "X", "cat": "fee", "dur": 28.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517304995.4, "ph": "X", "cat": "fee", "dur": 46035.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517304946.0, "ph": "X", "cat": "fee", "dur": 46086.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517351131.5, "ph": "X", "cat": "fee", "dur": 22.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517351154.8, "ph": "X", "cat": "fee", "dur": 53.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517351130.8, "ph": "X", "cat": "fee", "dur": 77.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517351211.7, "ph": "X", "cat": "fee", "dur": 79.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517351209.5, "ph": "X", "cat": "fee", "dur": 81.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517351294.4, "ph": "X", "cat": "fee", "dur": 49.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517351293.5, "ph": "X", "cat": "fee", "dur": 51.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517351346.8, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517351356.9, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517351345.8, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517351364.1, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517351370.4, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517351375.9, "ph": "X", "cat": "fee", "dur": 27.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517351405.0, "ph": "X", "cat": "fee", "dur": 32257.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517351363.0, "ph": "X", "cat": "fee", "dur": 32301.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517383759.8, "ph": "X", "cat": "fee", "dur": 20.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517383781.5, "ph": "X", "cat": "fee", "dur": 51.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517383759.1, "ph": "X", "cat": "fee", "dur": 73.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517383836.0, "ph": "X", "cat": "fee", "dur": 480.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517383834.1, "ph": "X", "cat": "fee", "dur": 482.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517384320.9, "ph": "X", "cat": "fee", "dur": 42.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517384319.7, "ph": "X", "cat": "fee", "dur": 43.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517384365.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517384375.6, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517384364.7, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517384383.5, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517384390.9, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517384396.6, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517384420.5, "ph": "X", "cat": "fee", "dur": 10992.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517384382.5, "ph": "X", "cat": "fee", "dur": 11031.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517395522.4, "ph": "X", "cat": "fee", "dur": 21.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517395544.6, "ph": "X", "cat": "fee", "dur": 54.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517395521.8, "ph": "X", "cat": "fee", "dur": 77.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517395601.9, "ph": "X", "cat": "fee", "dur": 256.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517395599.9, "ph": "X", "cat": "fee", "dur": 259.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517395863.4, "ph": "X", "cat": "fee", "dur": 17.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517395861.9, "ph": "X", "cat": "fee", "dur": 18.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517395883.4, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517395893.1, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517395882.2, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517395900.4, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517395907.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517395912.1, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517395935.4, "ph": "X", "cat": "fee", "dur": 14480.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517395899.3, "ph": "X", "cat": "fee", "dur": 14518.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517410538.7, "ph": "X", "cat": "fee", "dur": 30.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517410570.1, "ph": "X", "cat": "fee", "dur": 66.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517410537.9, "ph": "X", "cat": "fee", "dur": 98.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517410639.8, "ph": "X", "cat": "fee", "dur": 82.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517410637.7, "ph": "X", "cat": "fee", "dur": 85.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517410726.2, "ph": "X", "cat": "fee", "dur": 30.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517410725.1, "ph": "X", "cat": "fee", "dur": 31.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517410759.2, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517410768.8, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517410758.3, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517410776.6, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517410783.7, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517410789.1, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517410813.1, "ph": "X", "cat": "fee", "dur": 15679.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517410775.5, "ph": "X", "cat": "fee", "dur": 15720.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517426661.9, "ph": "X", "cat": "fee", "dur": 24.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517426687.6, "ph": "X", "cat": "fee", "dur": 59.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517426661.2, "ph": "X", "cat": "fee", "dur": 86.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517426750.6, "ph": "X", "cat": "fee", "dur": 356.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517426748.7, "ph": "X", "cat": "fee", "dur": 358.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517427111.9, "ph": "X", "cat": "fee", "dur": 29.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517427110.4, "ph": "X", "cat": "fee", "dur": 31.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517427144.6, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517427154.7, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517427143.4, "ph": "X", "cat": "fee", "dur": 16.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517427165.5, "ph": "X", "cat": "fee", "dur": 9.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517427176.1, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517427182.8, "ph": "X", "cat": "fee", "dur": 28.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517427213.8, "ph": "X", "cat": "fee", "dur": 11763.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517427164.2, "ph": "X", "cat": "fee", "dur": 11814.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517439120.1, "ph": "X", "cat": "fee", "dur": 24.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517439145.7, "ph": "X", "cat": "fee", "dur": 60.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517439119.5, "ph": "X", "cat": "fee", "dur": 86.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517439209.9, "ph": "X", "cat": "fee", "dur": 312.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517439207.7, "ph": "X", "cat": "fee", "dur": 314.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517439526.0, "ph": "X", "cat": "fee", "dur": 29.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517439524.7, "ph": "X", "cat": "fee", "dur": 31.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517439558.9, "ph": "X", "cat": "fee", "dur": 10.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517439569.6, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517439557.6, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517439581.5, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517439591.7, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517439597.8, "ph": "X", "cat": "fee", "dur": 33.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517439633.2, "ph": "X", "cat": "fee", "dur": 14046.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517439579.8, "ph": "X", "cat": "fee", "dur": 14100.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517453768.3, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517453788.2, "ph": "X", "cat": "fee", "dur": 50.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517453767.7, "ph": "X", "cat": "fee", "dur": 70.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517453841.6, "ph": "X", "cat": "fee", "dur": 328.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517453839.7, "ph": "X", "cat": "fee", "dur": 331.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517454173.8, "ph": "X", "cat": "fee", "dur": 25.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517454172.4, "ph": "X", "cat": "fee", "dur": 26.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517454202.3, "ph": "X", "cat": "fee", "dur": 11.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517454214.8, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517454201.0, "ph": "X", "cat": "fee", "dur": 20.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517454226.3, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517454234.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517454239.3, "ph": "X", "cat": "fee", "dur": 24.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517454265.5, "ph": "X", "cat": "fee", "dur": 19440.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517454225.3, "ph": "X", "cat": "fee", "dur": 19482.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517473858.8, "ph": "X", "cat": "fee", "dur": 28.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517473887.9, "ph": "X", "cat": "fee", "dur": 63.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517473857.8, "ph": "X", "cat": "fee", "dur": 94.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517473957.0, "ph": "X", "cat": "fee", "dur": 856.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517473954.3, "ph": "X", "cat": "fee", "dur": 860.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517474818.9, "ph": "X", "cat": "fee", "dur": 28.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517474817.1, "ph": "X", "cat": "fee", "dur": 30.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517474850.4, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517474861.1, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517474849.0, "ph": "X", "cat": "fee", "dur": 16.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517474871.2, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517474880.2, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517474885.8, "ph": "X", "cat": "fee", "dur": 24.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517474912.7, "ph": "X", "cat": "fee", "dur": 26408.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517474870.0, "ph": "X", "cat": "fee", "dur": 26451.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517501432.5, "ph": "X", "cat": "fee", "dur": 25.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517501458.6, "ph": "X", "cat": "fee", "dur": 57.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517501431.6, "ph": "X", "cat": "fee", "dur": 85.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517501519.8, "ph": "X", "cat": "fee", "dur": 687.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517501517.9, "ph": "X", "cat": "fee", "dur": 689.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517502210.7, "ph": "X", "cat": "fee", "dur": 41.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517502209.6, "ph": "X", "cat": "fee", "dur": 42.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517502254.8, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517502264.5, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517502253.6, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517502271.5, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517502277.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517502283.0, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517502305.5, "ph": "X", "cat": "fee", "dur": 14569.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517502270.6, "ph": "X", "cat": "fee", "dur": 14606.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517517024.9, "ph": "X", "cat": "fee", "dur": 29.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517517055.9, "ph": "X", "cat": "fee", "dur": 74.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517517023.9, "ph": "X", "cat": "fee", "dur": 106.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517517133.6, "ph": "X", "cat": "fee", "dur": 246.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517517131.4, "ph": "X", "cat": "fee", "dur": 249.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517517384.8, "ph": "X", "cat": "fee", "dur": 27.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517517383.7, "ph": "X", "cat": "fee", "dur": 28.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517517414.9, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517517425.4, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517517413.9, "ph": "X", "cat": "fee", "dur": 15.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517517434.0, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517517441.5, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517517447.1, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517517471.1, "ph": "X", "cat": "fee", "dur": 18796.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517517432.9, "ph": "X", "cat": "fee", "dur": 18836.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517536360.6, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517536381.2, "ph": "X", "cat": "fee", "dur": 50.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517536360.0, "ph": "X", "cat": "fee", "dur": 71.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517536434.7, "ph": "X", "cat": "fee", "dur": 318.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517536432.6, "ph": "X", "cat": "fee", "dur": 321.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517536757.5, "ph": "X", "cat": "fee", "dur": 24.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517536756.3, "ph": "X", "cat": "fee", "dur": 25.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517536784.4, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517536794.5, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517536783.4, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517536801.7, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517536808.4, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517536813.3, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517536835.3, "ph": "X", "cat": "fee", "dur": 18965.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517536800.8, "ph": "X", "cat": "fee", "dur": 19001.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517555970.0, "ph": "X", "cat": "fee", "dur": 35.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517556006.5, "ph": "X", "cat": "fee", "dur": 94.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517555968.9, "ph": "X", "cat": "fee", "dur": 132.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517556104.5, "ph": "X", "cat": "fee", "dur": 357.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517556102.3, "ph": "X", "cat": "fee", "dur": 361.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517556467.7, "ph": "X", "cat": "fee", "dur": 31.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517556465.7, "ph": "X", "cat": "fee", "dur": 33.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517556502.5, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517556512.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517556501.2, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517556523.3, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517556532.7, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517556538.6, "ph": "X", "cat": "fee", "dur": 29.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517556569.8, "ph": "X", "cat": "fee", "dur": 23775.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517556522.0, "ph": "X", "cat": "fee", "dur": 23824.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517580461.6, "ph": "X", "cat": "fee", "dur": 26.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517580489.5, "ph": "X", "cat": "fee", "dur": 55.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517580460.8, "ph": "X", "cat": "fee", "dur": 84.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517580548.1, "ph": "X", "cat": "fee", "dur": 86.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517580546.0, "ph": "X", "cat": "fee", "dur": 89.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517580639.8, "ph": "X", "cat": "fee", "dur": 32.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517580638.7, "ph": "X", "cat": "fee", "dur": 33.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517580674.5, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517580684.0, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517580673.6, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517580691.3, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517580698.0, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517580703.7, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517580726.2, "ph": "X", "cat": "fee", "dur": 19293.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517580690.2, "ph": "X", "cat": "fee", "dur": 19330.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517600105.7, "ph": "X", "cat": "fee", "dur": 21.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517600128.2, "ph": "X", "cat": "fee", "dur": 54.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517600105.0, "ph": "X", "cat": "fee", "dur": 77.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517600185.2, "ph": "X", "cat": "fee", "dur": 72.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517600183.3, "ph": "X", "cat": "fee", "dur": 75.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517600265.8, "ph": "X", "cat": "fee", "dur": 35.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517600264.6, "ph": "X", "cat": "fee", "dur": 36.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517600303.0, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517600312.2, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517600302.0, "ph": "X", "cat": "fee", "dur": 12.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517600318.3, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517600325.0, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517600330.1, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517600352.2, "ph": "X", "cat": "fee", "dur": 13399.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517600317.3, "ph": "X", "cat": "fee", "dur": 13435.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517613838.8, "ph": "X", "cat": "fee", "dur": 18.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517613858.2, "ph": "X", "cat": "fee", "dur": 50.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517613837.9, "ph": "X", "cat": "fee", "dur": 70.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517613911.5, "ph": "X", "cat": "fee", "dur": 347.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517613909.6, "ph": "X", "cat": "fee", "dur": 349.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517614263.0, "ph": "X", "cat": "fee", "dur": 24.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517614261.9, "ph": "X", "cat": "fee", "dur": 25.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517614289.9, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517614299.6, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517614288.8, "ph": "X", "cat": "fee", "dur": 14.02, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517614306.3, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517614312.7, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517614317.6, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517614339.3, "ph": "X", "cat": "fee", "dur": 71431.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517614305.4, "ph": "X", "cat": "fee", "dur": 71466.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517685870.5, "ph": "X", "cat": "fee", "dur": 20.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517685892.1, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517685869.9, "ph": "X", "cat": "fee", "dur": 74.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517685947.4, "ph": "X", "cat": "fee", "dur": 81.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517685945.2, "ph": "X", "cat": "fee", "dur": 84.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517686032.6, "ph": "X", "cat": "fee", "dur": 31.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517686031.4, "ph": "X", "cat": "fee", "dur": 32.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517686066.4, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517686076.3, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517686065.5, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517686083.2, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517686089.2, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517686093.7, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517686115.0, "ph": "X", "cat": "fee", "dur": 36908.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517686082.2, "ph": "X", "cat": "fee", "dur": 36942.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517723183.5, "ph": "X", "cat": "fee", "dur": 31.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517723216.3, "ph": "X", "cat": "fee", "dur": 85.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517723182.7, "ph": "X", "cat": "fee", "dur": 118.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517723304.9, "ph": "X", "cat": "fee", "dur": 1101.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517723302.8, "ph": "X", "cat": "fee", "dur": 1105.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517724415.8, "ph": "X", "cat": "fee", "dur": 59.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517724413.7, "ph": "X", "cat": "fee", "dur": 61.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517724477.8, "ph": "X", "cat": "fee", "dur": 11.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517724489.3, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517724476.8, "ph": "X", "cat": "fee", "dur": 20.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517724503.6, "ph": "X", "cat": "fee", "dur": 10.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517724515.3, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517724522.9, "ph": "X", "cat": "fee", "dur": 31.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517724557.1, "ph": "X", "cat": "fee", "dur": 52398.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517724502.4, "ph": "X", "cat": "fee", "dur": 52454.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517777067.0, "ph": "X", "cat": "fee", "dur": 22.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517777090.4, "ph": "X", "cat": "fee", "dur": 52.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517777066.4, "ph": "X", "cat": "fee", "dur": 76.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517777145.8, "ph": "X", "cat": "fee", "dur": 272.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517777144.1, "ph": "X", "cat": "fee", "dur": 274.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517777423.8, "ph": "X", "cat": "fee", "dur": 34.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517777422.6, "ph": "X", "cat": "fee", "dur": 36.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517777461.5, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517777470.7, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517777460.2, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517777477.8, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517777484.5, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517777489.0, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517777510.9, "ph": "X", "cat": "fee", "dur": 50098.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517777476.6, "ph": "X", "cat": "fee", "dur": 50134.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517827698.6, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517827718.4, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517827697.9, "ph": "X", "cat": "fee", "dur": 71.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517827772.4, "ph": "X", "cat": "fee", "dur": 419.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517827770.6, "ph": "X", "cat": "fee", "dur": 421.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517828195.5, "ph": "X", "cat": "fee", "dur": 27.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517828194.5, "ph": "X", "cat": "fee", "dur": 29.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517828225.7, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517828235.2, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517828224.7, "ph": "X", "cat": "fee", "dur": 13.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517828242.1, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517828248.5, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517828253.5, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517828274.7, "ph": "X", "cat": "fee", "dur": 81267.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517828241.1, "ph": "X", "cat": "fee", "dur": 81302.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517909682.5, "ph": "X", "cat": "fee", "dur": 30.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517909713.7, "ph": "X", "cat": "fee", "dur": 66.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517909681.6, "ph": "X", "cat": "fee", "dur": 98.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517909783.9, "ph": "X", "cat": "fee", "dur": 101.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517909781.2, "ph": "X", "cat": "fee", "dur": 104.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517909890.5, "ph": "X", "cat": "fee", "dur": 65.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517909889.3, "ph": "X", "cat": "fee", "dur": 67.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517909959.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517909969.1, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517909958.2, "ph": "X", "cat": "fee", "dur": 15.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517909977.3, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517909985.9, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517909991.2, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517910015.3, "ph": "X", "cat": "fee", "dur": 67624.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517909976.4, "ph": "X", "cat": "fee", "dur": 67665.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438517977785.7, "ph": "X", "cat": "fee", "dur": 35.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438517977822.6, "ph": "X", "cat": "fee", "dur": 95.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438517977783.9, "ph": "X", "cat": "fee", "dur": 134.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438517977922.1, "ph": "X", "cat": "fee", "dur": 1359.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517977919.9, "ph": "X", "cat": "fee", "dur": 1363.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438517979291.6, "ph": "X", "cat": "fee", "dur": 62.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517979289.0, "ph": "X", "cat": "fee", "dur": 65.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438517979358.0, "ph": "X", "cat": "fee", "dur": 12.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438517979370.5, "ph": "X", "cat": "fee", "dur": 8.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438517979356.2, "ph": "X", "cat": "fee", "dur": 23.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438517979385.1, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438517979396.1, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438517979403.9, "ph": "X", "cat": "fee", "dur": 40.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438517979447.1, "ph": "X", "cat": "fee", "dur": 71733.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438517979383.9, "ph": "X", "cat": "fee", "dur": 71797.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518051280.1, "ph": "X", "cat": "fee", "dur": 21.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518051302.8, "ph": "X", "cat": "fee", "dur": 52.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518051279.5, "ph": "X", "cat": "fee", "dur": 75.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518051358.5, "ph": "X", "cat": "fee", "dur": 272.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518051356.4, "ph": "X", "cat": "fee", "dur": 275.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518051634.9, "ph": "X", "cat": "fee", "dur": 43.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518051633.8, "ph": "X", "cat": "fee", "dur": 44.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518051681.2, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518051690.9, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518051680.2, "ph": "X", "cat": "fee", "dur": 13.92, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518051698.0, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518051704.3, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518051708.8, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518051730.5, "ph": "X", "cat": "fee", "dur": 147326.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518051697.0, "ph": "X", "cat": "fee", "dur": 147361.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518199179.9, "ph": "X", "cat": "fee", "dur": 31.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518199212.7, "ph": "X", "cat": "fee", "dur": 74.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518199179.2, "ph": "X", "cat": "fee", "dur": 108.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518199290.9, "ph": "X", "cat": "fee", "dur": 1229.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518199288.9, "ph": "X", "cat": "fee", "dur": 1231.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518200525.6, "ph": "X", "cat": "fee", "dur": 79.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518200523.6, "ph": "X", "cat": "fee", "dur": 81.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518200607.5, "ph": "X", "cat": "fee", "dur": 10.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518200618.5, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518200606.4, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518200628.3, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518200637.2, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518200643.3, "ph": "X", "cat": "fee", "dur": 26.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518200671.5, "ph": "X", "cat": "fee", "dur": 29281.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518200627.1, "ph": "X", "cat": "fee", "dur": 29327.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518230063.6, "ph": "X", "cat": "fee", "dur": 25.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518230090.6, "ph": "X", "cat": "fee", "dur": 57.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518230062.7, "ph": "X", "cat": "fee", "dur": 85.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518230151.5, "ph": "X", "cat": "fee", "dur": 471.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518230149.4, "ph": "X", "cat": "fee", "dur": 473.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518230627.4, "ph": "X", "cat": "fee", "dur": 18.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518230626.0, "ph": "X", "cat": "fee", "dur": 20.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518230649.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518230658.8, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518230647.9, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518230667.4, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518230675.1, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518230680.6, "ph": "X", "cat": "fee", "dur": 26.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518230709.0, "ph": "X", "cat": "fee", "dur": 31664.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518230666.1, "ph": "X", "cat": "fee", "dur": 31708.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518262469.2, "ph": "X", "cat": "fee", "dur": 17.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518262487.9, "ph": "X", "cat": "fee", "dur": 50.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518262468.5, "ph": "X", "cat": "fee", "dur": 70.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518262541.4, "ph": "X", "cat": "fee", "dur": 295.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518262539.6, "ph": "X", "cat": "fee", "dur": 298.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518262840.3, "ph": "X", "cat": "fee", "dur": 25.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518262839.3, "ph": "X", "cat": "fee", "dur": 26.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518262868.2, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518262877.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518262867.2, "ph": "X", "cat": "fee", "dur": 13.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518262884.5, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518262891.0, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518262895.4, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518262917.5, "ph": "X", "cat": "fee", "dur": 74640.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518262883.5, "ph": "X", "cat": "fee", "dur": 74675.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518337656.0, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518337676.7, "ph": "X", "cat": "fee", "dur": 52.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518337655.4, "ph": "X", "cat": "fee", "dur": 73.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518337731.5, "ph": "X", "cat": "fee", "dur": 700.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518337729.9, "ph": "X", "cat": "fee", "dur": 702.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518338436.3, "ph": "X", "cat": "fee", "dur": 59.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518338434.7, "ph": "X", "cat": "fee", "dur": 61.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518338498.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518338508.0, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518338497.2, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518338520.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518338530.1, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518338536.4, "ph": "X", "cat": "fee", "dur": 25.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518338564.2, "ph": "X", "cat": "fee", "dur": 109791.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518338518.6, "ph": "X", "cat": "fee", "dur": 109838.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518448450.5, "ph": "X", "cat": "fee", "dur": 19.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518448471.2, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518448449.7, "ph": "X", "cat": "fee", "dur": 73.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518448526.0, "ph": "X", "cat": "fee", "dur": 1465.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518448524.1, "ph": "X", "cat": "fee", "dur": 1468.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518449995.5, "ph": "X", "cat": "fee", "dur": 36.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518449994.5, "ph": "X", "cat": "fee", "dur": 37.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518450034.3, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518450044.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518450033.3, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518450051.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518450058.1, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518450062.8, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518450084.0, "ph": "X", "cat": "fee", "dur": 42464.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518450050.6, "ph": "X", "cat": "fee", "dur": 42499.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518492671.5, "ph": "X", "cat": "fee", "dur": 31.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518492703.5, "ph": "X", "cat": "fee", "dur": 71.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518492670.9, "ph": "X", "cat": "fee", "dur": 104.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518492779.5, "ph": "X", "cat": "fee", "dur": 504.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518492776.9, "ph": "X", "cat": "fee", "dur": 508.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518493292.3, "ph": "X", "cat": "fee", "dur": 42.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518493291.1, "ph": "X", "cat": "fee", "dur": 44.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518493337.9, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518493348.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518493336.9, "ph": "X", "cat": "fee", "dur": 15.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518493357.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518493364.7, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518493370.8, "ph": "X", "cat": "fee", "dur": 23.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518493396.7, "ph": "X", "cat": "fee", "dur": 72678.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518493355.7, "ph": "X", "cat": "fee", "dur": 72720.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518566170.7, "ph": "X", "cat": "fee", "dur": 18.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518566189.8, "ph": "X", "cat": "fee", "dur": 49.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518566169.9, "ph": "X", "cat": "fee", "dur": 69.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518566242.7, "ph": "X", "cat": "fee", "dur": 2316.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518566240.9, "ph": "X", "cat": "fee", "dur": 2318.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518568563.7, "ph": "X", "cat": "fee", "dur": 41.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518568562.4, "ph": "X", "cat": "fee", "dur": 43.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518568607.9, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518568617.7, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518568606.6, "ph": "X", "cat": "fee", "dur": 14.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518568625.5, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518568632.3, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518568637.3, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518568660.5, "ph": "X", "cat": "fee", "dur": 60090.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518568624.6, "ph": "X", "cat": "fee", "dur": 60128.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518628863.2, "ph": "X", "cat": "fee", "dur": 26.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518628890.7, "ph": "X", "cat": "fee", "dur": 62.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518628862.2, "ph": "X", "cat": "fee", "dur": 91.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518628956.9, "ph": "X", "cat": "fee", "dur": 612.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518628955.0, "ph": "X", "cat": "fee", "dur": 615.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518629575.4, "ph": "X", "cat": "fee", "dur": 65.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518629574.0, "ph": "X", "cat": "fee", "dur": 67.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518629644.1, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518629654.4, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518629642.7, "ph": "X", "cat": "fee", "dur": 16.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518629663.7, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518629672.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518629678.9, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518629706.2, "ph": "X", "cat": "fee", "dur": 51073.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518629662.6, "ph": "X", "cat": "fee", "dur": 51118.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518680881.1, "ph": "X", "cat": "fee", "dur": 21.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518680903.1, "ph": "X", "cat": "fee", "dur": 51.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518680880.4, "ph": "X", "cat": "fee", "dur": 74.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518680957.7, "ph": "X", "cat": "fee", "dur": 78.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518680955.9, "ph": "X", "cat": "fee", "dur": 80.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518681040.0, "ph": "X", "cat": "fee", "dur": 74.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518681039.1, "ph": "X", "cat": "fee", "dur": 75.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518681117.4, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518681127.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518681116.4, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518681133.9, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518681139.9, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518681144.6, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518681168.3, "ph": "X", "cat": "fee", "dur": 60636.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518681132.9, "ph": "X", "cat": "fee", "dur": 60673.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518741898.2, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518741918.5, "ph": "X", "cat": "fee", "dur": 50.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518741897.5, "ph": "X", "cat": "fee", "dur": 71.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518741972.1, "ph": "X", "cat": "fee", "dur": 590.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518741970.1, "ph": "X", "cat": "fee", "dur": 592.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518742566.1, "ph": "X", "cat": "fee", "dur": 36.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518742564.9, "ph": "X", "cat": "fee", "dur": 38.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518742606.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518742615.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518742604.5, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518742622.5, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518742629.0, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518742633.4, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518742654.9, "ph": "X", "cat": "fee", "dur": 25443.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518742621.5, "ph": "X", "cat": "fee", "dur": 25478.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518768193.2, "ph": "X", "cat": "fee", "dur": 21.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518768215.6, "ph": "X", "cat": "fee", "dur": 52.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518768192.5, "ph": "X", "cat": "fee", "dur": 75.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518768273.1, "ph": "X", "cat": "fee", "dur": 879.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518768270.0, "ph": "X", "cat": "fee", "dur": 883.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518769157.3, "ph": "X", "cat": "fee", "dur": 26.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518769156.2, "ph": "X", "cat": "fee", "dur": 27.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518769186.9, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518769196.8, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518769185.6, "ph": "X", "cat": "fee", "dur": 15.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518769204.7, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518769212.0, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518769217.3, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518769241.2, "ph": "X", "cat": "fee", "dur": 48869.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518769203.6, "ph": "X", "cat": "fee", "dur": 48908.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518818223.9, "ph": "X", "cat": "fee", "dur": 25.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518818250.8, "ph": "X", "cat": "fee", "dur": 63.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518818223.3, "ph": "X", "cat": "fee", "dur": 91.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518818317.8, "ph": "X", "cat": "fee", "dur": 1622.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518818315.5, "ph": "X", "cat": "fee", "dur": 1626.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518819949.3, "ph": "X", "cat": "fee", "dur": 84.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518819946.3, "ph": "X", "cat": "fee", "dur": 87.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518820036.6, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518820047.4, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518820035.7, "ph": "X", "cat": "fee", "dur": 18.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518820060.3, "ph": "X", "cat": "fee", "dur": 10.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518820071.5, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518820078.8, "ph": "X", "cat": "fee", "dur": 33.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518820114.6, "ph": "X", "cat": "fee", "dur": 46939.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518820059.1, "ph": "X", "cat": "fee", "dur": 46995.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518867153.6, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518867174.2, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518867153.0, "ph": "X", "cat": "fee", "dur": 73.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518867229.0, "ph": "X", "cat": "fee", "dur": 76.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518867227.1, "ph": "X", "cat": "fee", "dur": 78.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518867309.1, "ph": "X", "cat": "fee", "dur": 63.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518867308.2, "ph": "X", "cat": "fee", "dur": 64.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518867374.6, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518867384.2, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518867373.7, "ph": "X", "cat": "fee", "dur": 13.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518867391.2, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518867397.1, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518867401.9, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518867424.1, "ph": "X", "cat": "fee", "dur": 29406.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518867390.2, "ph": "X", "cat": "fee", "dur": 29441.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518896943.6, "ph": "X", "cat": "fee", "dur": 24.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518896968.9, "ph": "X", "cat": "fee", "dur": 56.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518896942.7, "ph": "X", "cat": "fee", "dur": 82.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518897028.3, "ph": "X", "cat": "fee", "dur": 342.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518897026.1, "ph": "X", "cat": "fee", "dur": 345.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518897375.2, "ph": "X", "cat": "fee", "dur": 16.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518897374.1, "ph": "X", "cat": "fee", "dur": 17.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518897394.3, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518897404.0, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518897393.2, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518897410.6, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518897417.0, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518897422.3, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518897445.2, "ph": "X", "cat": "fee", "dur": 30092.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518897409.6, "ph": "X", "cat": "fee", "dur": 30129.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518927648.9, "ph": "X", "cat": "fee", "dur": 22.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518927672.7, "ph": "X", "cat": "fee", "dur": 54.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518927648.3, "ph": "X", "cat": "fee", "dur": 79.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518927730.4, "ph": "X", "cat": "fee", "dur": 309.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518927728.5, "ph": "X", "cat": "fee", "dur": 311.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518928043.5, "ph": "X", "cat": "fee", "dur": 39.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518928042.4, "ph": "X", "cat": "fee", "dur": 40.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518928087.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518928096.8, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518928085.9, "ph": "X", "cat": "fee", "dur": 14.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518928105.3, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518928112.6, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518928118.0, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518928140.0, "ph": "X", "cat": "fee", "dur": 61195.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518928104.2, "ph": "X", "cat": "fee", "dur": 61232.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438518989464.5, "ph": "X", "cat": "fee", "dur": 29.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438518989495.3, "ph": "X", "cat": "fee", "dur": 73.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438518989463.4, "ph": "X", "cat": "fee", "dur": 105.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438518989572.2, "ph": "X", "cat": "fee", "dur": 98.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518989570.2, "ph": "X", "cat": "fee", "dur": 101.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438518989676.5, "ph": "X", "cat": "fee", "dur": 38.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518989675.3, "ph": "X", "cat": "fee", "dur": 39.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438518989718.2, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438518989728.3, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438518989716.9, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438518989737.1, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438518989746.0, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438518989752.2, "ph": "X", "cat": "fee", "dur": 23.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438518989777.1, "ph": "X", "cat": "fee", "dur": 47395.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438518989736.1, "ph": "X", "cat": "fee", "dur": 47437.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519037295.6, "ph": "X", "cat": "fee", "dur": 29.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519037326.5, "ph": "X", "cat": "fee", "dur": 76.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519037294.4, "ph": "X", "cat": "fee", "dur": 108.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519037406.6, "ph": "X", "cat": "fee", "dur": 951.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519037404.1, "ph": "X", "cat": "fee", "dur": 954.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519038362.3, "ph": "X", "cat": "fee", "dur": 31.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519038360.9, "ph": "X", "cat": "fee", "dur": 32.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519038396.3, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519038406.1, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519038395.1, "ph": "X", "cat": "fee", "dur": 15.32, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519038415.0, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519038422.8, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519038428.6, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519038452.6, "ph": "X", "cat": "fee", "dur": 37489.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519038414.0, "ph": "X", "cat": "fee", "dur": 37529.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519076039.8, "ph": "X", "cat": "fee", "dur": 20.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519076061.7, "ph": "X", "cat": "fee", "dur": 51.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519076039.0, "ph": "X", "cat": "fee", "dur": 73.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519076116.1, "ph": "X", "cat": "fee", "dur": 947.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519076113.9, "ph": "X", "cat": "fee", "dur": 949.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519077067.1, "ph": "X", "cat": "fee", "dur": 27.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519077066.0, "ph": "X", "cat": "fee", "dur": 29.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519077097.6, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519077107.0, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519077096.6, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519077114.6, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519077121.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519077126.4, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519077149.1, "ph": "X", "cat": "fee", "dur": 57879.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519077113.4, "ph": "X", "cat": "fee", "dur": 57916.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519135120.1, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519135140.7, "ph": "X", "cat": "fee", "dur": 50.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519135119.5, "ph": "X", "cat": "fee", "dur": 72.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519135194.1, "ph": "X", "cat": "fee", "dur": 398.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519135192.4, "ph": "X", "cat": "fee", "dur": 400.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519135596.4, "ph": "X", "cat": "fee", "dur": 23.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519135594.9, "ph": "X", "cat": "fee", "dur": 24.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519135622.1, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519135631.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519135621.1, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519135638.8, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519135645.2, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519135649.8, "ph": "X", "cat": "fee", "dur": 26.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519135677.7, "ph": "X", "cat": "fee", "dur": 38346.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519135637.8, "ph": "X", "cat": "fee", "dur": 38387.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519174119.6, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519174140.4, "ph": "X", "cat": "fee", "dur": 51.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519174118.9, "ph": "X", "cat": "fee", "dur": 73.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519174195.2, "ph": "X", "cat": "fee", "dur": 512.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519174193.4, "ph": "X", "cat": "fee", "dur": 514.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519174710.6, "ph": "X", "cat": "fee", "dur": 28.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519174709.6, "ph": "X", "cat": "fee", "dur": 29.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519174742.1, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519174751.9, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519174740.8, "ph": "X", "cat": "fee", "dur": 15.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519174759.8, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519174766.9, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519174772.2, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519174795.4, "ph": "X", "cat": "fee", "dur": 62782.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519174758.8, "ph": "X", "cat": "fee", "dur": 62820.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519237672.5, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519237692.8, "ph": "X", "cat": "fee", "dur": 50.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519237671.7, "ph": "X", "cat": "fee", "dur": 71.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519237746.1, "ph": "X", "cat": "fee", "dur": 1117.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519237744.3, "ph": "X", "cat": "fee", "dur": 1119.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519238867.6, "ph": "X", "cat": "fee", "dur": 44.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519238866.3, "ph": "X", "cat": "fee", "dur": 46.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519238914.7, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519238924.2, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519238913.7, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519238931.8, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519238938.3, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519238943.1, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519238964.5, "ph": "X", "cat": "fee", "dur": 14419.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519238930.7, "ph": "X", "cat": "fee", "dur": 14454.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519253471.4, "ph": "X", "cat": "fee", "dur": 18.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519253490.9, "ph": "X", "cat": "fee", "dur": 51.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519253470.7, "ph": "X", "cat": "fee", "dur": 71.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519253545.2, "ph": "X", "cat": "fee", "dur": 660.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519253543.6, "ph": "X", "cat": "fee", "dur": 662.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519254209.8, "ph": "X", "cat": "fee", "dur": 15.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519254208.8, "ph": "X", "cat": "fee", "dur": 16.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519254227.6, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519254237.0, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519254226.6, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519254243.8, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519254250.2, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519254255.2, "ph": "X", "cat": "fee", "dur": 20.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519254277.4, "ph": "X", "cat": "fee", "dur": 46976.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519254242.8, "ph": "X", "cat": "fee", "dur": 47013.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519301386.1, "ph": "X", "cat": "fee", "dur": 30.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519301417.1, "ph": "X", "cat": "fee", "dur": 66.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519301385.3, "ph": "X", "cat": "fee", "dur": 98.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519301487.2, "ph": "X", "cat": "fee", "dur": 95.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519301485.2, "ph": "X", "cat": "fee", "dur": 97.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519301585.4, "ph": "X", "cat": "fee", "dur": 64.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519301584.2, "ph": "X", "cat": "fee", "dur": 66.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519301652.4, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519301662.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519301651.5, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519301668.8, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519301675.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519301680.3, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519301702.5, "ph": "X", "cat": "fee", "dur": 20547.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519301667.8, "ph": "X", "cat": "fee", "dur": 20583.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519322364.0, "ph": "X", "cat": "fee", "dur": 26.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519322392.4, "ph": "X", "cat": "fee", "dur": 100.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519322363.0, "ph": "X", "cat": "fee", "dur": 130.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519322496.9, "ph": "X", "cat": "fee", "dur": 684.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519322494.4, "ph": "X", "cat": "fee", "dur": 687.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519323191.7, "ph": "X", "cat": "fee", "dur": 38.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519323188.8, "ph": "X", "cat": "fee", "dur": 41.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519323233.8, "ph": "X", "cat": "fee", "dur": 11.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519323258.6, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519323232.8, "ph": "X", "cat": "fee", "dur": 33.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519323272.8, "ph": "X", "cat": "fee", "dur": 10.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519323284.3, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519323292.9, "ph": "X", "cat": "fee", "dur": 32.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519323327.0, "ph": "X", "cat": "fee", "dur": 29911.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519323271.3, "ph": "X", "cat": "fee", "dur": 29969.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519353331.0, "ph": "X", "cat": "fee", "dur": 19.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519353351.8, "ph": "X", "cat": "fee", "dur": 50.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519353330.2, "ph": "X", "cat": "fee", "dur": 72.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519353405.5, "ph": "X", "cat": "fee", "dur": 268.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519353403.4, "ph": "X", "cat": "fee", "dur": 271.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519353677.8, "ph": "X", "cat": "fee", "dur": 19.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519353676.7, "ph": "X", "cat": "fee", "dur": 20.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519353699.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519353709.8, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519353698.7, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519353716.4, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519353722.8, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519353727.9, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519353749.7, "ph": "X", "cat": "fee", "dur": 36685.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519353715.3, "ph": "X", "cat": "fee", "dur": 36722.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519390573.1, "ph": "X", "cat": "fee", "dur": 23.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519390598.0, "ph": "X", "cat": "fee", "dur": 64.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519390571.6, "ph": "X", "cat": "fee", "dur": 91.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519390666.0, "ph": "X", "cat": "fee", "dur": 282.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519390664.0, "ph": "X", "cat": "fee", "dur": 285.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519390953.3, "ph": "X", "cat": "fee", "dur": 36.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519390951.7, "ph": "X", "cat": "fee", "dur": 38.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519390992.9, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519391002.8, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519390991.7, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519391011.6, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519391019.5, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519391025.1, "ph": "X", "cat": "fee", "dur": 27.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519391054.8, "ph": "X", "cat": "fee", "dur": 41169.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519391010.0, "ph": "X", "cat": "fee", "dur": 41216.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519432346.7, "ph": "X", "cat": "fee", "dur": 27.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519432375.3, "ph": "X", "cat": "fee", "dur": 65.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519432345.3, "ph": "X", "cat": "fee", "dur": 95.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519432444.2, "ph": "X", "cat": "fee", "dur": 264.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519432442.2, "ph": "X", "cat": "fee", "dur": 267.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519432712.6, "ph": "X", "cat": "fee", "dur": 60.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519432711.6, "ph": "X", "cat": "fee", "dur": 61.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519432775.4, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519432785.1, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519432774.2, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519432792.8, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519432799.7, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519432805.2, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519432828.6, "ph": "X", "cat": "fee", "dur": 28894.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519432791.7, "ph": "X", "cat": "fee", "dur": 28933.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519461835.5, "ph": "X", "cat": "fee", "dur": 23.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519461860.2, "ph": "X", "cat": "fee", "dur": 55.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519461834.7, "ph": "X", "cat": "fee", "dur": 81.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519461919.3, "ph": "X", "cat": "fee", "dur": 924.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519461917.4, "ph": "X", "cat": "fee", "dur": 927.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519462849.3, "ph": "X", "cat": "fee", "dur": 49.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519462847.3, "ph": "X", "cat": "fee", "dur": 51.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519462901.7, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519462912.2, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519462900.6, "ph": "X", "cat": "fee", "dur": 16.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519462922.1, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519462931.1, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519462937.4, "ph": "X", "cat": "fee", "dur": 26.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519462966.7, "ph": "X", "cat": "fee", "dur": 49092.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519462921.0, "ph": "X", "cat": "fee", "dur": 49140.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519512194.6, "ph": "X", "cat": "fee", "dur": 30.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519512226.3, "ph": "X", "cat": "fee", "dur": 68.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519512193.6, "ph": "X", "cat": "fee", "dur": 101.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519512298.6, "ph": "X", "cat": "fee", "dur": 94.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519512296.5, "ph": "X", "cat": "fee", "dur": 96.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519512398.2, "ph": "X", "cat": "fee", "dur": 38.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519512397.2, "ph": "X", "cat": "fee", "dur": 39.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519512439.0, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519512449.0, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519512438.2, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519512456.8, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519512464.0, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519512469.2, "ph": "X", "cat": "fee", "dur": 21.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519512492.7, "ph": "X", "cat": "fee", "dur": 62960.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519512455.8, "ph": "X", "cat": "fee", "dur": 62999.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519575710.0, "ph": "X", "cat": "fee", "dur": 84.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519575798.1, "ph": "X", "cat": "fee", "dur": 175.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519575707.0, "ph": "X", "cat": "fee", "dur": 266.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519575979.2, "ph": "X", "cat": "fee", "dur": 1469.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519575976.1, "ph": "X", "cat": "fee", "dur": 1474.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519577462.6, "ph": "X", "cat": "fee", "dur": 156.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519577458.4, "ph": "X", "cat": "fee", "dur": 161.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519577625.3, "ph": "X", "cat": "fee", "dur": 22.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519577648.5, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519577623.1, "ph": "X", "cat": "fee", "dur": 34.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519577667.6, "ph": "X", "cat": "fee", "dur": 13.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519577683.2, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519577692.8, "ph": "X", "cat": "fee", "dur": 42.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519577739.3, "ph": "X", "cat": "fee", "dur": 53425.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519577665.7, "ph": "X", "cat": "fee", "dur": 53500.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519631307.5, "ph": "X", "cat": "fee", "dur": 34.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519631343.3, "ph": "X", "cat": "fee", "dur": 69.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519631306.7, "ph": "X", "cat": "fee", "dur": 106.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519631415.6, "ph": "X", "cat": "fee", "dur": 420.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519631413.8, "ph": "X", "cat": "fee", "dur": 422.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519631840.1, "ph": "X", "cat": "fee", "dur": 52.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519631838.6, "ph": "X", "cat": "fee", "dur": 54.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519631896.3, "ph": "X", "cat": "fee", "dur": 10.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519631907.1, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519631894.8, "ph": "X", "cat": "fee", "dur": 16.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519631915.8, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519631923.6, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519631929.2, "ph": "X", "cat": "fee", "dur": 23.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519631954.6, "ph": "X", "cat": "fee", "dur": 68801.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519631914.6, "ph": "X", "cat": "fee", "dur": 68842.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519700855.6, "ph": "X", "cat": "fee", "dur": 20.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519700876.8, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519700854.8, "ph": "X", "cat": "fee", "dur": 72.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519700929.8, "ph": "X", "cat": "fee", "dur": 1016.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519700928.1, "ph": "X", "cat": "fee", "dur": 1018.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519701950.3, "ph": "X", "cat": "fee", "dur": 47.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519701949.1, "ph": "X", "cat": "fee", "dur": 48.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519702000.0, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519702009.4, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519701999.1, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519702016.9, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519702023.4, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519702028.4, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519702050.4, "ph": "X", "cat": "fee", "dur": 60178.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519702015.8, "ph": "X", "cat": "fee", "dur": 60214.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519762331.7, "ph": "X", "cat": "fee", "dur": 21.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519762354.4, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519762331.0, "ph": "X", "cat": "fee", "dur": 75.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519762409.1, "ph": "X", "cat": "fee", "dur": 77.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519762407.4, "ph": "X", "cat": "fee", "dur": 79.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519762490.3, "ph": "X", "cat": "fee", "dur": 52.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519762489.5, "ph": "X", "cat": "fee", "dur": 53.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519762544.8, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519762555.1, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519762543.9, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519762561.7, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519762568.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519762573.5, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519762595.3, "ph": "X", "cat": "fee", "dur": 52321.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519762560.8, "ph": "X", "cat": "fee", "dur": 52357.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519815018.6, "ph": "X", "cat": "fee", "dur": 23.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519815043.0, "ph": "X", "cat": "fee", "dur": 53.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519815017.4, "ph": "X", "cat": "fee", "dur": 79.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519815100.7, "ph": "X", "cat": "fee", "dur": 2584.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519815098.3, "ph": "X", "cat": "fee", "dur": 2588.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519817692.5, "ph": "X", "cat": "fee", "dur": 48.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519817690.0, "ph": "X", "cat": "fee", "dur": 51.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519817744.1, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519817754.2, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519817743.0, "ph": "X", "cat": "fee", "dur": 16.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519817764.8, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519817773.3, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519817779.8, "ph": "X", "cat": "fee", "dur": 25.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519817806.9, "ph": "X", "cat": "fee", "dur": 43992.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519817763.6, "ph": "X", "cat": "fee", "dur": 44037.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519861978.4, "ph": "X", "cat": "fee", "dur": 35.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519862015.5, "ph": "X", "cat": "fee", "dur": 77.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519861977.5, "ph": "X", "cat": "fee", "dur": 116.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519862097.2, "ph": "X", "cat": "fee", "dur": 89.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519862094.7, "ph": "X", "cat": "fee", "dur": 92.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519862191.3, "ph": "X", "cat": "fee", "dur": 67.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519862190.2, "ph": "X", "cat": "fee", "dur": 69.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519862261.6, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519862271.6, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519862260.5, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519862278.6, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519862286.1, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519862291.6, "ph": "X", "cat": "fee", "dur": 24.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519862317.6, "ph": "X", "cat": "fee", "dur": 64200.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519862277.5, "ph": "X", "cat": "fee", "dur": 64242.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519926708.0, "ph": "X", "cat": "fee", "dur": 38.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519926747.1, "ph": "X", "cat": "fee", "dur": 86.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519926706.8, "ph": "X", "cat": "fee", "dur": 127.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519926838.3, "ph": "X", "cat": "fee", "dur": 2860.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519926835.0, "ph": "X", "cat": "fee", "dur": 2869.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519929723.1, "ph": "X", "cat": "fee", "dur": 141.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519929717.5, "ph": "X", "cat": "fee", "dur": 147.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519929875.7, "ph": "X", "cat": "fee", "dur": 24.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519929901.5, "ph": "X", "cat": "fee", "dur": 14.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519929872.0, "ph": "X", "cat": "fee", "dur": 43.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519929929.2, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519929951.1, "ph": "X", "cat": "fee", "dur": 12.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519929964.8, "ph": "X", "cat": "fee", "dur": 59.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519930029.3, "ph": "X", "cat": "fee", "dur": 51534.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519929926.8, "ph": "X", "cat": "fee", "dur": 51637.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438519981661.4, "ph": "X", "cat": "fee", "dur": 19.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438519981682.1, "ph": "X", "cat": "fee", "dur": 56.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438519981660.6, "ph": "X", "cat": "fee", "dur": 78.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438519981742.0, "ph": "X", "cat": "fee", "dur": 71.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519981739.9, "ph": "X", "cat": "fee", "dur": 74.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438519981817.5, "ph": "X", "cat": "fee", "dur": 31.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519981816.6, "ph": "X", "cat": "fee", "dur": 32.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438519981851.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438519981861.5, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438519981850.4, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438519981868.2, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438519981874.2, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438519981878.9, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438519981900.2, "ph": "X", "cat": "fee", "dur": 33583.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438519981867.2, "ph": "X", "cat": "fee", "dur": 33618.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520015578.0, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520015597.9, "ph": "X", "cat": "fee", "dur": 51.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520015577.4, "ph": "X", "cat": "fee", "dur": 71.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520015651.9, "ph": "X", "cat": "fee", "dur": 766.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520015650.0, "ph": "X", "cat": "fee", "dur": 768.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520016422.1, "ph": "X", "cat": "fee", "dur": 26.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520016420.9, "ph": "X", "cat": "fee", "dur": 27.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520016451.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520016461.0, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520016449.9, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520016468.4, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520016475.2, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520016479.7, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520016502.2, "ph": "X", "cat": "fee", "dur": 31036.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520016467.3, "ph": "X", "cat": "fee", "dur": 31072.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520047632.4, "ph": "X", "cat": "fee", "dur": 18.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520047651.9, "ph": "X", "cat": "fee", "dur": 49.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520047631.7, "ph": "X", "cat": "fee", "dur": 69.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520047704.3, "ph": "X", "cat": "fee", "dur": 735.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520047702.4, "ph": "X", "cat": "fee", "dur": 737.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520048443.1, "ph": "X", "cat": "fee", "dur": 43.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520048441.8, "ph": "X", "cat": "fee", "dur": 45.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520048489.0, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520048498.5, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520048488.0, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520048505.9, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520048512.2, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520048517.2, "ph": "X", "cat": "fee", "dur": 26.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520048545.0, "ph": "X", "cat": "fee", "dur": 60649.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520048504.9, "ph": "X", "cat": "fee", "dur": 60690.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520109303.0, "ph": "X", "cat": "fee", "dur": 23.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520109327.4, "ph": "X", "cat": "fee", "dur": 52.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520109302.3, "ph": "X", "cat": "fee", "dur": 77.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520109383.2, "ph": "X", "cat": "fee", "dur": 78.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520109381.0, "ph": "X", "cat": "fee", "dur": 81.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520109465.9, "ph": "X", "cat": "fee", "dur": 96.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520109465.0, "ph": "X", "cat": "fee", "dur": 97.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520109565.5, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520109576.3, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520109564.1, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520109583.0, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520109589.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520109594.0, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520109615.6, "ph": "X", "cat": "fee", "dur": 69685.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520109582.0, "ph": "X", "cat": "fee", "dur": 69720.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520179401.5, "ph": "X", "cat": "fee", "dur": 21.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520179423.7, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520179400.7, "ph": "X", "cat": "fee", "dur": 73.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520179477.2, "ph": "X", "cat": "fee", "dur": 743.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520179474.9, "ph": "X", "cat": "fee", "dur": 746.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520180225.7, "ph": "X", "cat": "fee", "dur": 45.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520180224.4, "ph": "X", "cat": "fee", "dur": 47.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520180274.8, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520180285.3, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520180273.4, "ph": "X", "cat": "fee", "dur": 16.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520180295.7, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520180303.9, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520180309.6, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520180334.9, "ph": "X", "cat": "fee", "dur": 35173.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520180294.6, "ph": "X", "cat": "fee", "dur": 35214.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520215599.8, "ph": "X", "cat": "fee", "dur": 19.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520215620.4, "ph": "X", "cat": "fee", "dur": 50.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520215599.0, "ph": "X", "cat": "fee", "dur": 72.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520215673.8, "ph": "X", "cat": "fee", "dur": 1201.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520215672.0, "ph": "X", "cat": "fee", "dur": 1204.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520216879.9, "ph": "X", "cat": "fee", "dur": 29.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520216878.7, "ph": "X", "cat": "fee", "dur": 31.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520216912.0, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520216921.5, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520216911.1, "ph": "X", "cat": "fee", "dur": 13.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520216928.3, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520216935.0, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520216939.9, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520216961.1, "ph": "X", "cat": "fee", "dur": 59729.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520216927.3, "ph": "X", "cat": "fee", "dur": 59765.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520276804.2, "ph": "X", "cat": "fee", "dur": 24.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520276829.8, "ph": "X", "cat": "fee", "dur": 58.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520276803.5, "ph": "X", "cat": "fee", "dur": 85.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520276891.2, "ph": "X", "cat": "fee", "dur": 1250.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520276889.4, "ph": "X", "cat": "fee", "dur": 1253.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520278147.0, "ph": "X", "cat": "fee", "dur": 40.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520278145.4, "ph": "X", "cat": "fee", "dur": 42.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520278190.4, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520278200.8, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520278189.3, "ph": "X", "cat": "fee", "dur": 17.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520278214.2, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520278223.9, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520278229.4, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520278255.9, "ph": "X", "cat": "fee", "dur": 54733.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520278213.0, "ph": "X", "cat": "fee", "dur": 54778.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520333094.3, "ph": "X", "cat": "fee", "dur": 22.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520333117.7, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520333093.8, "ph": "X", "cat": "fee", "dur": 75.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520333172.5, "ph": "X", "cat": "fee", "dur": 678.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520333170.7, "ph": "X", "cat": "fee", "dur": 681.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520333855.0, "ph": "X", "cat": "fee", "dur": 57.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520333853.8, "ph": "X", "cat": "fee", "dur": 58.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520333914.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520333924.2, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520333913.7, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520333931.2, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520333937.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520333942.4, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520333964.4, "ph": "X", "cat": "fee", "dur": 15942.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520333930.2, "ph": "X", "cat": "fee", "dur": 15978.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520349998.8, "ph": "X", "cat": "fee", "dur": 18.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520350018.5, "ph": "X", "cat": "fee", "dur": 49.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520349998.0, "ph": "X", "cat": "fee", "dur": 70.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520350071.1, "ph": "X", "cat": "fee", "dur": 1644.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520350069.3, "ph": "X", "cat": "fee", "dur": 1646.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520351719.6, "ph": "X", "cat": "fee", "dur": 19.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520351718.0, "ph": "X", "cat": "fee", "dur": 20.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520351741.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520351751.0, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520351740.3, "ph": "X", "cat": "fee", "dur": 14.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520351758.8, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520351765.6, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520351770.8, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520351794.2, "ph": "X", "cat": "fee", "dur": 113810.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520351757.7, "ph": "X", "cat": "fee", "dur": 113847.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520465697.0, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520465717.6, "ph": "X", "cat": "fee", "dur": 51.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520465696.3, "ph": "X", "cat": "fee", "dur": 73.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520465772.4, "ph": "X", "cat": "fee", "dur": 95.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520465770.3, "ph": "X", "cat": "fee", "dur": 98.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520465871.9, "ph": "X", "cat": "fee", "dur": 83.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520465871.0, "ph": "X", "cat": "fee", "dur": 84.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520465957.4, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520465967.4, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520465956.5, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520465974.1, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520465980.5, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520465985.5, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520466007.0, "ph": "X", "cat": "fee", "dur": 48437.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520465973.2, "ph": "X", "cat": "fee", "dur": 48473.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520514537.9, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520514558.3, "ph": "X", "cat": "fee", "dur": 49.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520514537.3, "ph": "X", "cat": "fee", "dur": 70.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520514611.1, "ph": "X", "cat": "fee", "dur": 609.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520514609.1, "ph": "X", "cat": "fee", "dur": 611.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520515224.0, "ph": "X", "cat": "fee", "dur": 39.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520515222.9, "ph": "X", "cat": "fee", "dur": 41.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520515266.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520515276.2, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520515265.2, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520515283.3, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520515289.9, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520515294.6, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520515317.0, "ph": "X", "cat": "fee", "dur": 48916.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520515282.2, "ph": "X", "cat": "fee", "dur": 48953.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520564347.7, "ph": "X", "cat": "fee", "dur": 26.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520564375.0, "ph": "X", "cat": "fee", "dur": 64.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520564346.7, "ph": "X", "cat": "fee", "dur": 92.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520564442.6, "ph": "X", "cat": "fee", "dur": 654.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520564440.5, "ph": "X", "cat": "fee", "dur": 657.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520565103.8, "ph": "X", "cat": "fee", "dur": 34.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520565102.2, "ph": "X", "cat": "fee", "dur": 36.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520565141.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520565151.1, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520565140.1, "ph": "X", "cat": "fee", "dur": 16.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520565160.8, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520565169.0, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520565174.4, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520565201.1, "ph": "X", "cat": "fee", "dur": 48659.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520565159.8, "ph": "X", "cat": "fee", "dur": 48701.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520613960.1, "ph": "X", "cat": "fee", "dur": 20.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520613981.6, "ph": "X", "cat": "fee", "dur": 52.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520613959.4, "ph": "X", "cat": "fee", "dur": 75.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520614038.0, "ph": "X", "cat": "fee", "dur": 81.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520614035.8, "ph": "X", "cat": "fee", "dur": 84.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520614123.4, "ph": "X", "cat": "fee", "dur": 41.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520614122.3, "ph": "X", "cat": "fee", "dur": 42.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520614167.6, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520614177.8, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520614166.6, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520614184.3, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520614190.5, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520614196.0, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520614219.0, "ph": "X", "cat": "fee", "dur": 39975.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520614183.3, "ph": "X", "cat": "fee", "dur": 40013.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520654301.6, "ph": "X", "cat": "fee", "dur": 24.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520654327.3, "ph": "X", "cat": "fee", "dur": 59.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520654300.7, "ph": "X", "cat": "fee", "dur": 86.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520654389.5, "ph": "X", "cat": "fee", "dur": 476.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520654387.8, "ph": "X", "cat": "fee", "dur": 479.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520654871.4, "ph": "X", "cat": "fee", "dur": 37.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520654870.0, "ph": "X", "cat": "fee", "dur": 38.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520654911.0, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520654921.2, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520654910.1, "ph": "X", "cat": "fee", "dur": 15.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520654930.1, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520654937.6, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520654942.9, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520654969.7, "ph": "X", "cat": "fee", "dur": 32732.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520654929.0, "ph": "X", "cat": "fee", "dur": 32774.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520687821.5, "ph": "X", "cat": "fee", "dur": 29.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520687852.3, "ph": "X", "cat": "fee", "dur": 70.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520687820.2, "ph": "X", "cat": "fee", "dur": 102.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520687925.6, "ph": "X", "cat": "fee", "dur": 587.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520687923.8, "ph": "X", "cat": "fee", "dur": 590.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520688519.2, "ph": "X", "cat": "fee", "dur": 32.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520688517.7, "ph": "X", "cat": "fee", "dur": 33.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520688554.1, "ph": "X", "cat": "fee", "dur": 10.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520688564.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520688553.3, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520688575.6, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520688584.4, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520688590.4, "ph": "X", "cat": "fee", "dur": 24.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520688616.7, "ph": "X", "cat": "fee", "dur": 45937.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520688574.4, "ph": "X", "cat": "fee", "dur": 45980.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520734650.2, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520734670.4, "ph": "X", "cat": "fee", "dur": 48.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520734649.4, "ph": "X", "cat": "fee", "dur": 69.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520734721.9, "ph": "X", "cat": "fee", "dur": 639.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520734720.0, "ph": "X", "cat": "fee", "dur": 641.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520735364.4, "ph": "X", "cat": "fee", "dur": 38.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520735363.2, "ph": "X", "cat": "fee", "dur": 40.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520735406.2, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520735415.7, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520735405.1, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520735423.0, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520735429.3, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520735433.9, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520735455.8, "ph": "X", "cat": "fee", "dur": 93005.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520735422.0, "ph": "X", "cat": "fee", "dur": 93039.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520828552.1, "ph": "X", "cat": "fee", "dur": 19.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520828572.6, "ph": "X", "cat": "fee", "dur": 48.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520828551.4, "ph": "X", "cat": "fee", "dur": 70.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520828624.8, "ph": "X", "cat": "fee", "dur": 73.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520828622.7, "ph": "X", "cat": "fee", "dur": 76.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520828702.1, "ph": "X", "cat": "fee", "dur": 59.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520828701.2, "ph": "X", "cat": "fee", "dur": 60.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520828763.2, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520828773.0, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520828762.4, "ph": "X", "cat": "fee", "dur": 13.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520828779.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520828786.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520828790.8, "ph": "X", "cat": "fee", "dur": 19.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520828811.6, "ph": "X", "cat": "fee", "dur": 45656.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520828778.3, "ph": "X", "cat": "fee", "dur": 45691.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520874576.2, "ph": "X", "cat": "fee", "dur": 23.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520874600.6, "ph": "X", "cat": "fee", "dur": 54.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520874575.4, "ph": "X", "cat": "fee", "dur": 80.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520874658.4, "ph": "X", "cat": "fee", "dur": 514.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520874656.7, "ph": "X", "cat": "fee", "dur": 517.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520875177.6, "ph": "X", "cat": "fee", "dur": 43.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520875176.5, "ph": "X", "cat": "fee", "dur": 45.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520875223.8, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520875233.5, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520875222.8, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520875240.8, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520875246.9, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520875251.6, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520875273.9, "ph": "X", "cat": "fee", "dur": 35763.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520875239.5, "ph": "X", "cat": "fee", "dur": 35798.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520911133.1, "ph": "X", "cat": "fee", "dur": 20.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520911154.2, "ph": "X", "cat": "fee", "dur": 52.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520911132.4, "ph": "X", "cat": "fee", "dur": 74.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520911209.8, "ph": "X", "cat": "fee", "dur": 75.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520911207.7, "ph": "X", "cat": "fee", "dur": 77.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520911289.4, "ph": "X", "cat": "fee", "dur": 62.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520911288.5, "ph": "X", "cat": "fee", "dur": 64.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520911355.0, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520911365.5, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520911354.0, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520911372.8, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520911378.5, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520911383.4, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520911406.6, "ph": "X", "cat": "fee", "dur": 34758.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520911371.5, "ph": "X", "cat": "fee", "dur": 34794.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520946265.0, "ph": "X", "cat": "fee", "dur": 22.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520946288.3, "ph": "X", "cat": "fee", "dur": 49.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520946264.2, "ph": "X", "cat": "fee", "dur": 74.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520946341.6, "ph": "X", "cat": "fee", "dur": 419.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520946339.7, "ph": "X", "cat": "fee", "dur": 422.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520946765.3, "ph": "X", "cat": "fee", "dur": 47.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520946764.2, "ph": "X", "cat": "fee", "dur": 49.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520946815.6, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520946825.4, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520946814.6, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520946832.2, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520946838.1, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520946843.0, "ph": "X", "cat": "fee", "dur": 20.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520946864.8, "ph": "X", "cat": "fee", "dur": 30456.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520946830.9, "ph": "X", "cat": "fee", "dur": 30490.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438520977425.0, "ph": "X", "cat": "fee", "dur": 22.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438520977448.0, "ph": "X", "cat": "fee", "dur": 52.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438520977424.3, "ph": "X", "cat": "fee", "dur": 76.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438520977503.3, "ph": "X", "cat": "fee", "dur": 991.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520977501.5, "ph": "X", "cat": "fee", "dur": 994.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438520978503.5, "ph": "X", "cat": "fee", "dur": 50.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520978501.3, "ph": "X", "cat": "fee", "dur": 53.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438520978556.5, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438520978567.5, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438520978555.6, "ph": "X", "cat": "fee", "dur": 17.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438520978582.4, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438520978591.8, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438520978598.1, "ph": "X", "cat": "fee", "dur": 25.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438520978625.9, "ph": "X", "cat": "fee", "dur": 76648.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438520978581.2, "ph": "X", "cat": "fee", "dur": 76694.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521055389.1, "ph": "X", "cat": "fee", "dur": 30.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521055420.2, "ph": "X", "cat": "fee", "dur": 73.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521055388.0, "ph": "X", "cat": "fee", "dur": 106.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521055497.5, "ph": "X", "cat": "fee", "dur": 107.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521055495.2, "ph": "X", "cat": "fee", "dur": 110.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521055609.8, "ph": "X", "cat": "fee", "dur": 78.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521055608.5, "ph": "X", "cat": "fee", "dur": 80.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521055691.3, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521055701.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521055690.4, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521055710.2, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521055717.5, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521055722.6, "ph": "X", "cat": "fee", "dur": 22.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521055746.3, "ph": "X", "cat": "fee", "dur": 41929.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521055709.2, "ph": "X", "cat": "fee", "dur": 41967.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521097788.0, "ph": "X", "cat": "fee", "dur": 27.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521097816.4, "ph": "X", "cat": "fee", "dur": 67.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521097786.6, "ph": "X", "cat": "fee", "dur": 96.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521097886.7, "ph": "X", "cat": "fee", "dur": 734.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521097884.8, "ph": "X", "cat": "fee", "dur": 737.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521098626.2, "ph": "X", "cat": "fee", "dur": 50.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521098624.7, "ph": "X", "cat": "fee", "dur": 52.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521098680.2, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521098690.2, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521098679.1, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521098698.9, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521098706.3, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521098711.1, "ph": "X", "cat": "fee", "dur": 29.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521098742.2, "ph": "X", "cat": "fee", "dur": 36882.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521098697.7, "ph": "X", "cat": "fee", "dur": 36928.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521135793.9, "ph": "X", "cat": "fee", "dur": 43.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521135839.4, "ph": "X", "cat": "fee", "dur": 96.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521135792.1, "ph": "X", "cat": "fee", "dur": 143.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521135938.7, "ph": "X", "cat": "fee", "dur": 972.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521135936.8, "ph": "X", "cat": "fee", "dur": 974.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521136915.4, "ph": "X", "cat": "fee", "dur": 29.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521136914.4, "ph": "X", "cat": "fee", "dur": 30.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521136947.8, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521136958.0, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521136946.5, "ph": "X", "cat": "fee", "dur": 14.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521136965.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521136972.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521136977.2, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521137000.5, "ph": "X", "cat": "fee", "dur": 48420.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521136964.2, "ph": "X", "cat": "fee", "dur": 48457.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521185542.0, "ph": "X", "cat": "fee", "dur": 27.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521185570.7, "ph": "X", "cat": "fee", "dur": 65.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521185541.2, "ph": "X", "cat": "fee", "dur": 95.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521185640.3, "ph": "X", "cat": "fee", "dur": 199.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521185638.3, "ph": "X", "cat": "fee", "dur": 202.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521185844.0, "ph": "X", "cat": "fee", "dur": 44.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521185842.8, "ph": "X", "cat": "fee", "dur": 45.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521185891.2, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521185900.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521185890.2, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521185908.7, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521185915.7, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521185921.2, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521185944.5, "ph": "X", "cat": "fee", "dur": 23871.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521185907.7, "ph": "X", "cat": "fee", "dur": 23910.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521210021.0, "ph": "X", "cat": "fee", "dur": 40.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521210062.6, "ph": "X", "cat": "fee", "dur": 107.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521210019.0, "ph": "X", "cat": "fee", "dur": 151.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521210173.4, "ph": "X", "cat": "fee", "dur": 1227.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521210171.4, "ph": "X", "cat": "fee", "dur": 1230.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521211407.2, "ph": "X", "cat": "fee", "dur": 36.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521211405.6, "ph": "X", "cat": "fee", "dur": 38.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521211446.7, "ph": "X", "cat": "fee", "dur": 10.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521211457.4, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521211445.7, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521211468.1, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521211476.4, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521211482.3, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521211509.2, "ph": "X", "cat": "fee", "dur": 56450.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521211466.8, "ph": "X", "cat": "fee", "dur": 56494.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521268063.0, "ph": "X", "cat": "fee", "dur": 21.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521268085.5, "ph": "X", "cat": "fee", "dur": 54.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521268062.3, "ph": "X", "cat": "fee", "dur": 77.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521268143.4, "ph": "X", "cat": "fee", "dur": 81.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521268141.3, "ph": "X", "cat": "fee", "dur": 83.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521268228.6, "ph": "X", "cat": "fee", "dur": 43.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521268227.6, "ph": "X", "cat": "fee", "dur": 44.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521268274.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521268284.0, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521268273.1, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521268290.8, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521268297.5, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521268302.8, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521268326.0, "ph": "X", "cat": "fee", "dur": 19066.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521268289.8, "ph": "X", "cat": "fee", "dur": 19103.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521287484.7, "ph": "X", "cat": "fee", "dur": 18.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521287504.0, "ph": "X", "cat": "fee", "dur": 50.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521287484.0, "ph": "X", "cat": "fee", "dur": 70.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521287557.3, "ph": "X", "cat": "fee", "dur": 958.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521287555.7, "ph": "X", "cat": "fee", "dur": 961.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521288522.6, "ph": "X", "cat": "fee", "dur": 41.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521288520.3, "ph": "X", "cat": "fee", "dur": 44.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521288567.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521288576.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521288565.9, "ph": "X", "cat": "fee", "dur": 15.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521288585.7, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521288594.0, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521288599.6, "ph": "X", "cat": "fee", "dur": 26.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521288628.1, "ph": "X", "cat": "fee", "dur": 21099.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521288584.7, "ph": "X", "cat": "fee", "dur": 21144.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521309854.5, "ph": "X", "cat": "fee", "dur": 31.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521309887.2, "ph": "X", "cat": "fee", "dur": 78.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521309853.6, "ph": "X", "cat": "fee", "dur": 112.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521309969.5, "ph": "X", "cat": "fee", "dur": 96.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521309967.1, "ph": "X", "cat": "fee", "dur": 99.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521310070.3, "ph": "X", "cat": "fee", "dur": 28.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521310069.0, "ph": "X", "cat": "fee", "dur": 30.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521310102.2, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521310112.4, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521310100.6, "ph": "X", "cat": "fee", "dur": 15.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521310120.5, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521310128.0, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521310133.2, "ph": "X", "cat": "fee", "dur": 22.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521310157.1, "ph": "X", "cat": "fee", "dur": 18761.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521310119.3, "ph": "X", "cat": "fee", "dur": 18800.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521329029.6, "ph": "X", "cat": "fee", "dur": 27.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521329057.7, "ph": "X", "cat": "fee", "dur": 65.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521329028.8, "ph": "X", "cat": "fee", "dur": 94.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521329126.7, "ph": "X", "cat": "fee", "dur": 417.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521329124.6, "ph": "X", "cat": "fee", "dur": 420.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521329548.4, "ph": "X", "cat": "fee", "dur": 25.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521329547.1, "ph": "X", "cat": "fee", "dur": 27.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521329576.5, "ph": "X", "cat": "fee", "dur": 10.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521329587.1, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521329575.7, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521329595.1, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521329603.1, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521329608.5, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521329632.5, "ph": "X", "cat": "fee", "dur": 51985.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521329593.9, "ph": "X", "cat": "fee", "dur": 52025.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521381712.0, "ph": "X", "cat": "fee", "dur": 20.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521381733.5, "ph": "X", "cat": "fee", "dur": 51.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521381711.4, "ph": "X", "cat": "fee", "dur": 73.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521381788.0, "ph": "X", "cat": "fee", "dur": 73.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521381785.8, "ph": "X", "cat": "fee", "dur": 75.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521381864.9, "ph": "X", "cat": "fee", "dur": 33.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521381863.6, "ph": "X", "cat": "fee", "dur": 34.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521381900.6, "ph": "X", "cat": "fee", "dur": 11.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521381912.7, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521381899.8, "ph": "X", "cat": "fee", "dur": 15.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521381919.1, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521381925.8, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521381930.8, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521381953.3, "ph": "X", "cat": "fee", "dur": 32475.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521381918.1, "ph": "X", "cat": "fee", "dur": 32511.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521414534.6, "ph": "X", "cat": "fee", "dur": 25.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521414560.9, "ph": "X", "cat": "fee", "dur": 52.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521414534.0, "ph": "X", "cat": "fee", "dur": 79.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521414616.1, "ph": "X", "cat": "fee", "dur": 1991.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521414614.1, "ph": "X", "cat": "fee", "dur": 1995.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521416617.2, "ph": "X", "cat": "fee", "dur": 61.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521416614.3, "ph": "X", "cat": "fee", "dur": 64.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521416681.3, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521416692.9, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521416680.3, "ph": "X", "cat": "fee", "dur": 19.12, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521416705.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521416715.0, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521416721.0, "ph": "X", "cat": "fee", "dur": 25.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521416748.9, "ph": "X", "cat": "fee", "dur": 61490.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521416703.9, "ph": "X", "cat": "fee", "dur": 61537.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521478342.8, "ph": "X", "cat": "fee", "dur": 19.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521478362.9, "ph": "X", "cat": "fee", "dur": 49.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521478342.1, "ph": "X", "cat": "fee", "dur": 70.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521478415.6, "ph": "X", "cat": "fee", "dur": 1264.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521478413.3, "ph": "X", "cat": "fee", "dur": 1267.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521479684.4, "ph": "X", "cat": "fee", "dur": 34.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521479683.2, "ph": "X", "cat": "fee", "dur": 36.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521479721.9, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521479731.9, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521479720.7, "ph": "X", "cat": "fee", "dur": 14.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521479739.3, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521479746.3, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521479750.9, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521479773.7, "ph": "X", "cat": "fee", "dur": 36721.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521479738.3, "ph": "X", "cat": "fee", "dur": 36757.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521516593.6, "ph": "X", "cat": "fee", "dur": 19.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521516613.8, "ph": "X", "cat": "fee", "dur": 50.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521516592.9, "ph": "X", "cat": "fee", "dur": 71.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521516668.0, "ph": "X", "cat": "fee", "dur": 79.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521516665.7, "ph": "X", "cat": "fee", "dur": 81.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521516756.9, "ph": "X", "cat": "fee", "dur": 40.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521516756.0, "ph": "X", "cat": "fee", "dur": 42.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521516800.4, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521516809.9, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521516799.4, "ph": "X", "cat": "fee", "dur": 13.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521516816.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521516823.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521516827.8, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521516849.5, "ph": "X", "cat": "fee", "dur": 31632.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521516815.8, "ph": "X", "cat": "fee", "dur": 31667.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521548594.6, "ph": "X", "cat": "fee", "dur": 25.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521548621.1, "ph": "X", "cat": "fee", "dur": 57.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521548593.8, "ph": "X", "cat": "fee", "dur": 85.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521548681.8, "ph": "X", "cat": "fee", "dur": 485.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521548679.9, "ph": "X", "cat": "fee", "dur": 487.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521549171.6, "ph": "X", "cat": "fee", "dur": 31.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521549170.3, "ph": "X", "cat": "fee", "dur": 33.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521549206.0, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521549215.9, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521549204.9, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521549223.6, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521549230.9, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521549236.4, "ph": "X", "cat": "fee", "dur": 21.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521549259.9, "ph": "X", "cat": "fee", "dur": 27691.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521549222.5, "ph": "X", "cat": "fee", "dur": 27730.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521577088.8, "ph": "X", "cat": "fee", "dur": 32.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521577122.1, "ph": "X", "cat": "fee", "dur": 75.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521577088.1, "ph": "X", "cat": "fee", "dur": 109.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521577201.4, "ph": "X", "cat": "fee", "dur": 608.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521577198.6, "ph": "X", "cat": "fee", "dur": 612.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521577815.4, "ph": "X", "cat": "fee", "dur": 24.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521577814.2, "ph": "X", "cat": "fee", "dur": 26.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521577843.5, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521577853.9, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521577842.2, "ph": "X", "cat": "fee", "dur": 16.02, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521577862.4, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521577869.9, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521577875.3, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521577898.7, "ph": "X", "cat": "fee", "dur": 27216.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521577861.3, "ph": "X", "cat": "fee", "dur": 27254.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521605212.1, "ph": "X", "cat": "fee", "dur": 19.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521605232.9, "ph": "X", "cat": "fee", "dur": 51.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521605211.4, "ph": "X", "cat": "fee", "dur": 73.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521605287.7, "ph": "X", "cat": "fee", "dur": 1976.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521605285.8, "ph": "X", "cat": "fee", "dur": 1979.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521607268.6, "ph": "X", "cat": "fee", "dur": 28.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521607267.4, "ph": "X", "cat": "fee", "dur": 29.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521607299.6, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521607309.4, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521607298.5, "ph": "X", "cat": "fee", "dur": 14.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521607317.3, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521607324.4, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521607329.4, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521607351.9, "ph": "X", "cat": "fee", "dur": 24119.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521607316.3, "ph": "X", "cat": "fee", "dur": 24156.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521631571.9, "ph": "X", "cat": "fee", "dur": 19.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521631592.4, "ph": "X", "cat": "fee", "dur": 52.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521631571.0, "ph": "X", "cat": "fee", "dur": 73.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521631661.2, "ph": "X", "cat": "fee", "dur": 577.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521631658.9, "ph": "X", "cat": "fee", "dur": 580.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521632242.7, "ph": "X", "cat": "fee", "dur": 26.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521632241.4, "ph": "X", "cat": "fee", "dur": 28.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521632271.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521632281.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521632270.7, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521632288.9, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521632295.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521632300.5, "ph": "X", "cat": "fee", "dur": 21.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521632323.3, "ph": "X", "cat": "fee", "dur": 11848.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521632287.9, "ph": "X", "cat": "fee", "dur": 11884.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521644274.2, "ph": "X", "cat": "fee", "dur": 20.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521644295.7, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521644273.4, "ph": "X", "cat": "fee", "dur": 73.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521644350.4, "ph": "X", "cat": "fee", "dur": 525.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521644348.2, "ph": "X", "cat": "fee", "dur": 528.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521644879.9, "ph": "X", "cat": "fee", "dur": 26.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521644878.8, "ph": "X", "cat": "fee", "dur": 27.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521644909.0, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521644918.7, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521644907.8, "ph": "X", "cat": "fee", "dur": 14.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521644925.6, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521644932.4, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521644937.4, "ph": "X", "cat": "fee", "dur": 21.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521644960.5, "ph": "X", "cat": "fee", "dur": 14342.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521644924.6, "ph": "X", "cat": "fee", "dur": 14379.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521659414.9, "ph": "X", "cat": "fee", "dur": 25.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521659441.9, "ph": "X", "cat": "fee", "dur": 64.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521659414.0, "ph": "X", "cat": "fee", "dur": 92.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521659511.4, "ph": "X", "cat": "fee", "dur": 427.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521659508.4, "ph": "X", "cat": "fee", "dur": 430.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521659942.8, "ph": "X", "cat": "fee", "dur": 25.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521659941.5, "ph": "X", "cat": "fee", "dur": 27.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521659971.1, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521659981.0, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521659970.1, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521659990.2, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521659999.2, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521660005.2, "ph": "X", "cat": "fee", "dur": 24.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521660031.1, "ph": "X", "cat": "fee", "dur": 41072.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521659989.1, "ph": "X", "cat": "fee", "dur": 41115.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521701209.0, "ph": "X", "cat": "fee", "dur": 22.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521701232.8, "ph": "X", "cat": "fee", "dur": 52.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521701208.2, "ph": "X", "cat": "fee", "dur": 77.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521701288.8, "ph": "X", "cat": "fee", "dur": 636.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521701286.7, "ph": "X", "cat": "fee", "dur": 639.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521701929.7, "ph": "X", "cat": "fee", "dur": 59.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521701928.3, "ph": "X", "cat": "fee", "dur": 61.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521701992.3, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521702001.9, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521701990.9, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521702009.4, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521702016.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521702020.8, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521702043.4, "ph": "X", "cat": "fee", "dur": 60258.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521702008.4, "ph": "X", "cat": "fee", "dur": 60294.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521762442.8, "ph": "X", "cat": "fee", "dur": 42.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521762487.4, "ph": "X", "cat": "fee", "dur": 79.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521762441.4, "ph": "X", "cat": "fee", "dur": 125.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521762570.5, "ph": "X", "cat": "fee", "dur": 534.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521762568.2, "ph": "X", "cat": "fee", "dur": 537.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521763111.6, "ph": "X", "cat": "fee", "dur": 41.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521763109.9, "ph": "X", "cat": "fee", "dur": 43.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521763155.6, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521763165.7, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521763154.7, "ph": "X", "cat": "fee", "dur": 18.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521763178.0, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521763186.7, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521763193.2, "ph": "X", "cat": "fee", "dur": 26.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521763221.8, "ph": "X", "cat": "fee", "dur": 94212.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521763177.0, "ph": "X", "cat": "fee", "dur": 94258.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521857544.4, "ph": "X", "cat": "fee", "dur": 24.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521857569.9, "ph": "X", "cat": "fee", "dur": 59.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521857543.6, "ph": "X", "cat": "fee", "dur": 86.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521857633.4, "ph": "X", "cat": "fee", "dur": 744.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521857631.3, "ph": "X", "cat": "fee", "dur": 747.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521858383.8, "ph": "X", "cat": "fee", "dur": 55.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521858382.0, "ph": "X", "cat": "fee", "dur": 57.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521858441.4, "ph": "X", "cat": "fee", "dur": 10.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521858452.8, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521858440.5, "ph": "X", "cat": "fee", "dur": 18.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521858464.7, "ph": "X", "cat": "fee", "dur": 9.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521858475.5, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521858482.9, "ph": "X", "cat": "fee", "dur": 37.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521858522.9, "ph": "X", "cat": "fee", "dur": 108668.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521858462.9, "ph": "X", "cat": "fee", "dur": 108729.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521967293.2, "ph": "X", "cat": "fee", "dur": 21.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521967315.5, "ph": "X", "cat": "fee", "dur": 53.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521967292.4, "ph": "X", "cat": "fee", "dur": 77.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521967372.6, "ph": "X", "cat": "fee", "dur": 854.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521967370.8, "ph": "X", "cat": "fee", "dur": 856.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521968231.3, "ph": "X", "cat": "fee", "dur": 54.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521968229.8, "ph": "X", "cat": "fee", "dur": 56.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521968288.6, "ph": "X", "cat": "fee", "dur": 12.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521968301.4, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521968287.4, "ph": "X", "cat": "fee", "dur": 20.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521968311.4, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521968318.4, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521968323.5, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521968347.2, "ph": "X", "cat": "fee", "dur": 30263.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521968310.3, "ph": "X", "cat": "fee", "dur": 30301.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438521998706.3, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438521998726.3, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438521998705.5, "ph": "X", "cat": "fee", "dur": 72.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438521998780.5, "ph": "X", "cat": "fee", "dur": 468.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521998778.7, "ph": "X", "cat": "fee", "dur": 470.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438521999253.5, "ph": "X", "cat": "fee", "dur": 31.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521999252.2, "ph": "X", "cat": "fee", "dur": 32.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438521999287.4, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438521999296.8, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438521999286.3, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438521999304.3, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438521999311.2, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438521999315.9, "ph": "X", "cat": "fee", "dur": 21.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438521999338.8, "ph": "X", "cat": "fee", "dur": 24871.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438521999303.3, "ph": "X", "cat": "fee", "dur": 24908.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522024330.6, "ph": "X", "cat": "fee", "dur": 31.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522024362.9, "ph": "X", "cat": "fee", "dur": 69.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522024329.6, "ph": "X", "cat": "fee", "dur": 103.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522024435.9, "ph": "X", "cat": "fee", "dur": 658.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522024433.8, "ph": "X", "cat": "fee", "dur": 661.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522025100.7, "ph": "X", "cat": "fee", "dur": 30.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522025098.8, "ph": "X", "cat": "fee", "dur": 32.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522025134.0, "ph": "X", "cat": "fee", "dur": 10.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522025145.0, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522025133.0, "ph": "X", "cat": "fee", "dur": 17.32, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522025155.9, "ph": "X", "cat": "fee", "dur": 8.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522025165.2, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522025172.0, "ph": "X", "cat": "fee", "dur": 23.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522025197.4, "ph": "X", "cat": "fee", "dur": 59050.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522025154.8, "ph": "X", "cat": "fee", "dur": 59094.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522084356.1, "ph": "X", "cat": "fee", "dur": 35.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522084392.0, "ph": "X", "cat": "fee", "dur": 70.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522084355.1, "ph": "X", "cat": "fee", "dur": 107.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522084465.5, "ph": "X", "cat": "fee", "dur": 701.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522084463.4, "ph": "X", "cat": "fee", "dur": 704.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522085171.9, "ph": "X", "cat": "fee", "dur": 31.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522085170.7, "ph": "X", "cat": "fee", "dur": 32.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522085205.6, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522085215.4, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522085204.8, "ph": "X", "cat": "fee", "dur": 14.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522085223.9, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522085231.6, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522085237.0, "ph": "X", "cat": "fee", "dur": 22.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522085261.6, "ph": "X", "cat": "fee", "dur": 35370.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522085222.9, "ph": "X", "cat": "fee", "dur": 35410.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522120766.9, "ph": "X", "cat": "fee", "dur": 42.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522120810.1, "ph": "X", "cat": "fee", "dur": 81.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522120765.3, "ph": "X", "cat": "fee", "dur": 126.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522120895.2, "ph": "X", "cat": "fee", "dur": 92.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522120893.0, "ph": "X", "cat": "fee", "dur": 95.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522120992.3, "ph": "X", "cat": "fee", "dur": 34.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522120991.4, "ph": "X", "cat": "fee", "dur": 35.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522121029.9, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522121039.9, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522121029.0, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522121048.2, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522121055.3, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522121061.1, "ph": "X", "cat": "fee", "dur": 22.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522121085.2, "ph": "X", "cat": "fee", "dur": 23380.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522121047.2, "ph": "X", "cat": "fee", "dur": 23419.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522144576.7, "ph": "X", "cat": "fee", "dur": 20.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522144598.4, "ph": "X", "cat": "fee", "dur": 54.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522144576.1, "ph": "X", "cat": "fee", "dur": 77.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522144656.1, "ph": "X", "cat": "fee", "dur": 335.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522144654.4, "ph": "X", "cat": "fee", "dur": 337.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522144995.6, "ph": "X", "cat": "fee", "dur": 45.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522144994.5, "ph": "X", "cat": "fee", "dur": 47.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522145043.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522145053.6, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522145042.7, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522145060.4, "ph": "X", "cat": "fee", "dur": 10.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522145071.9, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522145078.4, "ph": "X", "cat": "fee", "dur": 21.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522145101.6, "ph": "X", "cat": "fee", "dur": 53609.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522145059.4, "ph": "X", "cat": "fee", "dur": 53653.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522198834.3, "ph": "X", "cat": "fee", "dur": 26.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522198862.4, "ph": "X", "cat": "fee", "dur": 76.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522198833.4, "ph": "X", "cat": "fee", "dur": 105.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522198942.5, "ph": "X", "cat": "fee", "dur": 1005.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522198940.3, "ph": "X", "cat": "fee", "dur": 1008.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522199952.7, "ph": "X", "cat": "fee", "dur": 27.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522199951.2, "ph": "X", "cat": "fee", "dur": 28.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522199982.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522199992.5, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522199981.7, "ph": "X", "cat": "fee", "dur": 15.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522200001.7, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522200009.6, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522200015.1, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522200040.3, "ph": "X", "cat": "fee", "dur": 18472.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522200000.4, "ph": "X", "cat": "fee", "dur": 18513.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522218612.1, "ph": "X", "cat": "fee", "dur": 21.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522218634.4, "ph": "X", "cat": "fee", "dur": 50.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522218611.4, "ph": "X", "cat": "fee", "dur": 74.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522218688.7, "ph": "X", "cat": "fee", "dur": 75.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522218686.6, "ph": "X", "cat": "fee", "dur": 78.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522218767.8, "ph": "X", "cat": "fee", "dur": 43.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522218766.9, "ph": "X", "cat": "fee", "dur": 44.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522218812.9, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522218822.1, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522218812.2, "ph": "X", "cat": "fee", "dur": 12.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522218828.4, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522218835.0, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522218839.7, "ph": "X", "cat": "fee", "dur": 22.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522218864.2, "ph": "X", "cat": "fee", "dur": 29049.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522218827.4, "ph": "X", "cat": "fee", "dur": 29087.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522248015.4, "ph": "X", "cat": "fee", "dur": 23.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522248039.3, "ph": "X", "cat": "fee", "dur": 56.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522248014.7, "ph": "X", "cat": "fee", "dur": 81.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522248099.2, "ph": "X", "cat": "fee", "dur": 516.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522248097.1, "ph": "X", "cat": "fee", "dur": 519.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522248622.1, "ph": "X", "cat": "fee", "dur": 32.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522248620.8, "ph": "X", "cat": "fee", "dur": 34.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522248657.4, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522248667.3, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522248656.4, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522248677.2, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522248685.6, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522248692.0, "ph": "X", "cat": "fee", "dur": 24.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522248717.9, "ph": "X", "cat": "fee", "dur": 31836.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522248676.1, "ph": "X", "cat": "fee", "dur": 31880.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522280657.8, "ph": "X", "cat": "fee", "dur": 20.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522280679.2, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522280657.1, "ph": "X", "cat": "fee", "dur": 73.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522280733.6, "ph": "X", "cat": "fee", "dur": 559.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522280731.6, "ph": "X", "cat": "fee", "dur": 561.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522281296.8, "ph": "X", "cat": "fee", "dur": 29.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522281295.2, "ph": "X", "cat": "fee", "dur": 31.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522281329.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522281339.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522281327.6, "ph": "X", "cat": "fee", "dur": 14.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522281346.7, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522281353.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522281358.1, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522281381.8, "ph": "X", "cat": "fee", "dur": 29029.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522281345.6, "ph": "X", "cat": "fee", "dur": 29067.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522310570.3, "ph": "X", "cat": "fee", "dur": 35.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522310607.5, "ph": "X", "cat": "fee", "dur": 65.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522310569.4, "ph": "X", "cat": "fee", "dur": 103.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522310677.5, "ph": "X", "cat": "fee", "dur": 99.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522310674.4, "ph": "X", "cat": "fee", "dur": 102.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522310781.2, "ph": "X", "cat": "fee", "dur": 32.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522310779.6, "ph": "X", "cat": "fee", "dur": 34.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522310817.4, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522310827.8, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522310815.8, "ph": "X", "cat": "fee", "dur": 15.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522310835.9, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522310844.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522310851.2, "ph": "X", "cat": "fee", "dur": 25.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522310877.9, "ph": "X", "cat": "fee", "dur": 25229.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522310834.8, "ph": "X", "cat": "fee", "dur": 25273.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522336209.3, "ph": "X", "cat": "fee", "dur": 21.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522336231.9, "ph": "X", "cat": "fee", "dur": 54.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522336208.1, "ph": "X", "cat": "fee", "dur": 78.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522336289.5, "ph": "X", "cat": "fee", "dur": 569.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522336287.6, "ph": "X", "cat": "fee", "dur": 571.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522336862.7, "ph": "X", "cat": "fee", "dur": 26.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522336861.4, "ph": "X", "cat": "fee", "dur": 27.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522336891.7, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522336901.6, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522336890.6, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522336908.8, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522336915.4, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522336919.9, "ph": "X", "cat": "fee", "dur": 21.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522336942.8, "ph": "X", "cat": "fee", "dur": 36770.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522336907.7, "ph": "X", "cat": "fee", "dur": 36806.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522373806.1, "ph": "X", "cat": "fee", "dur": 19.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522373826.1, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522373805.4, "ph": "X", "cat": "fee", "dur": 71.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522373879.1, "ph": "X", "cat": "fee", "dur": 73.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522373877.4, "ph": "X", "cat": "fee", "dur": 75.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522373955.2, "ph": "X", "cat": "fee", "dur": 40.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522373954.2, "ph": "X", "cat": "fee", "dur": 41.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522373998.5, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522374008.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522373997.3, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522374014.7, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522374021.5, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522374026.2, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522374048.4, "ph": "X", "cat": "fee", "dur": 8840.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522374013.8, "ph": "X", "cat": "fee", "dur": 8875.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522383008.6, "ph": "X", "cat": "fee", "dur": 30.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522383040.4, "ph": "X", "cat": "fee", "dur": 67.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522383007.5, "ph": "X", "cat": "fee", "dur": 100.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522383111.6, "ph": "X", "cat": "fee", "dur": 197.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522383109.3, "ph": "X", "cat": "fee", "dur": 200.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522383314.0, "ph": "X", "cat": "fee", "dur": 14.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522383312.8, "ph": "X", "cat": "fee", "dur": 15.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522383331.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522383341.1, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522383330.2, "ph": "X", "cat": "fee", "dur": 15.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522383351.1, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522383360.7, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522383368.0, "ph": "X", "cat": "fee", "dur": 28.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522383397.9, "ph": "X", "cat": "fee", "dur": 22394.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522383350.0, "ph": "X", "cat": "fee", "dur": 22443.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522405881.8, "ph": "X", "cat": "fee", "dur": 19.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522405901.7, "ph": "X", "cat": "fee", "dur": 50.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522405881.1, "ph": "X", "cat": "fee", "dur": 71.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522405955.8, "ph": "X", "cat": "fee", "dur": 69.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522405953.7, "ph": "X", "cat": "fee", "dur": 72.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522406028.5, "ph": "X", "cat": "fee", "dur": 32.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522406027.7, "ph": "X", "cat": "fee", "dur": 33.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522406063.2, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522406072.4, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522406062.2, "ph": "X", "cat": "fee", "dur": 12.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522406078.5, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522406084.8, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522406089.5, "ph": "X", "cat": "fee", "dur": 19.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522406110.6, "ph": "X", "cat": "fee", "dur": 53392.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522406077.7, "ph": "X", "cat": "fee", "dur": 53426.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522459616.1, "ph": "X", "cat": "fee", "dur": 25.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522459642.3, "ph": "X", "cat": "fee", "dur": 54.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522459615.4, "ph": "X", "cat": "fee", "dur": 81.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522459699.2, "ph": "X", "cat": "fee", "dur": 332.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522459697.4, "ph": "X", "cat": "fee", "dur": 335.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522460035.4, "ph": "X", "cat": "fee", "dur": 34.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522460034.4, "ph": "X", "cat": "fee", "dur": 35.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522460072.4, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522460082.5, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522460071.4, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522460089.9, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522460098.2, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522460103.9, "ph": "X", "cat": "fee", "dur": 25.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522460131.1, "ph": "X", "cat": "fee", "dur": 22434.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522460088.8, "ph": "X", "cat": "fee", "dur": 22478.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522482682.2, "ph": "X", "cat": "fee", "dur": 25.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522482708.8, "ph": "X", "cat": "fee", "dur": 60.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522482680.4, "ph": "X", "cat": "fee", "dur": 88.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522482772.6, "ph": "X", "cat": "fee", "dur": 959.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522482770.8, "ph": "X", "cat": "fee", "dur": 961.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522483735.6, "ph": "X", "cat": "fee", "dur": 26.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522483734.5, "ph": "X", "cat": "fee", "dur": 27.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522483764.7, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522483774.3, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522483763.7, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522483781.8, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522483788.8, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522483794.6, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522483816.8, "ph": "X", "cat": "fee", "dur": 21496.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522483780.8, "ph": "X", "cat": "fee", "dur": 21533.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522505414.2, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522505434.5, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522505413.4, "ph": "X", "cat": "fee", "dur": 72.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522505488.7, "ph": "X", "cat": "fee", "dur": 75.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522505486.9, "ph": "X", "cat": "fee", "dur": 77.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522505567.3, "ph": "X", "cat": "fee", "dur": 38.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522505566.3, "ph": "X", "cat": "fee", "dur": 39.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522505608.3, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522505617.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522505607.3, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522505624.4, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522505631.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522505636.1, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522505658.0, "ph": "X", "cat": "fee", "dur": 27643.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522505623.6, "ph": "X", "cat": "fee", "dur": 27679.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522533411.1, "ph": "X", "cat": "fee", "dur": 26.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522533438.9, "ph": "X", "cat": "fee", "dur": 61.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522533410.2, "ph": "X", "cat": "fee", "dur": 90.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522533504.1, "ph": "X", "cat": "fee", "dur": 725.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522533502.1, "ph": "X", "cat": "fee", "dur": 727.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522534233.2, "ph": "X", "cat": "fee", "dur": 22.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522534232.1, "ph": "X", "cat": "fee", "dur": 23.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522534258.1, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522534267.5, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522534257.1, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522534274.9, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522534282.2, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522534287.6, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522534310.3, "ph": "X", "cat": "fee", "dur": 22399.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522534273.9, "ph": "X", "cat": "fee", "dur": 22436.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522556800.7, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522556820.6, "ph": "X", "cat": "fee", "dur": 49.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522556800.1, "ph": "X", "cat": "fee", "dur": 70.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522556873.4, "ph": "X", "cat": "fee", "dur": 70.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522556871.5, "ph": "X", "cat": "fee", "dur": 73.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522556947.8, "ph": "X", "cat": "fee", "dur": 36.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522556946.9, "ph": "X", "cat": "fee", "dur": 37.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522556987.2, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522556996.5, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522556986.1, "ph": "X", "cat": "fee", "dur": 13.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522557003.2, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522557009.5, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522557014.1, "ph": "X", "cat": "fee", "dur": 25.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522557041.3, "ph": "X", "cat": "fee", "dur": 23291.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522557002.3, "ph": "X", "cat": "fee", "dur": 23331.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522580425.5, "ph": "X", "cat": "fee", "dur": 18.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522580445.3, "ph": "X", "cat": "fee", "dur": 49.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522580424.8, "ph": "X", "cat": "fee", "dur": 70.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522580497.7, "ph": "X", "cat": "fee", "dur": 71.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522580495.6, "ph": "X", "cat": "fee", "dur": 73.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522580571.8, "ph": "X", "cat": "fee", "dur": 27.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522580570.9, "ph": "X", "cat": "fee", "dur": 28.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522580601.7, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522580612.1, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522580600.8, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522580618.5, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522580625.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522580630.1, "ph": "X", "cat": "fee", "dur": 19.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522580650.9, "ph": "X", "cat": "fee", "dur": 15672.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522580617.5, "ph": "X", "cat": "fee", "dur": 15707.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522596433.7, "ph": "X", "cat": "fee", "dur": 23.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522596458.4, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522596433.1, "ph": "X", "cat": "fee", "dur": 77.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522596513.4, "ph": "X", "cat": "fee", "dur": 300.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522596511.6, "ph": "X", "cat": "fee", "dur": 302.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522596817.5, "ph": "X", "cat": "fee", "dur": 26.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522596816.5, "ph": "X", "cat": "fee", "dur": 27.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522596846.2, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522596855.6, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522596845.3, "ph": "X", "cat": "fee", "dur": 13.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522596863.0, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522596870.4, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522596875.2, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522596897.5, "ph": "X", "cat": "fee", "dur": 17691.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522596861.6, "ph": "X", "cat": "fee", "dur": 17728.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522614680.1, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522614700.0, "ph": "X", "cat": "fee", "dur": 50.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522614679.3, "ph": "X", "cat": "fee", "dur": 71.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522614753.9, "ph": "X", "cat": "fee", "dur": 73.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522614751.8, "ph": "X", "cat": "fee", "dur": 76.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522614831.1, "ph": "X", "cat": "fee", "dur": 17.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522614829.9, "ph": "X", "cat": "fee", "dur": 19.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522614851.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522614860.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522614850.3, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522614867.6, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522614874.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522614879.1, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522614900.9, "ph": "X", "cat": "fee", "dur": 25680.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522614866.6, "ph": "X", "cat": "fee", "dur": 25716.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522640691.8, "ph": "X", "cat": "fee", "dur": 24.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522640717.1, "ph": "X", "cat": "fee", "dur": 61.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522640690.5, "ph": "X", "cat": "fee", "dur": 87.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522640781.0, "ph": "X", "cat": "fee", "dur": 78.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522640779.3, "ph": "X", "cat": "fee", "dur": 80.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522640863.0, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522640862.1, "ph": "X", "cat": "fee", "dur": 33.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522640897.6, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522640907.2, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522640896.7, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522640914.4, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522640921.6, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522640926.9, "ph": "X", "cat": "fee", "dur": 23.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522640953.1, "ph": "X", "cat": "fee", "dur": 12865.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522640913.5, "ph": "X", "cat": "fee", "dur": 12906.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522653910.9, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522653931.3, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522653910.3, "ph": "X", "cat": "fee", "dur": 73.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522653986.0, "ph": "X", "cat": "fee", "dur": 594.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522653984.3, "ph": "X", "cat": "fee", "dur": 596.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522654584.1, "ph": "X", "cat": "fee", "dur": 23.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522654582.6, "ph": "X", "cat": "fee", "dur": 25.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522654610.1, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522654619.4, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522654609.0, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522654627.2, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522654634.1, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522654638.9, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522654661.6, "ph": "X", "cat": "fee", "dur": 33322.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522654626.2, "ph": "X", "cat": "fee", "dur": 33358.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522688075.3, "ph": "X", "cat": "fee", "dur": 18.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522688095.1, "ph": "X", "cat": "fee", "dur": 49.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522688074.7, "ph": "X", "cat": "fee", "dur": 69.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522688147.8, "ph": "X", "cat": "fee", "dur": 71.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522688145.6, "ph": "X", "cat": "fee", "dur": 74.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522688222.4, "ph": "X", "cat": "fee", "dur": 25.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522688221.5, "ph": "X", "cat": "fee", "dur": 27.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522688250.8, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522688260.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522688250.0, "ph": "X", "cat": "fee", "dur": 13.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522688267.1, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522688273.6, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522688278.0, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522688299.7, "ph": "X", "cat": "fee", "dur": 27329.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522688266.1, "ph": "X", "cat": "fee", "dur": 27365.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522715737.4, "ph": "X", "cat": "fee", "dur": 22.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522715760.9, "ph": "X", "cat": "fee", "dur": 52.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522715736.8, "ph": "X", "cat": "fee", "dur": 77.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522715816.8, "ph": "X", "cat": "fee", "dur": 1719.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522715815.0, "ph": "X", "cat": "fee", "dur": 1721.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522717539.7, "ph": "X", "cat": "fee", "dur": 25.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522717538.2, "ph": "X", "cat": "fee", "dur": 27.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522717568.0, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522717578.4, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522717567.0, "ph": "X", "cat": "fee", "dur": 15.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522717586.1, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522717592.6, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522717597.8, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522717620.2, "ph": "X", "cat": "fee", "dur": 13004.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522717584.7, "ph": "X", "cat": "fee", "dur": 13041.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522730749.3, "ph": "X", "cat": "fee", "dur": 34.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522730784.8, "ph": "X", "cat": "fee", "dur": 79.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522730747.9, "ph": "X", "cat": "fee", "dur": 116.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522730867.2, "ph": "X", "cat": "fee", "dur": 373.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522730865.3, "ph": "X", "cat": "fee", "dur": 376.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522731245.6, "ph": "X", "cat": "fee", "dur": 18.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522731244.4, "ph": "X", "cat": "fee", "dur": 20.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522731267.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522731277.1, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522731266.2, "ph": "X", "cat": "fee", "dur": 15.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522731286.9, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522731295.1, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522731300.9, "ph": "X", "cat": "fee", "dur": 24.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522731326.6, "ph": "X", "cat": "fee", "dur": 126962.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522731285.9, "ph": "X", "cat": "fee", "dur": 127006.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522858581.8, "ph": "X", "cat": "fee", "dur": 88.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522858671.7, "ph": "X", "cat": "fee", "dur": 353.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522858577.9, "ph": "X", "cat": "fee", "dur": 448.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522859034.2, "ph": "X", "cat": "fee", "dur": 671.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522859029.8, "ph": "X", "cat": "fee", "dur": 679.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522859728.5, "ph": "X", "cat": "fee", "dur": 103.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522859720.8, "ph": "X", "cat": "fee", "dur": 111.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522859837.3, "ph": "X", "cat": "fee", "dur": 14.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522859852.9, "ph": "X", "cat": "fee", "dur": 12.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522859834.9, "ph": "X", "cat": "fee", "dur": 31.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522859877.6, "ph": "X", "cat": "fee", "dur": 16.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522859895.6, "ph": "X", "cat": "fee", "dur": 12.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522859908.4, "ph": "X", "cat": "fee", "dur": 60.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522859975.9, "ph": "X", "cat": "fee", "dur": 44089.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522859876.1, "ph": "X", "cat": "fee", "dur": 44190.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522904195.3, "ph": "X", "cat": "fee", "dur": 33.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522904230.0, "ph": "X", "cat": "fee", "dur": 72.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522904194.2, "ph": "X", "cat": "fee", "dur": 108.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522904306.2, "ph": "X", "cat": "fee", "dur": 747.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522904304.3, "ph": "X", "cat": "fee", "dur": 750.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522905060.2, "ph": "X", "cat": "fee", "dur": 33.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522905058.6, "ph": "X", "cat": "fee", "dur": 35.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522905097.1, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522905108.0, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522905095.9, "ph": "X", "cat": "fee", "dur": 18.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522905120.0, "ph": "X", "cat": "fee", "dur": 8.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522905129.3, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522905136.8, "ph": "X", "cat": "fee", "dur": 25.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522905163.9, "ph": "X", "cat": "fee", "dur": 35329.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522905118.9, "ph": "X", "cat": "fee", "dur": 35375.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522940612.8, "ph": "X", "cat": "fee", "dur": 28.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522940642.2, "ph": "X", "cat": "fee", "dur": 61.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522940612.0, "ph": "X", "cat": "fee", "dur": 92.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522940707.9, "ph": "X", "cat": "fee", "dur": 95.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522940705.7, "ph": "X", "cat": "fee", "dur": 98.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522940808.6, "ph": "X", "cat": "fee", "dur": 59.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522940807.7, "ph": "X", "cat": "fee", "dur": 60.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522940871.9, "ph": "X", "cat": "fee", "dur": 11.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522940883.7, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522940870.0, "ph": "X", "cat": "fee", "dur": 18.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522940892.5, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522940902.1, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522940908.8, "ph": "X", "cat": "fee", "dur": 26.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522940937.1, "ph": "X", "cat": "fee", "dur": 41208.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522940891.0, "ph": "X", "cat": "fee", "dur": 41256.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438522982269.9, "ph": "X", "cat": "fee", "dur": 26.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438522982297.7, "ph": "X", "cat": "fee", "dur": 62.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438522982268.6, "ph": "X", "cat": "fee", "dur": 91.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438522982364.2, "ph": "X", "cat": "fee", "dur": 1452.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522982361.9, "ph": "X", "cat": "fee", "dur": 1455.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438522983822.4, "ph": "X", "cat": "fee", "dur": 42.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522983820.5, "ph": "X", "cat": "fee", "dur": 44.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438522983867.4, "ph": "X", "cat": "fee", "dur": 10.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438522983878.4, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438522983866.1, "ph": "X", "cat": "fee", "dur": 17.52, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438522983888.3, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438522983896.6, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438522983902.2, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438522983929.2, "ph": "X", "cat": "fee", "dur": 37399.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438522983886.7, "ph": "X", "cat": "fee", "dur": 37443.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523021436.2, "ph": "X", "cat": "fee", "dur": 21.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523021458.9, "ph": "X", "cat": "fee", "dur": 53.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523021435.5, "ph": "X", "cat": "fee", "dur": 77.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523021515.6, "ph": "X", "cat": "fee", "dur": 79.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523021513.9, "ph": "X", "cat": "fee", "dur": 82.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523021600.2, "ph": "X", "cat": "fee", "dur": 49.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523021599.4, "ph": "X", "cat": "fee", "dur": 50.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523021653.2, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523021662.9, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523021651.8, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523021670.5, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523021677.7, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523021682.9, "ph": "X", "cat": "fee", "dur": 22.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523021707.3, "ph": "X", "cat": "fee", "dur": 16823.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523021668.9, "ph": "X", "cat": "fee", "dur": 16863.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523038631.5, "ph": "X", "cat": "fee", "dur": 20.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523038652.6, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523038630.9, "ph": "X", "cat": "fee", "dur": 73.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523038707.8, "ph": "X", "cat": "fee", "dur": 74.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523038705.8, "ph": "X", "cat": "fee", "dur": 76.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523038785.8, "ph": "X", "cat": "fee", "dur": 27.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523038784.5, "ph": "X", "cat": "fee", "dur": 29.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523038815.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523038825.7, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523038814.8, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523038832.2, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523038838.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523038843.4, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523038865.5, "ph": "X", "cat": "fee", "dur": 25431.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523038830.9, "ph": "X", "cat": "fee", "dur": 25467.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523064408.5, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523064432.5, "ph": "X", "cat": "fee", "dur": 54.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523064407.5, "ph": "X", "cat": "fee", "dur": 79.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523064490.1, "ph": "X", "cat": "fee", "dur": 74.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523064488.3, "ph": "X", "cat": "fee", "dur": 76.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523064568.1, "ph": "X", "cat": "fee", "dur": 37.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523064567.2, "ph": "X", "cat": "fee", "dur": 38.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523064607.9, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523064617.6, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523064606.9, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523064624.1, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523064631.0, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523064636.1, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523064657.9, "ph": "X", "cat": "fee", "dur": 30652.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523064623.3, "ph": "X", "cat": "fee", "dur": 30688.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523095423.5, "ph": "X", "cat": "fee", "dur": 24.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523095449.0, "ph": "X", "cat": "fee", "dur": 58.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523095422.5, "ph": "X", "cat": "fee", "dur": 84.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523095510.0, "ph": "X", "cat": "fee", "dur": 81.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523095508.3, "ph": "X", "cat": "fee", "dur": 83.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523095595.5, "ph": "X", "cat": "fee", "dur": 36.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523095594.6, "ph": "X", "cat": "fee", "dur": 37.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523095634.6, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523095644.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523095633.5, "ph": "X", "cat": "fee", "dur": 14.32, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523095652.3, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523095661.9, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523095669.6, "ph": "X", "cat": "fee", "dur": 26.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523095697.8, "ph": "X", "cat": "fee", "dur": 17262.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523095651.1, "ph": "X", "cat": "fee", "dur": 17309.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523113068.2, "ph": "X", "cat": "fee", "dur": 23.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523113092.9, "ph": "X", "cat": "fee", "dur": 55.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523113067.5, "ph": "X", "cat": "fee", "dur": 80.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523113151.1, "ph": "X", "cat": "fee", "dur": 77.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523113149.3, "ph": "X", "cat": "fee", "dur": 79.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523113232.0, "ph": "X", "cat": "fee", "dur": 32.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523113231.0, "ph": "X", "cat": "fee", "dur": 33.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523113266.5, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523113276.0, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523113265.5, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523113282.6, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523113290.2, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523113295.0, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523113317.3, "ph": "X", "cat": "fee", "dur": 18748.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523113281.6, "ph": "X", "cat": "fee", "dur": 18785.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523132157.0, "ph": "X", "cat": "fee", "dur": 18.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523132176.7, "ph": "X", "cat": "fee", "dur": 52.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523132156.3, "ph": "X", "cat": "fee", "dur": 72.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523132232.1, "ph": "X", "cat": "fee", "dur": 71.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523132229.8, "ph": "X", "cat": "fee", "dur": 74.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523132307.3, "ph": "X", "cat": "fee", "dur": 31.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523132306.3, "ph": "X", "cat": "fee", "dur": 32.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523132341.5, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523132351.5, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523132340.4, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523132358.4, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523132364.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523132369.3, "ph": "X", "cat": "fee", "dur": 19.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523132390.5, "ph": "X", "cat": "fee", "dur": 13628.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523132357.4, "ph": "X", "cat": "fee", "dur": 13663.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523146120.6, "ph": "X", "cat": "fee", "dur": 26.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523146148.0, "ph": "X", "cat": "fee", "dur": 49.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523146119.9, "ph": "X", "cat": "fee", "dur": 77.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523146200.4, "ph": "X", "cat": "fee", "dur": 77.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523146198.7, "ph": "X", "cat": "fee", "dur": 79.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523146281.2, "ph": "X", "cat": "fee", "dur": 25.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523146280.3, "ph": "X", "cat": "fee", "dur": 26.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523146309.3, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523146318.8, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523146308.2, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523146325.5, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523146332.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523146337.4, "ph": "X", "cat": "fee", "dur": 19.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523146358.1, "ph": "X", "cat": "fee", "dur": 23662.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523146324.7, "ph": "X", "cat": "fee", "dur": 23697.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523170112.6, "ph": "X", "cat": "fee", "dur": 19.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523170132.8, "ph": "X", "cat": "fee", "dur": 52.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523170112.0, "ph": "X", "cat": "fee", "dur": 73.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523170188.6, "ph": "X", "cat": "fee", "dur": 73.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523170186.7, "ph": "X", "cat": "fee", "dur": 75.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523170265.0, "ph": "X", "cat": "fee", "dur": 31.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523170264.0, "ph": "X", "cat": "fee", "dur": 32.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523170298.7, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523170308.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523170297.8, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523170314.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523170321.1, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523170325.8, "ph": "X", "cat": "fee", "dur": 26.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523170353.6, "ph": "X", "cat": "fee", "dur": 19541.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523170313.9, "ph": "X", "cat": "fee", "dur": 19582.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523189989.3, "ph": "X", "cat": "fee", "dur": 19.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523190009.3, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523189988.5, "ph": "X", "cat": "fee", "dur": 71.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523190062.5, "ph": "X", "cat": "fee", "dur": 72.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523190060.7, "ph": "X", "cat": "fee", "dur": 74.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523190138.0, "ph": "X", "cat": "fee", "dur": 34.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523190137.0, "ph": "X", "cat": "fee", "dur": 35.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523190174.8, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523190184.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523190173.9, "ph": "X", "cat": "fee", "dur": 13.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523190190.8, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523190197.6, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523190202.4, "ph": "X", "cat": "fee", "dur": 19.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523190223.4, "ph": "X", "cat": "fee", "dur": 19486.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523190189.8, "ph": "X", "cat": "fee", "dur": 19521.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523209830.5, "ph": "X", "cat": "fee", "dur": 26.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523209857.9, "ph": "X", "cat": "fee", "dur": 57.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523209829.6, "ph": "X", "cat": "fee", "dur": 86.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523209918.7, "ph": "X", "cat": "fee", "dur": 86.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523209916.6, "ph": "X", "cat": "fee", "dur": 89.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523210009.0, "ph": "X", "cat": "fee", "dur": 31.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523210007.7, "ph": "X", "cat": "fee", "dur": 33.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523210043.9, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523210054.9, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523210042.4, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523210064.0, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523210071.8, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523210078.3, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523210104.0, "ph": "X", "cat": "fee", "dur": 17089.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523210063.0, "ph": "X", "cat": "fee", "dur": 17131.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523227317.3, "ph": "X", "cat": "fee", "dur": 32.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523227351.1, "ph": "X", "cat": "fee", "dur": 81.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523227315.8, "ph": "X", "cat": "fee", "dur": 116.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523227437.9, "ph": "X", "cat": "fee", "dur": 113.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523227434.1, "ph": "X", "cat": "fee", "dur": 118.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523227556.2, "ph": "X", "cat": "fee", "dur": 34.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523227555.2, "ph": "X", "cat": "fee", "dur": 36.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523227594.8, "ph": "X", "cat": "fee", "dur": 12.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523227608.3, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523227593.3, "ph": "X", "cat": "fee", "dur": 22.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523227621.7, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523227630.9, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523227638.1, "ph": "X", "cat": "fee", "dur": 24.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523227664.8, "ph": "X", "cat": "fee", "dur": 46393.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523227620.5, "ph": "X", "cat": "fee", "dur": 46439.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523274178.6, "ph": "X", "cat": "fee", "dur": 28.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523274208.3, "ph": "X", "cat": "fee", "dur": 63.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523274177.6, "ph": "X", "cat": "fee", "dur": 94.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523274275.1, "ph": "X", "cat": "fee", "dur": 84.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523274273.1, "ph": "X", "cat": "fee", "dur": 87.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523274363.6, "ph": "X", "cat": "fee", "dur": 38.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523274362.8, "ph": "X", "cat": "fee", "dur": 39.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523274405.4, "ph": "X", "cat": "fee", "dur": 12.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523274419.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523274403.9, "ph": "X", "cat": "fee", "dur": 19.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523274427.4, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523274434.4, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523274452.3, "ph": "X", "cat": "fee", "dur": 26.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523274480.5, "ph": "X", "cat": "fee", "dur": 12810.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523274426.4, "ph": "X", "cat": "fee", "dur": 12866.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523287406.1, "ph": "X", "cat": "fee", "dur": 33.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523287440.3, "ph": "X", "cat": "fee", "dur": 76.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523287404.7, "ph": "X", "cat": "fee", "dur": 112.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523287520.9, "ph": "X", "cat": "fee", "dur": 89.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523287518.7, "ph": "X", "cat": "fee", "dur": 92.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523287614.4, "ph": "X", "cat": "fee", "dur": 28.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523287613.5, "ph": "X", "cat": "fee", "dur": 29.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523287645.1, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523287655.6, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523287644.2, "ph": "X", "cat": "fee", "dur": 15.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523287663.8, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523287671.5, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523287677.2, "ph": "X", "cat": "fee", "dur": 22.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523287701.7, "ph": "X", "cat": "fee", "dur": 31502.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523287662.7, "ph": "X", "cat": "fee", "dur": 31542.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523319351.8, "ph": "X", "cat": "fee", "dur": 33.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523319386.3, "ph": "X", "cat": "fee", "dur": 76.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523319350.7, "ph": "X", "cat": "fee", "dur": 111.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523319466.0, "ph": "X", "cat": "fee", "dur": 102.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523319463.7, "ph": "X", "cat": "fee", "dur": 105.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523319572.5, "ph": "X", "cat": "fee", "dur": 48.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523319571.4, "ph": "X", "cat": "fee", "dur": 50.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523319625.6, "ph": "X", "cat": "fee", "dur": 11.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523319637.7, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523319623.7, "ph": "X", "cat": "fee", "dur": 18.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523319648.1, "ph": "X", "cat": "fee", "dur": 8.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523319658.5, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523319665.5, "ph": "X", "cat": "fee", "dur": 28.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523319696.1, "ph": "X", "cat": "fee", "dur": 22396.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523319646.4, "ph": "X", "cat": "fee", "dur": 22449.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523342335.5, "ph": "X", "cat": "fee", "dur": 94.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523342431.9, "ph": "X", "cat": "fee", "dur": 185.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523342332.8, "ph": "X", "cat": "fee", "dur": 285.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523342625.8, "ph": "X", "cat": "fee", "dur": 762.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523342620.9, "ph": "X", "cat": "fee", "dur": 770.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523343402.7, "ph": "X", "cat": "fee", "dur": 63.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523343399.2, "ph": "X", "cat": "fee", "dur": 67.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523343471.0, "ph": "X", "cat": "fee", "dur": 13.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523343485.5, "ph": "X", "cat": "fee", "dur": 10.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523343469.1, "ph": "X", "cat": "fee", "dur": 26.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523343503.2, "ph": "X", "cat": "fee", "dur": 16.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523343521.2, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523343532.0, "ph": "X", "cat": "fee", "dur": 40.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523343575.4, "ph": "X", "cat": "fee", "dur": 28997.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523343501.5, "ph": "X", "cat": "fee", "dur": 29075.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523372961.5, "ph": "X", "cat": "fee", "dur": 117.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523373081.8, "ph": "X", "cat": "fee", "dur": 209.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523372958.2, "ph": "X", "cat": "fee", "dur": 333.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523373299.1, "ph": "X", "cat": "fee", "dur": 785.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523373294.8, "ph": "X", "cat": "fee", "dur": 792.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523374097.7, "ph": "X", "cat": "fee", "dur": 62.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523374094.8, "ph": "X", "cat": "fee", "dur": 65.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523374165.9, "ph": "X", "cat": "fee", "dur": 18.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523374185.1, "ph": "X", "cat": "fee", "dur": 12.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523374163.8, "ph": "X", "cat": "fee", "dur": 34.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523374207.9, "ph": "X", "cat": "fee", "dur": 16.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523374226.0, "ph": "X", "cat": "fee", "dur": 11.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523374239.4, "ph": "X", "cat": "fee", "dur": 46.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523374289.8, "ph": "X", "cat": "fee", "dur": 31112.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523374206.1, "ph": "X", "cat": "fee", "dur": 31197.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523405499.0, "ph": "X", "cat": "fee", "dur": 17.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523405517.5, "ph": "X", "cat": "fee", "dur": 49.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523405498.3, "ph": "X", "cat": "fee", "dur": 69.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523405570.2, "ph": "X", "cat": "fee", "dur": 74.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523405568.4, "ph": "X", "cat": "fee", "dur": 76.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523405647.4, "ph": "X", "cat": "fee", "dur": 33.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523405646.5, "ph": "X", "cat": "fee", "dur": 34.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523405683.4, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523405693.4, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523405682.2, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523405699.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523405706.1, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523405710.4, "ph": "X", "cat": "fee", "dur": 20.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523405732.1, "ph": "X", "cat": "fee", "dur": 11140.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523405699.0, "ph": "X", "cat": "fee", "dur": 11174.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523416997.8, "ph": "X", "cat": "fee", "dur": 37.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523417036.9, "ph": "X", "cat": "fee", "dur": 71.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523416996.9, "ph": "X", "cat": "fee", "dur": 111.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523417112.2, "ph": "X", "cat": "fee", "dur": 101.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523417109.5, "ph": "X", "cat": "fee", "dur": 104.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523417217.7, "ph": "X", "cat": "fee", "dur": 31.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523417216.7, "ph": "X", "cat": "fee", "dur": 32.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523417252.1, "ph": "X", "cat": "fee", "dur": 10.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523417263.4, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523417250.9, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523417273.0, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523417281.8, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523417289.3, "ph": "X", "cat": "fee", "dur": 76.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523417368.5, "ph": "X", "cat": "fee", "dur": 28121.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523417271.8, "ph": "X", "cat": "fee", "dur": 28220.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523445699.2, "ph": "X", "cat": "fee", "dur": 48.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523445749.2, "ph": "X", "cat": "fee", "dur": 91.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523445697.4, "ph": "X", "cat": "fee", "dur": 143.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523445844.9, "ph": "X", "cat": "fee", "dur": 392.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523445842.5, "ph": "X", "cat": "fee", "dur": 395.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523446242.9, "ph": "X", "cat": "fee", "dur": 37.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523446241.4, "ph": "X", "cat": "fee", "dur": 39.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523446284.2, "ph": "X", "cat": "fee", "dur": 10.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523446294.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523446282.6, "ph": "X", "cat": "fee", "dur": 18.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523446305.6, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523446314.1, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523446320.4, "ph": "X", "cat": "fee", "dur": 24.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523446347.0, "ph": "X", "cat": "fee", "dur": 16759.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523446304.5, "ph": "X", "cat": "fee", "dur": 16803.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523463237.6, "ph": "X", "cat": "fee", "dur": 30.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523463269.5, "ph": "X", "cat": "fee", "dur": 63.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523463236.6, "ph": "X", "cat": "fee", "dur": 96.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523463337.2, "ph": "X", "cat": "fee", "dur": 92.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523463334.8, "ph": "X", "cat": "fee", "dur": 95.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523463434.4, "ph": "X", "cat": "fee", "dur": 34.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523463432.9, "ph": "X", "cat": "fee", "dur": 35.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523463471.4, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523463482.4, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523463470.4, "ph": "X", "cat": "fee", "dur": 16.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523463491.5, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523463500.6, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523463506.8, "ph": "X", "cat": "fee", "dur": 28.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523463537.6, "ph": "X", "cat": "fee", "dur": 51636.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523463490.0, "ph": "X", "cat": "fee", "dur": 51686.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523515295.1, "ph": "X", "cat": "fee", "dur": 24.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523515321.0, "ph": "X", "cat": "fee", "dur": 59.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523515294.1, "ph": "X", "cat": "fee", "dur": 86.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523515384.1, "ph": "X", "cat": "fee", "dur": 99.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523515381.6, "ph": "X", "cat": "fee", "dur": 102.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523515487.8, "ph": "X", "cat": "fee", "dur": 59.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523515486.6, "ph": "X", "cat": "fee", "dur": 60.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523515551.3, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523515561.7, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523515549.7, "ph": "X", "cat": "fee", "dur": 15.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523515570.2, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523515577.4, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523515582.6, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523515606.7, "ph": "X", "cat": "fee", "dur": 39833.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523515569.1, "ph": "X", "cat": "fee", "dur": 39873.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523555557.1, "ph": "X", "cat": "fee", "dur": 27.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523555585.9, "ph": "X", "cat": "fee", "dur": 67.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523555556.2, "ph": "X", "cat": "fee", "dur": 97.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523555656.2, "ph": "X", "cat": "fee", "dur": 453.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523555654.4, "ph": "X", "cat": "fee", "dur": 456.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523556115.9, "ph": "X", "cat": "fee", "dur": 44.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523556113.8, "ph": "X", "cat": "fee", "dur": 47.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523556163.0, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523556173.5, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523556162.2, "ph": "X", "cat": "fee", "dur": 17.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523556184.7, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523556193.5, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523556200.5, "ph": "X", "cat": "fee", "dur": 25.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523556227.8, "ph": "X", "cat": "fee", "dur": 23705.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523556183.3, "ph": "X", "cat": "fee", "dur": 23751.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523580056.4, "ph": "X", "cat": "fee", "dur": 25.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523580083.2, "ph": "X", "cat": "fee", "dur": 64.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523580055.3, "ph": "X", "cat": "fee", "dur": 92.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523580151.0, "ph": "X", "cat": "fee", "dur": 346.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523580148.4, "ph": "X", "cat": "fee", "dur": 349.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523580502.3, "ph": "X", "cat": "fee", "dur": 33.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523580500.8, "ph": "X", "cat": "fee", "dur": 35.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523580539.0, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523580548.4, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523580538.0, "ph": "X", "cat": "fee", "dur": 13.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523580555.9, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523580562.9, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523580567.9, "ph": "X", "cat": "fee", "dur": 21.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523580590.7, "ph": "X", "cat": "fee", "dur": 28774.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523580554.6, "ph": "X", "cat": "fee", "dur": 28812.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523609486.7, "ph": "X", "cat": "fee", "dur": 43.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523609533.8, "ph": "X", "cat": "fee", "dur": 96.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523609485.8, "ph": "X", "cat": "fee", "dur": 144.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523609635.2, "ph": "X", "cat": "fee", "dur": 121.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523609632.4, "ph": "X", "cat": "fee", "dur": 125.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523609762.8, "ph": "X", "cat": "fee", "dur": 61.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523609761.6, "ph": "X", "cat": "fee", "dur": 62.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523609826.9, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523609837.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523609825.9, "ph": "X", "cat": "fee", "dur": 16.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523609847.8, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523609856.8, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523609864.0, "ph": "X", "cat": "fee", "dur": 26.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523609892.4, "ph": "X", "cat": "fee", "dur": 41625.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523609846.7, "ph": "X", "cat": "fee", "dur": 41673.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523651639.9, "ph": "X", "cat": "fee", "dur": 34.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523651675.4, "ph": "X", "cat": "fee", "dur": 78.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523651638.7, "ph": "X", "cat": "fee", "dur": 115.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523651758.3, "ph": "X", "cat": "fee", "dur": 458.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523651756.0, "ph": "X", "cat": "fee", "dur": 461.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523652222.6, "ph": "X", "cat": "fee", "dur": 44.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523652220.5, "ph": "X", "cat": "fee", "dur": 47.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523652270.1, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523652280.6, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523652269.2, "ph": "X", "cat": "fee", "dur": 16.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523652290.5, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523652299.0, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523652305.7, "ph": "X", "cat": "fee", "dur": 26.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523652334.4, "ph": "X", "cat": "fee", "dur": 21463.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523652289.3, "ph": "X", "cat": "fee", "dur": 21510.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523673923.4, "ph": "X", "cat": "fee", "dur": 30.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523673954.5, "ph": "X", "cat": "fee", "dur": 68.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523673922.6, "ph": "X", "cat": "fee", "dur": 100.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523674026.2, "ph": "X", "cat": "fee", "dur": 88.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523674024.1, "ph": "X", "cat": "fee", "dur": 91.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523674119.6, "ph": "X", "cat": "fee", "dur": 31.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523674118.8, "ph": "X", "cat": "fee", "dur": 32.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523674153.5, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523674163.8, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523674152.3, "ph": "X", "cat": "fee", "dur": 15.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523674172.4, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523674180.0, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523674185.7, "ph": "X", "cat": "fee", "dur": 21.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523674209.3, "ph": "X", "cat": "fee", "dur": 15201.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523674171.5, "ph": "X", "cat": "fee", "dur": 15241.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523689533.7, "ph": "X", "cat": "fee", "dur": 25.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523689560.5, "ph": "X", "cat": "fee", "dur": 55.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523689532.9, "ph": "X", "cat": "fee", "dur": 83.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523689619.3, "ph": "X", "cat": "fee", "dur": 220.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523689617.2, "ph": "X", "cat": "fee", "dur": 222.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523689843.3, "ph": "X", "cat": "fee", "dur": 24.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523689842.2, "ph": "X", "cat": "fee", "dur": 25.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523689870.7, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523689882.6, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523689869.4, "ph": "X", "cat": "fee", "dur": 17.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523689892.1, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523689899.9, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523689907.0, "ph": "X", "cat": "fee", "dur": 24.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523689932.9, "ph": "X", "cat": "fee", "dur": 20189.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523689890.4, "ph": "X", "cat": "fee", "dur": 20233.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523710307.5, "ph": "X", "cat": "fee", "dur": 49.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523710358.7, "ph": "X", "cat": "fee", "dur": 109.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523710305.2, "ph": "X", "cat": "fee", "dur": 163.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523710472.9, "ph": "X", "cat": "fee", "dur": 406.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523710470.1, "ph": "X", "cat": "fee", "dur": 410.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523710887.4, "ph": "X", "cat": "fee", "dur": 36.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523710884.3, "ph": "X", "cat": "fee", "dur": 40.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523710928.0, "ph": "X", "cat": "fee", "dur": 13.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523710942.5, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523710926.5, "ph": "X", "cat": "fee", "dur": 23.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523710958.3, "ph": "X", "cat": "fee", "dur": 10.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523710969.5, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523710978.5, "ph": "X", "cat": "fee", "dur": 46.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523711027.9, "ph": "X", "cat": "fee", "dur": 24851.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523710956.9, "ph": "X", "cat": "fee", "dur": 24923.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523735992.4, "ph": "X", "cat": "fee", "dur": 25.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523736018.4, "ph": "X", "cat": "fee", "dur": 59.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523735991.7, "ph": "X", "cat": "fee", "dur": 86.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523736081.1, "ph": "X", "cat": "fee", "dur": 79.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523736079.2, "ph": "X", "cat": "fee", "dur": 81.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523736163.7, "ph": "X", "cat": "fee", "dur": 45.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523736162.7, "ph": "X", "cat": "fee", "dur": 46.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523736211.1, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523736220.9, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523736210.1, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523736227.5, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523736234.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523736239.3, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523736261.7, "ph": "X", "cat": "fee", "dur": 20648.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523736226.5, "ph": "X", "cat": "fee", "dur": 20685.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523757038.6, "ph": "X", "cat": "fee", "dur": 29.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523757069.1, "ph": "X", "cat": "fee", "dur": 75.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523757037.4, "ph": "X", "cat": "fee", "dur": 106.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523757147.5, "ph": "X", "cat": "fee", "dur": 93.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523757145.6, "ph": "X", "cat": "fee", "dur": 96.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523757245.5, "ph": "X", "cat": "fee", "dur": 39.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523757244.6, "ph": "X", "cat": "fee", "dur": 40.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523757288.8, "ph": "X", "cat": "fee", "dur": 12.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523757301.6, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523757287.3, "ph": "X", "cat": "fee", "dur": 18.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523757311.4, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523757321.0, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523757327.2, "ph": "X", "cat": "fee", "dur": 26.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523757355.8, "ph": "X", "cat": "fee", "dur": 27805.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523757309.8, "ph": "X", "cat": "fee", "dur": 27852.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523785305.8, "ph": "X", "cat": "fee", "dur": 35.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523785342.9, "ph": "X", "cat": "fee", "dur": 86.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523785303.9, "ph": "X", "cat": "fee", "dur": 126.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523785433.4, "ph": "X", "cat": "fee", "dur": 580.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523785431.5, "ph": "X", "cat": "fee", "dur": 583.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523786021.2, "ph": "X", "cat": "fee", "dur": 56.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523786019.4, "ph": "X", "cat": "fee", "dur": 58.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523786081.0, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523786091.7, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523786079.5, "ph": "X", "cat": "fee", "dur": 18.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523786103.3, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523786114.0, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523786121.5, "ph": "X", "cat": "fee", "dur": 28.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523786151.8, "ph": "X", "cat": "fee", "dur": 12837.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523786102.3, "ph": "X", "cat": "fee", "dur": 12888.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523799102.1, "ph": "X", "cat": "fee", "dur": 26.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523799129.9, "ph": "X", "cat": "fee", "dur": 66.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523799101.1, "ph": "X", "cat": "fee", "dur": 95.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523799213.8, "ph": "X", "cat": "fee", "dur": 87.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523799198.0, "ph": "X", "cat": "fee", "dur": 103.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523799306.6, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523799305.3, "ph": "X", "cat": "fee", "dur": 33.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523799342.3, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523799353.0, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523799341.0, "ph": "X", "cat": "fee", "dur": 15.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523799360.8, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523799368.9, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523799374.5, "ph": "X", "cat": "fee", "dur": 23.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523799399.4, "ph": "X", "cat": "fee", "dur": 19256.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523799359.6, "ph": "X", "cat": "fee", "dur": 19297.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523818803.3, "ph": "X", "cat": "fee", "dur": 44.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523818850.0, "ph": "X", "cat": "fee", "dur": 98.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523818801.5, "ph": "X", "cat": "fee", "dur": 147.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523818952.1, "ph": "X", "cat": "fee", "dur": 96.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523818949.8, "ph": "X", "cat": "fee", "dur": 98.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523819052.0, "ph": "X", "cat": "fee", "dur": 36.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523819051.0, "ph": "X", "cat": "fee", "dur": 37.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523819091.4, "ph": "X", "cat": "fee", "dur": 10.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523819102.8, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523819090.3, "ph": "X", "cat": "fee", "dur": 16.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523819111.4, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523819118.8, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523819124.6, "ph": "X", "cat": "fee", "dur": 24.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523819150.5, "ph": "X", "cat": "fee", "dur": 24132.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523819109.9, "ph": "X", "cat": "fee", "dur": 24175.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523843464.7, "ph": "X", "cat": "fee", "dur": 32.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523843498.8, "ph": "X", "cat": "fee", "dur": 85.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523843463.4, "ph": "X", "cat": "fee", "dur": 120.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523843587.5, "ph": "X", "cat": "fee", "dur": 97.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523843585.2, "ph": "X", "cat": "fee", "dur": 100.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523843690.1, "ph": "X", "cat": "fee", "dur": 39.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523843688.8, "ph": "X", "cat": "fee", "dur": 40.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523843732.0, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523843742.5, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523843730.9, "ph": "X", "cat": "fee", "dur": 15.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523843751.8, "ph": "X", "cat": "fee", "dur": 8.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523843761.0, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523843767.2, "ph": "X", "cat": "fee", "dur": 26.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523843795.4, "ph": "X", "cat": "fee", "dur": 33359.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523843750.6, "ph": "X", "cat": "fee", "dur": 33406.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523877405.1, "ph": "X", "cat": "fee", "dur": 70.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523877477.3, "ph": "X", "cat": "fee", "dur": 143.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523877402.4, "ph": "X", "cat": "fee", "dur": 218.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523877626.1, "ph": "X", "cat": "fee", "dur": 392.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523877623.2, "ph": "X", "cat": "fee", "dur": 396.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523878026.6, "ph": "X", "cat": "fee", "dur": 52.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523878024.4, "ph": "X", "cat": "fee", "dur": 55.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523878086.0, "ph": "X", "cat": "fee", "dur": 16.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523878103.7, "ph": "X", "cat": "fee", "dur": 9.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523878083.9, "ph": "X", "cat": "fee", "dur": 30.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523878125.4, "ph": "X", "cat": "fee", "dur": 15.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523878142.3, "ph": "X", "cat": "fee", "dur": 12.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523878155.8, "ph": "X", "cat": "fee", "dur": 185.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523878347.1, "ph": "X", "cat": "fee", "dur": 31279.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523878123.2, "ph": "X", "cat": "fee", "dur": 31505.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523910084.6, "ph": "X", "cat": "fee", "dur": 140.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523910228.6, "ph": "X", "cat": "fee", "dur": 247.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523910055.2, "ph": "X", "cat": "fee", "dur": 421.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523910483.7, "ph": "X", "cat": "fee", "dur": 555.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523910479.2, "ph": "X", "cat": "fee", "dur": 562.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523911050.0, "ph": "X", "cat": "fee", "dur": 65.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523911047.1, "ph": "X", "cat": "fee", "dur": 69.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523911122.0, "ph": "X", "cat": "fee", "dur": 16.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523911139.3, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523911119.6, "ph": "X", "cat": "fee", "dur": 28.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523911157.1, "ph": "X", "cat": "fee", "dur": 12.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523911171.2, "ph": "X", "cat": "fee", "dur": 10.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523911182.7, "ph": "X", "cat": "fee", "dur": 47.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523911235.2, "ph": "X", "cat": "fee", "dur": 10982.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523911155.4, "ph": "X", "cat": "fee", "dur": 11063.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523922344.2, "ph": "X", "cat": "fee", "dur": 30.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523922375.9, "ph": "X", "cat": "fee", "dur": 73.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523922343.1, "ph": "X", "cat": "fee", "dur": 106.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523922453.3, "ph": "X", "cat": "fee", "dur": 92.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523922451.1, "ph": "X", "cat": "fee", "dur": 94.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523922549.8, "ph": "X", "cat": "fee", "dur": 23.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523922548.8, "ph": "X", "cat": "fee", "dur": 25.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523922576.8, "ph": "X", "cat": "fee", "dur": 11.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523922588.3, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523922575.5, "ph": "X", "cat": "fee", "dur": 17.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523922597.1, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523922604.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523922610.5, "ph": "X", "cat": "fee", "dur": 24.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523922636.8, "ph": "X", "cat": "fee", "dur": 12374.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523922596.0, "ph": "X", "cat": "fee", "dur": 12417.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523935120.5, "ph": "X", "cat": "fee", "dur": 27.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523935148.7, "ph": "X", "cat": "fee", "dur": 66.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523935119.5, "ph": "X", "cat": "fee", "dur": 95.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523935218.2, "ph": "X", "cat": "fee", "dur": 343.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523935215.9, "ph": "X", "cat": "fee", "dur": 346.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523935566.3, "ph": "X", "cat": "fee", "dur": 26.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523935565.1, "ph": "X", "cat": "fee", "dur": 27.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523935595.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523935605.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523935594.1, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523935613.8, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523935621.6, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523935627.1, "ph": "X", "cat": "fee", "dur": 23.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523935652.6, "ph": "X", "cat": "fee", "dur": 18339.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523935612.7, "ph": "X", "cat": "fee", "dur": 18380.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523954106.7, "ph": "X", "cat": "fee", "dur": 26.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523954134.3, "ph": "X", "cat": "fee", "dur": 62.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523954105.6, "ph": "X", "cat": "fee", "dur": 91.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523954199.9, "ph": "X", "cat": "fee", "dur": 301.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523954198.1, "ph": "X", "cat": "fee", "dur": 304.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523954505.5, "ph": "X", "cat": "fee", "dur": 33.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523954504.3, "ph": "X", "cat": "fee", "dur": 34.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523954541.2, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523954550.9, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523954540.2, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523954558.8, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523954566.3, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523954571.6, "ph": "X", "cat": "fee", "dur": 21.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523954594.5, "ph": "X", "cat": "fee", "dur": 25655.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523954557.8, "ph": "X", "cat": "fee", "dur": 25693.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438523980386.0, "ph": "X", "cat": "fee", "dur": 28.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438523980415.0, "ph": "X", "cat": "fee", "dur": 69.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438523980385.2, "ph": "X", "cat": "fee", "dur": 99.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438523980487.6, "ph": "X", "cat": "fee", "dur": 441.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523980485.9, "ph": "X", "cat": "fee", "dur": 443.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438523980933.1, "ph": "X", "cat": "fee", "dur": 32.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523980931.9, "ph": "X", "cat": "fee", "dur": 34.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438523980968.6, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438523980979.0, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438523980967.7, "ph": "X", "cat": "fee", "dur": 16.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438523980989.7, "ph": "X", "cat": "fee", "dur": 8.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438523980999.6, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438523981005.3, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438523981029.2, "ph": "X", "cat": "fee", "dur": 20652.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438523980988.1, "ph": "X", "cat": "fee", "dur": 20694.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524001796.2, "ph": "X", "cat": "fee", "dur": 25.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524001822.5, "ph": "X", "cat": "fee", "dur": 59.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524001795.0, "ph": "X", "cat": "fee", "dur": 86.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524001884.5, "ph": "X", "cat": "fee", "dur": 336.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524001882.6, "ph": "X", "cat": "fee", "dur": 338.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524002224.4, "ph": "X", "cat": "fee", "dur": 23.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524002223.5, "ph": "X", "cat": "fee", "dur": 24.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524002251.0, "ph": "X", "cat": "fee", "dur": 8.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524002260.2, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524002249.8, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524002267.3, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524002274.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524002279.2, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524002302.3, "ph": "X", "cat": "fee", "dur": 18735.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524002266.4, "ph": "X", "cat": "fee", "dur": 18773.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524021166.4, "ph": "X", "cat": "fee", "dur": 30.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524021197.7, "ph": "X", "cat": "fee", "dur": 69.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524021165.4, "ph": "X", "cat": "fee", "dur": 102.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524021270.4, "ph": "X", "cat": "fee", "dur": 79.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524021268.4, "ph": "X", "cat": "fee", "dur": 82.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524021353.6, "ph": "X", "cat": "fee", "dur": 30.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524021352.7, "ph": "X", "cat": "fee", "dur": 31.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524021386.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524021395.8, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524021385.1, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524021402.8, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524021409.8, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524021415.2, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524021437.7, "ph": "X", "cat": "fee", "dur": 23034.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524021401.9, "ph": "X", "cat": "fee", "dur": 23072.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524044678.0, "ph": "X", "cat": "fee", "dur": 49.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524044728.6, "ph": "X", "cat": "fee", "dur": 104.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524044675.5, "ph": "X", "cat": "fee", "dur": 157.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524044837.4, "ph": "X", "cat": "fee", "dur": 116.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524044834.6, "ph": "X", "cat": "fee", "dur": 119.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524044959.0, "ph": "X", "cat": "fee", "dur": 34.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524044957.6, "ph": "X", "cat": "fee", "dur": 35.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524044997.0, "ph": "X", "cat": "fee", "dur": 10.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524045008.2, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524044995.9, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524045018.4, "ph": "X", "cat": "fee", "dur": 8.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524045027.9, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524045035.8, "ph": "X", "cat": "fee", "dur": 30.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524045068.9, "ph": "X", "cat": "fee", "dur": 34565.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524045017.3, "ph": "X", "cat": "fee", "dur": 34618.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524079769.4, "ph": "X", "cat": "fee", "dur": 31.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524079802.0, "ph": "X", "cat": "fee", "dur": 71.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524079768.1, "ph": "X", "cat": "fee", "dur": 105.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524079876.4, "ph": "X", "cat": "fee", "dur": 237.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524079874.3, "ph": "X", "cat": "fee", "dur": 240.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524080118.0, "ph": "X", "cat": "fee", "dur": 30.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524080116.9, "ph": "X", "cat": "fee", "dur": 32.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524080151.4, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524080160.8, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524080150.1, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524080168.6, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524080176.0, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524080181.4, "ph": "X", "cat": "fee", "dur": 22.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524080205.5, "ph": "X", "cat": "fee", "dur": 37633.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524080167.6, "ph": "X", "cat": "fee", "dur": 37673.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524117956.7, "ph": "X", "cat": "fee", "dur": 24.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524117982.3, "ph": "X", "cat": "fee", "dur": 60.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524117955.8, "ph": "X", "cat": "fee", "dur": 87.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524118046.0, "ph": "X", "cat": "fee", "dur": 78.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524118043.9, "ph": "X", "cat": "fee", "dur": 81.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524118128.6, "ph": "X", "cat": "fee", "dur": 28.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524118127.4, "ph": "X", "cat": "fee", "dur": 30.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524118159.9, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524118169.5, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524118158.9, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524118177.0, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524118183.7, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524118188.3, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524118210.9, "ph": "X", "cat": "fee", "dur": 46816.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524118176.0, "ph": "X", "cat": "fee", "dur": 46852.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524165142.9, "ph": "X", "cat": "fee", "dur": 24.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524165168.5, "ph": "X", "cat": "fee", "dur": 56.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524165142.1, "ph": "X", "cat": "fee", "dur": 82.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524165228.3, "ph": "X", "cat": "fee", "dur": 78.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524165226.3, "ph": "X", "cat": "fee", "dur": 80.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524165310.0, "ph": "X", "cat": "fee", "dur": 45.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524165309.2, "ph": "X", "cat": "fee", "dur": 46.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524165358.0, "ph": "X", "cat": "fee", "dur": 11.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524165369.7, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524165356.9, "ph": "X", "cat": "fee", "dur": 15.72, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524165376.3, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524165383.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524165388.2, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524165410.8, "ph": "X", "cat": "fee", "dur": 20436.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524165375.4, "ph": "X", "cat": "fee", "dur": 20472.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524185937.0, "ph": "X", "cat": "fee", "dur": 20.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524185958.3, "ph": "X", "cat": "fee", "dur": 48.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524185936.2, "ph": "X", "cat": "fee", "dur": 71.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524186010.5, "ph": "X", "cat": "fee", "dur": 673.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524186008.2, "ph": "X", "cat": "fee", "dur": 676.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524186687.4, "ph": "X", "cat": "fee", "dur": 26.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524186686.2, "ph": "X", "cat": "fee", "dur": 28.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524186716.5, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524186725.9, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524186715.5, "ph": "X", "cat": "fee", "dur": 13.92, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524186733.0, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524186739.5, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524186744.6, "ph": "X", "cat": "fee", "dur": 19.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524186765.3, "ph": "X", "cat": "fee", "dur": 26635.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524186732.0, "ph": "X", "cat": "fee", "dur": 26669.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524213504.1, "ph": "X", "cat": "fee", "dur": 29.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524213534.0, "ph": "X", "cat": "fee", "dur": 52.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524213503.4, "ph": "X", "cat": "fee", "dur": 82.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524213589.3, "ph": "X", "cat": "fee", "dur": 491.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524213587.5, "ph": "X", "cat": "fee", "dur": 493.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524214085.2, "ph": "X", "cat": "fee", "dur": 25.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524214083.8, "ph": "X", "cat": "fee", "dur": 27.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524214113.4, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524214122.9, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524214112.5, "ph": "X", "cat": "fee", "dur": 13.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524214129.6, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524214136.6, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524214141.4, "ph": "X", "cat": "fee", "dur": 27.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524214171.1, "ph": "X", "cat": "fee", "dur": 20368.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524214128.5, "ph": "X", "cat": "fee", "dur": 20412.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524234631.3, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524234651.7, "ph": "X", "cat": "fee", "dur": 49.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524234630.5, "ph": "X", "cat": "fee", "dur": 70.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524234704.0, "ph": "X", "cat": "fee", "dur": 76.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524234702.1, "ph": "X", "cat": "fee", "dur": 78.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524234783.1, "ph": "X", "cat": "fee", "dur": 32.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524234782.2, "ph": "X", "cat": "fee", "dur": 33.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524234818.2, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524234828.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524234817.0, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524234834.4, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524234840.5, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524234845.0, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524234867.1, "ph": "X", "cat": "fee", "dur": 57267.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524234833.4, "ph": "X", "cat": "fee", "dur": 57302.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524292240.6, "ph": "X", "cat": "fee", "dur": 21.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524292263.1, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524292239.8, "ph": "X", "cat": "fee", "dur": 74.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524292317.7, "ph": "X", "cat": "fee", "dur": 621.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524292315.5, "ph": "X", "cat": "fee", "dur": 624.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524292943.6, "ph": "X", "cat": "fee", "dur": 28.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524292942.6, "ph": "X", "cat": "fee", "dur": 30.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524292975.3, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524292984.7, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524292974.2, "ph": "X", "cat": "fee", "dur": 14.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524292992.7, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524292999.6, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524293004.4, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524293028.3, "ph": "X", "cat": "fee", "dur": 25287.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524292991.6, "ph": "X", "cat": "fee", "dur": 25325.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524318427.4, "ph": "X", "cat": "fee", "dur": 25.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524318453.9, "ph": "X", "cat": "fee", "dur": 61.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524318426.4, "ph": "X", "cat": "fee", "dur": 89.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524318518.2, "ph": "X", "cat": "fee", "dur": 412.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524318516.4, "ph": "X", "cat": "fee", "dur": 414.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524318935.1, "ph": "X", "cat": "fee", "dur": 25.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524318934.0, "ph": "X", "cat": "fee", "dur": 26.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524318963.4, "ph": "X", "cat": "fee", "dur": 8.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524318972.6, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524318962.3, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524318980.1, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524318987.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524318992.2, "ph": "X", "cat": "fee", "dur": 21.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524319015.4, "ph": "X", "cat": "fee", "dur": 32238.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524318978.6, "ph": "X", "cat": "fee", "dur": 32276.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524351367.7, "ph": "X", "cat": "fee", "dur": 27.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524351395.7, "ph": "X", "cat": "fee", "dur": 65.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524351366.5, "ph": "X", "cat": "fee", "dur": 95.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524351464.7, "ph": "X", "cat": "fee", "dur": 767.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524351462.7, "ph": "X", "cat": "fee", "dur": 770.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524352239.6, "ph": "X", "cat": "fee", "dur": 33.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524352237.7, "ph": "X", "cat": "fee", "dur": 35.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524352276.3, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524352286.1, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524352275.3, "ph": "X", "cat": "fee", "dur": 16.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524352296.1, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524352304.2, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524352310.9, "ph": "X", "cat": "fee", "dur": 25.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524352338.6, "ph": "X", "cat": "fee", "dur": 23091.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524352295.0, "ph": "X", "cat": "fee", "dur": 23136.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524375535.7, "ph": "X", "cat": "fee", "dur": 30.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524375567.1, "ph": "X", "cat": "fee", "dur": 57.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524375535.0, "ph": "X", "cat": "fee", "dur": 90.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524375628.5, "ph": "X", "cat": "fee", "dur": 245.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524375626.2, "ph": "X", "cat": "fee", "dur": 248.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524375880.9, "ph": "X", "cat": "fee", "dur": 37.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524375878.9, "ph": "X", "cat": "fee", "dur": 39.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524375921.3, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524375931.4, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524375920.1, "ph": "X", "cat": "fee", "dur": 16.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524375943.3, "ph": "X", "cat": "fee", "dur": 9.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524375953.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524375959.5, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524375983.6, "ph": "X", "cat": "fee", "dur": 27647.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524375941.6, "ph": "X", "cat": "fee", "dur": 27690.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524403742.4, "ph": "X", "cat": "fee", "dur": 23.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524403767.1, "ph": "X", "cat": "fee", "dur": 55.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524403741.6, "ph": "X", "cat": "fee", "dur": 81.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524403825.9, "ph": "X", "cat": "fee", "dur": 616.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524403823.7, "ph": "X", "cat": "fee", "dur": 619.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524404446.5, "ph": "X", "cat": "fee", "dur": 29.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524404445.3, "ph": "X", "cat": "fee", "dur": 31.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524404479.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524404489.4, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524404478.0, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524404497.3, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524404504.1, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524404509.7, "ph": "X", "cat": "fee", "dur": 22.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524404533.5, "ph": "X", "cat": "fee", "dur": 19540.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524404496.0, "ph": "X", "cat": "fee", "dur": 19580.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524424212.9, "ph": "X", "cat": "fee", "dur": 37.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524424251.6, "ph": "X", "cat": "fee", "dur": 93.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524424211.2, "ph": "X", "cat": "fee", "dur": 134.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524424348.8, "ph": "X", "cat": "fee", "dur": 117.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524424346.5, "ph": "X", "cat": "fee", "dur": 119.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524424470.4, "ph": "X", "cat": "fee", "dur": 34.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524424469.1, "ph": "X", "cat": "fee", "dur": 35.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524424508.4, "ph": "X", "cat": "fee", "dur": 10.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524424520.1, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524424506.6, "ph": "X", "cat": "fee", "dur": 19.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524424532.7, "ph": "X", "cat": "fee", "dur": 10.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524424544.7, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524424553.3, "ph": "X", "cat": "fee", "dur": 26.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524424582.0, "ph": "X", "cat": "fee", "dur": 30426.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524424531.4, "ph": "X", "cat": "fee", "dur": 30478.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524455130.5, "ph": "X", "cat": "fee", "dur": 31.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524455162.7, "ph": "X", "cat": "fee", "dur": 72.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524455129.6, "ph": "X", "cat": "fee", "dur": 105.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524455238.5, "ph": "X", "cat": "fee", "dur": 93.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524455236.2, "ph": "X", "cat": "fee", "dur": 96.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524455335.4, "ph": "X", "cat": "fee", "dur": 33.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524455334.5, "ph": "X", "cat": "fee", "dur": 34.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524455371.1, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524455381.2, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524455370.4, "ph": "X", "cat": "fee", "dur": 14.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524455389.8, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524455397.8, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524455404.0, "ph": "X", "cat": "fee", "dur": 23.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524455428.6, "ph": "X", "cat": "fee", "dur": 22951.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524455388.6, "ph": "X", "cat": "fee", "dur": 22993.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524478542.2, "ph": "X", "cat": "fee", "dur": 38.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524478581.5, "ph": "X", "cat": "fee", "dur": 89.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524478540.8, "ph": "X", "cat": "fee", "dur": 131.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524478676.3, "ph": "X", "cat": "fee", "dur": 121.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524478673.7, "ph": "X", "cat": "fee", "dur": 124.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524478802.6, "ph": "X", "cat": "fee", "dur": 36.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524478801.4, "ph": "X", "cat": "fee", "dur": 37.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524478841.8, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524478853.6, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524478840.5, "ph": "X", "cat": "fee", "dur": 17.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524478863.1, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524478872.5, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524478878.4, "ph": "X", "cat": "fee", "dur": 26.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524478906.9, "ph": "X", "cat": "fee", "dur": 13624.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524478861.8, "ph": "X", "cat": "fee", "dur": 13671.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524492626.2, "ph": "X", "cat": "fee", "dur": 18.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524492646.1, "ph": "X", "cat": "fee", "dur": 54.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524492625.4, "ph": "X", "cat": "fee", "dur": 75.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524492704.5, "ph": "X", "cat": "fee", "dur": 459.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524492701.9, "ph": "X", "cat": "fee", "dur": 462.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524493168.1, "ph": "X", "cat": "fee", "dur": 27.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524493167.0, "ph": "X", "cat": "fee", "dur": 28.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524493198.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524493208.2, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524493197.4, "ph": "X", "cat": "fee", "dur": 14.12, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524493215.6, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524493222.8, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524493228.0, "ph": "X", "cat": "fee", "dur": 22.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524493252.1, "ph": "X", "cat": "fee", "dur": 16903.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524493214.6, "ph": "X", "cat": "fee", "dur": 16942.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524510259.1, "ph": "X", "cat": "fee", "dur": 29.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524510289.6, "ph": "X", "cat": "fee", "dur": 70.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524510258.2, "ph": "X", "cat": "fee", "dur": 101.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524510364.0, "ph": "X", "cat": "fee", "dur": 267.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524510361.3, "ph": "X", "cat": "fee", "dur": 271.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524510637.8, "ph": "X", "cat": "fee", "dur": 28.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524510636.3, "ph": "X", "cat": "fee", "dur": 30.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524510669.6, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524510680.4, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524510668.6, "ph": "X", "cat": "fee", "dur": 17.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524510692.5, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524510701.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524510708.3, "ph": "X", "cat": "fee", "dur": 28.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524510739.0, "ph": "X", "cat": "fee", "dur": 9168.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524510691.2, "ph": "X", "cat": "fee", "dur": 9216.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524519996.6, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524520017.0, "ph": "X", "cat": "fee", "dur": 52.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524519995.9, "ph": "X", "cat": "fee", "dur": 73.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524520072.8, "ph": "X", "cat": "fee", "dur": 289.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524520070.9, "ph": "X", "cat": "fee", "dur": 292.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524520366.0, "ph": "X", "cat": "fee", "dur": 18.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524520365.0, "ph": "X", "cat": "fee", "dur": 19.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524520387.0, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524520396.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524520386.2, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524520403.5, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524520410.4, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524520415.7, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524520437.6, "ph": "X", "cat": "fee", "dur": 8874.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524520402.5, "ph": "X", "cat": "fee", "dur": 8911.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524529512.7, "ph": "X", "cat": "fee", "dur": 43.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524529557.8, "ph": "X", "cat": "fee", "dur": 106.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524529511.1, "ph": "X", "cat": "fee", "dur": 152.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524529668.5, "ph": "X", "cat": "fee", "dur": 125.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524529665.7, "ph": "X", "cat": "fee", "dur": 128.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524529798.8, "ph": "X", "cat": "fee", "dur": 23.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524529797.3, "ph": "X", "cat": "fee", "dur": 24.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524529826.2, "ph": "X", "cat": "fee", "dur": 13.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524529840.3, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524529824.3, "ph": "X", "cat": "fee", "dur": 20.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524529849.0, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524529857.5, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524529864.2, "ph": "X", "cat": "fee", "dur": 24.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524529891.0, "ph": "X", "cat": "fee", "dur": 17574.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524529848.0, "ph": "X", "cat": "fee", "dur": 17619.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524547577.6, "ph": "X", "cat": "fee", "dur": 21.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524547599.9, "ph": "X", "cat": "fee", "dur": 55.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524547576.8, "ph": "X", "cat": "fee", "dur": 78.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524547658.2, "ph": "X", "cat": "fee", "dur": 407.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524547656.4, "ph": "X", "cat": "fee", "dur": 410.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524548069.0, "ph": "X", "cat": "fee", "dur": 25.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524548068.0, "ph": "X", "cat": "fee", "dur": 26.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524548109.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524548119.0, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524548108.1, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524548126.4, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524548133.4, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524548137.9, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524548160.5, "ph": "X", "cat": "fee", "dur": 14846.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524548125.0, "ph": "X", "cat": "fee", "dur": 14883.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524563162.4, "ph": "X", "cat": "fee", "dur": 44.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524563208.2, "ph": "X", "cat": "fee", "dur": 91.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524563159.4, "ph": "X", "cat": "fee", "dur": 140.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524563303.0, "ph": "X", "cat": "fee", "dur": 189.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524563300.7, "ph": "X", "cat": "fee", "dur": 192.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524563495.7, "ph": "X", "cat": "fee", "dur": 27.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524563494.6, "ph": "X", "cat": "fee", "dur": 29.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524563526.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524563535.7, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524563525.0, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524563545.2, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524563554.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524563559.2, "ph": "X", "cat": "fee", "dur": 21.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524563582.7, "ph": "X", "cat": "fee", "dur": 9724.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524563543.8, "ph": "X", "cat": "fee", "dur": 9764.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524573409.9, "ph": "X", "cat": "fee", "dur": 21.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524573431.9, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524573409.1, "ph": "X", "cat": "fee", "dur": 74.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524573486.6, "ph": "X", "cat": "fee", "dur": 203.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524573484.9, "ph": "X", "cat": "fee", "dur": 205.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524573693.2, "ph": "X", "cat": "fee", "dur": 16.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524573692.1, "ph": "X", "cat": "fee", "dur": 17.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524573711.5, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524573720.7, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524573710.7, "ph": "X", "cat": "fee", "dur": 13.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524573727.5, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524573733.9, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524573738.5, "ph": "X", "cat": "fee", "dur": 20.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524573760.7, "ph": "X", "cat": "fee", "dur": 17781.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524573726.5, "ph": "X", "cat": "fee", "dur": 17816.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524591665.5, "ph": "X", "cat": "fee", "dur": 26.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524591692.5, "ph": "X", "cat": "fee", "dur": 69.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524591664.8, "ph": "X", "cat": "fee", "dur": 97.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524591765.4, "ph": "X", "cat": "fee", "dur": 91.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524591763.2, "ph": "X", "cat": "fee", "dur": 94.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524591860.8, "ph": "X", "cat": "fee", "dur": 30.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524591859.9, "ph": "X", "cat": "fee", "dur": 32.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524591895.4, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524591906.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524591894.1, "ph": "X", "cat": "fee", "dur": 16.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524591916.3, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524591924.6, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524591931.4, "ph": "X", "cat": "fee", "dur": 26.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524591960.1, "ph": "X", "cat": "fee", "dur": 20387.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524591914.7, "ph": "X", "cat": "fee", "dur": 20433.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524612465.5, "ph": "X", "cat": "fee", "dur": 24.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524612490.8, "ph": "X", "cat": "fee", "dur": 59.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524612464.5, "ph": "X", "cat": "fee", "dur": 86.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524612553.5, "ph": "X", "cat": "fee", "dur": 78.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524612551.4, "ph": "X", "cat": "fee", "dur": 81.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524612635.7, "ph": "X", "cat": "fee", "dur": 33.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524612634.7, "ph": "X", "cat": "fee", "dur": 34.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524612671.5, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524612681.0, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524612670.5, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524612688.0, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524612694.4, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524612700.1, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524612722.7, "ph": "X", "cat": "fee", "dur": 29847.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524612686.8, "ph": "X", "cat": "fee", "dur": 29885.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524642676.0, "ph": "X", "cat": "fee", "dur": 22.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524642699.4, "ph": "X", "cat": "fee", "dur": 51.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524642675.4, "ph": "X", "cat": "fee", "dur": 75.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524642754.2, "ph": "X", "cat": "fee", "dur": 82.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524642752.3, "ph": "X", "cat": "fee", "dur": 85.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524642840.3, "ph": "X", "cat": "fee", "dur": 38.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524642839.3, "ph": "X", "cat": "fee", "dur": 40.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524642881.4, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524642890.8, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524642880.5, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524642897.6, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524642904.0, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524642908.5, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524642930.0, "ph": "X", "cat": "fee", "dur": 14455.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524642896.7, "ph": "X", "cat": "fee", "dur": 14489.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524657502.8, "ph": "X", "cat": "fee", "dur": 26.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524657530.5, "ph": "X", "cat": "fee", "dur": 65.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524657501.9, "ph": "X", "cat": "fee", "dur": 94.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524657599.4, "ph": "X", "cat": "fee", "dur": 82.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524657597.2, "ph": "X", "cat": "fee", "dur": 85.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524657685.8, "ph": "X", "cat": "fee", "dur": 33.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524657684.9, "ph": "X", "cat": "fee", "dur": 34.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524657723.2, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524657733.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524657721.5, "ph": "X", "cat": "fee", "dur": 15.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524657741.2, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524657748.3, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524657753.5, "ph": "X", "cat": "fee", "dur": 28.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524657783.4, "ph": "X", "cat": "fee", "dur": 17809.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524657740.0, "ph": "X", "cat": "fee", "dur": 17854.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524675709.2, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524675733.4, "ph": "X", "cat": "fee", "dur": 59.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524675708.1, "ph": "X", "cat": "fee", "dur": 85.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524675796.5, "ph": "X", "cat": "fee", "dur": 284.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524675794.2, "ph": "X", "cat": "fee", "dur": 287.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524676085.3, "ph": "X", "cat": "fee", "dur": 31.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524676083.9, "ph": "X", "cat": "fee", "dur": 33.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524676120.0, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524676130.5, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524676118.8, "ph": "X", "cat": "fee", "dur": 15.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524676138.2, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524676146.2, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524676152.1, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524676176.8, "ph": "X", "cat": "fee", "dur": 19299.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524676137.1, "ph": "X", "cat": "fee", "dur": 19341.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524695599.9, "ph": "X", "cat": "fee", "dur": 27.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524695628.9, "ph": "X", "cat": "fee", "dur": 68.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524695598.9, "ph": "X", "cat": "fee", "dur": 98.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524695701.0, "ph": "X", "cat": "fee", "dur": 87.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524695699.0, "ph": "X", "cat": "fee", "dur": 90.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524695793.9, "ph": "X", "cat": "fee", "dur": 31.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524695792.9, "ph": "X", "cat": "fee", "dur": 33.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524695828.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524695838.3, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524695827.3, "ph": "X", "cat": "fee", "dur": 14.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524695847.8, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524695855.6, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524695861.6, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524695886.5, "ph": "X", "cat": "fee", "dur": 15880.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524695846.6, "ph": "X", "cat": "fee", "dur": 15922.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524711940.1, "ph": "X", "cat": "fee", "dur": 32.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524711973.7, "ph": "X", "cat": "fee", "dur": 76.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524711939.1, "ph": "X", "cat": "fee", "dur": 110.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524712053.6, "ph": "X", "cat": "fee", "dur": 101.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524712051.3, "ph": "X", "cat": "fee", "dur": 104.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524712160.1, "ph": "X", "cat": "fee", "dur": 34.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524712159.0, "ph": "X", "cat": "fee", "dur": 35.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524712196.9, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524712206.5, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524712195.7, "ph": "X", "cat": "fee", "dur": 14.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524712215.2, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524712223.1, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524712229.3, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524712254.1, "ph": "X", "cat": "fee", "dur": 42316.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524712214.0, "ph": "X", "cat": "fee", "dur": 42358.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524754670.6, "ph": "X", "cat": "fee", "dur": 21.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524754693.1, "ph": "X", "cat": "fee", "dur": 53.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524754669.9, "ph": "X", "cat": "fee", "dur": 76.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524754749.2, "ph": "X", "cat": "fee", "dur": 75.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524754747.4, "ph": "X", "cat": "fee", "dur": 77.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524754827.9, "ph": "X", "cat": "fee", "dur": 37.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524754827.0, "ph": "X", "cat": "fee", "dur": 38.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524754867.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524754876.5, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524754866.2, "ph": "X", "cat": "fee", "dur": 13.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524754883.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524754889.9, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524754894.7, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524754917.6, "ph": "X", "cat": "fee", "dur": 25656.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524754882.3, "ph": "X", "cat": "fee", "dur": 25693.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524780722.5, "ph": "X", "cat": "fee", "dur": 37.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524780761.2, "ph": "X", "cat": "fee", "dur": 93.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524780720.4, "ph": "X", "cat": "fee", "dur": 134.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524780858.9, "ph": "X", "cat": "fee", "dur": 101.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524780856.6, "ph": "X", "cat": "fee", "dur": 104.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524780964.8, "ph": "X", "cat": "fee", "dur": 51.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524780963.9, "ph": "X", "cat": "fee", "dur": 53.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524781019.6, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524781029.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524781018.6, "ph": "X", "cat": "fee", "dur": 15.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524781037.7, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524781045.6, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524781051.3, "ph": "X", "cat": "fee", "dur": 23.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524781076.6, "ph": "X", "cat": "fee", "dur": 14721.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524781036.7, "ph": "X", "cat": "fee", "dur": 14764.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524795990.1, "ph": "X", "cat": "fee", "dur": 52.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524796043.3, "ph": "X", "cat": "fee", "dur": 112.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524795988.1, "ph": "X", "cat": "fee", "dur": 167.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524796160.4, "ph": "X", "cat": "fee", "dur": 137.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524796157.1, "ph": "X", "cat": "fee", "dur": 141.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524796305.5, "ph": "X", "cat": "fee", "dur": 40.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524796303.4, "ph": "X", "cat": "fee", "dur": 43.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524796351.4, "ph": "X", "cat": "fee", "dur": 11.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524796363.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524796349.0, "ph": "X", "cat": "fee", "dur": 19.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524796375.4, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524796384.9, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524796391.7, "ph": "X", "cat": "fee", "dur": 28.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524796422.2, "ph": "X", "cat": "fee", "dur": 31028.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524796373.7, "ph": "X", "cat": "fee", "dur": 31078.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524827571.3, "ph": "X", "cat": "fee", "dur": 29.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524827601.8, "ph": "X", "cat": "fee", "dur": 64.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524827570.0, "ph": "X", "cat": "fee", "dur": 96.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524827670.3, "ph": "X", "cat": "fee", "dur": 481.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524827667.9, "ph": "X", "cat": "fee", "dur": 485.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524828160.0, "ph": "X", "cat": "fee", "dur": 40.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524828157.3, "ph": "X", "cat": "fee", "dur": 43.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524828204.4, "ph": "X", "cat": "fee", "dur": 10.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524828215.8, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524828202.8, "ph": "X", "cat": "fee", "dur": 19.02, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524828228.3, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524828238.7, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524828248.1, "ph": "X", "cat": "fee", "dur": 32.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524828283.9, "ph": "X", "cat": "fee", "dur": 20184.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524828226.8, "ph": "X", "cat": "fee", "dur": 20242.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524848568.5, "ph": "X", "cat": "fee", "dur": 20.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524848589.8, "ph": "X", "cat": "fee", "dur": 53.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524848567.7, "ph": "X", "cat": "fee", "dur": 75.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524848663.4, "ph": "X", "cat": "fee", "dur": 98.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524848645.0, "ph": "X", "cat": "fee", "dur": 117.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524848765.3, "ph": "X", "cat": "fee", "dur": 33.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524848764.4, "ph": "X", "cat": "fee", "dur": 34.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524848801.7, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524848812.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524848800.6, "ph": "X", "cat": "fee", "dur": 14.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524848819.9, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524848826.6, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524848831.3, "ph": "X", "cat": "fee", "dur": 21.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524848854.6, "ph": "X", "cat": "fee", "dur": 25374.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524848818.9, "ph": "X", "cat": "fee", "dur": 25412.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524874391.2, "ph": "X", "cat": "fee", "dur": 41.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524874434.1, "ph": "X", "cat": "fee", "dur": 91.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524874389.1, "ph": "X", "cat": "fee", "dur": 137.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524874529.9, "ph": "X", "cat": "fee", "dur": 987.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524874527.2, "ph": "X", "cat": "fee", "dur": 991.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524875524.5, "ph": "X", "cat": "fee", "dur": 28.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524875522.6, "ph": "X", "cat": "fee", "dur": 30.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524875555.5, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524875565.1, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524875554.7, "ph": "X", "cat": "fee", "dur": 17.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524875577.0, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524875586.1, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524875592.2, "ph": "X", "cat": "fee", "dur": 25.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524875619.9, "ph": "X", "cat": "fee", "dur": 23370.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524875576.0, "ph": "X", "cat": "fee", "dur": 23415.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524899105.6, "ph": "X", "cat": "fee", "dur": 26.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524899132.7, "ph": "X", "cat": "fee", "dur": 61.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524899104.6, "ph": "X", "cat": "fee", "dur": 90.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524899198.6, "ph": "X", "cat": "fee", "dur": 96.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524899196.5, "ph": "X", "cat": "fee", "dur": 99.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524899299.8, "ph": "X", "cat": "fee", "dur": 50.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524899298.8, "ph": "X", "cat": "fee", "dur": 52.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524899353.6, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524899363.7, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524899352.6, "ph": "X", "cat": "fee", "dur": 14.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524899371.3, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524899379.1, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524899384.8, "ph": "X", "cat": "fee", "dur": 24.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524899410.8, "ph": "X", "cat": "fee", "dur": 26571.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524899370.4, "ph": "X", "cat": "fee", "dur": 26613.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524926090.9, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524926114.9, "ph": "X", "cat": "fee", "dur": 58.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524926090.1, "ph": "X", "cat": "fee", "dur": 83.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524926176.2, "ph": "X", "cat": "fee", "dur": 324.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524926174.4, "ph": "X", "cat": "fee", "dur": 327.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524926505.5, "ph": "X", "cat": "fee", "dur": 26.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524926504.4, "ph": "X", "cat": "fee", "dur": 27.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524926534.5, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524926544.2, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524926533.3, "ph": "X", "cat": "fee", "dur": 14.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524926552.2, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524926559.9, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524926565.4, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524926589.5, "ph": "X", "cat": "fee", "dur": 34779.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524926551.3, "ph": "X", "cat": "fee", "dur": 34820.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524961529.6, "ph": "X", "cat": "fee", "dur": 42.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524961573.9, "ph": "X", "cat": "fee", "dur": 84.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524961527.7, "ph": "X", "cat": "fee", "dur": 130.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524961662.7, "ph": "X", "cat": "fee", "dur": 114.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524961660.3, "ph": "X", "cat": "fee", "dur": 117.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524961783.3, "ph": "X", "cat": "fee", "dur": 49.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524961781.9, "ph": "X", "cat": "fee", "dur": 51.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524961838.8, "ph": "X", "cat": "fee", "dur": 11.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524961851.2, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524961836.5, "ph": "X", "cat": "fee", "dur": 19.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524961861.3, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524961871.6, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524961879.3, "ph": "X", "cat": "fee", "dur": 30.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524961911.8, "ph": "X", "cat": "fee", "dur": 31708.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524961860.1, "ph": "X", "cat": "fee", "dur": 31761.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438524993712.3, "ph": "X", "cat": "fee", "dur": 18.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438524993732.2, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438524993711.7, "ph": "X", "cat": "fee", "dur": 71.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438524993786.4, "ph": "X", "cat": "fee", "dur": 72.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524993784.7, "ph": "X", "cat": "fee", "dur": 74.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438524993863.1, "ph": "X", "cat": "fee", "dur": 39.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524993862.1, "ph": "X", "cat": "fee", "dur": 40.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438524993905.1, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438524993914.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438524993904.1, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438524993921.1, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438524993927.6, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438524993932.7, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438524993956.4, "ph": "X", "cat": "fee", "dur": 16767.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438524993920.2, "ph": "X", "cat": "fee", "dur": 16806.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525010867.5, "ph": "X", "cat": "fee", "dur": 26.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525010895.0, "ph": "X", "cat": "fee", "dur": 69.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525010866.6, "ph": "X", "cat": "fee", "dur": 97.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525010969.6, "ph": "X", "cat": "fee", "dur": 262.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525010965.9, "ph": "X", "cat": "fee", "dur": 267.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525011236.9, "ph": "X", "cat": "fee", "dur": 27.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525011235.8, "ph": "X", "cat": "fee", "dur": 29.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525011269.7, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525011282.1, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525011267.4, "ph": "X", "cat": "fee", "dur": 19.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525011291.6, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525011299.9, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525011306.1, "ph": "X", "cat": "fee", "dur": 22.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525011329.8, "ph": "X", "cat": "fee", "dur": 44702.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525011290.2, "ph": "X", "cat": "fee", "dur": 44742.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525056122.8, "ph": "X", "cat": "fee", "dur": 19.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525056142.7, "ph": "X", "cat": "fee", "dur": 49.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525056122.1, "ph": "X", "cat": "fee", "dur": 70.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525056195.8, "ph": "X", "cat": "fee", "dur": 403.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525056194.0, "ph": "X", "cat": "fee", "dur": 405.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525056603.0, "ph": "X", "cat": "fee", "dur": 26.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525056601.9, "ph": "X", "cat": "fee", "dur": 28.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525056632.9, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525056644.8, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525056631.6, "ph": "X", "cat": "fee", "dur": 16.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525056648.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438525056652.4, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525056658.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525056664.0, "ph": "X", "cat": "fee", "dur": 19.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525056685.0, "ph": "X", "cat": "fee", "dur": 29205.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525056651.4, "ph": "X", "cat": "fee", "dur": 29240.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525086003.9, "ph": "X", "cat": "fee", "dur": 29.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525086034.2, "ph": "X", "cat": "fee", "dur": 65.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525086003.1, "ph": "X", "cat": "fee", "dur": 96.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525086102.9, "ph": "X", "cat": "fee", "dur": 78.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525086100.9, "ph": "X", "cat": "fee", "dur": 80.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525086184.1, "ph": "X", "cat": "fee", "dur": 36.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525086183.1, "ph": "X", "cat": "fee", "dur": 38.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525086223.1, "ph": "X", "cat": "fee", "dur": 11.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525086235.4, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525086222.1, "ph": "X", "cat": "fee", "dur": 16.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525086239.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438525086243.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525086250.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525086255.1, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525086277.7, "ph": "X", "cat": "fee", "dur": 22556.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525086242.0, "ph": "X", "cat": "fee", "dur": 22593.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525108929.3, "ph": "X", "cat": "fee", "dur": 20.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525108950.6, "ph": "X", "cat": "fee", "dur": 53.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525108928.5, "ph": "X", "cat": "fee", "dur": 76.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525109008.6, "ph": "X", "cat": "fee", "dur": 273.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525109006.5, "ph": "X", "cat": "fee", "dur": 275.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525109286.3, "ph": "X", "cat": "fee", "dur": 27.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525109284.9, "ph": "X", "cat": "fee", "dur": 29.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525109317.1, "ph": "X", "cat": "fee", "dur": 12.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525109330.2, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525109315.7, "ph": "X", "cat": "fee", "dur": 18.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525109334.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438525109340.1, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525109347.9, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525109354.2, "ph": "X", "cat": "fee", "dur": 26.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525109383.0, "ph": "X", "cat": "fee", "dur": 38138.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525109339.0, "ph": "X", "cat": "fee", "dur": 38184.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525147623.6, "ph": "X", "cat": "fee", "dur": 22.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525147646.6, "ph": "X", "cat": "fee", "dur": 54.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525147622.8, "ph": "X", "cat": "fee", "dur": 78.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525147704.7, "ph": "X", "cat": "fee", "dur": 78.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525147702.8, "ph": "X", "cat": "fee", "dur": 80.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525147786.9, "ph": "X", "cat": "fee", "dur": 48.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525147785.6, "ph": "X", "cat": "fee", "dur": 49.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525147837.5, "ph": "X", "cat": "fee", "dur": 12.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525147850.0, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525147836.4, "ph": "X", "cat": "fee", "dur": 16.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525147853.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438525147857.2, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525147863.6, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525147868.8, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525147890.8, "ph": "X", "cat": "fee", "dur": 32087.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525147856.0, "ph": "X", "cat": "fee", "dur": 32124.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525180098.0, "ph": "X", "cat": "fee", "dur": 25.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525180124.5, "ph": "X", "cat": "fee", "dur": 60.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525180097.1, "ph": "X", "cat": "fee", "dur": 87.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525180187.9, "ph": "X", "cat": "fee", "dur": 1050.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525180185.9, "ph": "X", "cat": "fee", "dur": 1052.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525181242.0, "ph": "X", "cat": "fee", "dur": 50.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525181240.6, "ph": "X", "cat": "fee", "dur": 51.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525181294.8, "ph": "X", "cat": "fee", "dur": 11.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525181306.7, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525181293.7, "ph": "X", "cat": "fee", "dur": 16.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525181311.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438525181315.5, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525181323.3, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525181328.6, "ph": "X", "cat": "fee", "dur": 22.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525181352.7, "ph": "X", "cat": "fee", "dur": 19637.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525181314.5, "ph": "X", "cat": "fee", "dur": 19677.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525201085.8, "ph": "X", "cat": "fee", "dur": 22.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525201108.7, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525201085.0, "ph": "X", "cat": "fee", "dur": 75.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525201163.1, "ph": "X", "cat": "fee", "dur": 74.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525201161.2, "ph": "X", "cat": "fee", "dur": 76.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525201241.4, "ph": "X", "cat": "fee", "dur": 38.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525201240.5, "ph": "X", "cat": "fee", "dur": 40.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525201282.7, "ph": "X", "cat": "fee", "dur": 12.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525201295.6, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525201281.8, "ph": "X", "cat": "fee", "dur": 16.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525201298.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438525201302.8, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525201309.6, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525201314.2, "ph": "X", "cat": "fee", "dur": 25.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525201341.3, "ph": "X", "cat": "fee", "dur": 23583.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525201301.9, "ph": "X", "cat": "fee", "dur": 23623.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525225022.4, "ph": "X", "cat": "fee", "dur": 19.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525225042.5, "ph": "X", "cat": "fee", "dur": 51.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525225021.6, "ph": "X", "cat": "fee", "dur": 72.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525225097.1, "ph": "X", "cat": "fee", "dur": 71.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525225095.3, "ph": "X", "cat": "fee", "dur": 74.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525225172.1, "ph": "X", "cat": "fee", "dur": 28.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525225171.1, "ph": "X", "cat": "fee", "dur": 29.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525225203.5, "ph": "X", "cat": "fee", "dur": 12.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525225216.1, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525225202.4, "ph": "X", "cat": "fee", "dur": 17.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525225219.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438525225223.6, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525225230.1, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525225234.7, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525225256.3, "ph": "X", "cat": "fee", "dur": 20723.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525225222.6, "ph": "X", "cat": "fee", "dur": 20758.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525246159.5, "ph": "X", "cat": "fee", "dur": 36.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525246196.7, "ph": "X", "cat": "fee", "dur": 72.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525246158.0, "ph": "X", "cat": "fee", "dur": 111.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525246272.6, "ph": "X", "cat": "fee", "dur": 96.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525246270.3, "ph": "X", "cat": "fee", "dur": 99.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525246373.0, "ph": "X", "cat": "fee", "dur": 38.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525246372.1, "ph": "X", "cat": "fee", "dur": 39.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525246414.2, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525246425.0, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525246412.9, "ph": "X", "cat": "fee", "dur": 16.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525246434.7, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525246444.0, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525246450.4, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525246474.5, "ph": "X", "cat": "fee", "dur": 12513.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525246433.1, "ph": "X", "cat": "fee", "dur": 12556.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525259096.6, "ph": "X", "cat": "fee", "dur": 20.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525259117.7, "ph": "X", "cat": "fee", "dur": 50.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525259095.9, "ph": "X", "cat": "fee", "dur": 72.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525259171.1, "ph": "X", "cat": "fee", "dur": 291.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525259169.4, "ph": "X", "cat": "fee", "dur": 294.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525259467.6, "ph": "X", "cat": "fee", "dur": 27.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525259466.4, "ph": "X", "cat": "fee", "dur": 28.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525259498.1, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525259507.7, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525259496.6, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525259514.8, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525259521.4, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525259526.0, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525259548.0, "ph": "X", "cat": "fee", "dur": 33251.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525259513.6, "ph": "X", "cat": "fee", "dur": 33287.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525292898.7, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525292922.6, "ph": "X", "cat": "fee", "dur": 51.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525292897.9, "ph": "X", "cat": "fee", "dur": 76.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525292976.7, "ph": "X", "cat": "fee", "dur": 419.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525292975.1, "ph": "X", "cat": "fee", "dur": 421.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525293399.6, "ph": "X", "cat": "fee", "dur": 28.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525293398.5, "ph": "X", "cat": "fee", "dur": 29.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525293430.3, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525293440.3, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525293429.2, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525293447.0, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525293453.3, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525293458.2, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525293479.6, "ph": "X", "cat": "fee", "dur": 13022.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525293446.0, "ph": "X", "cat": "fee", "dur": 13056.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525306594.0, "ph": "X", "cat": "fee", "dur": 18.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525306613.8, "ph": "X", "cat": "fee", "dur": 49.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525306593.3, "ph": "X", "cat": "fee", "dur": 70.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525306666.7, "ph": "X", "cat": "fee", "dur": 71.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525306664.9, "ph": "X", "cat": "fee", "dur": 73.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525306741.6, "ph": "X", "cat": "fee", "dur": 26.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525306740.7, "ph": "X", "cat": "fee", "dur": 27.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525306770.8, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525306780.2, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525306769.8, "ph": "X", "cat": "fee", "dur": 13.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525306786.3, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525306792.5, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525306797.4, "ph": "X", "cat": "fee", "dur": 20.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525306819.5, "ph": "X", "cat": "fee", "dur": 42764.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525306785.3, "ph": "X", "cat": "fee", "dur": 42800.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525349684.6, "ph": "X", "cat": "fee", "dur": 21.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525349706.9, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525349683.7, "ph": "X", "cat": "fee", "dur": 74.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525349761.0, "ph": "X", "cat": "fee", "dur": 73.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525349759.2, "ph": "X", "cat": "fee", "dur": 75.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525349837.9, "ph": "X", "cat": "fee", "dur": 40.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525349837.0, "ph": "X", "cat": "fee", "dur": 41.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525349880.4, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525349890.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525349879.5, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525349896.3, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525349902.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525349907.4, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525349928.9, "ph": "X", "cat": "fee", "dur": 33467.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525349895.5, "ph": "X", "cat": "fee", "dur": 33502.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525383487.5, "ph": "X", "cat": "fee", "dur": 18.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525383506.7, "ph": "X", "cat": "fee", "dur": 49.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525383486.8, "ph": "X", "cat": "fee", "dur": 69.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525383559.6, "ph": "X", "cat": "fee", "dur": 842.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525383557.7, "ph": "X", "cat": "fee", "dur": 844.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525384405.1, "ph": "X", "cat": "fee", "dur": 38.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525384404.0, "ph": "X", "cat": "fee", "dur": 39.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525384446.2, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525384455.8, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525384445.0, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525384462.8, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525384469.7, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525384474.2, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525384495.5, "ph": "X", "cat": "fee", "dur": 17323.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525384461.8, "ph": "X", "cat": "fee", "dur": 17358.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525401909.2, "ph": "X", "cat": "fee", "dur": 18.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525401928.6, "ph": "X", "cat": "fee", "dur": 49.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525401908.4, "ph": "X", "cat": "fee", "dur": 70.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525401981.6, "ph": "X", "cat": "fee", "dur": 311.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525401979.6, "ph": "X", "cat": "fee", "dur": 314.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525402297.7, "ph": "X", "cat": "fee", "dur": 34.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525402296.3, "ph": "X", "cat": "fee", "dur": 36.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525402334.5, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525402344.3, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525402333.5, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525402351.0, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525402357.6, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525402363.0, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525402385.0, "ph": "X", "cat": "fee", "dur": 24466.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525402350.1, "ph": "X", "cat": "fee", "dur": 24502.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525426962.3, "ph": "X", "cat": "fee", "dur": 22.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525426985.1, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525426961.7, "ph": "X", "cat": "fee", "dur": 75.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525427040.1, "ph": "X", "cat": "fee", "dur": 866.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525427038.3, "ph": "X", "cat": "fee", "dur": 869.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525427913.6, "ph": "X", "cat": "fee", "dur": 37.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525427911.4, "ph": "X", "cat": "fee", "dur": 40.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525427955.2, "ph": "X", "cat": "fee", "dur": 9.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525427965.5, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525427953.9, "ph": "X", "cat": "fee", "dur": 17.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525427976.5, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525427985.5, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525427992.2, "ph": "X", "cat": "fee", "dur": 24.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525428018.7, "ph": "X", "cat": "fee", "dur": 14584.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525427975.4, "ph": "X", "cat": "fee", "dur": 14629.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525442734.8, "ph": "X", "cat": "fee", "dur": 25.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525442761.1, "ph": "X", "cat": "fee", "dur": 68.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525442733.7, "ph": "X", "cat": "fee", "dur": 95.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525442832.6, "ph": "X", "cat": "fee", "dur": 88.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525442830.5, "ph": "X", "cat": "fee", "dur": 90.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525442925.0, "ph": "X", "cat": "fee", "dur": 39.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525442923.8, "ph": "X", "cat": "fee", "dur": 40.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525442966.8, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525442976.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525442965.8, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525442982.7, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525442989.3, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525442994.5, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525443018.3, "ph": "X", "cat": "fee", "dur": 14371.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525442981.8, "ph": "X", "cat": "fee", "dur": 14409.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525457509.6, "ph": "X", "cat": "fee", "dur": 26.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525457537.3, "ph": "X", "cat": "fee", "dur": 61.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525457508.2, "ph": "X", "cat": "fee", "dur": 91.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525457602.7, "ph": "X", "cat": "fee", "dur": 130.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525457600.3, "ph": "X", "cat": "fee", "dur": 133.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525457736.6, "ph": "X", "cat": "fee", "dur": 36.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525457735.6, "ph": "X", "cat": "fee", "dur": 37.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525457775.3, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525457785.2, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525457774.5, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525457792.1, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525457799.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525457803.7, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525457826.3, "ph": "X", "cat": "fee", "dur": 25200.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525457791.2, "ph": "X", "cat": "fee", "dur": 25236.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525483138.4, "ph": "X", "cat": "fee", "dur": 23.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525483162.3, "ph": "X", "cat": "fee", "dur": 55.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525483137.3, "ph": "X", "cat": "fee", "dur": 80.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525483220.8, "ph": "X", "cat": "fee", "dur": 408.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525483219.0, "ph": "X", "cat": "fee", "dur": 410.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525483632.9, "ph": "X", "cat": "fee", "dur": 29.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525483631.7, "ph": "X", "cat": "fee", "dur": 30.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525483664.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525483674.5, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525483663.9, "ph": "X", "cat": "fee", "dur": 14.02, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525483681.6, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525483688.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525483693.4, "ph": "X", "cat": "fee", "dur": 21.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525483716.1, "ph": "X", "cat": "fee", "dur": 20710.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525483680.6, "ph": "X", "cat": "fee", "dur": 20746.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525504525.8, "ph": "X", "cat": "fee", "dur": 21.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525504548.5, "ph": "X", "cat": "fee", "dur": 56.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525504525.2, "ph": "X", "cat": "fee", "dur": 79.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525504607.8, "ph": "X", "cat": "fee", "dur": 81.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525504605.8, "ph": "X", "cat": "fee", "dur": 83.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525504692.4, "ph": "X", "cat": "fee", "dur": 41.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525504691.5, "ph": "X", "cat": "fee", "dur": 43.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525504736.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525504746.6, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525504735.8, "ph": "X", "cat": "fee", "dur": 14.02, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525504753.7, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525504760.7, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525504766.1, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525504789.6, "ph": "X", "cat": "fee", "dur": 16703.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525504752.7, "ph": "X", "cat": "fee", "dur": 16741.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525521584.7, "ph": "X", "cat": "fee", "dur": 17.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525521603.3, "ph": "X", "cat": "fee", "dur": 49.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525521583.7, "ph": "X", "cat": "fee", "dur": 69.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525521655.9, "ph": "X", "cat": "fee", "dur": 359.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525521653.9, "ph": "X", "cat": "fee", "dur": 362.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525522019.5, "ph": "X", "cat": "fee", "dur": 27.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525522018.4, "ph": "X", "cat": "fee", "dur": 28.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525522049.3, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525522058.5, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525522048.4, "ph": "X", "cat": "fee", "dur": 12.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525522064.7, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525522071.6, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525522076.7, "ph": "X", "cat": "fee", "dur": 19.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525522097.6, "ph": "X", "cat": "fee", "dur": 20528.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525522063.8, "ph": "X", "cat": "fee", "dur": 20563.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525542743.3, "ph": "X", "cat": "fee", "dur": 28.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525542772.9, "ph": "X", "cat": "fee", "dur": 74.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525542741.7, "ph": "X", "cat": "fee", "dur": 106.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525542851.3, "ph": "X", "cat": "fee", "dur": 789.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525542849.4, "ph": "X", "cat": "fee", "dur": 793.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525543651.7, "ph": "X", "cat": "fee", "dur": 49.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525543648.2, "ph": "X", "cat": "fee", "dur": 53.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525543705.2, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525543716.1, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525543703.9, "ph": "X", "cat": "fee", "dur": 19.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525543730.5, "ph": "X", "cat": "fee", "dur": 10.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525543742.7, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525543751.1, "ph": "X", "cat": "fee", "dur": 34.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525543788.7, "ph": "X", "cat": "fee", "dur": 27588.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525543729.0, "ph": "X", "cat": "fee", "dur": 27649.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525571492.6, "ph": "X", "cat": "fee", "dur": 23.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525571517.5, "ph": "X", "cat": "fee", "dur": 61.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525571491.6, "ph": "X", "cat": "fee", "dur": 87.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525571581.8, "ph": "X", "cat": "fee", "dur": 79.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525571579.6, "ph": "X", "cat": "fee", "dur": 82.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525571664.8, "ph": "X", "cat": "fee", "dur": 43.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525571664.0, "ph": "X", "cat": "fee", "dur": 44.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525571710.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525571720.7, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525571709.9, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525571727.5, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525571734.3, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525571739.9, "ph": "X", "cat": "fee", "dur": 21.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525571763.4, "ph": "X", "cat": "fee", "dur": 23202.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525571726.5, "ph": "X", "cat": "fee", "dur": 23240.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525595098.3, "ph": "X", "cat": "fee", "dur": 34.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525595133.7, "ph": "X", "cat": "fee", "dur": 91.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525595096.8, "ph": "X", "cat": "fee", "dur": 128.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525595229.8, "ph": "X", "cat": "fee", "dur": 396.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525595227.0, "ph": "X", "cat": "fee", "dur": 399.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525595633.4, "ph": "X", "cat": "fee", "dur": 53.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525595630.7, "ph": "X", "cat": "fee", "dur": 55.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525595689.9, "ph": "X", "cat": "fee", "dur": 11.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525595702.3, "ph": "X", "cat": "fee", "dur": 10.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525595688.6, "ph": "X", "cat": "fee", "dur": 24.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525595718.8, "ph": "X", "cat": "fee", "dur": 12.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525595732.9, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525595742.1, "ph": "X", "cat": "fee", "dur": 38.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525595784.0, "ph": "X", "cat": "fee", "dur": 26567.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525595717.6, "ph": "X", "cat": "fee", "dur": 26635.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525622458.2, "ph": "X", "cat": "fee", "dur": 24.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525622483.4, "ph": "X", "cat": "fee", "dur": 56.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525622457.3, "ph": "X", "cat": "fee", "dur": 82.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525622542.9, "ph": "X", "cat": "fee", "dur": 426.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525622540.8, "ph": "X", "cat": "fee", "dur": 429.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525622974.6, "ph": "X", "cat": "fee", "dur": 26.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525622973.5, "ph": "X", "cat": "fee", "dur": 28.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525623003.7, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525623013.2, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525623002.6, "ph": "X", "cat": "fee", "dur": 14.62, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525623021.5, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525623028.8, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525623034.0, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525623058.0, "ph": "X", "cat": "fee", "dur": 23424.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525623020.5, "ph": "X", "cat": "fee", "dur": 23463.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525646620.6, "ph": "X", "cat": "fee", "dur": 38.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525646660.1, "ph": "X", "cat": "fee", "dur": 77.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525646619.3, "ph": "X", "cat": "fee", "dur": 118.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525646740.4, "ph": "X", "cat": "fee", "dur": 461.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525646738.5, "ph": "X", "cat": "fee", "dur": 463.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525647208.0, "ph": "X", "cat": "fee", "dur": 48.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525647205.9, "ph": "X", "cat": "fee", "dur": 51.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525647260.7, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525647271.4, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525647259.2, "ph": "X", "cat": "fee", "dur": 17.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525647283.1, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525647293.0, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525647300.0, "ph": "X", "cat": "fee", "dur": 27.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525647329.3, "ph": "X", "cat": "fee", "dur": 31020.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525647281.7, "ph": "X", "cat": "fee", "dur": 31070.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525678478.5, "ph": "X", "cat": "fee", "dur": 26.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525678506.4, "ph": "X", "cat": "fee", "dur": 66.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525678477.7, "ph": "X", "cat": "fee", "dur": 95.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525678576.7, "ph": "X", "cat": "fee", "dur": 107.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525678574.2, "ph": "X", "cat": "fee", "dur": 110.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525678688.8, "ph": "X", "cat": "fee", "dur": 57.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525678687.3, "ph": "X", "cat": "fee", "dur": 59.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525678749.4, "ph": "X", "cat": "fee", "dur": 10.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525678761.0, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525678747.9, "ph": "X", "cat": "fee", "dur": 18.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525678771.1, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525678779.7, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525678786.3, "ph": "X", "cat": "fee", "dur": 37.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525678825.8, "ph": "X", "cat": "fee", "dur": 32033.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525678769.8, "ph": "X", "cat": "fee", "dur": 32090.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525710965.5, "ph": "X", "cat": "fee", "dur": 21.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525710988.2, "ph": "X", "cat": "fee", "dur": 53.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525710964.9, "ph": "X", "cat": "fee", "dur": 76.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525711044.7, "ph": "X", "cat": "fee", "dur": 619.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525711042.9, "ph": "X", "cat": "fee", "dur": 624.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525711677.9, "ph": "X", "cat": "fee", "dur": 95.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525711674.9, "ph": "X", "cat": "fee", "dur": 99.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525711779.2, "ph": "X", "cat": "fee", "dur": 16.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525711796.7, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525711777.2, "ph": "X", "cat": "fee", "dur": 29.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525711817.4, "ph": "X", "cat": "fee", "dur": 15.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525711833.9, "ph": "X", "cat": "fee", "dur": 10.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525711845.3, "ph": "X", "cat": "fee", "dur": 44.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525711894.1, "ph": "X", "cat": "fee", "dur": 27207.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525711815.7, "ph": "X", "cat": "fee", "dur": 27286.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525739195.0, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525739215.9, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525739194.3, "ph": "X", "cat": "fee", "dur": 73.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525739270.8, "ph": "X", "cat": "fee", "dur": 668.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525739269.1, "ph": "X", "cat": "fee", "dur": 670.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525739943.9, "ph": "X", "cat": "fee", "dur": 28.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525739942.8, "ph": "X", "cat": "fee", "dur": 29.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525739975.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525739985.0, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525739973.9, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525739992.1, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525739998.6, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525740003.8, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525740026.0, "ph": "X", "cat": "fee", "dur": 24864.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525739990.8, "ph": "X", "cat": "fee", "dur": 24901.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525765032.0, "ph": "X", "cat": "fee", "dur": 29.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525765062.7, "ph": "X", "cat": "fee", "dur": 69.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525765031.0, "ph": "X", "cat": "fee", "dur": 101.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525765135.7, "ph": "X", "cat": "fee", "dur": 86.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525765133.5, "ph": "X", "cat": "fee", "dur": 89.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525765226.2, "ph": "X", "cat": "fee", "dur": 44.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525765225.3, "ph": "X", "cat": "fee", "dur": 45.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525765273.7, "ph": "X", "cat": "fee", "dur": 11.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525765285.4, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525765272.4, "ph": "X", "cat": "fee", "dur": 17.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525765312.3, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525765319.9, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525765325.8, "ph": "X", "cat": "fee", "dur": 22.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525765349.7, "ph": "X", "cat": "fee", "dur": 20259.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525765310.6, "ph": "X", "cat": "fee", "dur": 20299.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525785710.6, "ph": "X", "cat": "fee", "dur": 20.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525785732.4, "ph": "X", "cat": "fee", "dur": 54.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525785710.0, "ph": "X", "cat": "fee", "dur": 77.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525785790.4, "ph": "X", "cat": "fee", "dur": 360.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525785788.3, "ph": "X", "cat": "fee", "dur": 362.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525786154.4, "ph": "X", "cat": "fee", "dur": 28.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525786153.3, "ph": "X", "cat": "fee", "dur": 29.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525786184.8, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525786194.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525786184.0, "ph": "X", "cat": "fee", "dur": 13.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525786200.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525786207.0, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525786212.2, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525786234.2, "ph": "X", "cat": "fee", "dur": 22358.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525786199.6, "ph": "X", "cat": "fee", "dur": 22395.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525808698.0, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525808722.2, "ph": "X", "cat": "fee", "dur": 56.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525808697.1, "ph": "X", "cat": "fee", "dur": 82.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525808782.4, "ph": "X", "cat": "fee", "dur": 601.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525808780.3, "ph": "X", "cat": "fee", "dur": 604.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525809388.2, "ph": "X", "cat": "fee", "dur": 29.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525809387.0, "ph": "X", "cat": "fee", "dur": 30.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525809420.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525809429.7, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525809419.1, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525809437.6, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525809445.3, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525809450.8, "ph": "X", "cat": "fee", "dur": 22.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525809474.5, "ph": "X", "cat": "fee", "dur": 21322.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525809436.5, "ph": "X", "cat": "fee", "dur": 21361.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525830918.3, "ph": "X", "cat": "fee", "dur": 23.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525830943.3, "ph": "X", "cat": "fee", "dur": 60.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525830917.6, "ph": "X", "cat": "fee", "dur": 86.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525831007.5, "ph": "X", "cat": "fee", "dur": 419.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525831005.5, "ph": "X", "cat": "fee", "dur": 422.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525831431.3, "ph": "X", "cat": "fee", "dur": 27.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525831430.0, "ph": "X", "cat": "fee", "dur": 28.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525831460.8, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525831471.3, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525831459.7, "ph": "X", "cat": "fee", "dur": 15.52, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525831479.1, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525831486.0, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525831491.5, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525831515.5, "ph": "X", "cat": "fee", "dur": 17754.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525831478.0, "ph": "X", "cat": "fee", "dur": 17793.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525849374.0, "ph": "X", "cat": "fee", "dur": 21.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525849395.9, "ph": "X", "cat": "fee", "dur": 53.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525849373.2, "ph": "X", "cat": "fee", "dur": 76.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525849452.8, "ph": "X", "cat": "fee", "dur": 487.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525849451.0, "ph": "X", "cat": "fee", "dur": 490.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525849944.6, "ph": "X", "cat": "fee", "dur": 25.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525849943.6, "ph": "X", "cat": "fee", "dur": 26.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525849972.5, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525849982.4, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525849971.4, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525849989.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525849995.9, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525850001.1, "ph": "X", "cat": "fee", "dur": 20.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525850023.4, "ph": "X", "cat": "fee", "dur": 20046.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525849988.2, "ph": "X", "cat": "fee", "dur": 20082.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525870192.4, "ph": "X", "cat": "fee", "dur": 26.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525870219.7, "ph": "X", "cat": "fee", "dur": 62.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525870191.5, "ph": "X", "cat": "fee", "dur": 90.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525870285.2, "ph": "X", "cat": "fee", "dur": 249.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525870283.4, "ph": "X", "cat": "fee", "dur": 252.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525870538.2, "ph": "X", "cat": "fee", "dur": 26.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525870537.2, "ph": "X", "cat": "fee", "dur": 27.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525870566.6, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525870576.3, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525870565.6, "ph": "X", "cat": "fee", "dur": 15.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525870585.4, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525870592.0, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525870597.4, "ph": "X", "cat": "fee", "dur": 21.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525870620.9, "ph": "X", "cat": "fee", "dur": 15093.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525870583.7, "ph": "X", "cat": "fee", "dur": 15132.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525885803.1, "ph": "X", "cat": "fee", "dur": 19.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525885823.2, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525885802.4, "ph": "X", "cat": "fee", "dur": 72.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525885877.2, "ph": "X", "cat": "fee", "dur": 220.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525885875.5, "ph": "X", "cat": "fee", "dur": 223.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525886101.6, "ph": "X", "cat": "fee", "dur": 24.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525886100.5, "ph": "X", "cat": "fee", "dur": 25.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525886128.8, "ph": "X", "cat": "fee", "dur": 9.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525886139.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525886127.6, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525886145.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525886152.1, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525886157.0, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525886178.5, "ph": "X", "cat": "fee", "dur": 22746.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525886144.6, "ph": "X", "cat": "fee", "dur": 22782.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525909018.8, "ph": "X", "cat": "fee", "dur": 21.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525909041.0, "ph": "X", "cat": "fee", "dur": 59.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525909018.1, "ph": "X", "cat": "fee", "dur": 82.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525909103.7, "ph": "X", "cat": "fee", "dur": 474.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525909101.7, "ph": "X", "cat": "fee", "dur": 477.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525909583.3, "ph": "X", "cat": "fee", "dur": 30.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525909581.9, "ph": "X", "cat": "fee", "dur": 32.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525909616.5, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525909627.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525909615.4, "ph": "X", "cat": "fee", "dur": 15.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525909636.0, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525909643.8, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525909649.4, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525909674.9, "ph": "X", "cat": "fee", "dur": 16768.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525909635.1, "ph": "X", "cat": "fee", "dur": 16809.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525926532.8, "ph": "X", "cat": "fee", "dur": 18.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525926551.8, "ph": "X", "cat": "fee", "dur": 50.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525926532.2, "ph": "X", "cat": "fee", "dur": 69.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525926604.7, "ph": "X", "cat": "fee", "dur": 293.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525926602.9, "ph": "X", "cat": "fee", "dur": 295.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525926901.3, "ph": "X", "cat": "fee", "dur": 26.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525926900.1, "ph": "X", "cat": "fee", "dur": 28.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525926931.0, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525926940.9, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525926930.1, "ph": "X", "cat": "fee", "dur": 13.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525926947.7, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525926954.0, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525926958.5, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525926980.3, "ph": "X", "cat": "fee", "dur": 15354.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525926946.6, "ph": "X", "cat": "fee", "dur": 15389.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525942425.1, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525942445.0, "ph": "X", "cat": "fee", "dur": 51.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525942424.3, "ph": "X", "cat": "fee", "dur": 71.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525942499.2, "ph": "X", "cat": "fee", "dur": 72.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525942497.5, "ph": "X", "cat": "fee", "dur": 74.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525942574.4, "ph": "X", "cat": "fee", "dur": 29.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525942573.6, "ph": "X", "cat": "fee", "dur": 30.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525942606.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525942616.0, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525942605.1, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525942622.6, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525942628.9, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525942633.8, "ph": "X", "cat": "fee", "dur": 20.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525942656.0, "ph": "X", "cat": "fee", "dur": 20621.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525942621.3, "ph": "X", "cat": "fee", "dur": 20659.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525963528.6, "ph": "X", "cat": "fee", "dur": 61.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525963591.7, "ph": "X", "cat": "fee", "dur": 109.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525963526.6, "ph": "X", "cat": "fee", "dur": 175.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525963705.7, "ph": "X", "cat": "fee", "dur": 520.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525963703.4, "ph": "X", "cat": "fee", "dur": 523.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525964233.1, "ph": "X", "cat": "fee", "dur": 35.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525964231.1, "ph": "X", "cat": "fee", "dur": 37.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525964272.4, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525964284.4, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525964270.9, "ph": "X", "cat": "fee", "dur": 21.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525964299.3, "ph": "X", "cat": "fee", "dur": 12.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525964312.4, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525964321.5, "ph": "X", "cat": "fee", "dur": 31.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525964355.6, "ph": "X", "cat": "fee", "dur": 21383.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525964297.7, "ph": "X", "cat": "fee", "dur": 21443.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438525985921.6, "ph": "X", "cat": "fee", "dur": 55.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438525985978.8, "ph": "X", "cat": "fee", "dur": 134.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438525985919.3, "ph": "X", "cat": "fee", "dur": 194.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438525986119.0, "ph": "X", "cat": "fee", "dur": 709.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525986115.6, "ph": "X", "cat": "fee", "dur": 715.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438525986841.3, "ph": "X", "cat": "fee", "dur": 43.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525986838.1, "ph": "X", "cat": "fee", "dur": 47.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438525986890.0, "ph": "X", "cat": "fee", "dur": 15.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438525986906.4, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438525986888.1, "ph": "X", "cat": "fee", "dur": 26.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438525986924.3, "ph": "X", "cat": "fee", "dur": 12.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438525986938.5, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438525986948.2, "ph": "X", "cat": "fee", "dur": 42.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438525986994.8, "ph": "X", "cat": "fee", "dur": 25358.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438525986922.7, "ph": "X", "cat": "fee", "dur": 25431.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526012478.7, "ph": "X", "cat": "fee", "dur": 34.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526012515.0, "ph": "X", "cat": "fee", "dur": 68.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526012477.8, "ph": "X", "cat": "fee", "dur": 106.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526012587.1, "ph": "X", "cat": "fee", "dur": 145.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526012584.8, "ph": "X", "cat": "fee", "dur": 147.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526012736.4, "ph": "X", "cat": "fee", "dur": 32.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526012735.2, "ph": "X", "cat": "fee", "dur": 34.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526012772.2, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526012782.9, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526012770.9, "ph": "X", "cat": "fee", "dur": 15.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526012791.2, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526012799.3, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526012805.7, "ph": "X", "cat": "fee", "dur": 26.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526012834.3, "ph": "X", "cat": "fee", "dur": 14282.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526012790.0, "ph": "X", "cat": "fee", "dur": 14327.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526027225.8, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526027250.0, "ph": "X", "cat": "fee", "dur": 54.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526027225.1, "ph": "X", "cat": "fee", "dur": 79.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526027307.4, "ph": "X", "cat": "fee", "dur": 404.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526027305.3, "ph": "X", "cat": "fee", "dur": 407.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526027717.6, "ph": "X", "cat": "fee", "dur": 31.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526027715.7, "ph": "X", "cat": "fee", "dur": 33.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526027752.1, "ph": "X", "cat": "fee", "dur": 11.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526027764.1, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526027751.1, "ph": "X", "cat": "fee", "dur": 18.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526027775.1, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526027784.3, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526027790.6, "ph": "X", "cat": "fee", "dur": 26.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526027818.9, "ph": "X", "cat": "fee", "dur": 19944.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526027773.9, "ph": "X", "cat": "fee", "dur": 19992.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526047998.6, "ph": "X", "cat": "fee", "dur": 42.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526048042.4, "ph": "X", "cat": "fee", "dur": 111.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526047996.6, "ph": "X", "cat": "fee", "dur": 157.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526048158.5, "ph": "X", "cat": "fee", "dur": 527.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526048155.9, "ph": "X", "cat": "fee", "dur": 530.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526048692.6, "ph": "X", "cat": "fee", "dur": 30.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526048689.9, "ph": "X", "cat": "fee", "dur": 33.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526048728.5, "ph": "X", "cat": "fee", "dur": 13.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526048742.3, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526048726.5, "ph": "X", "cat": "fee", "dur": 25.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526048760.2, "ph": "X", "cat": "fee", "dur": 13.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526048774.8, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526048783.6, "ph": "X", "cat": "fee", "dur": 36.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526048822.7, "ph": "X", "cat": "fee", "dur": 15386.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526048758.4, "ph": "X", "cat": "fee", "dur": 15452.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526064350.7, "ph": "X", "cat": "fee", "dur": 31.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526064383.7, "ph": "X", "cat": "fee", "dur": 73.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526064349.7, "ph": "X", "cat": "fee", "dur": 108.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526064461.4, "ph": "X", "cat": "fee", "dur": 358.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526064459.2, "ph": "X", "cat": "fee", "dur": 360.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526064823.7, "ph": "X", "cat": "fee", "dur": 26.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526064822.4, "ph": "X", "cat": "fee", "dur": 28.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526064853.1, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526064863.3, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526064852.1, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526064872.7, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526064880.0, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526064885.0, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526064907.7, "ph": "X", "cat": "fee", "dur": 27103.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526064871.6, "ph": "X", "cat": "fee", "dur": 27141.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526092110.5, "ph": "X", "cat": "fee", "dur": 22.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526092134.8, "ph": "X", "cat": "fee", "dur": 57.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526092109.5, "ph": "X", "cat": "fee", "dur": 82.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526092195.1, "ph": "X", "cat": "fee", "dur": 385.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526092193.2, "ph": "X", "cat": "fee", "dur": 387.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526092584.3, "ph": "X", "cat": "fee", "dur": 38.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526092583.2, "ph": "X", "cat": "fee", "dur": 40.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526092625.9, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526092636.1, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526092624.7, "ph": "X", "cat": "fee", "dur": 15.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526092644.0, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526092651.8, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526092657.3, "ph": "X", "cat": "fee", "dur": 22.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526092681.5, "ph": "X", "cat": "fee", "dur": 27944.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526092643.1, "ph": "X", "cat": "fee", "dur": 27983.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526120741.5, "ph": "X", "cat": "fee", "dur": 27.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526120770.3, "ph": "X", "cat": "fee", "dur": 73.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526120740.7, "ph": "X", "cat": "fee", "dur": 103.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526120846.8, "ph": "X", "cat": "fee", "dur": 93.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526120844.9, "ph": "X", "cat": "fee", "dur": 95.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526120947.0, "ph": "X", "cat": "fee", "dur": 41.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526120945.6, "ph": "X", "cat": "fee", "dur": 42.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526120991.2, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526121001.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526120990.0, "ph": "X", "cat": "fee", "dur": 16.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526121011.1, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526121019.9, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526121025.9, "ph": "X", "cat": "fee", "dur": 31.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526121059.3, "ph": "X", "cat": "fee", "dur": 26858.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526121010.0, "ph": "X", "cat": "fee", "dur": 26910.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526148219.3, "ph": "X", "cat": "fee", "dur": 64.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526148286.3, "ph": "X", "cat": "fee", "dur": 158.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526148215.6, "ph": "X", "cat": "fee", "dur": 229.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526148451.2, "ph": "X", "cat": "fee", "dur": 171.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526148447.3, "ph": "X", "cat": "fee", "dur": 176.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526148629.5, "ph": "X", "cat": "fee", "dur": 74.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526148627.3, "ph": "X", "cat": "fee", "dur": 76.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526148709.9, "ph": "X", "cat": "fee", "dur": 16.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526148727.5, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526148707.6, "ph": "X", "cat": "fee", "dur": 27.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526148743.6, "ph": "X", "cat": "fee", "dur": 13.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526148759.3, "ph": "X", "cat": "fee", "dur": 11.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526148771.9, "ph": "X", "cat": "fee", "dur": 41.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526148816.7, "ph": "X", "cat": "fee", "dur": 58470.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526148741.4, "ph": "X", "cat": "fee", "dur": 58550.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526207662.1, "ph": "X", "cat": "fee", "dur": 171.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526207838.4, "ph": "X", "cat": "fee", "dur": 306.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526207657.2, "ph": "X", "cat": "fee", "dur": 487.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526208153.1, "ph": "X", "cat": "fee", "dur": 837.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526208148.3, "ph": "X", "cat": "fee", "dur": 845.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526209007.0, "ph": "X", "cat": "fee", "dur": 64.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526209002.5, "ph": "X", "cat": "fee", "dur": 69.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526209076.8, "ph": "X", "cat": "fee", "dur": 16.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526209094.0, "ph": "X", "cat": "fee", "dur": 12.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526209074.6, "ph": "X", "cat": "fee", "dur": 32.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526209118.6, "ph": "X", "cat": "fee", "dur": 16.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526209136.7, "ph": "X", "cat": "fee", "dur": 10.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526209148.6, "ph": "X", "cat": "fee", "dur": 44.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526209196.0, "ph": "X", "cat": "fee", "dur": 35445.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526209116.4, "ph": "X", "cat": "fee", "dur": 35526.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526244739.6, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526244760.5, "ph": "X", "cat": "fee", "dur": 56.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526244738.3, "ph": "X", "cat": "fee", "dur": 78.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526244819.7, "ph": "X", "cat": "fee", "dur": 1143.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526244817.8, "ph": "X", "cat": "fee", "dur": 1147.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526245975.4, "ph": "X", "cat": "fee", "dur": 52.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526245971.4, "ph": "X", "cat": "fee", "dur": 56.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526246032.4, "ph": "X", "cat": "fee", "dur": 11.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526246044.8, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526246030.8, "ph": "X", "cat": "fee", "dur": 22.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526246060.6, "ph": "X", "cat": "fee", "dur": 14.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526246076.3, "ph": "X", "cat": "fee", "dur": 11.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526246088.0, "ph": "X", "cat": "fee", "dur": 37.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526246128.4, "ph": "X", "cat": "fee", "dur": 31039.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526246059.1, "ph": "X", "cat": "fee", "dur": 31109.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526277288.7, "ph": "X", "cat": "fee", "dur": 24.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526277313.7, "ph": "X", "cat": "fee", "dur": 58.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526277287.9, "ph": "X", "cat": "fee", "dur": 84.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526277375.7, "ph": "X", "cat": "fee", "dur": 885.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526277373.3, "ph": "X", "cat": "fee", "dur": 888.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526278265.6, "ph": "X", "cat": "fee", "dur": 29.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526278264.2, "ph": "X", "cat": "fee", "dur": 31.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526278298.4, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526278308.6, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526278297.0, "ph": "X", "cat": "fee", "dur": 15.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526278316.6, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526278323.9, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526278329.2, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526278354.8, "ph": "X", "cat": "fee", "dur": 32569.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526278315.6, "ph": "X", "cat": "fee", "dur": 32609.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526311021.6, "ph": "X", "cat": "fee", "dur": 18.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526311041.2, "ph": "X", "cat": "fee", "dur": 52.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526311020.9, "ph": "X", "cat": "fee", "dur": 73.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526311097.0, "ph": "X", "cat": "fee", "dur": 1476.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526311095.3, "ph": "X", "cat": "fee", "dur": 1481.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526312605.7, "ph": "X", "cat": "fee", "dur": 50.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526312581.3, "ph": "X", "cat": "fee", "dur": 74.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526312659.0, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526312671.0, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526312657.7, "ph": "X", "cat": "fee", "dur": 20.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526312686.1, "ph": "X", "cat": "fee", "dur": 10.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526312698.0, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526312706.4, "ph": "X", "cat": "fee", "dur": 31.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526312741.0, "ph": "X", "cat": "fee", "dur": 21311.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526312684.5, "ph": "X", "cat": "fee", "dur": 21369.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526334174.6, "ph": "X", "cat": "fee", "dur": 25.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526334201.3, "ph": "X", "cat": "fee", "dur": 62.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526334173.7, "ph": "X", "cat": "fee", "dur": 90.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526334267.4, "ph": "X", "cat": "fee", "dur": 78.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526334265.7, "ph": "X", "cat": "fee", "dur": 80.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526334349.0, "ph": "X", "cat": "fee", "dur": 28.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526334348.1, "ph": "X", "cat": "fee", "dur": 29.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526334380.5, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526334390.7, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526334379.4, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526334397.6, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526334404.7, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526334409.9, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526334433.0, "ph": "X", "cat": "fee", "dur": 48433.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526334396.5, "ph": "X", "cat": "fee", "dur": 48471.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526382989.2, "ph": "X", "cat": "fee", "dur": 33.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526383023.3, "ph": "X", "cat": "fee", "dur": 72.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526382988.0, "ph": "X", "cat": "fee", "dur": 108.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526383099.5, "ph": "X", "cat": "fee", "dur": 91.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526383097.5, "ph": "X", "cat": "fee", "dur": 93.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526383194.6, "ph": "X", "cat": "fee", "dur": 48.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526383193.6, "ph": "X", "cat": "fee", "dur": 49.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526383245.5, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526383255.4, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526383244.5, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526383263.6, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526383271.1, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526383277.5, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526383302.3, "ph": "X", "cat": "fee", "dur": 30078.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526383262.6, "ph": "X", "cat": "fee", "dur": 30121.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526413580.1, "ph": "X", "cat": "fee", "dur": 44.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526413626.5, "ph": "X", "cat": "fee", "dur": 113.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526413578.3, "ph": "X", "cat": "fee", "dur": 161.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526413744.6, "ph": "X", "cat": "fee", "dur": 882.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526413741.2, "ph": "X", "cat": "fee", "dur": 887.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526414638.5, "ph": "X", "cat": "fee", "dur": 51.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526414635.0, "ph": "X", "cat": "fee", "dur": 54.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526414693.3, "ph": "X", "cat": "fee", "dur": 12.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526414707.0, "ph": "X", "cat": "fee", "dur": 11.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526414692.1, "ph": "X", "cat": "fee", "dur": 26.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526414727.0, "ph": "X", "cat": "fee", "dur": 16.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526414744.8, "ph": "X", "cat": "fee", "dur": 11.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526414756.7, "ph": "X", "cat": "fee", "dur": 42.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526414802.8, "ph": "X", "cat": "fee", "dur": 45234.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526414725.4, "ph": "X", "cat": "fee", "dur": 45313.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526460153.9, "ph": "X", "cat": "fee", "dur": 23.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526460178.5, "ph": "X", "cat": "fee", "dur": 56.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526460152.9, "ph": "X", "cat": "fee", "dur": 82.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526460238.2, "ph": "X", "cat": "fee", "dur": 448.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526460236.2, "ph": "X", "cat": "fee", "dur": 451.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526460691.3, "ph": "X", "cat": "fee", "dur": 26.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526460690.1, "ph": "X", "cat": "fee", "dur": 28.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526460720.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526460730.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526460719.6, "ph": "X", "cat": "fee", "dur": 14.22, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526460737.6, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526460745.1, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526460750.5, "ph": "X", "cat": "fee", "dur": 22.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526460774.8, "ph": "X", "cat": "fee", "dur": 25177.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526460736.6, "ph": "X", "cat": "fee", "dur": 25217.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526486063.3, "ph": "X", "cat": "fee", "dur": 22.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526486086.7, "ph": "X", "cat": "fee", "dur": 53.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526486062.6, "ph": "X", "cat": "fee", "dur": 77.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526486142.5, "ph": "X", "cat": "fee", "dur": 77.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526486140.7, "ph": "X", "cat": "fee", "dur": 80.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526486224.0, "ph": "X", "cat": "fee", "dur": 33.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526486223.0, "ph": "X", "cat": "fee", "dur": 34.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526486259.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526486269.2, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526486258.8, "ph": "X", "cat": "fee", "dur": 13.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526486276.1, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526486282.2, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526486287.6, "ph": "X", "cat": "fee", "dur": 21.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526486310.9, "ph": "X", "cat": "fee", "dur": 36966.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526486274.8, "ph": "X", "cat": "fee", "dur": 37003.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526523394.7, "ph": "X", "cat": "fee", "dur": 26.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526523422.1, "ph": "X", "cat": "fee", "dur": 71.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526523393.8, "ph": "X", "cat": "fee", "dur": 99.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526523496.7, "ph": "X", "cat": "fee", "dur": 356.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526523494.4, "ph": "X", "cat": "fee", "dur": 359.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526523857.3, "ph": "X", "cat": "fee", "dur": 26.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526523856.3, "ph": "X", "cat": "fee", "dur": 27.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526523887.1, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526523897.2, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526523886.0, "ph": "X", "cat": "fee", "dur": 16.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526523906.7, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526523914.7, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526523920.9, "ph": "X", "cat": "fee", "dur": 22.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526523945.7, "ph": "X", "cat": "fee", "dur": 33581.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526523905.6, "ph": "X", "cat": "fee", "dur": 33623.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526557625.0, "ph": "X", "cat": "fee", "dur": 17.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526557643.8, "ph": "X", "cat": "fee", "dur": 51.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526557624.2, "ph": "X", "cat": "fee", "dur": 70.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526557698.6, "ph": "X", "cat": "fee", "dur": 348.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526557696.4, "ph": "X", "cat": "fee", "dur": 351.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526558051.8, "ph": "X", "cat": "fee", "dur": 28.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526558050.5, "ph": "X", "cat": "fee", "dur": 29.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526558082.4, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526558094.4, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526558081.3, "ph": "X", "cat": "fee", "dur": 19.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526558105.6, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526558113.5, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526558119.0, "ph": "X", "cat": "fee", "dur": 23.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526558144.1, "ph": "X", "cat": "fee", "dur": 24675.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526558104.6, "ph": "X", "cat": "fee", "dur": 24715.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526582921.2, "ph": "X", "cat": "fee", "dur": 23.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526582945.7, "ph": "X", "cat": "fee", "dur": 53.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526582920.4, "ph": "X", "cat": "fee", "dur": 79.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526583002.5, "ph": "X", "cat": "fee", "dur": 76.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526583000.6, "ph": "X", "cat": "fee", "dur": 78.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526583082.0, "ph": "X", "cat": "fee", "dur": 37.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526583081.0, "ph": "X", "cat": "fee", "dur": 38.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526583121.4, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526583131.4, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526583120.6, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526583138.9, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526583145.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526583150.4, "ph": "X", "cat": "fee", "dur": 20.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526583172.1, "ph": "X", "cat": "fee", "dur": 30792.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526583137.6, "ph": "X", "cat": "fee", "dur": 30829.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526614134.0, "ph": "X", "cat": "fee", "dur": 38.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526614173.3, "ph": "X", "cat": "fee", "dur": 110.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526614132.5, "ph": "X", "cat": "fee", "dur": 151.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526614288.8, "ph": "X", "cat": "fee", "dur": 156.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526614285.6, "ph": "X", "cat": "fee", "dur": 160.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526614454.0, "ph": "X", "cat": "fee", "dur": 46.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526614452.6, "ph": "X", "cat": "fee", "dur": 48.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526614507.2, "ph": "X", "cat": "fee", "dur": 13.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526614521.3, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526614503.9, "ph": "X", "cat": "fee", "dur": 22.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526614532.9, "ph": "X", "cat": "fee", "dur": 10.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526614544.1, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526614551.2, "ph": "X", "cat": "fee", "dur": 32.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526614586.1, "ph": "X", "cat": "fee", "dur": 31482.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526614531.9, "ph": "X", "cat": "fee", "dur": 31538.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526646177.0, "ph": "X", "cat": "fee", "dur": 23.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526646201.7, "ph": "X", "cat": "fee", "dur": 55.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526646176.3, "ph": "X", "cat": "fee", "dur": 80.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526646260.0, "ph": "X", "cat": "fee", "dur": 447.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526646258.1, "ph": "X", "cat": "fee", "dur": 450.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526646713.1, "ph": "X", "cat": "fee", "dur": 46.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526646711.4, "ph": "X", "cat": "fee", "dur": 48.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526646762.4, "ph": "X", "cat": "fee", "dur": 9.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526646771.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526646761.1, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526646779.3, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526646786.9, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526646792.1, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526646817.0, "ph": "X", "cat": "fee", "dur": 39619.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526646778.3, "ph": "X", "cat": "fee", "dur": 39659.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526686527.9, "ph": "X", "cat": "fee", "dur": 20.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526686548.9, "ph": "X", "cat": "fee", "dur": 49.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526686527.2, "ph": "X", "cat": "fee", "dur": 71.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526686601.5, "ph": "X", "cat": "fee", "dur": 298.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526686599.2, "ph": "X", "cat": "fee", "dur": 301.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526686903.9, "ph": "X", "cat": "fee", "dur": 36.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526686902.8, "ph": "X", "cat": "fee", "dur": 38.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526686943.0, "ph": "X", "cat": "fee", "dur": 8.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526686952.1, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526686942.0, "ph": "X", "cat": "fee", "dur": 13.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526686958.6, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526686965.3, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526686970.3, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526686992.5, "ph": "X", "cat": "fee", "dur": 19076.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526686957.6, "ph": "X", "cat": "fee", "dur": 19112.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526706168.2, "ph": "X", "cat": "fee", "dur": 20.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526706189.2, "ph": "X", "cat": "fee", "dur": 51.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526706167.5, "ph": "X", "cat": "fee", "dur": 73.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526706243.8, "ph": "X", "cat": "fee", "dur": 80.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526706242.0, "ph": "X", "cat": "fee", "dur": 82.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526706328.0, "ph": "X", "cat": "fee", "dur": 28.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526706326.7, "ph": "X", "cat": "fee", "dur": 30.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526706359.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526706369.2, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526706358.6, "ph": "X", "cat": "fee", "dur": 13.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526706376.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526706382.9, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526706387.6, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526706409.7, "ph": "X", "cat": "fee", "dur": 29897.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526706374.8, "ph": "X", "cat": "fee", "dur": 29933.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526736397.4, "ph": "X", "cat": "fee", "dur": 18.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526736416.8, "ph": "X", "cat": "fee", "dur": 49.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526736396.7, "ph": "X", "cat": "fee", "dur": 69.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526736469.1, "ph": "X", "cat": "fee", "dur": 73.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526736467.3, "ph": "X", "cat": "fee", "dur": 75.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526736546.5, "ph": "X", "cat": "fee", "dur": 43.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526736545.5, "ph": "X", "cat": "fee", "dur": 45.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526736592.5, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526736602.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526736591.5, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526736609.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526736615.8, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526736620.3, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526736642.5, "ph": "X", "cat": "fee", "dur": 43672.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526736608.3, "ph": "X", "cat": "fee", "dur": 43708.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526780474.9, "ph": "X", "cat": "fee", "dur": 46.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526780523.3, "ph": "X", "cat": "fee", "dur": 111.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526780473.7, "ph": "X", "cat": "fee", "dur": 161.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526780638.5, "ph": "X", "cat": "fee", "dur": 594.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526780636.1, "ph": "X", "cat": "fee", "dur": 597.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526781239.5, "ph": "X", "cat": "fee", "dur": 66.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526781237.9, "ph": "X", "cat": "fee", "dur": 68.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526781310.2, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526781321.7, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526781309.0, "ph": "X", "cat": "fee", "dur": 19.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526781333.7, "ph": "X", "cat": "fee", "dur": 10.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526781345.3, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526781353.1, "ph": "X", "cat": "fee", "dur": 33.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526781389.1, "ph": "X", "cat": "fee", "dur": 36275.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526781332.5, "ph": "X", "cat": "fee", "dur": 36333.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526817764.9, "ph": "X", "cat": "fee", "dur": 20.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526817786.2, "ph": "X", "cat": "fee", "dur": 50.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526817763.9, "ph": "X", "cat": "fee", "dur": 73.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526817839.7, "ph": "X", "cat": "fee", "dur": 611.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526817837.8, "ph": "X", "cat": "fee", "dur": 613.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526818456.4, "ph": "X", "cat": "fee", "dur": 36.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526818455.3, "ph": "X", "cat": "fee", "dur": 37.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526818495.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526818504.9, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526818494.4, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526818511.8, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526818518.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526818523.4, "ph": "X", "cat": "fee", "dur": 26.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526818551.5, "ph": "X", "cat": "fee", "dur": 38249.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526818510.8, "ph": "X", "cat": "fee", "dur": 38291.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526856889.6, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526856910.1, "ph": "X", "cat": "fee", "dur": 52.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526856888.9, "ph": "X", "cat": "fee", "dur": 73.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526856965.5, "ph": "X", "cat": "fee", "dur": 995.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526856963.8, "ph": "X", "cat": "fee", "dur": 997.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526857965.1, "ph": "X", "cat": "fee", "dur": 53.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526857963.9, "ph": "X", "cat": "fee", "dur": 54.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526858020.7, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526858030.4, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526858019.7, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526858037.6, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526858044.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526858049.5, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526858071.1, "ph": "X", "cat": "fee", "dur": 34242.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526858036.6, "ph": "X", "cat": "fee", "dur": 34277.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526892400.9, "ph": "X", "cat": "fee", "dur": 18.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526892420.0, "ph": "X", "cat": "fee", "dur": 50.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526892400.4, "ph": "X", "cat": "fee", "dur": 70.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526892473.2, "ph": "X", "cat": "fee", "dur": 523.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526892471.5, "ph": "X", "cat": "fee", "dur": 525.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526893000.1, "ph": "X", "cat": "fee", "dur": 42.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526892998.7, "ph": "X", "cat": "fee", "dur": 44.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526893045.3, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526893055.9, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526893044.4, "ph": "X", "cat": "fee", "dur": 15.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526893063.4, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526893070.6, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526893076.0, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526893098.5, "ph": "X", "cat": "fee", "dur": 39258.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526893062.0, "ph": "X", "cat": "fee", "dur": 39295.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526932461.7, "ph": "X", "cat": "fee", "dur": 21.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526932483.9, "ph": "X", "cat": "fee", "dur": 54.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526932461.0, "ph": "X", "cat": "fee", "dur": 77.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526932541.7, "ph": "X", "cat": "fee", "dur": 78.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526932539.6, "ph": "X", "cat": "fee", "dur": 80.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526932623.9, "ph": "X", "cat": "fee", "dur": 46.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526932623.0, "ph": "X", "cat": "fee", "dur": 47.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526932672.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526932682.6, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526932671.8, "ph": "X", "cat": "fee", "dur": 13.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526932689.6, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526932696.0, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526932701.0, "ph": "X", "cat": "fee", "dur": 21.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526932724.1, "ph": "X", "cat": "fee", "dur": 44579.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526932688.3, "ph": "X", "cat": "fee", "dur": 44615.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438526977415.2, "ph": "X", "cat": "fee", "dur": 23.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438526977439.5, "ph": "X", "cat": "fee", "dur": 55.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438526977414.6, "ph": "X", "cat": "fee", "dur": 80.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438526977498.0, "ph": "X", "cat": "fee", "dur": 1132.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526977496.0, "ph": "X", "cat": "fee", "dur": 1135.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438526978635.9, "ph": "X", "cat": "fee", "dur": 32.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526978634.6, "ph": "X", "cat": "fee", "dur": 34.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438526978671.4, "ph": "X", "cat": "fee", "dur": 10.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438526978682.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438526978670.3, "ph": "X", "cat": "fee", "dur": 16.32, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438526978691.1, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438526978699.4, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438526978705.1, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438526978730.6, "ph": "X", "cat": "fee", "dur": 49819.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438526978690.1, "ph": "X", "cat": "fee", "dur": 49861.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527028642.9, "ph": "X", "cat": "fee", "dur": 19.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527028663.4, "ph": "X", "cat": "fee", "dur": 49.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527028642.2, "ph": "X", "cat": "fee", "dur": 71.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527028717.0, "ph": "X", "cat": "fee", "dur": 575.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527028714.8, "ph": "X", "cat": "fee", "dur": 577.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527029297.3, "ph": "X", "cat": "fee", "dur": 53.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527029295.5, "ph": "X", "cat": "fee", "dur": 55.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527029353.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527029363.0, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527029352.1, "ph": "X", "cat": "fee", "dur": 15.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527029372.9, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527029381.9, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527029389.0, "ph": "X", "cat": "fee", "dur": 26.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527029416.7, "ph": "X", "cat": "fee", "dur": 48697.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527029371.1, "ph": "X", "cat": "fee", "dur": 48744.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527078212.2, "ph": "X", "cat": "fee", "dur": 20.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527078233.8, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527078211.4, "ph": "X", "cat": "fee", "dur": 73.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527078287.9, "ph": "X", "cat": "fee", "dur": 76.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527078286.3, "ph": "X", "cat": "fee", "dur": 78.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527078368.1, "ph": "X", "cat": "fee", "dur": 46.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527078367.2, "ph": "X", "cat": "fee", "dur": 47.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527078417.0, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527078427.2, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527078416.0, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527078434.2, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527078440.6, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527078445.9, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527078468.5, "ph": "X", "cat": "fee", "dur": 22451.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527078433.1, "ph": "X", "cat": "fee", "dur": 22488.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527101030.7, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527101054.7, "ph": "X", "cat": "fee", "dur": 56.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527101030.0, "ph": "X", "cat": "fee", "dur": 81.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527101114.6, "ph": "X", "cat": "fee", "dur": 483.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527101112.8, "ph": "X", "cat": "fee", "dur": 485.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527101601.8, "ph": "X", "cat": "fee", "dur": 31.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527101600.7, "ph": "X", "cat": "fee", "dur": 33.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527101636.3, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527101646.5, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527101635.0, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527101653.8, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527101660.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527101665.4, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527101688.0, "ph": "X", "cat": "fee", "dur": 27191.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527101652.7, "ph": "X", "cat": "fee", "dur": 27227.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527128977.1, "ph": "X", "cat": "fee", "dur": 19.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527128997.8, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527128976.4, "ph": "X", "cat": "fee", "dur": 71.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527129051.2, "ph": "X", "cat": "fee", "dur": 78.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527129049.1, "ph": "X", "cat": "fee", "dur": 80.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527129133.3, "ph": "X", "cat": "fee", "dur": 45.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527129132.3, "ph": "X", "cat": "fee", "dur": 47.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527129181.6, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527129190.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527129180.7, "ph": "X", "cat": "fee", "dur": 13.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527129197.1, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527129204.0, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527129209.4, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527129231.4, "ph": "X", "cat": "fee", "dur": 23965.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527129195.9, "ph": "X", "cat": "fee", "dur": 24003.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527153296.2, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527153317.0, "ph": "X", "cat": "fee", "dur": 50.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527153295.4, "ph": "X", "cat": "fee", "dur": 72.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527153370.8, "ph": "X", "cat": "fee", "dur": 73.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527153369.0, "ph": "X", "cat": "fee", "dur": 76.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527153448.7, "ph": "X", "cat": "fee", "dur": 31.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527153447.8, "ph": "X", "cat": "fee", "dur": 32.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527153482.5, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527153492.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527153481.6, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527153498.8, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527153505.3, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527153510.2, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527153531.8, "ph": "X", "cat": "fee", "dur": 22277.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527153497.8, "ph": "X", "cat": "fee", "dur": 22312.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527175899.5, "ph": "X", "cat": "fee", "dur": 20.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527175920.9, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527175898.6, "ph": "X", "cat": "fee", "dur": 74.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527175975.8, "ph": "X", "cat": "fee", "dur": 71.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527175974.1, "ph": "X", "cat": "fee", "dur": 73.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527176050.7, "ph": "X", "cat": "fee", "dur": 32.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527176049.7, "ph": "X", "cat": "fee", "dur": 34.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527176085.9, "ph": "X", "cat": "fee", "dur": 8.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527176095.0, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527176085.0, "ph": "X", "cat": "fee", "dur": 13.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527176101.9, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527176108.4, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527176113.1, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527176134.6, "ph": "X", "cat": "fee", "dur": 30645.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527176100.9, "ph": "X", "cat": "fee", "dur": 30679.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527206874.1, "ph": "X", "cat": "fee", "dur": 19.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527206894.4, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527206873.4, "ph": "X", "cat": "fee", "dur": 73.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527206949.3, "ph": "X", "cat": "fee", "dur": 74.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527206947.7, "ph": "X", "cat": "fee", "dur": 76.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527207027.3, "ph": "X", "cat": "fee", "dur": 59.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527207026.5, "ph": "X", "cat": "fee", "dur": 60.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527207089.3, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527207098.7, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527207088.3, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527207105.1, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527207112.0, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527207116.9, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527207138.8, "ph": "X", "cat": "fee", "dur": 30647.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527207104.2, "ph": "X", "cat": "fee", "dur": 30683.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527237878.5, "ph": "X", "cat": "fee", "dur": 18.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527237898.3, "ph": "X", "cat": "fee", "dur": 49.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527237877.8, "ph": "X", "cat": "fee", "dur": 70.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527237951.0, "ph": "X", "cat": "fee", "dur": 534.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527237949.3, "ph": "X", "cat": "fee", "dur": 536.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527238489.2, "ph": "X", "cat": "fee", "dur": 43.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527238488.0, "ph": "X", "cat": "fee", "dur": 45.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527238535.7, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527238545.5, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527238534.6, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527238552.3, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527238559.0, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527238563.9, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527238585.3, "ph": "X", "cat": "fee", "dur": 70350.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527238551.3, "ph": "X", "cat": "fee", "dur": 70385.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527309049.1, "ph": "X", "cat": "fee", "dur": 23.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527309074.1, "ph": "X", "cat": "fee", "dur": 69.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527309048.4, "ph": "X", "cat": "fee", "dur": 95.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527309147.1, "ph": "X", "cat": "fee", "dur": 391.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527309144.7, "ph": "X", "cat": "fee", "dur": 394.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527309556.2, "ph": "X", "cat": "fee", "dur": 54.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527309555.1, "ph": "X", "cat": "fee", "dur": 56.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527309613.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527309623.4, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527309612.3, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527309631.0, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527309637.6, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527309643.2, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527309666.2, "ph": "X", "cat": "fee", "dur": 38870.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527309629.8, "ph": "X", "cat": "fee", "dur": 38907.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527348652.6, "ph": "X", "cat": "fee", "dur": 25.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527348679.3, "ph": "X", "cat": "fee", "dur": 66.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527348651.5, "ph": "X", "cat": "fee", "dur": 95.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527348749.6, "ph": "X", "cat": "fee", "dur": 749.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527348747.7, "ph": "X", "cat": "fee", "dur": 752.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527349505.6, "ph": "X", "cat": "fee", "dur": 67.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527349503.8, "ph": "X", "cat": "fee", "dur": 69.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527349576.7, "ph": "X", "cat": "fee", "dur": 12.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527349589.4, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527349574.7, "ph": "X", "cat": "fee", "dur": 21.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527349601.2, "ph": "X", "cat": "fee", "dur": 10.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527349612.5, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527349620.7, "ph": "X", "cat": "fee", "dur": 34.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527349657.6, "ph": "X", "cat": "fee", "dur": 38398.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527349600.1, "ph": "X", "cat": "fee", "dur": 38457.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527388152.6, "ph": "X", "cat": "fee", "dur": 18.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527388172.2, "ph": "X", "cat": "fee", "dur": 51.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527388152.0, "ph": "X", "cat": "fee", "dur": 72.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527388228.3, "ph": "X", "cat": "fee", "dur": 75.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527388225.7, "ph": "X", "cat": "fee", "dur": 78.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527388308.2, "ph": "X", "cat": "fee", "dur": 52.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527388307.3, "ph": "X", "cat": "fee", "dur": 53.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527388363.2, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527388372.5, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527388362.2, "ph": "X", "cat": "fee", "dur": 13.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527388379.0, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527388385.5, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527388390.2, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527388412.7, "ph": "X", "cat": "fee", "dur": 16447.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527388378.0, "ph": "X", "cat": "fee", "dur": 16483.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527404953.3, "ph": "X", "cat": "fee", "dur": 18.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527404972.2, "ph": "X", "cat": "fee", "dur": 50.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527404952.5, "ph": "X", "cat": "fee", "dur": 70.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527405025.3, "ph": "X", "cat": "fee", "dur": 76.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527405023.6, "ph": "X", "cat": "fee", "dur": 78.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527405105.2, "ph": "X", "cat": "fee", "dur": 31.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527405104.4, "ph": "X", "cat": "fee", "dur": 32.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527405138.6, "ph": "X", "cat": "fee", "dur": 8.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527405147.7, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527405137.7, "ph": "X", "cat": "fee", "dur": 13.02, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527405154.0, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527405160.3, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527405165.4, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527405186.8, "ph": "X", "cat": "fee", "dur": 46354.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527405153.2, "ph": "X", "cat": "fee", "dur": 46389.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527451643.4, "ph": "X", "cat": "fee", "dur": 18.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527451662.5, "ph": "X", "cat": "fee", "dur": 51.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527451642.6, "ph": "X", "cat": "fee", "dur": 71.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527451716.6, "ph": "X", "cat": "fee", "dur": 74.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527451714.8, "ph": "X", "cat": "fee", "dur": 76.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527451794.3, "ph": "X", "cat": "fee", "dur": 40.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527451793.4, "ph": "X", "cat": "fee", "dur": 41.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527451837.4, "ph": "X", "cat": "fee", "dur": 10.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527451848.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527451836.7, "ph": "X", "cat": "fee", "dur": 14.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527451855.4, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527451861.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527451866.2, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527451887.9, "ph": "X", "cat": "fee", "dur": 19517.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527451854.4, "ph": "X", "cat": "fee", "dur": 19552.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527471496.6, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527471516.4, "ph": "X", "cat": "fee", "dur": 49.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527471496.0, "ph": "X", "cat": "fee", "dur": 70.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527471569.1, "ph": "X", "cat": "fee", "dur": 75.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527471567.3, "ph": "X", "cat": "fee", "dur": 77.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527471647.5, "ph": "X", "cat": "fee", "dur": 47.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527471646.6, "ph": "X", "cat": "fee", "dur": 48.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527471697.2, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527471706.9, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527471696.0, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527471713.5, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527471719.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527471724.3, "ph": "X", "cat": "fee", "dur": 19.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527471744.9, "ph": "X", "cat": "fee", "dur": 20252.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527471712.7, "ph": "X", "cat": "fee", "dur": 20285.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527492105.2, "ph": "X", "cat": "fee", "dur": 22.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527492128.7, "ph": "X", "cat": "fee", "dur": 60.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527492104.2, "ph": "X", "cat": "fee", "dur": 84.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527492192.2, "ph": "X", "cat": "fee", "dur": 359.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527492190.6, "ph": "X", "cat": "fee", "dur": 361.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527492556.7, "ph": "X", "cat": "fee", "dur": 26.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527492555.3, "ph": "X", "cat": "fee", "dur": 28.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527492585.4, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527492594.9, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527492584.6, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527492603.1, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527492610.7, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527492616.1, "ph": "X", "cat": "fee", "dur": 21.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527492639.5, "ph": "X", "cat": "fee", "dur": 17812.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527492602.1, "ph": "X", "cat": "fee", "dur": 17851.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527510554.8, "ph": "X", "cat": "fee", "dur": 22.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527510577.8, "ph": "X", "cat": "fee", "dur": 55.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527510554.2, "ph": "X", "cat": "fee", "dur": 78.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527510636.2, "ph": "X", "cat": "fee", "dur": 77.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527510634.1, "ph": "X", "cat": "fee", "dur": 80.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527510717.0, "ph": "X", "cat": "fee", "dur": 37.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527510716.1, "ph": "X", "cat": "fee", "dur": 38.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527510757.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527510767.0, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527510756.3, "ph": "X", "cat": "fee", "dur": 14.12, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527510774.3, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527510780.8, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527510785.4, "ph": "X", "cat": "fee", "dur": 27.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527510815.2, "ph": "X", "cat": "fee", "dur": 15232.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527510773.3, "ph": "X", "cat": "fee", "dur": 15275.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527526159.1, "ph": "X", "cat": "fee", "dur": 21.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527526181.6, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527526158.4, "ph": "X", "cat": "fee", "dur": 75.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527526236.6, "ph": "X", "cat": "fee", "dur": 356.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527526234.8, "ph": "X", "cat": "fee", "dur": 359.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527526597.5, "ph": "X", "cat": "fee", "dur": 28.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527526596.5, "ph": "X", "cat": "fee", "dur": 29.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527526628.3, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527526638.1, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527526627.3, "ph": "X", "cat": "fee", "dur": 14.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527526645.1, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527526652.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527526657.3, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527526678.7, "ph": "X", "cat": "fee", "dur": 20669.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527526644.1, "ph": "X", "cat": "fee", "dur": 20705.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527547452.4, "ph": "X", "cat": "fee", "dur": 19.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527547473.0, "ph": "X", "cat": "fee", "dur": 51.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527547451.7, "ph": "X", "cat": "fee", "dur": 72.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527547527.3, "ph": "X", "cat": "fee", "dur": 76.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527547525.1, "ph": "X", "cat": "fee", "dur": 79.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527547606.7, "ph": "X", "cat": "fee", "dur": 31.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527547605.7, "ph": "X", "cat": "fee", "dur": 32.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527547640.6, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527547649.8, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527547639.6, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527547656.7, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527547663.2, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527547668.1, "ph": "X", "cat": "fee", "dur": 21.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527547690.7, "ph": "X", "cat": "fee", "dur": 27792.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527547655.9, "ph": "X", "cat": "fee", "dur": 27828.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527575574.8, "ph": "X", "cat": "fee", "dur": 18.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527575594.2, "ph": "X", "cat": "fee", "dur": 48.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527575573.9, "ph": "X", "cat": "fee", "dur": 69.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527575646.3, "ph": "X", "cat": "fee", "dur": 373.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527575644.6, "ph": "X", "cat": "fee", "dur": 375.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527576023.5, "ph": "X", "cat": "fee", "dur": 34.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527576022.4, "ph": "X", "cat": "fee", "dur": 35.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527576060.1, "ph": "X", "cat": "fee", "dur": 8.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527576069.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527576059.0, "ph": "X", "cat": "fee", "dur": 13.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527576076.0, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527576082.7, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527576087.3, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527576108.7, "ph": "X", "cat": "fee", "dur": 40174.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527576074.9, "ph": "X", "cat": "fee", "dur": 40209.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527616392.6, "ph": "X", "cat": "fee", "dur": 23.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527616416.7, "ph": "X", "cat": "fee", "dur": 55.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527616391.7, "ph": "X", "cat": "fee", "dur": 80.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527616475.6, "ph": "X", "cat": "fee", "dur": 734.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527616473.1, "ph": "X", "cat": "fee", "dur": 737.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527617213.7, "ph": "X", "cat": "fee", "dur": 36.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527617212.6, "ph": "X", "cat": "fee", "dur": 37.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527617252.9, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527617262.3, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527617251.9, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527617269.7, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527617276.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527617282.4, "ph": "X", "cat": "fee", "dur": 20.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527617305.1, "ph": "X", "cat": "fee", "dur": 14511.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527617268.6, "ph": "X", "cat": "fee", "dur": 14549.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527631918.5, "ph": "X", "cat": "fee", "dur": 21.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527631941.2, "ph": "X", "cat": "fee", "dur": 52.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527631917.7, "ph": "X", "cat": "fee", "dur": 76.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527631997.5, "ph": "X", "cat": "fee", "dur": 323.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527631995.3, "ph": "X", "cat": "fee", "dur": 325.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527632325.0, "ph": "X", "cat": "fee", "dur": 29.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527632323.8, "ph": "X", "cat": "fee", "dur": 31.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527632357.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527632367.2, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527632356.6, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527632374.7, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527632382.1, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527632386.9, "ph": "X", "cat": "fee", "dur": 21.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527632409.8, "ph": "X", "cat": "fee", "dur": 36189.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527632373.8, "ph": "X", "cat": "fee", "dur": 36226.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527668709.9, "ph": "X", "cat": "fee", "dur": 23.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527668734.7, "ph": "X", "cat": "fee", "dur": 54.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527668709.2, "ph": "X", "cat": "fee", "dur": 79.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527668791.6, "ph": "X", "cat": "fee", "dur": 776.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527668789.9, "ph": "X", "cat": "fee", "dur": 778.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527669571.8, "ph": "X", "cat": "fee", "dur": 29.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527669570.6, "ph": "X", "cat": "fee", "dur": 30.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527669603.5, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527669613.6, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527669602.5, "ph": "X", "cat": "fee", "dur": 14.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527669621.8, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527669629.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527669635.2, "ph": "X", "cat": "fee", "dur": 22.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527669659.4, "ph": "X", "cat": "fee", "dur": 36687.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527669620.5, "ph": "X", "cat": "fee", "dur": 36727.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527706460.8, "ph": "X", "cat": "fee", "dur": 24.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527706485.9, "ph": "X", "cat": "fee", "dur": 55.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527706460.1, "ph": "X", "cat": "fee", "dur": 81.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527706544.5, "ph": "X", "cat": "fee", "dur": 77.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527706542.4, "ph": "X", "cat": "fee", "dur": 80.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527706625.1, "ph": "X", "cat": "fee", "dur": 45.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527706624.3, "ph": "X", "cat": "fee", "dur": 46.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527706673.1, "ph": "X", "cat": "fee", "dur": 9.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527706683.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527706672.0, "ph": "X", "cat": "fee", "dur": 14.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527706690.5, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527706697.0, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527706702.0, "ph": "X", "cat": "fee", "dur": 22.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527706725.5, "ph": "X", "cat": "fee", "dur": 21628.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527706689.5, "ph": "X", "cat": "fee", "dur": 21665.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527728445.4, "ph": "X", "cat": "fee", "dur": 20.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527728467.6, "ph": "X", "cat": "fee", "dur": 49.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527728444.8, "ph": "X", "cat": "fee", "dur": 72.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527728519.7, "ph": "X", "cat": "fee", "dur": 223.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527728517.9, "ph": "X", "cat": "fee", "dur": 226.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527728747.0, "ph": "X", "cat": "fee", "dur": 27.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527728745.9, "ph": "X", "cat": "fee", "dur": 28.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527728776.8, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527728786.2, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527728775.7, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527728792.8, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527728799.8, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527728804.9, "ph": "X", "cat": "fee", "dur": 19.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527728826.1, "ph": "X", "cat": "fee", "dur": 22243.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527728791.9, "ph": "X", "cat": "fee", "dur": 22278.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527751184.4, "ph": "X", "cat": "fee", "dur": 23.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527751208.6, "ph": "X", "cat": "fee", "dur": 59.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527751183.6, "ph": "X", "cat": "fee", "dur": 84.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527751271.6, "ph": "X", "cat": "fee", "dur": 77.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527751269.5, "ph": "X", "cat": "fee", "dur": 79.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527751351.9, "ph": "X", "cat": "fee", "dur": 29.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527751350.9, "ph": "X", "cat": "fee", "dur": 31.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527751384.2, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527751393.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527751383.1, "ph": "X", "cat": "fee", "dur": 14.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527751401.0, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527751407.2, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527751412.4, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527751435.4, "ph": "X", "cat": "fee", "dur": 20193.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527751399.7, "ph": "X", "cat": "fee", "dur": 20231.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527771756.2, "ph": "X", "cat": "fee", "dur": 41.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527771798.9, "ph": "X", "cat": "fee", "dur": 106.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527771754.8, "ph": "X", "cat": "fee", "dur": 150.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527771910.1, "ph": "X", "cat": "fee", "dur": 119.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527771907.1, "ph": "X", "cat": "fee", "dur": 122.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527772034.5, "ph": "X", "cat": "fee", "dur": 35.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527772033.3, "ph": "X", "cat": "fee", "dur": 36.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527772072.8, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527772084.7, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527772071.9, "ph": "X", "cat": "fee", "dur": 17.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527772096.3, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527772105.9, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527772112.6, "ph": "X", "cat": "fee", "dur": 27.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527772141.6, "ph": "X", "cat": "fee", "dur": 20188.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527772094.6, "ph": "X", "cat": "fee", "dur": 20237.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527792453.9, "ph": "X", "cat": "fee", "dur": 36.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527792492.3, "ph": "X", "cat": "fee", "dur": 93.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527792452.6, "ph": "X", "cat": "fee", "dur": 133.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527792591.6, "ph": "X", "cat": "fee", "dur": 114.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527792588.2, "ph": "X", "cat": "fee", "dur": 118.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527792710.8, "ph": "X", "cat": "fee", "dur": 27.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527792709.8, "ph": "X", "cat": "fee", "dur": 28.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527792741.2, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527792751.5, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527792740.3, "ph": "X", "cat": "fee", "dur": 15.72, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527792761.1, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527792770.0, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527792776.4, "ph": "X", "cat": "fee", "dur": 27.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527792805.3, "ph": "X", "cat": "fee", "dur": 18040.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527792759.9, "ph": "X", "cat": "fee", "dur": 18087.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527810967.5, "ph": "X", "cat": "fee", "dur": 26.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527810994.9, "ph": "X", "cat": "fee", "dur": 60.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527810966.7, "ph": "X", "cat": "fee", "dur": 88.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527811058.4, "ph": "X", "cat": "fee", "dur": 80.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527811056.5, "ph": "X", "cat": "fee", "dur": 83.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527811142.7, "ph": "X", "cat": "fee", "dur": 34.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527811141.7, "ph": "X", "cat": "fee", "dur": 35.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527811179.6, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527811190.5, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527811178.5, "ph": "X", "cat": "fee", "dur": 15.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527811197.7, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527811204.8, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527811210.7, "ph": "X", "cat": "fee", "dur": 22.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527811234.8, "ph": "X", "cat": "fee", "dur": 29163.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527811196.7, "ph": "X", "cat": "fee", "dur": 29203.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527840508.5, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527840532.4, "ph": "X", "cat": "fee", "dur": 52.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527840507.7, "ph": "X", "cat": "fee", "dur": 77.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527840587.8, "ph": "X", "cat": "fee", "dur": 75.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527840585.9, "ph": "X", "cat": "fee", "dur": 77.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527840666.0, "ph": "X", "cat": "fee", "dur": 30.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527840665.1, "ph": "X", "cat": "fee", "dur": 31.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527840699.5, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527840708.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527840698.4, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527840715.8, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527840722.2, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527840727.3, "ph": "X", "cat": "fee", "dur": 20.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527840749.5, "ph": "X", "cat": "fee", "dur": 35859.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527840714.8, "ph": "X", "cat": "fee", "dur": 35895.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527876754.5, "ph": "X", "cat": "fee", "dur": 31.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527876787.6, "ph": "X", "cat": "fee", "dur": 79.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527876753.3, "ph": "X", "cat": "fee", "dur": 114.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527876871.2, "ph": "X", "cat": "fee", "dur": 101.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527876868.7, "ph": "X", "cat": "fee", "dur": 104.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527876978.1, "ph": "X", "cat": "fee", "dur": 50.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527876976.5, "ph": "X", "cat": "fee", "dur": 52.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527877032.1, "ph": "X", "cat": "fee", "dur": 14.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527877047.8, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527877030.7, "ph": "X", "cat": "fee", "dur": 21.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527877057.3, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527877065.9, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527877072.1, "ph": "X", "cat": "fee", "dur": 26.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527877100.5, "ph": "X", "cat": "fee", "dur": 41569.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527877056.1, "ph": "X", "cat": "fee", "dur": 41615.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527918787.8, "ph": "X", "cat": "fee", "dur": 25.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527918814.4, "ph": "X", "cat": "fee", "dur": 59.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527918786.9, "ph": "X", "cat": "fee", "dur": 87.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527918877.0, "ph": "X", "cat": "fee", "dur": 83.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527918875.1, "ph": "X", "cat": "fee", "dur": 85.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527918963.3, "ph": "X", "cat": "fee", "dur": 49.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527918962.3, "ph": "X", "cat": "fee", "dur": 50.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527919014.9, "ph": "X", "cat": "fee", "dur": 9.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527919024.9, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527919013.9, "ph": "X", "cat": "fee", "dur": 14.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527919031.9, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527919038.8, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527919044.2, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527919070.1, "ph": "X", "cat": "fee", "dur": 20065.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527919030.9, "ph": "X", "cat": "fee", "dur": 20107.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527939258.5, "ph": "X", "cat": "fee", "dur": 35.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527939295.2, "ph": "X", "cat": "fee", "dur": 64.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527939257.6, "ph": "X", "cat": "fee", "dur": 102.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527939363.7, "ph": "X", "cat": "fee", "dur": 556.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527939361.1, "ph": "X", "cat": "fee", "dur": 559.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527939924.0, "ph": "X", "cat": "fee", "dur": 30.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527939922.8, "ph": "X", "cat": "fee", "dur": 31.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527939957.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527939967.0, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527939956.0, "ph": "X", "cat": "fee", "dur": 14.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527939975.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527939982.2, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527939988.1, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527940012.9, "ph": "X", "cat": "fee", "dur": 30023.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527939973.6, "ph": "X", "cat": "fee", "dur": 30063.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527970147.6, "ph": "X", "cat": "fee", "dur": 21.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527970169.5, "ph": "X", "cat": "fee", "dur": 53.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527970146.8, "ph": "X", "cat": "fee", "dur": 76.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527970225.8, "ph": "X", "cat": "fee", "dur": 77.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527970224.0, "ph": "X", "cat": "fee", "dur": 79.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527970307.2, "ph": "X", "cat": "fee", "dur": 47.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527970306.4, "ph": "X", "cat": "fee", "dur": 48.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527970357.4, "ph": "X", "cat": "fee", "dur": 11.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527970369.0, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527970356.5, "ph": "X", "cat": "fee", "dur": 15.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527970375.6, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527970382.1, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527970387.2, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527970409.9, "ph": "X", "cat": "fee", "dur": 27258.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527970374.4, "ph": "X", "cat": "fee", "dur": 27295.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438527997843.9, "ph": "X", "cat": "fee", "dur": 34.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438527997879.7, "ph": "X", "cat": "fee", "dur": 81.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438527997841.8, "ph": "X", "cat": "fee", "dur": 119.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438527997965.1, "ph": "X", "cat": "fee", "dur": 111.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527997962.6, "ph": "X", "cat": "fee", "dur": 115.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438527998084.0, "ph": "X", "cat": "fee", "dur": 64.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527998082.2, "ph": "X", "cat": "fee", "dur": 66.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438527998151.0, "ph": "X", "cat": "fee", "dur": 10.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438527998162.0, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438527998150.0, "ph": "X", "cat": "fee", "dur": 16.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438527998170.6, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438527998179.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438527998185.9, "ph": "X", "cat": "fee", "dur": 24.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438527998212.5, "ph": "X", "cat": "fee", "dur": 35439.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438527998169.3, "ph": "X", "cat": "fee", "dur": 35484.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528033753.5, "ph": "X", "cat": "fee", "dur": 20.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528033775.1, "ph": "X", "cat": "fee", "dur": 53.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528033752.8, "ph": "X", "cat": "fee", "dur": 75.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528033831.1, "ph": "X", "cat": "fee", "dur": 646.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528033829.3, "ph": "X", "cat": "fee", "dur": 648.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528034482.0, "ph": "X", "cat": "fee", "dur": 41.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528034480.6, "ph": "X", "cat": "fee", "dur": 43.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528034526.2, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528034535.9, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528034525.0, "ph": "X", "cat": "fee", "dur": 14.12, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528034542.8, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528034549.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528034554.5, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528034575.8, "ph": "X", "cat": "fee", "dur": 19445.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528034541.8, "ph": "X", "cat": "fee", "dur": 19481.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528054122.4, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528054142.3, "ph": "X", "cat": "fee", "dur": 51.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528054121.6, "ph": "X", "cat": "fee", "dur": 72.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528054197.0, "ph": "X", "cat": "fee", "dur": 219.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528054194.9, "ph": "X", "cat": "fee", "dur": 222.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528054424.1, "ph": "X", "cat": "fee", "dur": 28.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528054423.0, "ph": "X", "cat": "fee", "dur": 29.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528054454.6, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528054464.4, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528054453.6, "ph": "X", "cat": "fee", "dur": 14.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528054472.1, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528054479.3, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528054484.5, "ph": "X", "cat": "fee", "dur": 28.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528054514.1, "ph": "X", "cat": "fee", "dur": 17426.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528054470.7, "ph": "X", "cat": "fee", "dur": 17471.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528072031.0, "ph": "X", "cat": "fee", "dur": 19.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528072051.4, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528072030.3, "ph": "X", "cat": "fee", "dur": 73.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528072106.1, "ph": "X", "cat": "fee", "dur": 825.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528072104.2, "ph": "X", "cat": "fee", "dur": 827.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528072935.1, "ph": "X", "cat": "fee", "dur": 23.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528072933.9, "ph": "X", "cat": "fee", "dur": 25.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528072961.4, "ph": "X", "cat": "fee", "dur": 8.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528072970.6, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528072960.4, "ph": "X", "cat": "fee", "dur": 14.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528072977.9, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528072984.5, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528072989.6, "ph": "X", "cat": "fee", "dur": 20.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528073011.5, "ph": "X", "cat": "fee", "dur": 40692.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528072976.9, "ph": "X", "cat": "fee", "dur": 40730.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528113995.5, "ph": "X", "cat": "fee", "dur": 93.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528114091.3, "ph": "X", "cat": "fee", "dur": 223.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528113992.2, "ph": "X", "cat": "fee", "dur": 322.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528114324.2, "ph": "X", "cat": "fee", "dur": 854.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528114318.6, "ph": "X", "cat": "fee", "dur": 862.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528115189.9, "ph": "X", "cat": "fee", "dur": 67.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528115186.2, "ph": "X", "cat": "fee", "dur": 71.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528115261.5, "ph": "X", "cat": "fee", "dur": 12.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528115274.9, "ph": "X", "cat": "fee", "dur": 9.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528115260.2, "ph": "X", "cat": "fee", "dur": 24.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528115293.8, "ph": "X", "cat": "fee", "dur": 14.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528115309.5, "ph": "X", "cat": "fee", "dur": 9.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528115319.8, "ph": "X", "cat": "fee", "dur": 36.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528115359.3, "ph": "X", "cat": "fee", "dur": 31722.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528115292.3, "ph": "X", "cat": "fee", "dur": 31791.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528147261.4, "ph": "X", "cat": "fee", "dur": 45.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528147308.4, "ph": "X", "cat": "fee", "dur": 117.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528147259.8, "ph": "X", "cat": "fee", "dur": 165.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528147430.4, "ph": "X", "cat": "fee", "dur": 713.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528147427.3, "ph": "X", "cat": "fee", "dur": 717.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528148151.4, "ph": "X", "cat": "fee", "dur": 33.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528148149.5, "ph": "X", "cat": "fee", "dur": 35.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528148189.0, "ph": "X", "cat": "fee", "dur": 11.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528148201.4, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528148187.1, "ph": "X", "cat": "fee", "dur": 22.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528148217.5, "ph": "X", "cat": "fee", "dur": 17.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528148235.8, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528148244.5, "ph": "X", "cat": "fee", "dur": 34.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528148281.2, "ph": "X", "cat": "fee", "dur": 13001.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528148215.7, "ph": "X", "cat": "fee", "dur": 13068.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528161379.6, "ph": "X", "cat": "fee", "dur": 17.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528161398.4, "ph": "X", "cat": "fee", "dur": 51.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528161378.8, "ph": "X", "cat": "fee", "dur": 71.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528161453.2, "ph": "X", "cat": "fee", "dur": 76.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528161451.1, "ph": "X", "cat": "fee", "dur": 79.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528161533.5, "ph": "X", "cat": "fee", "dur": 33.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528161532.4, "ph": "X", "cat": "fee", "dur": 34.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528161569.1, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528161578.8, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528161568.2, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528161586.0, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528161591.7, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528161596.5, "ph": "X", "cat": "fee", "dur": 19.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528161617.8, "ph": "X", "cat": "fee", "dur": 15662.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528161584.7, "ph": "X", "cat": "fee", "dur": 15696.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528177377.3, "ph": "X", "cat": "fee", "dur": 19.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528177397.8, "ph": "X", "cat": "fee", "dur": 51.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528177376.7, "ph": "X", "cat": "fee", "dur": 73.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528177452.5, "ph": "X", "cat": "fee", "dur": 230.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528177450.8, "ph": "X", "cat": "fee", "dur": 232.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528177686.4, "ph": "X", "cat": "fee", "dur": 34.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528177685.4, "ph": "X", "cat": "fee", "dur": 35.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528177723.1, "ph": "X", "cat": "fee", "dur": 9.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528177732.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528177722.1, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528177739.3, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528177746.1, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528177750.7, "ph": "X", "cat": "fee", "dur": 20.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528177772.6, "ph": "X", "cat": "fee", "dur": 12770.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528177738.3, "ph": "X", "cat": "fee", "dur": 12806.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528190635.7, "ph": "X", "cat": "fee", "dur": 19.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528190655.6, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528190634.8, "ph": "X", "cat": "fee", "dur": 72.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528190709.9, "ph": "X", "cat": "fee", "dur": 326.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528190708.0, "ph": "X", "cat": "fee", "dur": 329.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528191040.7, "ph": "X", "cat": "fee", "dur": 26.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528191039.3, "ph": "X", "cat": "fee", "dur": 28.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528191070.3, "ph": "X", "cat": "fee", "dur": 9.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528191079.9, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528191069.3, "ph": "X", "cat": "fee", "dur": 13.82, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528191087.1, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528191094.5, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528191099.1, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528191122.0, "ph": "X", "cat": "fee", "dur": 15932.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528191086.2, "ph": "X", "cat": "fee", "dur": 15968.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528207144.8, "ph": "X", "cat": "fee", "dur": 18.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528207164.5, "ph": "X", "cat": "fee", "dur": 51.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528207143.9, "ph": "X", "cat": "fee", "dur": 72.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528207218.8, "ph": "X", "cat": "fee", "dur": 272.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528207217.0, "ph": "X", "cat": "fee", "dur": 275.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528207495.3, "ph": "X", "cat": "fee", "dur": 29.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528207494.2, "ph": "X", "cat": "fee", "dur": 30.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528207526.9, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528207536.7, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528207526.0, "ph": "X", "cat": "fee", "dur": 13.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528207543.5, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528207549.7, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528207554.6, "ph": "X", "cat": "fee", "dur": 20.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528207576.4, "ph": "X", "cat": "fee", "dur": 20975.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528207542.3, "ph": "X", "cat": "fee", "dur": 21010.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528228676.2, "ph": "X", "cat": "fee", "dur": 32.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528228709.4, "ph": "X", "cat": "fee", "dur": 80.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528228674.9, "ph": "X", "cat": "fee", "dur": 114.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528228793.1, "ph": "X", "cat": "fee", "dur": 271.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528228791.1, "ph": "X", "cat": "fee", "dur": 274.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528229070.7, "ph": "X", "cat": "fee", "dur": 44.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528229068.8, "ph": "X", "cat": "fee", "dur": 46.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528229118.8, "ph": "X", "cat": "fee", "dur": 10.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528229129.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528229117.6, "ph": "X", "cat": "fee", "dur": 16.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528229139.1, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528229147.7, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528229154.2, "ph": "X", "cat": "fee", "dur": 24.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528229180.5, "ph": "X", "cat": "fee", "dur": 27378.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528229137.9, "ph": "X", "cat": "fee", "dur": 27422.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528256673.5, "ph": "X", "cat": "fee", "dur": 23.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528256697.9, "ph": "X", "cat": "fee", "dur": 59.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528256672.9, "ph": "X", "cat": "fee", "dur": 84.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528256760.5, "ph": "X", "cat": "fee", "dur": 318.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528256758.7, "ph": "X", "cat": "fee", "dur": 321.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528257083.8, "ph": "X", "cat": "fee", "dur": 34.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528257082.5, "ph": "X", "cat": "fee", "dur": 36.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528257121.6, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528257131.0, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528257120.6, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528257138.9, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528257147.0, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528257152.7, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528257177.7, "ph": "X", "cat": "fee", "dur": 34605.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528257137.9, "ph": "X", "cat": "fee", "dur": 34646.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528291870.9, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528291890.7, "ph": "X", "cat": "fee", "dur": 49.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528291870.3, "ph": "X", "cat": "fee", "dur": 70.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528291943.5, "ph": "X", "cat": "fee", "dur": 376.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528291941.3, "ph": "X", "cat": "fee", "dur": 378.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528292323.8, "ph": "X", "cat": "fee", "dur": 43.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528292322.6, "ph": "X", "cat": "fee", "dur": 45.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528292370.2, "ph": "X", "cat": "fee", "dur": 8.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528292379.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528292369.1, "ph": "X", "cat": "fee", "dur": 14.02, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528292388.0, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528292452.1, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528292457.4, "ph": "X", "cat": "fee", "dur": 24.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528292483.1, "ph": "X", "cat": "fee", "dur": 30361.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528292386.7, "ph": "X", "cat": "fee", "dur": 30459.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528322965.0, "ph": "X", "cat": "fee", "dur": 21.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528322987.6, "ph": "X", "cat": "fee", "dur": 51.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528322964.1, "ph": "X", "cat": "fee", "dur": 75.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528323042.6, "ph": "X", "cat": "fee", "dur": 834.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528323040.7, "ph": "X", "cat": "fee", "dur": 837.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528323881.1, "ph": "X", "cat": "fee", "dur": 29.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528323879.8, "ph": "X", "cat": "fee", "dur": 31.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528323913.0, "ph": "X", "cat": "fee", "dur": 8.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528323922.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528323912.2, "ph": "X", "cat": "fee", "dur": 13.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528323929.3, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528323935.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528323940.9, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528323963.0, "ph": "X", "cat": "fee", "dur": 30929.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528323928.4, "ph": "X", "cat": "fee", "dur": 30965.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528354993.6, "ph": "X", "cat": "fee", "dur": 20.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528355014.4, "ph": "X", "cat": "fee", "dur": 53.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528354992.7, "ph": "X", "cat": "fee", "dur": 75.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528355070.6, "ph": "X", "cat": "fee", "dur": 76.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528355068.8, "ph": "X", "cat": "fee", "dur": 79.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528355156.2, "ph": "X", "cat": "fee", "dur": 56.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528355155.2, "ph": "X", "cat": "fee", "dur": 57.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528355215.2, "ph": "X", "cat": "fee", "dur": 9.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528355225.5, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528355213.9, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528355232.2, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528355239.1, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528355243.3, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528355265.4, "ph": "X", "cat": "fee", "dur": 37765.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528355231.2, "ph": "X", "cat": "fee", "dur": 37802.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528393209.9, "ph": "X", "cat": "fee", "dur": 47.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528393258.4, "ph": "X", "cat": "fee", "dur": 111.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528393207.9, "ph": "X", "cat": "fee", "dur": 161.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528393374.3, "ph": "X", "cat": "fee", "dur": 564.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528393371.4, "ph": "X", "cat": "fee", "dur": 569.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528393948.2, "ph": "X", "cat": "fee", "dur": 52.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528393946.7, "ph": "X", "cat": "fee", "dur": 54.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528394005.7, "ph": "X", "cat": "fee", "dur": 12.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528394018.4, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528394002.8, "ph": "X", "cat": "fee", "dur": 22.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528394034.2, "ph": "X", "cat": "fee", "dur": 14.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528394050.2, "ph": "X", "cat": "fee", "dur": 9.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528394060.6, "ph": "X", "cat": "fee", "dur": 42.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528394106.0, "ph": "X", "cat": "fee", "dur": 36562.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528394032.2, "ph": "X", "cat": "fee", "dur": 36638.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528430856.2, "ph": "X", "cat": "fee", "dur": 50.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528430907.5, "ph": "X", "cat": "fee", "dur": 116.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528430854.3, "ph": "X", "cat": "fee", "dur": 170.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528431028.8, "ph": "X", "cat": "fee", "dur": 462.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528431026.0, "ph": "X", "cat": "fee", "dur": 466.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528431498.6, "ph": "X", "cat": "fee", "dur": 51.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528431496.5, "ph": "X", "cat": "fee", "dur": 54.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528431554.7, "ph": "X", "cat": "fee", "dur": 11.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528431567.2, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528431553.0, "ph": "X", "cat": "fee", "dur": 22.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528431583.2, "ph": "X", "cat": "fee", "dur": 10.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528431594.8, "ph": "X", "cat": "fee", "dur": 9.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528431605.1, "ph": "X", "cat": "fee", "dur": 38.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528431647.0, "ph": "X", "cat": "fee", "dur": 42991.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528431581.6, "ph": "X", "cat": "fee", "dur": 43057.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528474754.4, "ph": "X", "cat": "fee", "dur": 26.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528474781.8, "ph": "X", "cat": "fee", "dur": 63.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528474753.4, "ph": "X", "cat": "fee", "dur": 91.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528474848.8, "ph": "X", "cat": "fee", "dur": 1828.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528474846.4, "ph": "X", "cat": "fee", "dur": 1832.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528476687.2, "ph": "X", "cat": "fee", "dur": 41.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528476684.4, "ph": "X", "cat": "fee", "dur": 44.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528476732.1, "ph": "X", "cat": "fee", "dur": 11.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528476744.1, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528476730.5, "ph": "X", "cat": "fee", "dur": 20.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528476757.8, "ph": "X", "cat": "fee", "dur": 10.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528476768.8, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528476776.7, "ph": "X", "cat": "fee", "dur": 29.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528476809.2, "ph": "X", "cat": "fee", "dur": 53487.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528476756.4, "ph": "X", "cat": "fee", "dur": 53543.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528530648.8, "ph": "X", "cat": "fee", "dur": 95.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528530746.2, "ph": "X", "cat": "fee", "dur": 216.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528530645.6, "ph": "X", "cat": "fee", "dur": 317.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528530969.2, "ph": "X", "cat": "fee", "dur": 1574.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528530965.4, "ph": "X", "cat": "fee", "dur": 1582.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528532570.1, "ph": "X", "cat": "fee", "dur": 158.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528532563.1, "ph": "X", "cat": "fee", "dur": 166.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528532736.4, "ph": "X", "cat": "fee", "dur": 25.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528532763.4, "ph": "X", "cat": "fee", "dur": 14.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528532734.1, "ph": "X", "cat": "fee", "dur": 44.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528532791.6, "ph": "X", "cat": "fee", "dur": 23.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528532818.2, "ph": "X", "cat": "fee", "dur": 15.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528532834.9, "ph": "X", "cat": "fee", "dur": 64.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528532904.6, "ph": "X", "cat": "fee", "dur": 113328.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528532789.7, "ph": "X", "cat": "fee", "dur": 113445.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528646490.0, "ph": "X", "cat": "fee", "dur": 92.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528646584.6, "ph": "X", "cat": "fee", "dur": 179.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528646486.3, "ph": "X", "cat": "fee", "dur": 278.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528646771.3, "ph": "X", "cat": "fee", "dur": 1665.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528646767.3, "ph": "X", "cat": "fee", "dur": 1673.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528648453.9, "ph": "X", "cat": "fee", "dur": 163.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528648448.8, "ph": "X", "cat": "fee", "dur": 169.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528648626.0, "ph": "X", "cat": "fee", "dur": 31.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528648659.0, "ph": "X", "cat": "fee", "dur": 12.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528648622.9, "ph": "X", "cat": "fee", "dur": 48.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528648685.4, "ph": "X", "cat": "fee", "dur": 20.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528648708.1, "ph": "X", "cat": "fee", "dur": 14.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528648723.5, "ph": "X", "cat": "fee", "dur": 55.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528648786.3, "ph": "X", "cat": "fee", "dur": 80876.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528648682.7, "ph": "X", "cat": "fee", "dur": 80981.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528729809.8, "ph": "X", "cat": "fee", "dur": 33.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528729844.6, "ph": "X", "cat": "fee", "dur": 87.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528729808.5, "ph": "X", "cat": "fee", "dur": 124.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528729937.2, "ph": "X", "cat": "fee", "dur": 947.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528729934.2, "ph": "X", "cat": "fee", "dur": 952.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528730895.6, "ph": "X", "cat": "fee", "dur": 104.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528730892.4, "ph": "X", "cat": "fee", "dur": 107.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528731003.4, "ph": "X", "cat": "fee", "dur": 13.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528731017.4, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528731002.0, "ph": "X", "cat": "fee", "dur": 23.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528731032.2, "ph": "X", "cat": "fee", "dur": 10.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528731043.8, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528731052.6, "ph": "X", "cat": "fee", "dur": 31.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528731086.7, "ph": "X", "cat": "fee", "dur": 60412.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528731031.0, "ph": "X", "cat": "fee", "dur": 60469.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528791643.8, "ph": "X", "cat": "fee", "dur": 38.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528791684.0, "ph": "X", "cat": "fee", "dur": 91.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528791642.7, "ph": "X", "cat": "fee", "dur": 133.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528791779.4, "ph": "X", "cat": "fee", "dur": 664.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528791777.1, "ph": "X", "cat": "fee", "dur": 667.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528792451.8, "ph": "X", "cat": "fee", "dur": 56.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528792449.4, "ph": "X", "cat": "fee", "dur": 58.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528792511.9, "ph": "X", "cat": "fee", "dur": 13.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528792525.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528792510.5, "ph": "X", "cat": "fee", "dur": 21.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528792538.2, "ph": "X", "cat": "fee", "dur": 10.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528792549.5, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528792557.0, "ph": "X", "cat": "fee", "dur": 30.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528792590.2, "ph": "X", "cat": "fee", "dur": 28078.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528792537.0, "ph": "X", "cat": "fee", "dur": 28135.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528820858.4, "ph": "X", "cat": "fee", "dur": 61.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528820921.9, "ph": "X", "cat": "fee", "dur": 148.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528820855.9, "ph": "X", "cat": "fee", "dur": 214.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528821075.8, "ph": "X", "cat": "fee", "dur": 728.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528821072.5, "ph": "X", "cat": "fee", "dur": 735.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528821817.5, "ph": "X", "cat": "fee", "dur": 52.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528821814.2, "ph": "X", "cat": "fee", "dur": 55.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528821874.7, "ph": "X", "cat": "fee", "dur": 18.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528821894.0, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528821873.0, "ph": "X", "cat": "fee", "dur": 29.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528821910.9, "ph": "X", "cat": "fee", "dur": 13.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528821925.3, "ph": "X", "cat": "fee", "dur": 10.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528821936.3, "ph": "X", "cat": "fee", "dur": 57.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528821997.6, "ph": "X", "cat": "fee", "dur": 46550.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528821908.8, "ph": "X", "cat": "fee", "dur": 46640.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528868691.2, "ph": "X", "cat": "fee", "dur": 38.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528868732.0, "ph": "X", "cat": "fee", "dur": 90.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528868689.8, "ph": "X", "cat": "fee", "dur": 133.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528868827.0, "ph": "X", "cat": "fee", "dur": 1299.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528868824.5, "ph": "X", "cat": "fee", "dur": 1302.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528870134.6, "ph": "X", "cat": "fee", "dur": 49.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528870132.3, "ph": "X", "cat": "fee", "dur": 52.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528870188.0, "ph": "X", "cat": "fee", "dur": 13.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528870202.2, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528870186.8, "ph": "X", "cat": "fee", "dur": 24.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528870218.7, "ph": "X", "cat": "fee", "dur": 13.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528870233.5, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528870243.1, "ph": "X", "cat": "fee", "dur": 37.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528870283.7, "ph": "X", "cat": "fee", "dur": 43644.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528870217.6, "ph": "X", "cat": "fee", "dur": 43712.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528914170.9, "ph": "X", "cat": "fee", "dur": 71.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528914244.7, "ph": "X", "cat": "fee", "dur": 141.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528914168.8, "ph": "X", "cat": "fee", "dur": 217.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528914390.9, "ph": "X", "cat": "fee", "dur": 772.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528914388.0, "ph": "X", "cat": "fee", "dur": 777.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528915175.5, "ph": "X", "cat": "fee", "dur": 71.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528915172.4, "ph": "X", "cat": "fee", "dur": 75.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528915252.5, "ph": "X", "cat": "fee", "dur": 14.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528915267.6, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528915250.5, "ph": "X", "cat": "fee", "dur": 26.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528915284.4, "ph": "X", "cat": "fee", "dur": 14.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528915300.0, "ph": "X", "cat": "fee", "dur": 9.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528915310.5, "ph": "X", "cat": "fee", "dur": 48.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528915362.9, "ph": "X", "cat": "fee", "dur": 30217.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528915283.3, "ph": "X", "cat": "fee", "dur": 30311.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438528945829.2, "ph": "X", "cat": "fee", "dur": 58.1, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438528945888.9, "ph": "X", "cat": "fee", "dur": 146.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438528945826.4, "ph": "X", "cat": "fee", "dur": 209.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438528946041.2, "ph": "X", "cat": "fee", "dur": 1003.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528946037.8, "ph": "X", "cat": "fee", "dur": 1009.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438528947061.6, "ph": "X", "cat": "fee", "dur": 75.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528947057.3, "ph": "X", "cat": "fee", "dur": 80.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438528947143.0, "ph": "X", "cat": "fee", "dur": 16.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438528947160.0, "ph": "X", "cat": "fee", "dur": 13.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438528947140.8, "ph": "X", "cat": "fee", "dur": 32.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438528947183.0, "ph": "X", "cat": "fee", "dur": 19.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438528947203.5, "ph": "X", "cat": "fee", "dur": 12.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438528947216.5, "ph": "X", "cat": "fee", "dur": 77.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438528947298.1, "ph": "X", "cat": "fee", "dur": 55747.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438528947181.3, "ph": "X", "cat": "fee", "dur": 55867.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529003279.9, "ph": "X", "cat": "fee", "dur": 45.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529003326.5, "ph": "X", "cat": "fee", "dur": 102.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529003278.5, "ph": "X", "cat": "fee", "dur": 150.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529003434.4, "ph": "X", "cat": "fee", "dur": 145.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529003431.0, "ph": "X", "cat": "fee", "dur": 150.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529003585.7, "ph": "X", "cat": "fee", "dur": 108.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529003584.2, "ph": "X", "cat": "fee", "dur": 110.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529003698.7, "ph": "X", "cat": "fee", "dur": 13.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529003713.3, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529003697.3, "ph": "X", "cat": "fee", "dur": 21.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529003725.4, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529003736.2, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529003743.6, "ph": "X", "cat": "fee", "dur": 30.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529003776.4, "ph": "X", "cat": "fee", "dur": 40958.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529003723.9, "ph": "X", "cat": "fee", "dur": 41013.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529044910.0, "ph": "X", "cat": "fee", "dur": 51.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529044963.0, "ph": "X", "cat": "fee", "dur": 140.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529044906.3, "ph": "X", "cat": "fee", "dur": 197.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529045108.4, "ph": "X", "cat": "fee", "dur": 126.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529045105.1, "ph": "X", "cat": "fee", "dur": 130.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529045241.8, "ph": "X", "cat": "fee", "dur": 58.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529045240.2, "ph": "X", "cat": "fee", "dur": 60.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529045304.7, "ph": "X", "cat": "fee", "dur": 14.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529045319.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529045303.1, "ph": "X", "cat": "fee", "dur": 22.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529045332.4, "ph": "X", "cat": "fee", "dur": 10.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529045343.6, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529045351.8, "ph": "X", "cat": "fee", "dur": 33.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529045388.4, "ph": "X", "cat": "fee", "dur": 16075.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529045330.7, "ph": "X", "cat": "fee", "dur": 16134.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529061606.0, "ph": "X", "cat": "fee", "dur": 37.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529061645.8, "ph": "X", "cat": "fee", "dur": 88.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529061604.6, "ph": "X", "cat": "fee", "dur": 130.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529061738.9, "ph": "X", "cat": "fee", "dur": 153.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529061736.3, "ph": "X", "cat": "fee", "dur": 156.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529061897.5, "ph": "X", "cat": "fee", "dur": 37.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529061895.7, "ph": "X", "cat": "fee", "dur": 39.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529061938.2, "ph": "X", "cat": "fee", "dur": 11.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529061950.8, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529061936.9, "ph": "X", "cat": "fee", "dur": 19.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529061960.9, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529061970.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529061977.0, "ph": "X", "cat": "fee", "dur": 27.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529062006.9, "ph": "X", "cat": "fee", "dur": 55879.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529061959.8, "ph": "X", "cat": "fee", "dur": 55929.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529118061.7, "ph": "X", "cat": "fee", "dur": 42.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529118105.3, "ph": "X", "cat": "fee", "dur": 105.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529118059.3, "ph": "X", "cat": "fee", "dur": 151.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529118216.7, "ph": "X", "cat": "fee", "dur": 170.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529118212.7, "ph": "X", "cat": "fee", "dur": 175.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529118392.9, "ph": "X", "cat": "fee", "dur": 80.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529118391.6, "ph": "X", "cat": "fee", "dur": 82.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529118477.0, "ph": "X", "cat": "fee", "dur": 14.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529118492.1, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529118475.7, "ph": "X", "cat": "fee", "dur": 22.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529118504.3, "ph": "X", "cat": "fee", "dur": 10.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529118515.7, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529118523.6, "ph": "X", "cat": "fee", "dur": 32.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529118558.1, "ph": "X", "cat": "fee", "dur": 36023.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529118502.8, "ph": "X", "cat": "fee", "dur": 36080.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529154728.5, "ph": "X", "cat": "fee", "dur": 46.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529154777.0, "ph": "X", "cat": "fee", "dur": 112.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529154726.4, "ph": "X", "cat": "fee", "dur": 162.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529154893.6, "ph": "X", "cat": "fee", "dur": 589.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529154890.7, "ph": "X", "cat": "fee", "dur": 593.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529155492.3, "ph": "X", "cat": "fee", "dur": 47.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529155490.2, "ph": "X", "cat": "fee", "dur": 50.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529155543.8, "ph": "X", "cat": "fee", "dur": 12.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529155556.5, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529155542.0, "ph": "X", "cat": "fee", "dur": 22.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529155572.2, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529155584.8, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529155593.3, "ph": "X", "cat": "fee", "dur": 33.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529155629.7, "ph": "X", "cat": "fee", "dur": 27780.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529155571.0, "ph": "X", "cat": "fee", "dur": 27842.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529183680.5, "ph": "X", "cat": "fee", "dur": 78.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529183760.5, "ph": "X", "cat": "fee", "dur": 172.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529183676.9, "ph": "X", "cat": "fee", "dur": 257.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529183938.9, "ph": "X", "cat": "fee", "dur": 655.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529183936.4, "ph": "X", "cat": "fee", "dur": 658.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529184601.1, "ph": "X", "cat": "fee", "dur": 47.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529184599.2, "ph": "X", "cat": "fee", "dur": 49.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529184652.5, "ph": "X", "cat": "fee", "dur": 12.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529184665.5, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529184651.3, "ph": "X", "cat": "fee", "dur": 21.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529184681.1, "ph": "X", "cat": "fee", "dur": 11.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529184693.1, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529184701.5, "ph": "X", "cat": "fee", "dur": 36.2, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529184740.9, "ph": "X", "cat": "fee", "dur": 38394.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529184679.0, "ph": "X", "cat": "fee", "dur": 38459.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529223358.7, "ph": "X", "cat": "fee", "dur": 47.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529223407.5, "ph": "X", "cat": "fee", "dur": 117.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529223357.0, "ph": "X", "cat": "fee", "dur": 167.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529223529.5, "ph": "X", "cat": "fee", "dur": 532.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529223526.4, "ph": "X", "cat": "fee", "dur": 536.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529224070.4, "ph": "X", "cat": "fee", "dur": 55.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529224068.2, "ph": "X", "cat": "fee", "dur": 57.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529224130.4, "ph": "X", "cat": "fee", "dur": 13.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529224144.6, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529224128.0, "ph": "X", "cat": "fee", "dur": 24.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529224159.5, "ph": "X", "cat": "fee", "dur": 12.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529224173.1, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529224182.2, "ph": "X", "cat": "fee", "dur": 42.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529224229.1, "ph": "X", "cat": "fee", "dur": 51580.8, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529224158.2, "ph": "X", "cat": "fee", "dur": 51653.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529275985.4, "ph": "X", "cat": "fee", "dur": 51.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529276039.0, "ph": "X", "cat": "fee", "dur": 156.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529275983.4, "ph": "X", "cat": "fee", "dur": 212.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529276200.3, "ph": "X", "cat": "fee", "dur": 170.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529276197.8, "ph": "X", "cat": "fee", "dur": 173.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529276379.8, "ph": "X", "cat": "fee", "dur": 81.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529276377.9, "ph": "X", "cat": "fee", "dur": 83.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529276465.7, "ph": "X", "cat": "fee", "dur": 14.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529276481.0, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529276464.0, "ph": "X", "cat": "fee", "dur": 23.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529276493.9, "ph": "X", "cat": "fee", "dur": 11.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529276507.6, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529276517.3, "ph": "X", "cat": "fee", "dur": 36.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529276556.7, "ph": "X", "cat": "fee", "dur": 23641.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529276492.2, "ph": "X", "cat": "fee", "dur": 23708.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529300386.8, "ph": "X", "cat": "fee", "dur": 60.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529300450.3, "ph": "X", "cat": "fee", "dur": 151.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529300385.0, "ph": "X", "cat": "fee", "dur": 217.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529300607.0, "ph": "X", "cat": "fee", "dur": 146.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529300603.8, "ph": "X", "cat": "fee", "dur": 149.9, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529300759.3, "ph": "X", "cat": "fee", "dur": 53.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529300757.6, "ph": "X", "cat": "fee", "dur": 56.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529300818.2, "ph": "X", "cat": "fee", "dur": 13.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529300833.1, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529300816.4, "ph": "X", "cat": "fee", "dur": 22.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529300845.3, "ph": "X", "cat": "fee", "dur": 13.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529300859.7, "ph": "X", "cat": "fee", "dur": 9.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529300870.3, "ph": "X", "cat": "fee", "dur": 38.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529300912.1, "ph": "X", "cat": "fee", "dur": 29558.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529300843.8, "ph": "X", "cat": "fee", "dur": 29628.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529330610.0, "ph": "X", "cat": "fee", "dur": 32.5, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529330643.7, "ph": "X", "cat": "fee", "dur": 77.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529330608.7, "ph": "X", "cat": "fee", "dur": 112.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529330724.6, "ph": "X", "cat": "fee", "dur": 102.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529330722.5, "ph": "X", "cat": "fee", "dur": 104.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529330832.1, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529330830.8, "ph": "X", "cat": "fee", "dur": 33.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529330867.9, "ph": "X", "cat": "fee", "dur": 12.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529330880.8, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529330866.6, "ph": "X", "cat": "fee", "dur": 19.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529330890.4, "ph": "X", "cat": "fee", "dur": 9.2, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529330900.4, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529330908.0, "ph": "X", "cat": "fee", "dur": 34.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529330944.6, "ph": "X", "cat": "fee", "dur": 30593.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529330889.1, "ph": "X", "cat": "fee", "dur": 30650.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529361669.3, "ph": "X", "cat": "fee", "dur": 28.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529361699.2, "ph": "X", "cat": "fee", "dur": 66.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529361668.4, "ph": "X", "cat": "fee", "dur": 97.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529361769.9, "ph": "X", "cat": "fee", "dur": 89.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529361767.0, "ph": "X", "cat": "fee", "dur": 92.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529361862.9, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529361861.6, "ph": "X", "cat": "fee", "dur": 33.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529361898.1, "ph": "X", "cat": "fee", "dur": 11.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529361910.4, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529361897.0, "ph": "X", "cat": "fee", "dur": 17.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529361918.8, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529361926.8, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529361932.4, "ph": "X", "cat": "fee", "dur": 25.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529361959.3, "ph": "X", "cat": "fee", "dur": 21782.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529361917.2, "ph": "X", "cat": "fee", "dur": 21826.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529383890.9, "ph": "X", "cat": "fee", "dur": 35.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529383927.2, "ph": "X", "cat": "fee", "dur": 80.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529383889.6, "ph": "X", "cat": "fee", "dur": 117.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529384010.9, "ph": "X", "cat": "fee", "dur": 98.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529384008.8, "ph": "X", "cat": "fee", "dur": 101.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529384112.9, "ph": "X", "cat": "fee", "dur": 32.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529384111.9, "ph": "X", "cat": "fee", "dur": 34.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529384148.8, "ph": "X", "cat": "fee", "dur": 11.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529384160.4, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529384147.8, "ph": "X", "cat": "fee", "dur": 17.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529384169.4, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529384177.5, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529384184.0, "ph": "X", "cat": "fee", "dur": 25.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529384211.7, "ph": "X", "cat": "fee", "dur": 23892.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529384168.4, "ph": "X", "cat": "fee", "dur": 23938.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529408251.0, "ph": "X", "cat": "fee", "dur": 38.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529408291.1, "ph": "X", "cat": "fee", "dur": 99.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529408249.3, "ph": "X", "cat": "fee", "dur": 141.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529408395.4, "ph": "X", "cat": "fee", "dur": 980.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529408392.3, "ph": "X", "cat": "fee", "dur": 985.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529409385.1, "ph": "X", "cat": "fee", "dur": 50.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529409381.8, "ph": "X", "cat": "fee", "dur": 54.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529409439.6, "ph": "X", "cat": "fee", "dur": 13.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529409453.3, "ph": "X", "cat": "fee", "dur": 7.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529409438.0, "ph": "X", "cat": "fee", "dur": 23.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529409467.6, "ph": "X", "cat": "fee", "dur": 10.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529409478.7, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529409486.7, "ph": "X", "cat": "fee", "dur": 32.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529409521.8, "ph": "X", "cat": "fee", "dur": 22203.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529409466.4, "ph": "X", "cat": "fee", "dur": 22261.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529431916.9, "ph": "X", "cat": "fee", "dur": 44.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529431962.3, "ph": "X", "cat": "fee", "dur": 111.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529431915.0, "ph": "X", "cat": "fee", "dur": 159.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529432079.2, "ph": "X", "cat": "fee", "dur": 138.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529432076.1, "ph": "X", "cat": "fee", "dur": 142.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529432222.8, "ph": "X", "cat": "fee", "dur": 61.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529432221.5, "ph": "X", "cat": "fee", "dur": 63.2, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529432291.3, "ph": "X", "cat": "fee", "dur": 20.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529432312.5, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529432288.8, "ph": "X", "cat": "fee", "dur": 32.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529432329.0, "ph": "X", "cat": "fee", "dur": 10.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529432341.4, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529432350.4, "ph": "X", "cat": "fee", "dur": 39.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529432394.6, "ph": "X", "cat": "fee", "dur": 28396.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529432327.5, "ph": "X", "cat": "fee", "dur": 28465.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529460943.4, "ph": "X", "cat": "fee", "dur": 31.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529460976.9, "ph": "X", "cat": "fee", "dur": 82.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529460942.2, "ph": "X", "cat": "fee", "dur": 117.4, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529461064.1, "ph": "X", "cat": "fee", "dur": 107.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529461061.2, "ph": "X", "cat": "fee", "dur": 110.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529461176.1, "ph": "X", "cat": "fee", "dur": 42.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529461174.8, "ph": "X", "cat": "fee", "dur": 43.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529461222.0, "ph": "X", "cat": "fee", "dur": 11.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529461234.6, "ph": "X", "cat": "fee", "dur": 4.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529461220.6, "ph": "X", "cat": "fee", "dur": 18.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529461244.3, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529461252.8, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529461259.2, "ph": "X", "cat": "fee", "dur": 27.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529461288.6, "ph": "X", "cat": "fee", "dur": 29955.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529461243.1, "ph": "X", "cat": "fee", "dur": 30003.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529491463.8, "ph": "X", "cat": "fee", "dur": 35.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529491500.3, "ph": "X", "cat": "fee", "dur": 90.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529491462.2, "ph": "X", "cat": "fee", "dur": 128.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529491595.3, "ph": "X", "cat": "fee", "dur": 750.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529491592.1, "ph": "X", "cat": "fee", "dur": 755.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529492354.1, "ph": "X", "cat": "fee", "dur": 47.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529492351.3, "ph": "X", "cat": "fee", "dur": 50.1, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529492406.2, "ph": "X", "cat": "fee", "dur": 13.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529492420.5, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529492404.4, "ph": "X", "cat": "fee", "dur": 24.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529492437.1, "ph": "X", "cat": "fee", "dur": 14.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529492452.9, "ph": "X", "cat": "fee", "dur": 67.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529492521.6, "ph": "X", "cat": "fee", "dur": 35.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529492560.4, "ph": "X", "cat": "fee", "dur": 15950.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529492435.5, "ph": "X", "cat": "fee", "dur": 16077.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529508683.9, "ph": "X", "cat": "fee", "dur": 35.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529508720.9, "ph": "X", "cat": "fee", "dur": 78.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529508682.9, "ph": "X", "cat": "fee", "dur": 116.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529508803.8, "ph": "X", "cat": "fee", "dur": 608.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529508800.8, "ph": "X", "cat": "fee", "dur": 612.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529509418.8, "ph": "X", "cat": "fee", "dur": 35.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529509416.3, "ph": "X", "cat": "fee", "dur": 38.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529509458.3, "ph": "X", "cat": "fee", "dur": 12.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529509472.3, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529509456.8, "ph": "X", "cat": "fee", "dur": 22.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529509487.6, "ph": "X", "cat": "fee", "dur": 13.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529509502.7, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529509512.1, "ph": "X", "cat": "fee", "dur": 49.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529509565.0, "ph": "X", "cat": "fee", "dur": 60210.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529509485.7, "ph": "X", "cat": "fee", "dur": 60290.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529569906.2, "ph": "X", "cat": "fee", "dur": 32.4, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529569939.7, "ph": "X", "cat": "fee", "dur": 79.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529569904.9, "ph": "X", "cat": "fee", "dur": 114.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529570023.4, "ph": "X", "cat": "fee", "dur": 1302.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529570021.0, "ph": "X", "cat": "fee", "dur": 1306.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529571337.0, "ph": "X", "cat": "fee", "dur": 104.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529571333.5, "ph": "X", "cat": "fee", "dur": 109.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529571449.1, "ph": "X", "cat": "fee", "dur": 25.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529571475.8, "ph": "X", "cat": "fee", "dur": 11.2, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529571447.0, "ph": "X", "cat": "fee", "dur": 40.5, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529571496.6, "ph": "X", "cat": "fee", "dur": 20.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529571517.8, "ph": "X", "cat": "fee", "dur": 10.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529571529.8, "ph": "X", "cat": "fee", "dur": 39.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529571573.6, "ph": "X", "cat": "fee", "dur": 57029.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529571495.0, "ph": "X", "cat": "fee", "dur": 57110.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529628774.2, "ph": "X", "cat": "fee", "dur": 34.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529628809.7, "ph": "X", "cat": "fee", "dur": 87.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529628773.1, "ph": "X", "cat": "fee", "dur": 124.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529628901.8, "ph": "X", "cat": "fee", "dur": 923.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529628898.5, "ph": "X", "cat": "fee", "dur": 928.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529629832.6, "ph": "X", "cat": "fee", "dur": 77.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529629830.5, "ph": "X", "cat": "fee", "dur": 79.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529629913.8, "ph": "X", "cat": "fee", "dur": 11.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529629926.2, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529629912.1, "ph": "X", "cat": "fee", "dur": 21.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529629939.7, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529629952.0, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529629961.4, "ph": "X", "cat": "fee", "dur": 30.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529629994.3, "ph": "X", "cat": "fee", "dur": 29078.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529629938.6, "ph": "X", "cat": "fee", "dur": 29136.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529659265.6, "ph": "X", "cat": "fee", "dur": 44.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529659312.4, "ph": "X", "cat": "fee", "dur": 103.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529659263.5, "ph": "X", "cat": "fee", "dur": 152.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529659419.9, "ph": "X", "cat": "fee", "dur": 134.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529659417.6, "ph": "X", "cat": "fee", "dur": 137.5, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529659561.5, "ph": "X", "cat": "fee", "dur": 64.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529659560.1, "ph": "X", "cat": "fee", "dur": 66.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529659629.5, "ph": "X", "cat": "fee", "dur": 12.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529659642.2, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529659628.3, "ph": "X", "cat": "fee", "dur": 19.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529659653.2, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529659662.9, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529659669.9, "ph": "X", "cat": "fee", "dur": 29.7, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529659701.5, "ph": "X", "cat": "fee", "dur": 39947.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529659651.6, "ph": "X", "cat": "fee", "dur": 40001.3, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529699957.7, "ph": "X", "cat": "fee", "dur": 71.8, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529700031.9, "ph": "X", "cat": "fee", "dur": 218.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529699954.6, "ph": "X", "cat": "fee", "dur": 297.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529700261.5, "ph": "X", "cat": "fee", "dur": 510.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529700255.7, "ph": "X", "cat": "fee", "dur": 519.2, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529700792.5, "ph": "X", "cat": "fee", "dur": 105.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529700787.2, "ph": "X", "cat": "fee", "dur": 111.5, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529700906.8, "ph": "X", "cat": "fee", "dur": 34.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529700943.4, "ph": "X", "cat": "fee", "dur": 13.1, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529700904.0, "ph": "X", "cat": "fee", "dur": 52.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529700969.6, "ph": "X", "cat": "fee", "dur": 19.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529700991.4, "ph": "X", "cat": "fee", "dur": 13.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529701007.6, "ph": "X", "cat": "fee", "dur": 55.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529701068.8, "ph": "X", "cat": "fee", "dur": 26850.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529700967.5, "ph": "X", "cat": "fee", "dur": 26956.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529728215.9, "ph": "X", "cat": "fee", "dur": 89.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529728309.0, "ph": "X", "cat": "fee", "dur": 185.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529728211.8, "ph": "X", "cat": "fee", "dur": 283.0, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529728499.6, "ph": "X", "cat": "fee", "dur": 163.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529728496.5, "ph": "X", "cat": "fee", "dur": 167.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529728669.5, "ph": "X", "cat": "fee", "dur": 50.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529728668.1, "ph": "X", "cat": "fee", "dur": 52.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529728724.8, "ph": "X", "cat": "fee", "dur": 14.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529728739.8, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529728722.9, "ph": "X", "cat": "fee", "dur": 24.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529728753.4, "ph": "X", "cat": "fee", "dur": 11.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529728766.5, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529728775.0, "ph": "X", "cat": "fee", "dur": 38.3, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529728816.1, "ph": "X", "cat": "fee", "dur": 32817.0, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529728752.1, "ph": "X", "cat": "fee", "dur": 32882.6, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529761776.0, "ph": "X", "cat": "fee", "dur": 31.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529761808.8, "ph": "X", "cat": "fee", "dur": 74.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529761775.1, "ph": "X", "cat": "fee", "dur": 108.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529761888.7, "ph": "X", "cat": "fee", "dur": 98.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529761885.4, "ph": "X", "cat": "fee", "dur": 102.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529761992.6, "ph": "X", "cat": "fee", "dur": 35.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529761990.7, "ph": "X", "cat": "fee", "dur": 37.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529762031.7, "ph": "X", "cat": "fee", "dur": 11.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529762044.3, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529762029.9, "ph": "X", "cat": "fee", "dur": 18.3, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529762052.5, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529762060.2, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529762066.4, "ph": "X", "cat": "fee", "dur": 24.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529762092.8, "ph": "X", "cat": "fee", "dur": 21453.1, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529762051.5, "ph": "X", "cat": "fee", "dur": 21496.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529783718.7, "ph": "X", "cat": "fee", "dur": 35.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529783755.0, "ph": "X", "cat": "fee", "dur": 90.8, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529783717.0, "ph": "X", "cat": "fee", "dur": 129.1, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529783850.6, "ph": "X", "cat": "fee", "dur": 100.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529783848.1, "ph": "X", "cat": "fee", "dur": 103.6, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529783955.3, "ph": "X", "cat": "fee", "dur": 33.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529783954.2, "ph": "X", "cat": "fee", "dur": 34.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529783991.7, "ph": "X", "cat": "fee", "dur": 10.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529784002.8, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529783990.8, "ph": "X", "cat": "fee", "dur": 16.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529784011.8, "ph": "X", "cat": "fee", "dur": 7.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529784020.2, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529784026.4, "ph": "X", "cat": "fee", "dur": 26.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529784054.3, "ph": "X", "cat": "fee", "dur": 16317.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529784010.1, "ph": "X", "cat": "fee", "dur": 16363.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529800550.7, "ph": "X", "cat": "fee", "dur": 45.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529800597.7, "ph": "X", "cat": "fee", "dur": 103.0, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529800549.1, "ph": "X", "cat": "fee", "dur": 151.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529800706.0, "ph": "X", "cat": "fee", "dur": 122.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529800703.1, "ph": "X", "cat": "fee", "dur": 126.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529800834.3, "ph": "X", "cat": "fee", "dur": 37.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529800833.2, "ph": "X", "cat": "fee", "dur": 38.6, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529800875.9, "ph": "X", "cat": "fee", "dur": 13.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529800890.0, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529800874.5, "ph": "X", "cat": "fee", "dur": 20.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529800901.4, "ph": "X", "cat": "fee", "dur": 11.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529800914.6, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529800921.9, "ph": "X", "cat": "fee", "dur": 35.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529800959.9, "ph": "X", "cat": "fee", "dur": 15169.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529800900.0, "ph": "X", "cat": "fee", "dur": 15232.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529816314.2, "ph": "X", "cat": "fee", "dur": 46.9, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529816362.6, "ph": "X", "cat": "fee", "dur": 132.2, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529816312.3, "ph": "X", "cat": "fee", "dur": 182.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529816500.1, "ph": "X", "cat": "fee", "dur": 149.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529816496.6, "ph": "X", "cat": "fee", "dur": 153.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529816655.9, "ph": "X", "cat": "fee", "dur": 43.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529816654.4, "ph": "X", "cat": "fee", "dur": 45.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529816703.8, "ph": "X", "cat": "fee", "dur": 14.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529816718.6, "ph": "X", "cat": "fee", "dur": 6.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529816701.9, "ph": "X", "cat": "fee", "dur": 22.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529816731.8, "ph": "X", "cat": "fee", "dur": 11.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529816744.3, "ph": "X", "cat": "fee", "dur": 7.7, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529816752.9, "ph": "X", "cat": "fee", "dur": 36.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529816792.0, "ph": "X", "cat": "fee", "dur": 14169.4, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529816729.8, "ph": "X", "cat": "fee", "dur": 14233.0, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529831088.1, "ph": "X", "cat": "fee", "dur": 32.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529831122.0, "ph": "X", "cat": "fee", "dur": 79.7, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529831087.2, "ph": "X", "cat": "fee", "dur": 114.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529831207.7, "ph": "X", "cat": "fee", "dur": 102.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529831203.2, "ph": "X", "cat": "fee", "dur": 107.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529831314.2, "ph": "X", "cat": "fee", "dur": 22.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529831313.0, "ph": "X", "cat": "fee", "dur": 24.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529831339.8, "ph": "X", "cat": "fee", "dur": 12.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529831352.4, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529831338.6, "ph": "X", "cat": "fee", "dur": 18.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529831364.0, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529831374.5, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529831382.4, "ph": "X", "cat": "fee", "dur": 29.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529831415.0, "ph": "X", "cat": "fee", "dur": 25325.9, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529831362.9, "ph": "X", "cat": "fee", "dur": 25379.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529856866.0, "ph": "X", "cat": "fee", "dur": 28.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529856895.6, "ph": "X", "cat": "fee", "dur": 64.5, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529856865.0, "ph": "X", "cat": "fee", "dur": 95.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529856963.6, "ph": "X", "cat": "fee", "dur": 85.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529856961.4, "ph": "X", "cat": "fee", "dur": 88.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529857052.6, "ph": "X", "cat": "fee", "dur": 33.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529857051.5, "ph": "X", "cat": "fee", "dur": 34.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529857088.9, "ph": "X", "cat": "fee", "dur": 10.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529857100.3, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529857088.0, "ph": "X", "cat": "fee", "dur": 16.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529857108.1, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529857115.3, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529857121.1, "ph": "X", "cat": "fee", "dur": 22.6, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529857145.5, "ph": "X", "cat": "fee", "dur": 13623.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529857107.1, "ph": "X", "cat": "fee", "dur": 13665.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529871112.4, "ph": "X", "cat": "fee", "dur": 100.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529871215.4, "ph": "X", "cat": "fee", "dur": 272.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529871109.1, "ph": "X", "cat": "fee", "dur": 380.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529871496.8, "ph": "X", "cat": "fee", "dur": 181.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529871491.8, "ph": "X", "cat": "fee", "dur": 187.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529871683.7, "ph": "X", "cat": "fee", "dur": 42.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529871682.4, "ph": "X", "cat": "fee", "dur": 43.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529871730.6, "ph": "X", "cat": "fee", "dur": 12.1, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529871743.4, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529871729.3, "ph": "X", "cat": "fee", "dur": 20.1, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529871754.6, "ph": "X", "cat": "fee", "dur": 9.7, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529871766.0, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529871773.8, "ph": "X", "cat": "fee", "dur": 29.0, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529871805.6, "ph": "X", "cat": "fee", "dur": 19833.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529871753.3, "ph": "X", "cat": "fee", "dur": 19887.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529891766.5, "ph": "X", "cat": "fee", "dur": 31.7, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529891799.3, "ph": "X", "cat": "fee", "dur": 83.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529891764.9, "ph": "X", "cat": "fee", "dur": 117.7, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529891886.4, "ph": "X", "cat": "fee", "dur": 92.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529891884.1, "ph": "X", "cat": "fee", "dur": 95.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529891982.6, "ph": "X", "cat": "fee", "dur": 33.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529891981.5, "ph": "X", "cat": "fee", "dur": 34.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529892018.9, "ph": "X", "cat": "fee", "dur": 10.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529892030.0, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529892017.9, "ph": "X", "cat": "fee", "dur": 16.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529892037.8, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529892046.3, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529892052.2, "ph": "X", "cat": "fee", "dur": 25.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529892079.4, "ph": "X", "cat": "fee", "dur": 14495.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529892036.8, "ph": "X", "cat": "fee", "dur": 14540.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529906709.4, "ph": "X", "cat": "fee", "dur": 32.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529906742.5, "ph": "X", "cat": "fee", "dur": 83.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529906708.3, "ph": "X", "cat": "fee", "dur": 117.6, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529906829.8, "ph": "X", "cat": "fee", "dur": 420.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529906827.5, "ph": "X", "cat": "fee", "dur": 424.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529907256.7, "ph": "X", "cat": "fee", "dur": 29.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529907254.7, "ph": "X", "cat": "fee", "dur": 31.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529907289.4, "ph": "X", "cat": "fee", "dur": 11.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529907301.6, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529907288.2, "ph": "X", "cat": "fee", "dur": 18.9, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529907312.6, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529907321.9, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529907329.9, "ph": "X", "cat": "fee", "dur": 29.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529907361.8, "ph": "X", "cat": "fee", "dur": 27009.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529907311.2, "ph": "X", "cat": "fee", "dur": 27062.9, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529934655.0, "ph": "X", "cat": "fee", "dur": 78.2, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529934735.1, "ph": "X", "cat": "fee", "dur": 133.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529934651.2, "ph": "X", "cat": "fee", "dur": 217.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529934873.5, "ph": "X", "cat": "fee", "dur": 132.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529934870.4, "ph": "X", "cat": "fee", "dur": 136.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529935011.1, "ph": "X", "cat": "fee", "dur": 46.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529935009.8, "ph": "X", "cat": "fee", "dur": 47.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529935061.2, "ph": "X", "cat": "fee", "dur": 11.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529935073.6, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529935059.9, "ph": "X", "cat": "fee", "dur": 19.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529935084.8, "ph": "X", "cat": "fee", "dur": 9.6, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529935095.4, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529935102.2, "ph": "X", "cat": "fee", "dur": 35.1, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529935139.8, "ph": "X", "cat": "fee", "dur": 16578.3, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529935083.6, "ph": "X", "cat": "fee", "dur": 16637.2, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529951900.5, "ph": "X", "cat": "fee", "dur": 65.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529951968.7, "ph": "X", "cat": "fee", "dur": 168.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529951897.2, "ph": "X", "cat": "fee", "dur": 240.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529952144.3, "ph": "X", "cat": "fee", "dur": 178.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529952140.2, "ph": "X", "cat": "fee", "dur": 183.8, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529952330.5, "ph": "X", "cat": "fee", "dur": 60.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529952328.5, "ph": "X", "cat": "fee", "dur": 63.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529952397.5, "ph": "X", "cat": "fee", "dur": 19.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529952418.2, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529952395.2, "ph": "X", "cat": "fee", "dur": 30.2, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529952432.7, "ph": "X", "cat": "fee", "dur": 12.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529952446.3, "ph": "X", "cat": "fee", "dur": 8.9, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529952456.7, "ph": "X", "cat": "fee", "dur": 36.8, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529952497.1, "ph": "X", "cat": "fee", "dur": 34898.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529952430.8, "ph": "X", "cat": "fee", "dur": 34966.7, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438529987606.0, "ph": "X", "cat": "fee", "dur": 40.0, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438529987647.4, "ph": "X", "cat": "fee", "dur": 93.4, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438529987604.5, "ph": "X", "cat": "fee", "dur": 136.5, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438529987745.4, "ph": "X", "cat": "fee", "dur": 428.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529987742.5, "ph": "X", "cat": "fee", "dur": 432.4, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438529988178.8, "ph": "X", "cat": "fee", "dur": 43.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529988177.5, "ph": "X", "cat": "fee", "dur": 45.4, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438529988225.7, "ph": "X", "cat": "fee", "dur": 11.9, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438529988238.5, "ph": "X", "cat": "fee", "dur": 5.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438529988224.5, "ph": "X", "cat": "fee", "dur": 19.7, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438529988250.1, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438529988259.4, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438529988266.1, "ph": "X", "cat": "fee", "dur": 28.4, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438529988296.8, "ph": "X", "cat": "fee", "dur": 61822.7, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438529988248.8, "ph": "X", "cat": "fee", "dur": 61872.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438530050224.2, "ph": "X", "cat": "fee", "dur": 21.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438530050246.8, "ph": "X", "cat": "fee", "dur": 56.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438530050223.5, "ph": "X", "cat": "fee", "dur": 79.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438530050306.7, "ph": "X", "cat": "fee", "dur": 528.2, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530050304.7, "ph": "X", "cat": "fee", "dur": 530.7, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438530050839.5, "ph": "X", "cat": "fee", "dur": 57.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530050838.5, "ph": "X", "cat": "fee", "dur": 58.7, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438530050900.1, "ph": "X", "cat": "fee", "dur": 10.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530050911.2, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438530050898.4, "ph": "X", "cat": "fee", "dur": 16.42, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438530050918.7, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438530050925.9, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438530050931.6, "ph": "X", "cat": "fee", "dur": 21.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438530050955.3, "ph": "X", "cat": "fee", "dur": 38726.2, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438530050917.6, "ph": "X", "cat": "fee", "dur": 38765.5, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438530089785.6, "ph": "X", "cat": "fee", "dur": 22.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438530089809.1, "ph": "X", "cat": "fee", "dur": 54.9, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438530089784.9, "ph": "X", "cat": "fee", "dur": 79.2, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438530089867.7, "ph": "X", "cat": "fee", "dur": 1200.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530089865.5, "ph": "X", "cat": "fee", "dur": 1205.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438530091081.1, "ph": "X", "cat": "fee", "dur": 66.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530091078.2, "ph": "X", "cat": "fee", "dur": 70.0, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438530091151.5, "ph": "X", "cat": "fee", "dur": 11.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530091163.2, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438530091149.7, "ph": "X", "cat": "fee", "dur": 22.0, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438530091177.9, "ph": "X", "cat": "fee", "dur": 10.9, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438530091189.6, "ph": "X", "cat": "fee", "dur": 9.4, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438530091199.6, "ph": "X", "cat": "fee", "dur": 37.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438530091240.0, "ph": "X", "cat": "fee", "dur": 28397.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438530091176.7, "ph": "X", "cat": "fee", "dur": 28462.4, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438530119792.8, "ph": "X", "cat": "fee", "dur": 30.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438530119824.5, "ph": "X", "cat": "fee", "dur": 73.3, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438530119791.6, "ph": "X", "cat": "fee", "dur": 106.3, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438530119901.1, "ph": "X", "cat": "fee", "dur": 234.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530119899.2, "ph": "X", "cat": "fee", "dur": 237.1, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438530120140.8, "ph": "X", "cat": "fee", "dur": 30.7, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530120139.8, "ph": "X", "cat": "fee", "dur": 31.9, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438530120174.0, "ph": "X", "cat": "fee", "dur": 9.3, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530120183.8, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438530120173.0, "ph": "X", "cat": "fee", "dur": 14.6, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438530120191.4, "ph": "X", "cat": "fee", "dur": 6.1, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438530120198.7, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438530120204.3, "ph": "X", "cat": "fee", "dur": 28.5, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438530120234.7, "ph": "X", "cat": "fee", "dur": 29968.5, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438530120190.2, "ph": "X", "cat": "fee", "dur": 30014.8, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438530150338.5, "ph": "X", "cat": "fee", "dur": 35.6, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438530150375.1, "ph": "X", "cat": "fee", "dur": 88.1, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438530150337.6, "ph": "X", "cat": "fee", "dur": 125.8, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438530150467.2, "ph": "X", "cat": "fee", "dur": 99.8, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530150464.6, "ph": "X", "cat": "fee", "dur": 103.0, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438530150571.7, "ph": "X", "cat": "fee", "dur": 42.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530150570.2, "ph": "X", "cat": "fee", "dur": 44.3, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438530150618.0, "ph": "X", "cat": "fee", "dur": 10.0, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530150628.8, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438530150616.3, "ph": "X", "cat": "fee", "dur": 17.4, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438530150638.0, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)"}, {"pid": 78036, "tid": 82312, "ts": 438530150646.5, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)"}, {"pid": 78036, "tid": 82312, "ts": 438530150652.3, "ph": "X", "cat": "fee", "dur": 23.9, "name": "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)"}, {"pid": 78036, "tid": 82312, "ts": 438530150678.2, "ph": "X", "cat": "fee", "dur": 36253.6, "name": "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)"}, {"pid": 78036, "tid": 82312, "ts": 438530150637.0, "ph": "X", "cat": "fee", "dur": 36296.1, "name": "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)"}, {"pid": 78036, "tid": 82312, "ts": 438530187045.9, "ph": "X", "cat": "fee", "dur": 24.3, "name": "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)"}, {"pid": 78036, "tid": 82312, "ts": 438530187071.2, "ph": "X", "cat": "fee", "dur": 55.6, "name": "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)"}, {"pid": 78036, "tid": 82312, "ts": 438530187045.1, "ph": "X", "cat": "fee", "dur": 81.9, "name": "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)"}, {"pid": 78036, "tid": 82312, "ts": 438530187130.4, "ph": "X", "cat": "fee", "dur": 79.5, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530187128.1, "ph": "X", "cat": "fee", "dur": 82.3, "name": "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)"}, {"pid": 78036, "tid": 82312, "ts": 438530187213.7, "ph": "X", "cat": "fee", "dur": 68.6, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530187212.8, "ph": "X", "cat": "fee", "dur": 69.8, "name": "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)"}, {"pid": 78036, "tid": 82312, "ts": 438530187284.8, "ph": "X", "cat": "fee", "dur": 9.4, "name": "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)"}, {"pid": 78036, "tid": 82312, "ts": 438530187294.6, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)"}, {"pid": 78036, "tid": 82312, "ts": 438530187283.7, "ph": "X", "cat": "fee", "dur": 13.8, "name": "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)"}, {"pid": 78036, "tid": 82312, "ts": 438510376583.9, "ph": "X", "cat": "fee", "dur": 19810714.5, "name": "find_s57_within_range_native (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:39)"}, {"pid": 78036, "tid": 82312, "ts": 438530187422.3, "ph": "X", "cat": "fee", "dur": 315.5, "name": "builtins.print"}, {"pid": 78036, "tid": 82312, "ts": 438530187982.7, "ph": "X", "cat": "fee", "dur": 13.1, "name": "getpreferredencoding (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\_bootlocale.py:11)"}, {"pid": 78036, "tid": 82312, "ts": 438530187744.8, "ph": "X", "cat": "fee", "dur": 265.7, "name": "io.open"}, {"pid": 78036, "tid": 82312, "ts": 438530188015.5, "ph": "X", "cat": "fee", "dur": 244.7, "name": "_io.TextIOWrapper.read"}, {"pid": 78036, "tid": 82312, "ts": 438530188263.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 78036, "tid": 82312, "ts": 438530188264.2, "ph": "X", "cat": "fee", "dur": 1.5, "name": "str.startswith"}, {"pid": 78036, "tid": 82312, "ts": 438530188269.1, "ph": "X", "cat": "fee", "dur": 1683.7, "name": "decode (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py:332)"}, {"pid": 78036, "tid": 82312, "ts": 438530188262.3, "ph": "X", "cat": "fee", "dur": 1691.0, "name": "loads (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:299)"}, {"pid": 78036, "tid": 82312, "ts": 438530189955.4, "ph": "X", "cat": "fee", "dur": 34.0, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 78036, "tid": 82312, "ts": 438530190015.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.keys"}, {"pid": 78036, "tid": 82312, "ts": 438530190035.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190039.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190040.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190042.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190080.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190088.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190089.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190091.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190093.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190220.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190222.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190223.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190225.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190227.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190228.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190580.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190582.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190583.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190585.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190587.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190588.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530190590.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 78036, "tid": 82312, "ts": 438530187743.7, "ph": "X", "cat": "fee", "dur": 3079.5, "name": "find_s57_within_range (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:16)"}, {"pid": 78036, "tid": 82312, "ts": 438530190849.1, "ph": "X", "cat": "fee", "dur": 386.6, "name": "builtins.print"}, {"pid": 78036, "tid": 82312, "ts": 438509138612.9, "ph": "X", "cat": "fee", "dur": 21052623.3, "name": "<module> (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:1)"}, {"pid": 78036, "tid": 82312, "ts": 438509138610.0, "ph": "X", "cat": "fee", "dur": 21052628.3, "name": "builtins.exec"}], "viztracer_metadata": {"overflow": false, "version": "0.16.3"}, "file_info": {"files": {"C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py": ["\"\"\"\nThe typing module: Support for gradual typing as defined by PEP 484.\n\nAt large scale, the structure of the module is following:\n* Imports and exports, all public names should be explicitly added to __all__.\n* Internal helper functions: these should never be used in code outside this module.\n* _SpecialForm and its instances (special forms): Any, NoReturn, ClassVar, Union, Optional\n* Two classes whose instances can be type arguments in addition to types: ForwardRef and TypeVar\n* The core of internal generics API: _GenericAlias and _VariadicGenericAlias, the latter is\n  currently only used by Tuple and Callable. All subscripted types like X[int], Union[int, str],\n  etc., are instances of either of these classes.\n* The public counterpart of the generics API consists of two classes: Generic and Protocol.\n* Public helper functions: get_type_hints, overload, cast, no_type_check,\n  no_type_check_decorator.\n* Generic aliases for collections.abc ABCs and few additional protocols.\n* Special types: NewType, NamedTuple, TypedDict.\n* Wrapper submodules for re and io related types.\n\"\"\"\n\nfrom abc import abstractmethod, ABCMeta\nimport collections\nimport collections.abc\nimport contextlib\nimport functools\nimport operator\nimport re as stdlib_re  # Avoid confusion with the re we export.\nimport sys\nimport types\nfrom types import WrapperDescriptorType, MethodWrapperType, MethodDescriptorType, GenericAlias\n\n# Please keep __all__ alphabetized within each category.\n__all__ = [\n    # Super-special typing primitives.\n    'Annotated',\n    'Any',\n    'Callable',\n    'ClassVar',\n    'Final',\n    'ForwardRef',\n    'Generic',\n    'Literal',\n    'Optional',\n    'Protocol',\n    'Tuple',\n    'Type',\n    'TypeVar',\n    'Union',\n\n    # ABCs (from collections.abc).\n    'AbstractSet',  # collections.abc.Set.\n    'ByteString',\n    'Container',\n    'ContextManager',\n    'Hashable',\n    'ItemsView',\n    'Iterable',\n    'Iterator',\n    'KeysView',\n    'Mapping',\n    'MappingView',\n    'MutableMapping',\n    'MutableSequence',\n    'MutableSet',\n    'Sequence',\n    'Sized',\n    'ValuesView',\n    'Awaitable',\n    'AsyncIterator',\n    'AsyncIterable',\n    'Coroutine',\n    'Collection',\n    'AsyncGenerator',\n    'AsyncContextManager',\n\n    # Structural checks, a.k.a. protocols.\n    'Reversible',\n    'SupportsAbs',\n    'SupportsBytes',\n    'SupportsComplex',\n    'SupportsFloat',\n    'SupportsIndex',\n    'SupportsInt',\n    'SupportsRound',\n\n    # Concrete collection types.\n    'ChainMap',\n    'Counter',\n    'Deque',\n    'Dict',\n    'DefaultDict',\n    'List',\n    'OrderedDict',\n    'Set',\n    'FrozenSet',\n    'NamedTuple',  # Not really a type.\n    'TypedDict',  # Not really a type.\n    'Generator',\n\n    # Other concrete types.\n    'BinaryIO',\n    'IO',\n    'Match',\n    'Pattern',\n    'TextIO',\n\n    # One-off things.\n    'AnyStr',\n    'cast',\n    'final',\n    'get_args',\n    'get_origin',\n    'get_type_hints',\n    'NewType',\n    'no_type_check',\n    'no_type_check_decorator',\n    'NoReturn',\n    'overload',\n    'runtime_checkable',\n    'Text',\n    'TYPE_CHECKING',\n]\n\n# The pseudo-submodules 're' and 'io' are part of the public\n# namespace, but excluded from __all__ because they might stomp on\n# legitimate imports of those modules.\n\n\ndef _type_convert(arg, module=None, *, allow_special_forms=False):\n    \"\"\"For converting None to type(None), and strings to ForwardRef.\"\"\"\n    if arg is None:\n        return type(None)\n    if isinstance(arg, str):\n        return ForwardRef(arg, module=module, is_class=allow_special_forms)\n    return arg\n\n\ndef _type_check(arg, msg, is_argument=True, module=None, *, allow_special_forms=False):\n    \"\"\"Check that the argument is a type, and return it (internal helper).\n\n    As a special case, accept None and return type(None) instead. Also wrap strings\n    into ForwardRef instances. Consider several corner cases, for example plain\n    special forms like Union are not valid, while Union[int, str] is OK, etc.\n    The msg argument is a human-readable error message, e.g::\n\n        \"Union[arg, ...]: arg should be a type.\"\n\n    We append the repr() of the actual value (truncated to 100 chars).\n    \"\"\"\n    invalid_generic_forms = (Generic, Protocol)\n    if not allow_special_forms:\n        invalid_generic_forms += (ClassVar,)\n        if is_argument:\n            invalid_generic_forms += (Final,)\n\n    arg = _type_convert(arg, module=module, allow_special_forms=allow_special_forms)\n    if (isinstance(arg, _GenericAlias) and\n            arg.__origin__ in invalid_generic_forms):\n        raise TypeError(f\"{arg} is not valid as type argument\")\n    if arg in (Any, NoReturn, Final):\n        return arg\n    if isinstance(arg, _SpecialForm) or arg in (Generic, Protocol):\n        raise TypeError(f\"Plain {arg} is not valid as type argument\")\n    if isinstance(arg, (type, TypeVar, ForwardRef)):\n        return arg\n    if not callable(arg):\n        raise TypeError(f\"{msg} Got {arg!r:.100}.\")\n    return arg\n\n\ndef _type_repr(obj):\n    \"\"\"Return the repr() of an object, special-casing types (internal helper).\n\n    If obj is a type, we return a shorter version than the default\n    type.__repr__, based on the module and qualified name, which is\n    typically enough to uniquely identify a type.  For everything\n    else, we fall back on repr(obj).\n    \"\"\"\n    if isinstance(obj, types.GenericAlias):\n        return repr(obj)\n    if isinstance(obj, type):\n        if obj.__module__ == 'builtins':\n            return obj.__qualname__\n        return f'{obj.__module__}.{obj.__qualname__}'\n    if obj is ...:\n        return('...')\n    if isinstance(obj, types.FunctionType):\n        return obj.__name__\n    return repr(obj)\n\n\ndef _collect_type_vars(types):\n    \"\"\"Collect all type variable contained in types in order of\n    first appearance (lexicographic order). For example::\n\n        _collect_type_vars((T, List[S, T])) == (T, S)\n    \"\"\"\n    tvars = []\n    for t in types:\n        if isinstance(t, TypeVar) and t not in tvars:\n            tvars.append(t)\n        if isinstance(t, (_GenericAlias, GenericAlias)):\n            tvars.extend([t for t in t.__parameters__ if t not in tvars])\n    return tuple(tvars)\n\n\ndef _check_generic(cls, parameters, elen):\n    \"\"\"Check correct count for parameters of a generic cls (internal helper).\n    This gives a nice error message in case of count mismatch.\n    \"\"\"\n    if not elen:\n        raise TypeError(f\"{cls} is not a generic class\")\n    alen = len(parameters)\n    if alen != elen:\n        raise TypeError(f\"Too {'many' if alen > elen else 'few'} parameters for {cls};\"\n                        f\" actual {alen}, expected {elen}\")\n\n\ndef _deduplicate(params):\n    # Weed out strict duplicates, preserving the first of each occurrence.\n    all_params = set(params)\n    if len(all_params) < len(params):\n        new_params = []\n        for t in params:\n            if t in all_params:\n                new_params.append(t)\n                all_params.remove(t)\n        params = new_params\n        assert not all_params, all_params\n    return params\n\n\ndef _remove_dups_flatten(parameters):\n    \"\"\"An internal helper for Union creation and substitution: flatten Unions\n    among parameters, then remove duplicates.\n    \"\"\"\n    # Flatten out Union[Union[...], ...].\n    params = []\n    for p in parameters:\n        if isinstance(p, _UnionGenericAlias):\n            params.extend(p.__args__)\n        elif isinstance(p, tuple) and len(p) > 0 and p[0] is Union:\n            params.extend(p[1:])\n        else:\n            params.append(p)\n\n    return tuple(_deduplicate(params))\n\n\ndef _flatten_literal_params(parameters):\n    \"\"\"An internal helper for Literal creation: flatten Literals among parameters\"\"\"\n    params = []\n    for p in parameters:\n        if isinstance(p, _LiteralGenericAlias):\n            params.extend(p.__args__)\n        else:\n            params.append(p)\n    return tuple(params)\n\n\n_cleanups = []\n\n\ndef _tp_cache(func=None, /, *, typed=False):\n    \"\"\"Internal wrapper caching __getitem__ of generic types with a fallback to\n    original function for non-hashable arguments.\n    \"\"\"\n    def decorator(func):\n        cached = functools.lru_cache(typed=typed)(func)\n        _cleanups.append(cached.cache_clear)\n\n        @functools.wraps(func)\n        def inner(*args, **kwds):\n            try:\n                return cached(*args, **kwds)\n            except TypeError:\n                pass  # All real errors (not unhashable args) are raised below.\n            return func(*args, **kwds)\n        return inner\n\n    if func is not None:\n        return decorator(func)\n\n    return decorator\n\ndef _eval_type(t, globalns, localns, recursive_guard=frozenset()):\n    \"\"\"Evaluate all forward references in the given type t.\n    For use of globalns and localns see the docstring for get_type_hints().\n    recursive_guard is used to prevent infinite recursion with a recursive\n    ForwardRef.\n    \"\"\"\n    if isinstance(t, ForwardRef):\n        return t._evaluate(globalns, localns, recursive_guard)\n    if isinstance(t, (_GenericAlias, GenericAlias)):\n        ev_args = tuple(_eval_type(a, globalns, localns, recursive_guard) for a in t.__args__)\n        if ev_args == t.__args__:\n            return t\n        if isinstance(t, GenericAlias):\n            return GenericAlias(t.__origin__, ev_args)\n        else:\n            return t.copy_with(ev_args)\n    return t\n\n\nclass _Final:\n    \"\"\"Mixin to prohibit subclassing\"\"\"\n\n    __slots__ = ('__weakref__',)\n\n    def __init_subclass__(self, /, *args, **kwds):\n        if '_root' not in kwds:\n            raise TypeError(\"Cannot subclass special typing classes\")\n\nclass _Immutable:\n    \"\"\"Mixin to indicate that object should not be copied.\"\"\"\n    __slots__ = ()\n\n    def __copy__(self):\n        return self\n\n    def __deepcopy__(self, memo):\n        return self\n\n\n# Internal indicator of special typing constructs.\n# See __doc__ instance attribute for specific docs.\nclass _SpecialForm(_Final, _root=True):\n    __slots__ = ('_name', '__doc__', '_getitem')\n\n    def __init__(self, getitem):\n        self._getitem = getitem\n        self._name = getitem.__name__\n        self.__doc__ = getitem.__doc__\n\n    def __mro_entries__(self, bases):\n        raise TypeError(f\"Cannot subclass {self!r}\")\n\n    def __repr__(self):\n        return 'typing.' + self._name\n\n    def __reduce__(self):\n        return self._name\n\n    def __call__(self, *args, **kwds):\n        raise TypeError(f\"Cannot instantiate {self!r}\")\n\n    def __instancecheck__(self, obj):\n        raise TypeError(f\"{self} cannot be used with isinstance()\")\n\n    def __subclasscheck__(self, cls):\n        raise TypeError(f\"{self} cannot be used with issubclass()\")\n\n    @_tp_cache\n    def __getitem__(self, parameters):\n        return self._getitem(self, parameters)\n\n\nclass _LiteralSpecialForm(_SpecialForm, _root=True):\n    def __getitem__(self, parameters):\n        if not isinstance(parameters, tuple):\n            parameters = (parameters,)\n        return self._getitem(self, *parameters)\n\n\n@_SpecialForm\ndef Any(self, parameters):\n    \"\"\"Special type indicating an unconstrained type.\n\n    - Any is compatible with every type.\n    - Any assumed to have all methods.\n    - All values assumed to be instances of Any.\n\n    Note that all the above statements are true from the point of view of\n    static type checkers. At runtime, Any should not be used with instance\n    or class checks.\n    \"\"\"\n    raise TypeError(f\"{self} is not subscriptable\")\n\n@_SpecialForm\ndef NoReturn(self, parameters):\n    \"\"\"Special type indicating functions that never return.\n    Example::\n\n      from typing import NoReturn\n\n      def stop() -> NoReturn:\n          raise Exception('no way')\n\n    This type is invalid in other positions, e.g., ``List[NoReturn]``\n    will fail in static type checkers.\n    \"\"\"\n    raise TypeError(f\"{self} is not subscriptable\")\n\n@_SpecialForm\ndef ClassVar(self, parameters):\n    \"\"\"Special type construct to mark class variables.\n\n    An annotation wrapped in ClassVar indicates that a given\n    attribute is intended to be used as a class variable and\n    should not be set on instances of that class. Usage::\n\n      class Starship:\n          stats: ClassVar[Dict[str, int]] = {} # class variable\n          damage: int = 10                     # instance variable\n\n    ClassVar accepts only types and cannot be further subscribed.\n\n    Note that ClassVar is not a class itself, and should not\n    be used with isinstance() or issubclass().\n    \"\"\"\n    item = _type_check(parameters, f'{self} accepts only single type.')\n    return _GenericAlias(self, (item,))\n\n@_SpecialForm\ndef Final(self, parameters):\n    \"\"\"Special typing construct to indicate final names to type checkers.\n\n    A final name cannot be re-assigned or overridden in a subclass.\n    For example:\n\n      MAX_SIZE: Final = 9000\n      MAX_SIZE += 1  # Error reported by type checker\n\n      class Connection:\n          TIMEOUT: Final[int] = 10\n\n      class FastConnector(Connection):\n          TIMEOUT = 1  # Error reported by type checker\n\n    There is no runtime checking of these properties.\n    \"\"\"\n    item = _type_check(parameters, f'{self} accepts only single type.')\n    return _GenericAlias(self, (item,))\n\n@_SpecialForm\ndef Union(self, parameters):\n    \"\"\"Union type; Union[X, Y] means either X or Y.\n\n    To define a union, use e.g. Union[int, str].  Details:\n    - The arguments must be types and there must be at least one.\n    - None as an argument is a special case and is replaced by\n      type(None).\n    - Unions of unions are flattened, e.g.::\n\n        Union[Union[int, str], float] == Union[int, str, float]\n\n    - Unions of a single argument vanish, e.g.::\n\n        Union[int] == int  # The constructor actually returns int\n\n    - Redundant arguments are skipped, e.g.::\n\n        Union[int, str, int] == Union[int, str]\n\n    - When comparing unions, the argument order is ignored, e.g.::\n\n        Union[int, str] == Union[str, int]\n\n    - You cannot subclass or instantiate a union.\n    - You can use Optional[X] as a shorthand for Union[X, None].\n    \"\"\"\n    if parameters == ():\n        raise TypeError(\"Cannot take a Union of no types.\")\n    if not isinstance(parameters, tuple):\n        parameters = (parameters,)\n    msg = \"Union[arg, ...]: each arg must be a type.\"\n    parameters = tuple(_type_check(p, msg) for p in parameters)\n    parameters = _remove_dups_flatten(parameters)\n    if len(parameters) == 1:\n        return parameters[0]\n    return _UnionGenericAlias(self, parameters)\n\n@_SpecialForm\ndef Optional(self, parameters):\n    \"\"\"Optional type.\n\n    Optional[X] is equivalent to Union[X, None].\n    \"\"\"\n    arg = _type_check(parameters, f\"{self} requires a single type.\")\n    return Union[arg, type(None)]\n\n@_LiteralSpecialForm\n@_tp_cache(typed=True)\ndef Literal(self, *parameters):\n    \"\"\"Special typing form to define literal types (a.k.a. value types).\n\n    This form can be used to indicate to type checkers that the corresponding\n    variable or function parameter has a value equivalent to the provided\n    literal (or one of several literals):\n\n      def validate_simple(data: Any) -> Literal[True]:  # always returns True\n          ...\n\n      MODE = Literal['r', 'rb', 'w', 'wb']\n      def open_helper(file: str, mode: MODE) -> str:\n          ...\n\n      open_helper('/some/path', 'r')  # Passes type check\n      open_helper('/other/path', 'typo')  # Error in type checker\n\n    Literal[...] cannot be subclassed. At runtime, an arbitrary value\n    is allowed as type argument to Literal[...], but type checkers may\n    impose restrictions.\n    \"\"\"\n    # There is no '_type_check' call because arguments to Literal[...] are\n    # values, not types.\n    parameters = _flatten_literal_params(parameters)\n\n    try:\n        parameters = tuple(p for p, _ in _deduplicate(list(_value_and_type_iter(parameters))))\n    except TypeError:  # unhashable parameters\n        pass\n\n    return _LiteralGenericAlias(self, parameters)\n\n\nclass ForwardRef(_Final, _root=True):\n    \"\"\"Internal wrapper to hold a forward reference.\"\"\"\n\n    __slots__ = ('__forward_arg__', '__forward_code__',\n                 '__forward_evaluated__', '__forward_value__',\n                 '__forward_is_argument__', '__forward_is_class__',\n                 '__forward_module__')\n\n    def __init__(self, arg, is_argument=True, module=None, *, is_class=False):\n        if not isinstance(arg, str):\n            raise TypeError(f\"Forward reference must be a string -- got {arg!r}\")\n        try:\n            code = compile(arg, '<string>', 'eval')\n        except SyntaxError:\n            raise SyntaxError(f\"Forward reference must be an expression -- got {arg!r}\")\n        self.__forward_arg__ = arg\n        self.__forward_code__ = code\n        self.__forward_evaluated__ = False\n        self.__forward_value__ = None\n        self.__forward_is_argument__ = is_argument\n        self.__forward_is_class__ = is_class\n        self.__forward_module__ = module\n\n    def _evaluate(self, globalns, localns, recursive_guard):\n        if self.__forward_arg__ in recursive_guard:\n            return self\n        if not self.__forward_evaluated__ or localns is not globalns:\n            if globalns is None and localns is None:\n                globalns = localns = {}\n            elif globalns is None:\n                globalns = localns\n            elif localns is None:\n                localns = globalns\n            if self.__forward_module__ is not None:\n                globalns = getattr(\n                    sys.modules.get(self.__forward_module__, None), '__dict__', globalns\n                )\n            type_ = _type_check(\n                eval(self.__forward_code__, globalns, localns),\n                \"Forward references must evaluate to types.\",\n                is_argument=self.__forward_is_argument__,\n                allow_special_forms=self.__forward_is_class__,\n            )\n            self.__forward_value__ = _eval_type(\n                type_, globalns, localns, recursive_guard | {self.__forward_arg__}\n            )\n            self.__forward_evaluated__ = True\n        return self.__forward_value__\n\n    def __eq__(self, other):\n        if not isinstance(other, ForwardRef):\n            return NotImplemented\n        if self.__forward_evaluated__ and other.__forward_evaluated__:\n            return (self.__forward_arg__ == other.__forward_arg__ and\n                    self.__forward_value__ == other.__forward_value__)\n        return (self.__forward_arg__ == other.__forward_arg__ and\n                self.__forward_module__ == other.__forward_module__)\n\n    def __hash__(self):\n        return hash((self.__forward_arg__, self.__forward_module__))\n\n    def __repr__(self):\n        return f'ForwardRef({self.__forward_arg__!r})'\n\n\nclass TypeVar(_Final, _Immutable, _root=True):\n    \"\"\"Type variable.\n\n    Usage::\n\n      T = TypeVar('T')  # Can be anything\n      A = TypeVar('A', str, bytes)  # Must be str or bytes\n\n    Type variables exist primarily for the benefit of static type\n    checkers.  They serve as the parameters for generic types as well\n    as for generic function definitions.  See class Generic for more\n    information on generic types.  Generic functions work as follows:\n\n      def repeat(x: T, n: int) -> List[T]:\n          '''Return a list containing n references to x.'''\n          return [x]*n\n\n      def longest(x: A, y: A) -> A:\n          '''Return the longest of two strings.'''\n          return x if len(x) >= len(y) else y\n\n    The latter example's signature is essentially the overloading\n    of (str, str) -> str and (bytes, bytes) -> bytes.  Also note\n    that if the arguments are instances of some subclass of str,\n    the return type is still plain str.\n\n    At runtime, isinstance(x, T) and issubclass(C, T) will raise TypeError.\n\n    Type variables defined with covariant=True or contravariant=True\n    can be used to declare covariant or contravariant generic types.\n    See PEP 484 for more details. By default generic types are invariant\n    in all type variables.\n\n    Type variables can be introspected. e.g.:\n\n      T.__name__ == 'T'\n      T.__constraints__ == ()\n      T.__covariant__ == False\n      T.__contravariant__ = False\n      A.__constraints__ == (str, bytes)\n\n    Note that only type variables defined in global scope can be pickled.\n    \"\"\"\n\n    __slots__ = ('__name__', '__bound__', '__constraints__',\n                 '__covariant__', '__contravariant__', '__dict__')\n\n    def __init__(self, name, *constraints, bound=None,\n                 covariant=False, contravariant=False):\n        self.__name__ = name\n        if covariant and contravariant:\n            raise ValueError(\"Bivariant types are not supported.\")\n        self.__covariant__ = bool(covariant)\n        self.__contravariant__ = bool(contravariant)\n        if constraints and bound is not None:\n            raise TypeError(\"Constraints cannot be combined with bound=...\")\n        if constraints and len(constraints) == 1:\n            raise TypeError(\"A single constraint is not allowed\")\n        msg = \"TypeVar(name, constraint, ...): constraints must be types.\"\n        self.__constraints__ = tuple(_type_check(t, msg) for t in constraints)\n        if bound:\n            self.__bound__ = _type_check(bound, \"Bound must be a type.\")\n        else:\n            self.__bound__ = None\n        try:\n            def_mod = sys._getframe(1).f_globals.get('__name__', '__main__')  # for pickling\n        except (AttributeError, ValueError):\n            def_mod = None\n        if def_mod != 'typing':\n            self.__module__ = def_mod\n\n    def __repr__(self):\n        if self.__covariant__:\n            prefix = '+'\n        elif self.__contravariant__:\n            prefix = '-'\n        else:\n            prefix = '~'\n        return prefix + self.__name__\n\n    def __reduce__(self):\n        return self.__name__\n\n\ndef _is_dunder(attr):\n    return attr.startswith('__') and attr.endswith('__')\n\nclass _BaseGenericAlias(_Final, _root=True):\n    \"\"\"The central part of internal API.\n\n    This represents a generic version of type 'origin' with type arguments 'params'.\n    There are two kind of these aliases: user defined and special. The special ones\n    are wrappers around builtin collections and ABCs in collections.abc. These must\n    have 'name' always set. If 'inst' is False, then the alias can't be instantiated,\n    this is used by e.g. typing.List and typing.Dict.\n    \"\"\"\n    def __init__(self, origin, *, inst=True, name=None):\n        self._inst = inst\n        self._name = name\n        self.__origin__ = origin\n        self.__slots__ = None  # This is not documented.\n\n    def __call__(self, *args, **kwargs):\n        if not self._inst:\n            raise TypeError(f\"Type {self._name} cannot be instantiated; \"\n                            f\"use {self.__origin__.__name__}() instead\")\n        result = self.__origin__(*args, **kwargs)\n        try:\n            result.__orig_class__ = self\n        except AttributeError:\n            pass\n        return result\n\n    def __mro_entries__(self, bases):\n        res = []\n        if self.__origin__ not in bases:\n            res.append(self.__origin__)\n        i = bases.index(self)\n        for b in bases[i+1:]:\n            if isinstance(b, _BaseGenericAlias) or issubclass(b, Generic):\n                break\n        else:\n            res.append(Generic)\n        return tuple(res)\n\n    def __getattr__(self, attr):\n        # We are careful for copy and pickle.\n        # Also for simplicity we don't relay any dunder names\n        if '__origin__' in self.__dict__ and not _is_dunder(attr):\n            return getattr(self.__origin__, attr)\n        raise AttributeError(attr)\n\n    def __setattr__(self, attr, val):\n        if _is_dunder(attr) or attr in ('_name', '_inst', '_nparams'):\n            super().__setattr__(attr, val)\n        else:\n            setattr(self.__origin__, attr, val)\n\n    def __instancecheck__(self, obj):\n        return self.__subclasscheck__(type(obj))\n\n    def __subclasscheck__(self, cls):\n        raise TypeError(\"Subscripted generics cannot be used with\"\n                        \" class and instance checks\")\n\n\n# Special typing constructs Union, Optional, Generic, Callable and Tuple\n# use three special attributes for internal bookkeeping of generic types:\n# * __parameters__ is a tuple of unique free type parameters of a generic\n#   type, for example, Dict[T, T].__parameters__ == (T,);\n# * __origin__ keeps a reference to a type that was subscripted,\n#   e.g., Union[T, int].__origin__ == Union, or the non-generic version of\n#   the type.\n# * __args__ is a tuple of all arguments used in subscripting,\n#   e.g., Dict[T, int].__args__ == (T, int).\n\n\nclass _GenericAlias(_BaseGenericAlias, _root=True):\n    def __init__(self, origin, params, *, inst=True, name=None):\n        super().__init__(origin, inst=inst, name=name)\n        if not isinstance(params, tuple):\n            params = (params,)\n        self.__args__ = tuple(... if a is _TypingEllipsis else\n                              () if a is _TypingEmpty else\n                              a for a in params)\n        self.__parameters__ = _collect_type_vars(params)\n        if not name:\n            self.__module__ = origin.__module__\n\n    def __eq__(self, other):\n        if not isinstance(other, _GenericAlias):\n            return NotImplemented\n        return (self.__origin__ == other.__origin__\n                and self.__args__ == other.__args__)\n\n    def __hash__(self):\n        return hash((self.__origin__, self.__args__))\n\n    @_tp_cache\n    def __getitem__(self, params):\n        if self.__origin__ in (Generic, Protocol):\n            # Can't subscript Generic[...] or Protocol[...].\n            raise TypeError(f\"Cannot subscript already-subscripted {self}\")\n        if not isinstance(params, tuple):\n            params = (params,)\n        msg = \"Parameters to generic types must be types.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        _check_generic(self, params, len(self.__parameters__))\n\n        subst = dict(zip(self.__parameters__, params))\n        new_args = []\n        for arg in self.__args__:\n            if isinstance(arg, TypeVar):\n                arg = subst[arg]\n            elif isinstance(arg, (_GenericAlias, GenericAlias)):\n                subparams = arg.__parameters__\n                if subparams:\n                    subargs = tuple(subst[x] for x in subparams)\n                    arg = arg[subargs]\n            new_args.append(arg)\n        return self.copy_with(tuple(new_args))\n\n    def copy_with(self, params):\n        return self.__class__(self.__origin__, params, name=self._name, inst=self._inst)\n\n    def __repr__(self):\n        if self._name:\n            name = 'typing.' + self._name\n        else:\n            name = _type_repr(self.__origin__)\n        args = \", \".join([_type_repr(a) for a in self.__args__])\n        return f'{name}[{args}]'\n\n    def __reduce__(self):\n        if self._name:\n            origin = globals()[self._name]\n        else:\n            origin = self.__origin__\n        args = tuple(self.__args__)\n        if len(args) == 1 and not isinstance(args[0], tuple):\n            args, = args\n        return operator.getitem, (origin, args)\n\n    def __mro_entries__(self, bases):\n        if self._name:  # generic version of an ABC or built-in class\n            return super().__mro_entries__(bases)\n        if self.__origin__ is Generic:\n            if Protocol in bases:\n                return ()\n            i = bases.index(self)\n            for b in bases[i+1:]:\n                if isinstance(b, _BaseGenericAlias) and b is not self:\n                    return ()\n        return (self.__origin__,)\n\n\n# _nparams is the number of accepted parameters, e.g. 0 for Hashable,\n# 1 for List and 2 for Dict.  It may be -1 if variable number of\n# parameters are accepted (needs custom __getitem__).\n\nclass _SpecialGenericAlias(_BaseGenericAlias, _root=True):\n    def __init__(self, origin, nparams, *, inst=True, name=None):\n        if name is None:\n            name = origin.__name__\n        super().__init__(origin, inst=inst, name=name)\n        self._nparams = nparams\n        if origin.__module__ == 'builtins':\n            self.__doc__ = f'A generic version of {origin.__qualname__}.'\n        else:\n            self.__doc__ = f'A generic version of {origin.__module__}.{origin.__qualname__}.'\n\n    @_tp_cache\n    def __getitem__(self, params):\n        if not isinstance(params, tuple):\n            params = (params,)\n        msg = \"Parameters to generic types must be types.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        _check_generic(self, params, self._nparams)\n        return self.copy_with(params)\n\n    def copy_with(self, params):\n        return _GenericAlias(self.__origin__, params,\n                             name=self._name, inst=self._inst)\n\n    def __repr__(self):\n        return 'typing.' + self._name\n\n    def __subclasscheck__(self, cls):\n        if isinstance(cls, _SpecialGenericAlias):\n            return issubclass(cls.__origin__, self.__origin__)\n        if not isinstance(cls, _GenericAlias):\n            return issubclass(cls, self.__origin__)\n        return super().__subclasscheck__(cls)\n\n    def __reduce__(self):\n        return self._name\n\n\nclass _CallableGenericAlias(_GenericAlias, _root=True):\n    def __repr__(self):\n        assert self._name == 'Callable'\n        if len(self.__args__) == 2 and self.__args__[0] is Ellipsis:\n            return super().__repr__()\n        return (f'typing.Callable'\n                f'[[{\", \".join([_type_repr(a) for a in self.__args__[:-1]])}], '\n                f'{_type_repr(self.__args__[-1])}]')\n\n    def __reduce__(self):\n        args = self.__args__\n        if not (len(args) == 2 and args[0] is ...):\n            args = list(args[:-1]), args[-1]\n        return operator.getitem, (Callable, args)\n\n\nclass _CallableType(_SpecialGenericAlias, _root=True):\n    def copy_with(self, params):\n        return _CallableGenericAlias(self.__origin__, params,\n                                     name=self._name, inst=self._inst)\n\n    def __getitem__(self, params):\n        if not isinstance(params, tuple) or len(params) != 2:\n            raise TypeError(\"Callable must be used as \"\n                            \"Callable[[arg, ...], result].\")\n        args, result = params\n        # This relaxes what args can be on purpose to allow things like\n        # PEP 612 ParamSpec.  Responsibility for whether a user is using\n        # Callable[...] properly is deferred to static type checkers.\n        if isinstance(args, list):\n            params = (tuple(args), result)\n        else:\n            params = (args, result)\n        return self.__getitem_inner__(params)\n\n    @_tp_cache\n    def __getitem_inner__(self, params):\n        args, result = params\n        msg = \"Callable[args, result]: result must be a type.\"\n        result = _type_check(result, msg)\n        if args is Ellipsis:\n            return self.copy_with((_TypingEllipsis, result))\n        if not isinstance(args, tuple):\n            args = (args,)\n        args = tuple(_type_convert(arg) for arg in args)\n        params = args + (result,)\n        return self.copy_with(params)\n\n\nclass _TupleType(_SpecialGenericAlias, _root=True):\n    @_tp_cache\n    def __getitem__(self, params):\n        if params == ():\n            return self.copy_with((_TypingEmpty,))\n        if not isinstance(params, tuple):\n            params = (params,)\n        if len(params) == 2 and params[1] is ...:\n            msg = \"Tuple[t, ...]: t must be a type.\"\n            p = _type_check(params[0], msg)\n            return self.copy_with((p, _TypingEllipsis))\n        msg = \"Tuple[t0, t1, ...]: each t must be a type.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        return self.copy_with(params)\n\n\nclass _UnionGenericAlias(_GenericAlias, _root=True):\n    def copy_with(self, params):\n        return Union[params]\n\n    def __eq__(self, other):\n        if not isinstance(other, _UnionGenericAlias):\n            return NotImplemented\n        return set(self.__args__) == set(other.__args__)\n\n    def __hash__(self):\n        return hash(frozenset(self.__args__))\n\n    def __repr__(self):\n        args = self.__args__\n        if len(args) == 2:\n            if args[0] is type(None):\n                return f'typing.Optional[{_type_repr(args[1])}]'\n            elif args[1] is type(None):\n                return f'typing.Optional[{_type_repr(args[0])}]'\n        return super().__repr__()\n\n\ndef _value_and_type_iter(parameters):\n    return ((p, type(p)) for p in parameters)\n\n\nclass _LiteralGenericAlias(_GenericAlias, _root=True):\n\n    def __eq__(self, other):\n        if not isinstance(other, _LiteralGenericAlias):\n            return NotImplemented\n\n        return set(_value_and_type_iter(self.__args__)) == set(_value_and_type_iter(other.__args__))\n\n    def __hash__(self):\n        return hash(frozenset(_value_and_type_iter(self.__args__)))\n\n\nclass Generic:\n    \"\"\"Abstract base class for generic types.\n\n    A generic type is typically declared by inheriting from\n    this class parameterized with one or more type variables.\n    For example, a generic mapping type might be defined as::\n\n      class Mapping(Generic[KT, VT]):\n          def __getitem__(self, key: KT) -> VT:\n              ...\n          # Etc.\n\n    This class can then be used as follows::\n\n      def lookup_name(mapping: Mapping[KT, VT], key: KT, default: VT) -> VT:\n          try:\n              return mapping[key]\n          except KeyError:\n              return default\n    \"\"\"\n    __slots__ = ()\n    _is_protocol = False\n\n    @_tp_cache\n    def __class_getitem__(cls, params):\n        if not isinstance(params, tuple):\n            params = (params,)\n        if not params and cls is not Tuple:\n            raise TypeError(\n                f\"Parameter list to {cls.__qualname__}[...] cannot be empty\")\n        msg = \"Parameters to generic types must be types.\"\n        params = tuple(_type_check(p, msg) for p in params)\n        if cls in (Generic, Protocol):\n            # Generic and Protocol can only be subscripted with unique type variables.\n            if not all(isinstance(p, TypeVar) for p in params):\n                raise TypeError(\n                    f\"Parameters to {cls.__name__}[...] must all be type variables\")\n            if len(set(params)) != len(params):\n                raise TypeError(\n                    f\"Parameters to {cls.__name__}[...] must all be unique\")\n        else:\n            # Subscripting a regular Generic subclass.\n            _check_generic(cls, params, len(cls.__parameters__))\n        return _GenericAlias(cls, params)\n\n    def __init_subclass__(cls, *args, **kwargs):\n        super().__init_subclass__(*args, **kwargs)\n        tvars = []\n        if '__orig_bases__' in cls.__dict__:\n            error = Generic in cls.__orig_bases__\n        else:\n            error = Generic in cls.__bases__ and cls.__name__ != 'Protocol'\n        if error:\n            raise TypeError(\"Cannot inherit from plain Generic\")\n        if '__orig_bases__' in cls.__dict__:\n            tvars = _collect_type_vars(cls.__orig_bases__)\n            # Look for Generic[T1, ..., Tn].\n            # If found, tvars must be a subset of it.\n            # If not found, tvars is it.\n            # Also check for and reject plain Generic,\n            # and reject multiple Generic[...].\n            gvars = None\n            for base in cls.__orig_bases__:\n                if (isinstance(base, _GenericAlias) and\n                        base.__origin__ is Generic):\n                    if gvars is not None:\n                        raise TypeError(\n                            \"Cannot inherit from Generic[...] multiple types.\")\n                    gvars = base.__parameters__\n            if gvars is not None:\n                tvarset = set(tvars)\n                gvarset = set(gvars)\n                if not tvarset <= gvarset:\n                    s_vars = ', '.join(str(t) for t in tvars if t not in gvarset)\n                    s_args = ', '.join(str(g) for g in gvars)\n                    raise TypeError(f\"Some type variables ({s_vars}) are\"\n                                    f\" not listed in Generic[{s_args}]\")\n                tvars = gvars\n        cls.__parameters__ = tuple(tvars)\n\n\nclass _TypingEmpty:\n    \"\"\"Internal placeholder for () or []. Used by TupleMeta and CallableMeta\n    to allow empty list/tuple in specific places, without allowing them\n    to sneak in where prohibited.\n    \"\"\"\n\n\nclass _TypingEllipsis:\n    \"\"\"Internal placeholder for ... (ellipsis).\"\"\"\n\n\n_TYPING_INTERNALS = ['__parameters__', '__orig_bases__',  '__orig_class__',\n                     '_is_protocol', '_is_runtime_protocol']\n\n_SPECIAL_NAMES = ['__abstractmethods__', '__annotations__', '__dict__', '__doc__',\n                  '__init__', '__module__', '__new__', '__slots__',\n                  '__subclasshook__', '__weakref__', '__class_getitem__']\n\n# These special attributes will be not collected as protocol members.\nEXCLUDED_ATTRIBUTES = _TYPING_INTERNALS + _SPECIAL_NAMES + ['_MutableMapping__marker']\n\n\ndef _get_protocol_attrs(cls):\n    \"\"\"Collect protocol members from a protocol class objects.\n\n    This includes names actually defined in the class dictionary, as well\n    as names that appear in annotations. Special names (above) are skipped.\n    \"\"\"\n    attrs = set()\n    for base in cls.__mro__[:-1]:  # without object\n        if base.__name__ in ('Protocol', 'Generic'):\n            continue\n        annotations = getattr(base, '__annotations__', {})\n        for attr in list(base.__dict__.keys()) + list(annotations.keys()):\n            if not attr.startswith('_abc_') and attr not in EXCLUDED_ATTRIBUTES:\n                attrs.add(attr)\n    return attrs\n\n\ndef _is_callable_members_only(cls):\n    # PEP 544 prohibits using issubclass() with protocols that have non-method members.\n    return all(callable(getattr(cls, attr, None)) for attr in _get_protocol_attrs(cls))\n\n\ndef _no_init_or_replace_init(self, *args, **kwargs):\n    cls = type(self)\n\n    if cls._is_protocol:\n        raise TypeError('Protocols cannot be instantiated')\n\n    # Already using a custom `__init__`. No need to calculate correct\n    # `__init__` to call. This can lead to RecursionError. See bpo-45121.\n    if cls.__init__ is not _no_init_or_replace_init:\n        return\n\n    # Initially, `__init__` of a protocol subclass is set to `_no_init_or_replace_init`.\n    # The first instantiation of the subclass will call `_no_init_or_replace_init` which\n    # searches for a proper new `__init__` in the MRO. The new `__init__`\n    # replaces the subclass' old `__init__` (ie `_no_init_or_replace_init`). Subsequent\n    # instantiation of the protocol subclass will thus use the new\n    # `__init__` and no longer call `_no_init_or_replace_init`.\n    for base in cls.__mro__:\n        init = base.__dict__.get('__init__', _no_init_or_replace_init)\n        if init is not _no_init_or_replace_init:\n            cls.__init__ = init\n            break\n    else:\n        # should not happen\n        cls.__init__ = object.__init__\n\n    cls.__init__(self, *args, **kwargs)\n\n\n\ndef _allow_reckless_class_cheks():\n    \"\"\"Allow instance and class checks for special stdlib modules.\n\n    The abc and functools modules indiscriminately call isinstance() and\n    issubclass() on the whole MRO of a user class, which may contain protocols.\n    \"\"\"\n    try:\n        return sys._getframe(3).f_globals['__name__'] in ['abc', 'functools']\n    except (AttributeError, ValueError):  # For platforms without _getframe().\n        return True\n\n\n_PROTO_WHITELIST = {\n    'collections.abc': [\n        'Callable', 'Awaitable', 'Iterable', 'Iterator', 'AsyncIterable',\n        'Hashable', 'Sized', 'Container', 'Collection', 'Reversible',\n    ],\n    'contextlib': ['AbstractContextManager', 'AbstractAsyncContextManager'],\n}\n\n\nclass _ProtocolMeta(ABCMeta):\n    # This metaclass is really unfortunate and exists only because of\n    # the lack of __instancehook__.\n    def __instancecheck__(cls, instance):\n        # We need this method for situations where attributes are\n        # assigned in __init__.\n        if ((not getattr(cls, '_is_protocol', False) or\n                _is_callable_members_only(cls)) and\n                issubclass(instance.__class__, cls)):\n            return True\n        if cls._is_protocol:\n            if all(hasattr(instance, attr) and\n                    # All *methods* can be blocked by setting them to None.\n                    (not callable(getattr(cls, attr, None)) or\n                     getattr(instance, attr) is not None)\n                    for attr in _get_protocol_attrs(cls)):\n                return True\n        return super().__instancecheck__(instance)\n\n\nclass Protocol(Generic, metaclass=_ProtocolMeta):\n    \"\"\"Base class for protocol classes.\n\n    Protocol classes are defined as::\n\n        class Proto(Protocol):\n            def meth(self) -> int:\n                ...\n\n    Such classes are primarily used with static type checkers that recognize\n    structural subtyping (static duck-typing), for example::\n\n        class C:\n            def meth(self) -> int:\n                return 0\n\n        def func(x: Proto) -> int:\n            return x.meth()\n\n        func(C())  # Passes static type check\n\n    See PEP 544 for details. Protocol classes decorated with\n    @typing.runtime_checkable act as simple-minded runtime protocols that check\n    only the presence of given attributes, ignoring their type signatures.\n    Protocol classes can be generic, they are defined as::\n\n        class GenProto(Protocol[T]):\n            def meth(self) -> T:\n                ...\n    \"\"\"\n    __slots__ = ()\n    _is_protocol = True\n    _is_runtime_protocol = False\n\n    def __init_subclass__(cls, *args, **kwargs):\n        super().__init_subclass__(*args, **kwargs)\n\n        # Determine if this is a protocol or a concrete subclass.\n        if not cls.__dict__.get('_is_protocol', False):\n            cls._is_protocol = any(b is Protocol for b in cls.__bases__)\n\n        # Set (or override) the protocol subclass hook.\n        def _proto_hook(other):\n            if not cls.__dict__.get('_is_protocol', False):\n                return NotImplemented\n\n            # First, perform various sanity checks.\n            if not getattr(cls, '_is_runtime_protocol', False):\n                if _allow_reckless_class_cheks():\n                    return NotImplemented\n                raise TypeError(\"Instance and class checks can only be used with\"\n                                \" @runtime_checkable protocols\")\n            if not _is_callable_members_only(cls):\n                if _allow_reckless_class_cheks():\n                    return NotImplemented\n                raise TypeError(\"Protocols with non-method members\"\n                                \" don't support issubclass()\")\n            if not isinstance(other, type):\n                # Same error message as for issubclass(1, int).\n                raise TypeError('issubclass() arg 1 must be a class')\n\n            # Second, perform the actual structural compatibility check.\n            for attr in _get_protocol_attrs(cls):\n                for base in other.__mro__:\n                    # Check if the members appears in the class dictionary...\n                    if attr in base.__dict__:\n                        if base.__dict__[attr] is None:\n                            return NotImplemented\n                        break\n\n                    # ...or in annotations, if it is a sub-protocol.\n                    annotations = getattr(base, '__annotations__', {})\n                    if (isinstance(annotations, collections.abc.Mapping) and\n                            attr in annotations and\n                            issubclass(other, Generic) and other._is_protocol):\n                        break\n                else:\n                    return NotImplemented\n            return True\n\n        if '__subclasshook__' not in cls.__dict__:\n            cls.__subclasshook__ = _proto_hook\n\n        # We have nothing more to do for non-protocols...\n        if not cls._is_protocol:\n            return\n\n        # ... otherwise check consistency of bases, and prohibit instantiation.\n        for base in cls.__bases__:\n            if not (base in (object, Generic) or\n                    base.__module__ in _PROTO_WHITELIST and\n                    base.__name__ in _PROTO_WHITELIST[base.__module__] or\n                    issubclass(base, Generic) and base._is_protocol):\n                raise TypeError('Protocols can only inherit from other'\n                                ' protocols, got %r' % base)\n        cls.__init__ = _no_init_or_replace_init\n\n\nclass _AnnotatedAlias(_GenericAlias, _root=True):\n    \"\"\"Runtime representation of an annotated type.\n\n    At its core 'Annotated[t, dec1, dec2, ...]' is an alias for the type 't'\n    with extra annotations. The alias behaves like a normal typing alias,\n    instantiating is the same as instantiating the underlying type, binding\n    it to types is also the same.\n    \"\"\"\n    def __init__(self, origin, metadata):\n        if isinstance(origin, _AnnotatedAlias):\n            metadata = origin.__metadata__ + metadata\n            origin = origin.__origin__\n        super().__init__(origin, origin)\n        self.__metadata__ = metadata\n\n    def copy_with(self, params):\n        assert len(params) == 1\n        new_type = params[0]\n        return _AnnotatedAlias(new_type, self.__metadata__)\n\n    def __repr__(self):\n        return \"typing.Annotated[{}, {}]\".format(\n            _type_repr(self.__origin__),\n            \", \".join(repr(a) for a in self.__metadata__)\n        )\n\n    def __reduce__(self):\n        return operator.getitem, (\n            Annotated, (self.__origin__,) + self.__metadata__\n        )\n\n    def __eq__(self, other):\n        if not isinstance(other, _AnnotatedAlias):\n            return NotImplemented\n        return (self.__origin__ == other.__origin__\n                and self.__metadata__ == other.__metadata__)\n\n    def __hash__(self):\n        return hash((self.__origin__, self.__metadata__))\n\n\nclass Annotated:\n    \"\"\"Add context specific metadata to a type.\n\n    Example: Annotated[int, runtime_check.Unsigned] indicates to the\n    hypothetical runtime_check module that this type is an unsigned int.\n    Every other consumer of this type can ignore this metadata and treat\n    this type as int.\n\n    The first argument to Annotated must be a valid type.\n\n    Details:\n\n    - It's an error to call `Annotated` with less than two arguments.\n    - Nested Annotated are flattened::\n\n        Annotated[Annotated[T, Ann1, Ann2], Ann3] == Annotated[T, Ann1, Ann2, Ann3]\n\n    - Instantiating an annotated type is equivalent to instantiating the\n    underlying type::\n\n        Annotated[C, Ann1](5) == C(5)\n\n    - Annotated can be used as a generic type alias::\n\n        Optimized = Annotated[T, runtime.Optimize()]\n        Optimized[int] == Annotated[int, runtime.Optimize()]\n\n        OptimizedList = Annotated[List[T], runtime.Optimize()]\n        OptimizedList[int] == Annotated[List[int], runtime.Optimize()]\n    \"\"\"\n\n    __slots__ = ()\n\n    def __new__(cls, *args, **kwargs):\n        raise TypeError(\"Type Annotated cannot be instantiated.\")\n\n    @_tp_cache\n    def __class_getitem__(cls, params):\n        if not isinstance(params, tuple) or len(params) < 2:\n            raise TypeError(\"Annotated[...] should be used \"\n                            \"with at least two arguments (a type and an \"\n                            \"annotation).\")\n        msg = \"Annotated[t, ...]: t must be a type.\"\n        origin = _type_check(params[0], msg, allow_special_forms=True)\n        metadata = tuple(params[1:])\n        return _AnnotatedAlias(origin, metadata)\n\n    def __init_subclass__(cls, *args, **kwargs):\n        raise TypeError(\n            \"Cannot subclass {}.Annotated\".format(cls.__module__)\n        )\n\n\ndef runtime_checkable(cls):\n    \"\"\"Mark a protocol class as a runtime protocol.\n\n    Such protocol can be used with isinstance() and issubclass().\n    Raise TypeError if applied to a non-protocol class.\n    This allows a simple-minded structural check very similar to\n    one trick ponies in collections.abc such as Iterable.\n    For example::\n\n        @runtime_checkable\n        class Closable(Protocol):\n            def close(self): ...\n\n        assert isinstance(open('/some/file'), Closable)\n\n    Warning: this will check only the presence of the required methods,\n    not their type signatures!\n    \"\"\"\n    if not issubclass(cls, Generic) or not cls._is_protocol:\n        raise TypeError('@runtime_checkable can be only applied to protocol classes,'\n                        ' got %r' % cls)\n    cls._is_runtime_protocol = True\n    return cls\n\n\ndef cast(typ, val):\n    \"\"\"Cast a value to a type.\n\n    This returns the value unchanged.  To the type checker this\n    signals that the return value has the designated type, but at\n    runtime we intentionally don't check anything (we want this\n    to be as fast as possible).\n    \"\"\"\n    return val\n\n\ndef _get_defaults(func):\n    \"\"\"Internal helper to extract the default arguments, by name.\"\"\"\n    try:\n        code = func.__code__\n    except AttributeError:\n        # Some built-in functions don't have __code__, __defaults__, etc.\n        return {}\n    pos_count = code.co_argcount\n    arg_names = code.co_varnames\n    arg_names = arg_names[:pos_count]\n    defaults = func.__defaults__ or ()\n    kwdefaults = func.__kwdefaults__\n    res = dict(kwdefaults) if kwdefaults else {}\n    pos_offset = pos_count - len(defaults)\n    for name, value in zip(arg_names[pos_offset:], defaults):\n        assert name not in res\n        res[name] = value\n    return res\n\n\n_allowed_types = (types.FunctionType, types.BuiltinFunctionType,\n                  types.MethodType, types.ModuleType,\n                  WrapperDescriptorType, MethodWrapperType, MethodDescriptorType)\n\n\ndef get_type_hints(obj, globalns=None, localns=None, include_extras=False):\n    \"\"\"Return type hints for an object.\n\n    This is often the same as obj.__annotations__, but it handles\n    forward references encoded as string literals, adds Optional[t] if a\n    default value equal to None is set and recursively replaces all\n    'Annotated[T, ...]' with 'T' (unless 'include_extras=True').\n\n    The argument may be a module, class, method, or function. The annotations\n    are returned as a dictionary. For classes, annotations include also\n    inherited members.\n\n    TypeError is raised if the argument is not of a type that can contain\n    annotations, and an empty dictionary is returned if no annotations are\n    present.\n\n    BEWARE -- the behavior of globalns and localns is counterintuitive\n    (unless you are familiar with how eval() and exec() work).  The\n    search order is locals first, then globals.\n\n    - If no dict arguments are passed, an attempt is made to use the\n      globals from obj (or the respective module's globals for classes),\n      and these are also used as the locals.  If the object does not appear\n      to have globals, an empty dictionary is used.\n\n    - If one dict argument is passed, it is used for both globals and\n      locals.\n\n    - If two dict arguments are passed, they specify globals and\n      locals, respectively.\n    \"\"\"\n\n    if getattr(obj, '__no_type_check__', None):\n        return {}\n    # Classes require a special treatment.\n    if isinstance(obj, type):\n        hints = {}\n        for base in reversed(obj.__mro__):\n            if globalns is None:\n                base_globals = sys.modules[base.__module__].__dict__\n            else:\n                base_globals = globalns\n            ann = base.__dict__.get('__annotations__', {})\n            for name, value in ann.items():\n                if value is None:\n                    value = type(None)\n                if isinstance(value, str):\n                    value = ForwardRef(value, is_argument=False, is_class=True)\n                value = _eval_type(value, base_globals, localns)\n                hints[name] = value\n        return hints if include_extras else {k: _strip_annotations(t) for k, t in hints.items()}\n\n    if globalns is None:\n        if isinstance(obj, types.ModuleType):\n            globalns = obj.__dict__\n        else:\n            nsobj = obj\n            # Find globalns for the unwrapped object.\n            while hasattr(nsobj, '__wrapped__'):\n                nsobj = nsobj.__wrapped__\n            globalns = getattr(nsobj, '__globals__', {})\n        if localns is None:\n            localns = globalns\n    elif localns is None:\n        localns = globalns\n    hints = getattr(obj, '__annotations__', None)\n    if hints is None:\n        # Return empty annotations for something that _could_ have them.\n        if isinstance(obj, _allowed_types):\n            return {}\n        else:\n            raise TypeError('{!r} is not a module, class, method, '\n                            'or function.'.format(obj))\n    defaults = _get_defaults(obj)\n    hints = dict(hints)\n    for name, value in hints.items():\n        if value is None:\n            value = type(None)\n        if isinstance(value, str):\n            # class-level forward refs were handled above, this must be either\n            # a module-level annotation or a function argument annotation\n            value = ForwardRef(\n                value,\n                is_argument=not isinstance(obj, types.ModuleType),\n                is_class=False,\n            )\n        value = _eval_type(value, globalns, localns)\n        if name in defaults and defaults[name] is None:\n            value = Optional[value]\n        hints[name] = value\n    return hints if include_extras else {k: _strip_annotations(t) for k, t in hints.items()}\n\n\ndef _strip_annotations(t):\n    \"\"\"Strips the annotations from a given type.\n    \"\"\"\n    if isinstance(t, _AnnotatedAlias):\n        return _strip_annotations(t.__origin__)\n    if isinstance(t, _GenericAlias):\n        stripped_args = tuple(_strip_annotations(a) for a in t.__args__)\n        if stripped_args == t.__args__:\n            return t\n        return t.copy_with(stripped_args)\n    if isinstance(t, GenericAlias):\n        stripped_args = tuple(_strip_annotations(a) for a in t.__args__)\n        if stripped_args == t.__args__:\n            return t\n        return GenericAlias(t.__origin__, stripped_args)\n    return t\n\n\ndef get_origin(tp):\n    \"\"\"Get the unsubscripted version of a type.\n\n    This supports generic types, Callable, Tuple, Union, Literal, Final, ClassVar\n    and Annotated. Return None for unsupported types. Examples::\n\n        get_origin(Literal[42]) is Literal\n        get_origin(int) is None\n        get_origin(ClassVar[int]) is ClassVar\n        get_origin(Generic) is Generic\n        get_origin(Generic[T]) is Generic\n        get_origin(Union[T, int]) is Union\n        get_origin(List[Tuple[T, T]][int]) == list\n    \"\"\"\n    if isinstance(tp, _AnnotatedAlias):\n        return Annotated\n    if isinstance(tp, (_BaseGenericAlias, GenericAlias)):\n        return tp.__origin__\n    if tp is Generic:\n        return Generic\n    return None\n\n\ndef get_args(tp):\n    \"\"\"Get type arguments with all substitutions performed.\n\n    For unions, basic simplifications used by Union constructor are performed.\n    Examples::\n        get_args(Dict[str, int]) == (str, int)\n        get_args(int) == ()\n        get_args(Union[int, Union[T, int], str][int]) == (int, str)\n        get_args(Union[int, Tuple[T, int]][str]) == (int, Tuple[str, int])\n        get_args(Callable[[], T][int]) == ([], int)\n    \"\"\"\n    if isinstance(tp, _AnnotatedAlias):\n        return (tp.__origin__,) + tp.__metadata__\n    if isinstance(tp, (_GenericAlias, GenericAlias)):\n        res = tp.__args__\n        if tp.__origin__ is collections.abc.Callable and res[0] is not Ellipsis:\n            res = (list(res[:-1]), res[-1])\n        return res\n    return ()\n\n\ndef no_type_check(arg):\n    \"\"\"Decorator to indicate that annotations are not type hints.\n\n    The argument must be a class or function; if it is a class, it\n    applies recursively to all methods and classes defined in that class\n    (but not to methods defined in its superclasses or subclasses).\n\n    This mutates the function(s) or class(es) in place.\n    \"\"\"\n    if isinstance(arg, type):\n        arg_attrs = arg.__dict__.copy()\n        for attr, val in arg.__dict__.items():\n            if val in arg.__bases__ + (arg,):\n                arg_attrs.pop(attr)\n        for obj in arg_attrs.values():\n            if isinstance(obj, types.FunctionType):\n                obj.__no_type_check__ = True\n            if isinstance(obj, type):\n                no_type_check(obj)\n    try:\n        arg.__no_type_check__ = True\n    except TypeError:  # built-in classes\n        pass\n    return arg\n\n\ndef no_type_check_decorator(decorator):\n    \"\"\"Decorator to give another decorator the @no_type_check effect.\n\n    This wraps the decorator with something that wraps the decorated\n    function in @no_type_check.\n    \"\"\"\n\n    @functools.wraps(decorator)\n    def wrapped_decorator(*args, **kwds):\n        func = decorator(*args, **kwds)\n        func = no_type_check(func)\n        return func\n\n    return wrapped_decorator\n\n\ndef _overload_dummy(*args, **kwds):\n    \"\"\"Helper for @overload to raise when called.\"\"\"\n    raise NotImplementedError(\n        \"You should not call an overloaded function. \"\n        \"A series of @overload-decorated functions \"\n        \"outside a stub module should always be followed \"\n        \"by an implementation that is not @overload-ed.\")\n\n\ndef overload(func):\n    \"\"\"Decorator for overloaded functions/methods.\n\n    In a stub file, place two or more stub definitions for the same\n    function in a row, each decorated with @overload.  For example:\n\n      @overload\n      def utf8(value: None) -> None: ...\n      @overload\n      def utf8(value: bytes) -> bytes: ...\n      @overload\n      def utf8(value: str) -> bytes: ...\n\n    In a non-stub file (i.e. a regular .py file), do the same but\n    follow it with an implementation.  The implementation should *not*\n    be decorated with @overload.  For example:\n\n      @overload\n      def utf8(value: None) -> None: ...\n      @overload\n      def utf8(value: bytes) -> bytes: ...\n      @overload\n      def utf8(value: str) -> bytes: ...\n      def utf8(value):\n          # implementation goes here\n    \"\"\"\n    return _overload_dummy\n\n\ndef final(f):\n    \"\"\"A decorator to indicate final methods and final classes.\n\n    Use this decorator to indicate to type checkers that the decorated\n    method cannot be overridden, and decorated class cannot be subclassed.\n    For example:\n\n      class Base:\n          @final\n          def done(self) -> None:\n              ...\n      class Sub(Base):\n          def done(self) -> None:  # Error reported by type checker\n                ...\n\n      @final\n      class Leaf:\n          ...\n      class Other(Leaf):  # Error reported by type checker\n          ...\n\n    There is no runtime checking of these properties.\n    \"\"\"\n    return f\n\n\n# Some unconstrained type variables.  These are used by the container types.\n# (These are not for export.)\nT = TypeVar('T')  # Any type.\nKT = TypeVar('KT')  # Key type.\nVT = TypeVar('VT')  # Value type.\nT_co = TypeVar('T_co', covariant=True)  # Any type covariant containers.\nV_co = TypeVar('V_co', covariant=True)  # Any type covariant containers.\nVT_co = TypeVar('VT_co', covariant=True)  # Value type covariant containers.\nT_contra = TypeVar('T_contra', contravariant=True)  # Ditto contravariant.\n# Internal type variable used for Type[].\nCT_co = TypeVar('CT_co', covariant=True, bound=type)\n\n# A useful type variable with constraints.  This represents string types.\n# (This one *is* for export!)\nAnyStr = TypeVar('AnyStr', bytes, str)\n\n\n# Various ABCs mimicking those in collections.abc.\n_alias = _SpecialGenericAlias\n\nHashable = _alias(collections.abc.Hashable, 0)  # Not generic.\nAwaitable = _alias(collections.abc.Awaitable, 1)\nCoroutine = _alias(collections.abc.Coroutine, 3)\nAsyncIterable = _alias(collections.abc.AsyncIterable, 1)\nAsyncIterator = _alias(collections.abc.AsyncIterator, 1)\nIterable = _alias(collections.abc.Iterable, 1)\nIterator = _alias(collections.abc.Iterator, 1)\nReversible = _alias(collections.abc.Reversible, 1)\nSized = _alias(collections.abc.Sized, 0)  # Not generic.\nContainer = _alias(collections.abc.Container, 1)\nCollection = _alias(collections.abc.Collection, 1)\nCallable = _CallableType(collections.abc.Callable, 2)\nCallable.__doc__ = \\\n    \"\"\"Callable type; Callable[[int], str] is a function of (int) -> str.\n\n    The subscription syntax must always be used with exactly two\n    values: the argument list and the return type.  The argument list\n    must be a list of types or ellipsis; the return type must be a single type.\n\n    There is no syntax to indicate optional or keyword arguments,\n    such function types are rarely used as callback types.\n    \"\"\"\nAbstractSet = _alias(collections.abc.Set, 1, name='AbstractSet')\nMutableSet = _alias(collections.abc.MutableSet, 1)\n# NOTE: Mapping is only covariant in the value type.\nMapping = _alias(collections.abc.Mapping, 2)\nMutableMapping = _alias(collections.abc.MutableMapping, 2)\nSequence = _alias(collections.abc.Sequence, 1)\nMutableSequence = _alias(collections.abc.MutableSequence, 1)\nByteString = _alias(collections.abc.ByteString, 0)  # Not generic\n# Tuple accepts variable number of parameters.\nTuple = _TupleType(tuple, -1, inst=False, name='Tuple')\nTuple.__doc__ = \\\n    \"\"\"Tuple type; Tuple[X, Y] is the cross-product type of X and Y.\n\n    Example: Tuple[T1, T2] is a tuple of two elements corresponding\n    to type variables T1 and T2.  Tuple[int, float, str] is a tuple\n    of an int, a float and a string.\n\n    To specify a variable-length tuple of homogeneous type, use Tuple[T, ...].\n    \"\"\"\nList = _alias(list, 1, inst=False, name='List')\nDeque = _alias(collections.deque, 1, name='Deque')\nSet = _alias(set, 1, inst=False, name='Set')\nFrozenSet = _alias(frozenset, 1, inst=False, name='FrozenSet')\nMappingView = _alias(collections.abc.MappingView, 1)\nKeysView = _alias(collections.abc.KeysView, 1)\nItemsView = _alias(collections.abc.ItemsView, 2)\nValuesView = _alias(collections.abc.ValuesView, 1)\nContextManager = _alias(contextlib.AbstractContextManager, 1, name='ContextManager')\nAsyncContextManager = _alias(contextlib.AbstractAsyncContextManager, 1, name='AsyncContextManager')\nDict = _alias(dict, 2, inst=False, name='Dict')\nDefaultDict = _alias(collections.defaultdict, 2, name='DefaultDict')\nOrderedDict = _alias(collections.OrderedDict, 2)\nCounter = _alias(collections.Counter, 1)\nChainMap = _alias(collections.ChainMap, 2)\nGenerator = _alias(collections.abc.Generator, 3)\nAsyncGenerator = _alias(collections.abc.AsyncGenerator, 2)\nType = _alias(type, 1, inst=False, name='Type')\nType.__doc__ = \\\n    \"\"\"A special construct usable to annotate class objects.\n\n    For example, suppose we have the following classes::\n\n      class User: ...  # Abstract base for User classes\n      class BasicUser(User): ...\n      class ProUser(User): ...\n      class TeamUser(User): ...\n\n    And a function that takes a class argument that's a subclass of\n    User and returns an instance of the corresponding class::\n\n      U = TypeVar('U', bound=User)\n      def new_user(user_class: Type[U]) -> U:\n          user = user_class()\n          # (Here we could write the user object to a database)\n          return user\n\n      joe = new_user(BasicUser)\n\n    At this point the type checker knows that joe has type BasicUser.\n    \"\"\"\n\n\n@runtime_checkable\nclass SupportsInt(Protocol):\n    \"\"\"An ABC with one abstract method __int__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __int__(self) -> int:\n        pass\n\n\n@runtime_checkable\nclass SupportsFloat(Protocol):\n    \"\"\"An ABC with one abstract method __float__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __float__(self) -> float:\n        pass\n\n\n@runtime_checkable\nclass SupportsComplex(Protocol):\n    \"\"\"An ABC with one abstract method __complex__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __complex__(self) -> complex:\n        pass\n\n\n@runtime_checkable\nclass SupportsBytes(Protocol):\n    \"\"\"An ABC with one abstract method __bytes__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __bytes__(self) -> bytes:\n        pass\n\n\n@runtime_checkable\nclass SupportsIndex(Protocol):\n    \"\"\"An ABC with one abstract method __index__.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __index__(self) -> int:\n        pass\n\n\n@runtime_checkable\nclass SupportsAbs(Protocol[T_co]):\n    \"\"\"An ABC with one abstract method __abs__ that is covariant in its return type.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __abs__(self) -> T_co:\n        pass\n\n\n@runtime_checkable\nclass SupportsRound(Protocol[T_co]):\n    \"\"\"An ABC with one abstract method __round__ that is covariant in its return type.\"\"\"\n    __slots__ = ()\n\n    @abstractmethod\n    def __round__(self, ndigits: int = 0) -> T_co:\n        pass\n\n\ndef _make_nmtuple(name, types, module, defaults = ()):\n    fields = [n for n, t in types]\n    types = {n: _type_check(t, f\"field {n} annotation must be a type\")\n             for n, t in types}\n    nm_tpl = collections.namedtuple(name, fields,\n                                    defaults=defaults, module=module)\n    nm_tpl.__annotations__ = nm_tpl.__new__.__annotations__ = types\n    return nm_tpl\n\n\n# attributes prohibited to set in NamedTuple class syntax\n_prohibited = frozenset({'__new__', '__init__', '__slots__', '__getnewargs__',\n                         '_fields', '_field_defaults',\n                         '_make', '_replace', '_asdict', '_source'})\n\n_special = frozenset({'__module__', '__name__', '__annotations__'})\n\n\nclass NamedTupleMeta(type):\n\n    def __new__(cls, typename, bases, ns):\n        assert bases[0] is _NamedTuple\n        types = ns.get('__annotations__', {})\n        default_names = []\n        for field_name in types:\n            if field_name in ns:\n                default_names.append(field_name)\n            elif default_names:\n                raise TypeError(f\"Non-default namedtuple field {field_name} \"\n                                f\"cannot follow default field\"\n                                f\"{'s' if len(default_names) > 1 else ''} \"\n                                f\"{', '.join(default_names)}\")\n        nm_tpl = _make_nmtuple(typename, types.items(),\n                               defaults=[ns[n] for n in default_names],\n                               module=ns['__module__'])\n        # update from user namespace without overriding special namedtuple attributes\n        for key in ns:\n            if key in _prohibited:\n                raise AttributeError(\"Cannot overwrite NamedTuple attribute \" + key)\n            elif key not in _special and key not in nm_tpl._fields:\n                setattr(nm_tpl, key, ns[key])\n        return nm_tpl\n\n\ndef NamedTuple(typename, fields=None, /, **kwargs):\n    \"\"\"Typed version of namedtuple.\n\n    Usage in Python versions >= 3.6::\n\n        class Employee(NamedTuple):\n            name: str\n            id: int\n\n    This is equivalent to::\n\n        Employee = collections.namedtuple('Employee', ['name', 'id'])\n\n    The resulting class has an extra __annotations__ attribute, giving a\n    dict that maps field names to types.  (The field names are also in\n    the _fields attribute, which is part of the namedtuple API.)\n    Alternative equivalent keyword syntax is also accepted::\n\n        Employee = NamedTuple('Employee', name=str, id=int)\n\n    In Python versions <= 3.5 use::\n\n        Employee = NamedTuple('Employee', [('name', str), ('id', int)])\n    \"\"\"\n    if fields is None:\n        fields = kwargs.items()\n    elif kwargs:\n        raise TypeError(\"Either list of fields or keywords\"\n                        \" can be provided to NamedTuple, not both\")\n    try:\n        module = sys._getframe(1).f_globals.get('__name__', '__main__')\n    except (AttributeError, ValueError):\n        module = None\n    return _make_nmtuple(typename, fields, module=module)\n\n_NamedTuple = type.__new__(NamedTupleMeta, 'NamedTuple', (), {})\n\ndef _namedtuple_mro_entries(bases):\n    if len(bases) > 1:\n        raise TypeError(\"Multiple inheritance with NamedTuple is not supported\")\n    assert bases[0] is NamedTuple\n    return (_NamedTuple,)\n\nNamedTuple.__mro_entries__ = _namedtuple_mro_entries\n\n\nclass _TypedDictMeta(type):\n    def __new__(cls, name, bases, ns, total=True):\n        \"\"\"Create new typed dict class object.\n\n        This method is called when TypedDict is subclassed,\n        or when TypedDict is instantiated. This way\n        TypedDict supports all three syntax forms described in its docstring.\n        Subclasses and instances of TypedDict return actual dictionaries.\n        \"\"\"\n        for base in bases:\n            if type(base) is not _TypedDictMeta:\n                raise TypeError('cannot inherit from both a TypedDict type '\n                                'and a non-TypedDict base class')\n        tp_dict = type.__new__(_TypedDictMeta, name, (dict,), ns)\n\n        annotations = {}\n        own_annotations = ns.get('__annotations__', {})\n        own_annotation_keys = set(own_annotations.keys())\n        msg = \"TypedDict('Name', {f0: t0, f1: t1, ...}); each t must be a type\"\n        own_annotations = {\n            n: _type_check(tp, msg, module=tp_dict.__module__)\n            for n, tp in own_annotations.items()\n        }\n        required_keys = set()\n        optional_keys = set()\n\n        for base in bases:\n            annotations.update(base.__dict__.get('__annotations__', {}))\n            required_keys.update(base.__dict__.get('__required_keys__', ()))\n            optional_keys.update(base.__dict__.get('__optional_keys__', ()))\n\n        annotations.update(own_annotations)\n        if total:\n            required_keys.update(own_annotation_keys)\n        else:\n            optional_keys.update(own_annotation_keys)\n\n        tp_dict.__annotations__ = annotations\n        tp_dict.__required_keys__ = frozenset(required_keys)\n        tp_dict.__optional_keys__ = frozenset(optional_keys)\n        if not hasattr(tp_dict, '__total__'):\n            tp_dict.__total__ = total\n        return tp_dict\n\n    __call__ = dict  # static method\n\n    def __subclasscheck__(cls, other):\n        # Typed dicts are only for static structural subtyping.\n        raise TypeError('TypedDict does not support instance and class checks')\n\n    __instancecheck__ = __subclasscheck__\n\n\ndef TypedDict(typename, fields=None, /, *, total=True, **kwargs):\n    \"\"\"A simple typed namespace. At runtime it is equivalent to a plain dict.\n\n    TypedDict creates a dictionary type that expects all of its\n    instances to have a certain set of keys, where each key is\n    associated with a value of a consistent type. This expectation\n    is not checked at runtime but is only enforced by type checkers.\n    Usage::\n\n        class Point2D(TypedDict):\n            x: int\n            y: int\n            label: str\n\n        a: Point2D = {'x': 1, 'y': 2, 'label': 'good'}  # OK\n        b: Point2D = {'z': 3, 'label': 'bad'}           # Fails type check\n\n        assert Point2D(x=1, y=2, label='first') == dict(x=1, y=2, label='first')\n\n    The type info can be accessed via the Point2D.__annotations__ dict, and\n    the Point2D.__required_keys__ and Point2D.__optional_keys__ frozensets.\n    TypedDict supports two additional equivalent forms::\n\n        Point2D = TypedDict('Point2D', x=int, y=int, label=str)\n        Point2D = TypedDict('Point2D', {'x': int, 'y': int, 'label': str})\n\n    By default, all keys must be present in a TypedDict. It is possible\n    to override this by specifying totality.\n    Usage::\n\n        class point2D(TypedDict, total=False):\n            x: int\n            y: int\n\n    This means that a point2D TypedDict can have any of the keys omitted.A type\n    checker is only expected to support a literal False or True as the value of\n    the total argument. True is the default, and makes all items defined in the\n    class body be required.\n\n    The class syntax is only supported in Python 3.6+, while two other\n    syntax forms work for Python 2.7 and 3.2+\n    \"\"\"\n    if fields is None:\n        fields = kwargs\n    elif kwargs:\n        raise TypeError(\"TypedDict takes either a dict or keyword arguments,\"\n                        \" but not both\")\n\n    ns = {'__annotations__': dict(fields)}\n    try:\n        # Setting correct module is necessary to make typed dict classes pickleable.\n        ns['__module__'] = sys._getframe(1).f_globals.get('__name__', '__main__')\n    except (AttributeError, ValueError):\n        pass\n\n    return _TypedDictMeta(typename, (), ns, total=total)\n\n_TypedDict = type.__new__(_TypedDictMeta, 'TypedDict', (), {})\nTypedDict.__mro_entries__ = lambda bases: (_TypedDict,)\n\n\ndef NewType(name, tp):\n    \"\"\"NewType creates simple unique types with almost zero\n    runtime overhead. NewType(name, tp) is considered a subtype of tp\n    by static type checkers. At runtime, NewType(name, tp) returns\n    a dummy function that simply returns its argument. Usage::\n\n        UserId = NewType('UserId', int)\n\n        def name_by_id(user_id: UserId) -> str:\n            ...\n\n        UserId('user')          # Fails type check\n\n        name_by_id(42)          # Fails type check\n        name_by_id(UserId(42))  # OK\n\n        num = UserId(5) + 1     # type: int\n    \"\"\"\n\n    def new_type(x):\n        return x\n\n    new_type.__name__ = name\n    new_type.__supertype__ = tp\n    return new_type\n\n\n# Python-version-specific alias (Python 2: unicode; Python 3: str)\nText = str\n\n\n# Constant that's True when type checking, but False here.\nTYPE_CHECKING = False\n\n\nclass IO(Generic[AnyStr]):\n    \"\"\"Generic base class for TextIO and BinaryIO.\n\n    This is an abstract, generic version of the return of open().\n\n    NOTE: This does not distinguish between the different possible\n    classes (text vs. binary, read vs. write vs. read/write,\n    append-only, unbuffered).  The TextIO and BinaryIO subclasses\n    below capture the distinctions between text vs. binary, which is\n    pervasive in the interface; however we currently do not offer a\n    way to track the other distinctions in the type system.\n    \"\"\"\n\n    __slots__ = ()\n\n    @property\n    @abstractmethod\n    def mode(self) -> str:\n        pass\n\n    @property\n    @abstractmethod\n    def name(self) -> str:\n        pass\n\n    @abstractmethod\n    def close(self) -> None:\n        pass\n\n    @property\n    @abstractmethod\n    def closed(self) -> bool:\n        pass\n\n    @abstractmethod\n    def fileno(self) -> int:\n        pass\n\n    @abstractmethod\n    def flush(self) -> None:\n        pass\n\n    @abstractmethod\n    def isatty(self) -> bool:\n        pass\n\n    @abstractmethod\n    def read(self, n: int = -1) -> AnyStr:\n        pass\n\n    @abstractmethod\n    def readable(self) -> bool:\n        pass\n\n    @abstractmethod\n    def readline(self, limit: int = -1) -> AnyStr:\n        pass\n\n    @abstractmethod\n    def readlines(self, hint: int = -1) -> List[AnyStr]:\n        pass\n\n    @abstractmethod\n    def seek(self, offset: int, whence: int = 0) -> int:\n        pass\n\n    @abstractmethod\n    def seekable(self) -> bool:\n        pass\n\n    @abstractmethod\n    def tell(self) -> int:\n        pass\n\n    @abstractmethod\n    def truncate(self, size: int = None) -> int:\n        pass\n\n    @abstractmethod\n    def writable(self) -> bool:\n        pass\n\n    @abstractmethod\n    def write(self, s: AnyStr) -> int:\n        pass\n\n    @abstractmethod\n    def writelines(self, lines: List[AnyStr]) -> None:\n        pass\n\n    @abstractmethod\n    def __enter__(self) -> 'IO[AnyStr]':\n        pass\n\n    @abstractmethod\n    def __exit__(self, type, value, traceback) -> None:\n        pass\n\n\nclass BinaryIO(IO[bytes]):\n    \"\"\"Typed version of the return of open() in binary mode.\"\"\"\n\n    __slots__ = ()\n\n    @abstractmethod\n    def write(self, s: Union[bytes, bytearray]) -> int:\n        pass\n\n    @abstractmethod\n    def __enter__(self) -> 'BinaryIO':\n        pass\n\n\nclass TextIO(IO[str]):\n    \"\"\"Typed version of the return of open() in text mode.\"\"\"\n\n    __slots__ = ()\n\n    @property\n    @abstractmethod\n    def buffer(self) -> BinaryIO:\n        pass\n\n    @property\n    @abstractmethod\n    def encoding(self) -> str:\n        pass\n\n    @property\n    @abstractmethod\n    def errors(self) -> Optional[str]:\n        pass\n\n    @property\n    @abstractmethod\n    def line_buffering(self) -> bool:\n        pass\n\n    @property\n    @abstractmethod\n    def newlines(self) -> Any:\n        pass\n\n    @abstractmethod\n    def __enter__(self) -> 'TextIO':\n        pass\n\n\nclass io:\n    \"\"\"Wrapper namespace for IO generic classes.\"\"\"\n\n    __all__ = ['IO', 'TextIO', 'BinaryIO']\n    IO = IO\n    TextIO = TextIO\n    BinaryIO = BinaryIO\n\n\nio.__name__ = __name__ + '.io'\nsys.modules[io.__name__] = io\n\nPattern = _alias(stdlib_re.Pattern, 1)\nMatch = _alias(stdlib_re.Match, 1)\n\nclass re:\n    \"\"\"Wrapper namespace for re type aliases.\"\"\"\n\n    __all__ = ['Pattern', 'Match']\n    Pattern = Pattern\n    Match = Match\n\n\nre.__name__ = __name__ + '.re'\nsys.modules[re.__name__] = re\n", 2257], "C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\polygon.py": ["\"\"\"Polygons and their linear ring components\n\"\"\"\n\nimport numpy as np\n\nimport shapely\nfrom shapely.algorithms.cga import is_ccw_impl, signed_area\nfrom shapely.errors import TopologicalError\nfrom shapely.geometry.base import BaseGeometry\nfrom shapely.geometry.linestring import LineString\nfrom shapely.geometry.point import Point\n\n__all__ = [\"orient\", \"Polygon\", \"LinearRing\"]\n\n\ndef _unpickle_linearring(wkb):\n    linestring = shapely.from_wkb(wkb)\n    srid = shapely.get_srid(linestring)\n    linearring = shapely.linearrings(shapely.get_coordinates(linestring))\n    if srid:\n        linearring = shapely.set_srid(linearring, srid)\n    return linearring\n\n\nclass LinearRing(LineString):\n    \"\"\"\n    A geometry type composed of one or more line segments\n    that forms a closed loop.\n\n    A LinearRing is a closed, one-dimensional feature.\n    A LinearRing that crosses itself or touches itself at a single point is\n    invalid and operations on it may fail.\n\n    Parameters\n    ----------\n    coordinates : sequence\n        A sequence of (x, y [,z]) numeric coordinate pairs or triples, or\n        an array-like with shape (N, 2) or (N, 3).\n        Also can be a sequence of Point objects.\n\n    Notes\n    -----\n    Rings are automatically closed. There is no need to specify a final\n    coordinate pair identical to the first.\n\n    Examples\n    --------\n    Construct a square ring.\n\n    >>> ring = LinearRing( ((0, 0), (0, 1), (1 ,1 ), (1 , 0)) )\n    >>> ring.is_closed\n    True\n    >>> list(ring.coords)\n    [(0.0, 0.0), (0.0, 1.0), (1.0, 1.0), (1.0, 0.0), (0.0, 0.0)]\n    >>> ring.length\n    4.0\n\n    \"\"\"\n\n    __slots__ = []\n\n    def __new__(self, coordinates=None):\n        if coordinates is None:\n            # empty geometry\n            # TODO better way?\n            return shapely.from_wkt(\"LINEARRING EMPTY\")\n        elif isinstance(coordinates, LineString):\n            if type(coordinates) == LinearRing:\n                # return original objects since geometries are immutable\n                return coordinates\n            elif not coordinates.is_valid:\n                raise TopologicalError(\"An input LineString must be valid.\")\n            else:\n                # LineString\n                # TODO convert LineString to LinearRing more directly?\n                coordinates = coordinates.coords\n\n        else:\n            if hasattr(coordinates, \"__array__\"):\n                coordinates = np.asarray(coordinates)\n            if isinstance(coordinates, np.ndarray) and np.issubdtype(\n                coordinates.dtype, np.number\n            ):\n                pass\n            else:\n                # check coordinates on points\n                def _coords(o):\n                    if isinstance(o, Point):\n                        return o.coords[0]\n                    else:\n                        return [float(c) for c in o]\n\n                coordinates = np.array([_coords(o) for o in coordinates])\n                if not np.issubdtype(coordinates.dtype, np.number):\n                    # conversion of coords to 2D array failed, this might be due\n                    # to inconsistent coordinate dimensionality\n                    raise ValueError(\"Inconsistent coordinate dimensionality\")\n\n        if len(coordinates) == 0:\n            # empty geometry\n            # TODO better constructor + should shapely.linearrings handle this?\n            return shapely.from_wkt(\"LINEARRING EMPTY\")\n\n        geom = shapely.linearrings(coordinates)\n        if not isinstance(geom, LinearRing):\n            raise ValueError(\"Invalid values passed to LinearRing constructor\")\n        return geom\n\n    @property\n    def __geo_interface__(self):\n        return {\"type\": \"LinearRing\", \"coordinates\": tuple(self.coords)}\n\n    def __reduce__(self):\n        \"\"\"WKB doesn't differentiate between LineString and LinearRing so we\n        need to move the coordinate sequence into the correct geometry type\"\"\"\n        return (_unpickle_linearring, (shapely.to_wkb(self, include_srid=True),))\n\n    @property\n    def is_ccw(self):\n        \"\"\"True is the ring is oriented counter clock-wise\"\"\"\n        return bool(is_ccw_impl()(self))\n\n    @property\n    def is_simple(self):\n        \"\"\"True if the geometry is simple, meaning that any self-intersections\n        are only at boundary points, else False\"\"\"\n        return bool(shapely.is_simple(self))\n\n\nshapely.lib.registry[2] = LinearRing\n\n\nclass InteriorRingSequence:\n\n    _parent = None\n    _ndim = None\n    _index = 0\n    _length = 0\n\n    def __init__(self, parent):\n        self._parent = parent\n        self._ndim = parent._ndim\n\n    def __iter__(self):\n        self._index = 0\n        self._length = self.__len__()\n        return self\n\n    def __next__(self):\n        if self._index < self._length:\n            ring = self._get_ring(self._index)\n            self._index += 1\n            return ring\n        else:\n            raise StopIteration\n\n    def __len__(self):\n        return shapely.get_num_interior_rings(self._parent)\n\n    def __getitem__(self, key):\n        m = self.__len__()\n        if isinstance(key, int):\n            if key + m < 0 or key >= m:\n                raise IndexError(\"index out of range\")\n            if key < 0:\n                i = m + key\n            else:\n                i = key\n            return self._get_ring(i)\n        elif isinstance(key, slice):\n            res = []\n            start, stop, stride = key.indices(m)\n            for i in range(start, stop, stride):\n                res.append(self._get_ring(i))\n            return res\n        else:\n            raise TypeError(\"key must be an index or slice\")\n\n    def _get_ring(self, i):\n        return shapely.get_interior_ring(self._parent, i)\n\n\nclass Polygon(BaseGeometry):\n    \"\"\"\n    A geometry type representing an area that is enclosed by a linear ring.\n\n    A polygon is a two-dimensional feature and has a non-zero area. It may\n    have one or more negative-space \"holes\" which are also bounded by linear\n    rings. If any rings cross each other, the feature is invalid and\n    operations on it may fail.\n\n    Parameters\n    ----------\n    shell : sequence\n        A sequence of (x, y [,z]) numeric coordinate pairs or triples, or\n        an array-like with shape (N, 2) or (N, 3).\n        Also can be a sequence of Point objects.\n    holes : sequence\n        A sequence of objects which satisfy the same requirements as the\n        shell parameters above\n\n    Attributes\n    ----------\n    exterior : LinearRing\n        The ring which bounds the positive space of the polygon.\n    interiors : sequence\n        A sequence of rings which bound all existing holes.\n\n    Examples\n    --------\n    Create a square polygon with no holes\n\n    >>> coords = ((0., 0.), (0., 1.), (1., 1.), (1., 0.), (0., 0.))\n    >>> polygon = Polygon(coords)\n    >>> polygon.area\n    1.0\n    \"\"\"\n\n    __slots__ = []\n\n    def __new__(self, shell=None, holes=None):\n        if shell is None:\n            # empty geometry\n            # TODO better way?\n            return shapely.from_wkt(\"POLYGON EMPTY\")\n        elif isinstance(shell, Polygon):\n            # return original objects since geometries are immutable\n            return shell\n        else:\n            shell = LinearRing(shell)\n\n        if holes is not None:\n            if len(holes) == 0:\n                # shapely constructor cannot handle holes=[]\n                holes = None\n            else:\n                holes = [LinearRing(ring) for ring in holes]\n\n        geom = shapely.polygons(shell, holes=holes)\n        if not isinstance(geom, Polygon):\n            raise ValueError(\"Invalid values passed to Polygon constructor\")\n        return geom\n\n    @property\n    def exterior(self):\n        return shapely.get_exterior_ring(self)\n\n    @property\n    def interiors(self):\n        if self.is_empty:\n            return []\n        return InteriorRingSequence(self)\n\n    @property\n    def coords(self):\n        raise NotImplementedError(\n            \"Component rings have coordinate sequences, but the polygon does not\"\n        )\n\n    def __eq__(self, other):\n        if not isinstance(other, BaseGeometry):\n            return NotImplemented\n        if not isinstance(other, Polygon):\n            return False\n        check_empty = (self.is_empty, other.is_empty)\n        if all(check_empty):\n            return True\n        elif any(check_empty):\n            return False\n        my_coords = [self.exterior.coords] + [\n            interior.coords for interior in self.interiors\n        ]\n        other_coords = [other.exterior.coords] + [\n            interior.coords for interior in other.interiors\n        ]\n        if not len(my_coords) == len(other_coords):\n            return False\n        # equal_nan=False is the default, but not yet available for older numpy\n        return np.all(\n            [\n                np.array_equal(left, right)  # , equal_nan=False)\n                for left, right in zip(my_coords, other_coords)\n            ]\n        )\n\n    def __hash__(self):\n        return super().__hash__()\n\n    @property\n    def __geo_interface__(self):\n        if self.exterior == LinearRing():\n            coords = []\n        else:\n            coords = [tuple(self.exterior.coords)]\n            for hole in self.interiors:\n                coords.append(tuple(hole.coords))\n        return {\"type\": \"Polygon\", \"coordinates\": tuple(coords)}\n\n    def svg(self, scale_factor=1.0, fill_color=None, opacity=None):\n        \"\"\"Returns SVG path element for the Polygon geometry.\n\n        Parameters\n        ==========\n        scale_factor : float\n            Multiplication factor for the SVG stroke-width.  Default is 1.\n        fill_color : str, optional\n            Hex string for fill color. Default is to use \"#66cc99\" if\n            geometry is valid, and \"#ff3333\" if invalid.\n        opacity : float\n            Float number between 0 and 1 for color opacity. Default value is 0.6\n        \"\"\"\n        if self.is_empty:\n            return \"<g />\"\n        if fill_color is None:\n            fill_color = \"#66cc99\" if self.is_valid else \"#ff3333\"\n        if opacity is None:\n            opacity = 0.6\n        exterior_coords = [[\"{},{}\".format(*c) for c in self.exterior.coords]]\n        interior_coords = [\n            [\"{},{}\".format(*c) for c in interior.coords] for interior in self.interiors\n        ]\n        path = \" \".join(\n            [\n                \"M {} L {} z\".format(coords[0], \" L \".join(coords[1:]))\n                for coords in exterior_coords + interior_coords\n            ]\n        )\n        return (\n            '<path fill-rule=\"evenodd\" fill=\"{2}\" stroke=\"#555555\" '\n            'stroke-width=\"{0}\" opacity=\"{3}\" d=\"{1}\" />'\n        ).format(2.0 * scale_factor, path, fill_color, opacity)\n\n    @classmethod\n    def from_bounds(cls, xmin, ymin, xmax, ymax):\n        \"\"\"Construct a `Polygon()` from spatial bounds.\"\"\"\n        return cls([(xmin, ymin), (xmin, ymax), (xmax, ymax), (xmax, ymin)])\n\n\nshapely.lib.registry[3] = Polygon\n\n\ndef orient(polygon, sign=1.0):\n    s = float(sign)\n    rings = []\n    ring = polygon.exterior\n    if signed_area(ring) / s >= 0.0:\n        rings.append(ring)\n    else:\n        rings.append(list(ring.coords)[::-1])\n    for ring in polygon.interiors:\n        if signed_area(ring) / s <= 0.0:\n            rings.append(ring)\n        else:\n            rings.append(list(ring.coords)[::-1])\n    return Polygon(rings[0], rings[1:])\n", 355], "C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py": ["import os\nfrom functools import wraps\n\nimport numpy as np\n\nfrom shapely import lib\nfrom shapely.errors import UnsupportedGEOSVersionError\n\n\nclass requires_geos:\n    def __init__(self, version):\n        if version.count(\".\") != 2:\n            raise ValueError(\"Version must be <major>.<minor>.<patch> format\")\n        self.version = tuple(int(x) for x in version.split(\".\"))\n\n    def __call__(self, func):\n        is_compatible = lib.geos_version >= self.version\n        is_doc_build = os.environ.get(\"SPHINX_DOC_BUILD\") == \"1\"  # set in docs/conf.py\n        if is_compatible and not is_doc_build:\n            return func  # return directly, do not change the docstring\n\n        msg = \"'{}' requires at least GEOS {}.{}.{}.\".format(\n            func.__name__, *self.version\n        )\n        if is_compatible:\n\n            @wraps(func)\n            def wrapped(*args, **kwargs):\n                return func(*args, **kwargs)\n\n        else:\n\n            @wraps(func)\n            def wrapped(*args, **kwargs):\n                raise UnsupportedGEOSVersionError(msg)\n\n        doc = wrapped.__doc__\n        if doc:\n            # Insert the message at the first double newline\n            position = doc.find(\"\\n\\n\") + 2\n            # Figure out the indentation level\n            indent = 0\n            while True:\n                if doc[position + indent] == \" \":\n                    indent += 1\n                else:\n                    break\n            wrapped.__doc__ = doc.replace(\n                \"\\n\\n\", \"\\n\\n{}.. note:: {}\\n\\n\".format(\" \" * indent, msg), 1\n            )\n\n        return wrapped\n\n\ndef multithreading_enabled(func):\n    \"\"\"Prepare multithreading by setting the writable flags of object type\n    ndarrays to False.\n\n    NB: multithreading also requires the GIL to be released, which is done in\n    the C extension (ufuncs.c).\"\"\"\n\n    @wraps(func)\n    def wrapped(*args, **kwargs):\n        array_args = [\n            arg for arg in args if isinstance(arg, np.ndarray) and arg.dtype == object\n        ] + [\n            arg\n            for name, arg in kwargs.items()\n            if name not in {\"where\", \"out\"}\n            and isinstance(arg, np.ndarray)\n            and arg.dtype == object\n        ]\n        old_flags = [arr.flags.writeable for arr in array_args]\n        try:\n            for arr in array_args:\n                arr.flags.writeable = False\n            return func(*args, **kwargs)\n        finally:\n            for arr, old_flag in zip(array_args, old_flags):\n                arr.flags.writeable = old_flag\n\n    return wrapped\n", 82], "C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\_bootlocale.py": ["\"\"\"A minimal subset of the locale module used at interpreter startup\n(imported by the _io module), in order to reduce startup time.\n\nDon't import directly from third-party code; use the `locale` module instead!\n\"\"\"\n\nimport sys\nimport _locale\n\nif sys.platform.startswith(\"win\"):\n    def getpreferredencoding(do_setlocale=True):\n        if sys.flags.utf8_mode:\n            return 'UTF-8'\n        return _locale._getdefaultlocale()[1]\nelse:\n    try:\n        _locale.CODESET\n    except AttributeError:\n        if hasattr(sys, 'getandroidapilevel'):\n            # On Android langinfo.h and CODESET are missing, and UTF-8 is\n            # always used in mbstowcs() and wcstombs().\n            def getpreferredencoding(do_setlocale=True):\n                return 'UTF-8'\n        else:\n            def getpreferredencoding(do_setlocale=True):\n                if sys.flags.utf8_mode:\n                    return 'UTF-8'\n                # This path for legacy systems needs the more complex\n                # getdefaultlocale() function, import the full locale module.\n                import locale\n                return locale.getpreferredencoding(do_setlocale)\n    else:\n        def getpreferredencoding(do_setlocale=True):\n            assert not do_setlocale\n            if sys.flags.utf8_mode:\n                return 'UTF-8'\n            result = _locale.nl_langinfo(_locale.CODESET)\n            if not result and sys.platform == 'darwin':\n                # nl_langinfo can return an empty string\n                # when the setting has an invalid value.\n                # Default to UTF-8 in that case because\n                # UTF-8 is the default charset on OSX and\n                # returning nothing will crash the\n                # interpreter.\n                result = 'UTF-8'\n            return result\n", 46], "C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py": ["r\"\"\"JSON (JavaScript Object Notation) <http://json.org> is a subset of\nJavaScript syntax (ECMA-262 3rd edition) used as a lightweight data\ninterchange format.\n\n:mod:`json` exposes an API familiar to users of the standard library\n:mod:`marshal` and :mod:`pickle` modules.  It is derived from a\nversion of the externally maintained simplejson library.\n\nEncoding basic Python object hierarchies::\n\n    >>> import json\n    >>> json.dumps(['foo', {'bar': ('baz', None, 1.0, 2)}])\n    '[\"foo\", {\"bar\": [\"baz\", null, 1.0, 2]}]'\n    >>> print(json.dumps(\"\\\"foo\\bar\"))\n    \"\\\"foo\\bar\"\n    >>> print(json.dumps('\\u1234'))\n    \"\\u1234\"\n    >>> print(json.dumps('\\\\'))\n    \"\\\\\"\n    >>> print(json.dumps({\"c\": 0, \"b\": 0, \"a\": 0}, sort_keys=True))\n    {\"a\": 0, \"b\": 0, \"c\": 0}\n    >>> from io import StringIO\n    >>> io = StringIO()\n    >>> json.dump(['streaming API'], io)\n    >>> io.getvalue()\n    '[\"streaming API\"]'\n\nCompact encoding::\n\n    >>> import json\n    >>> mydict = {'4': 5, '6': 7}\n    >>> json.dumps([1,2,3,mydict], separators=(',', ':'))\n    '[1,2,3,{\"4\":5,\"6\":7}]'\n\nPretty printing::\n\n    >>> import json\n    >>> print(json.dumps({'4': 5, '6': 7}, sort_keys=True, indent=4))\n    {\n        \"4\": 5,\n        \"6\": 7\n    }\n\nDecoding JSON::\n\n    >>> import json\n    >>> obj = ['foo', {'bar': ['baz', None, 1.0, 2]}]\n    >>> json.loads('[\"foo\", {\"bar\":[\"baz\", null, 1.0, 2]}]') == obj\n    True\n    >>> json.loads('\"\\\\\"foo\\\\bar\"') == '\"foo\\x08ar'\n    True\n    >>> from io import StringIO\n    >>> io = StringIO('[\"streaming API\"]')\n    >>> json.load(io)[0] == 'streaming API'\n    True\n\nSpecializing JSON object decoding::\n\n    >>> import json\n    >>> def as_complex(dct):\n    ...     if '__complex__' in dct:\n    ...         return complex(dct['real'], dct['imag'])\n    ...     return dct\n    ...\n    >>> json.loads('{\"__complex__\": true, \"real\": 1, \"imag\": 2}',\n    ...     object_hook=as_complex)\n    (1+2j)\n    >>> from decimal import Decimal\n    >>> json.loads('1.1', parse_float=Decimal) == Decimal('1.1')\n    True\n\nSpecializing JSON object encoding::\n\n    >>> import json\n    >>> def encode_complex(obj):\n    ...     if isinstance(obj, complex):\n    ...         return [obj.real, obj.imag]\n    ...     raise TypeError(f'Object of type {obj.__class__.__name__} '\n    ...                     f'is not JSON serializable')\n    ...\n    >>> json.dumps(2 + 1j, default=encode_complex)\n    '[2.0, 1.0]'\n    >>> json.JSONEncoder(default=encode_complex).encode(2 + 1j)\n    '[2.0, 1.0]'\n    >>> ''.join(json.JSONEncoder(default=encode_complex).iterencode(2 + 1j))\n    '[2.0, 1.0]'\n\n\nUsing json.tool from the shell to validate and pretty-print::\n\n    $ echo '{\"json\":\"obj\"}' | python -m json.tool\n    {\n        \"json\": \"obj\"\n    }\n    $ echo '{ 1.2:3.4}' | python -m json.tool\n    Expecting property name enclosed in double quotes: line 1 column 3 (char 2)\n\"\"\"\n__version__ = '2.0.9'\n__all__ = [\n    'dump', 'dumps', 'load', 'loads',\n    'JSONDecoder', 'JSONDecodeError', 'JSONEncoder',\n]\n\n__author__ = 'Bob Ippolito <bob@redivi.com>'\n\nfrom .decoder import JSONDecoder, JSONDecodeError\nfrom .encoder import JSONEncoder\nimport codecs\n\n_default_encoder = JSONEncoder(\n    skipkeys=False,\n    ensure_ascii=True,\n    check_circular=True,\n    allow_nan=True,\n    indent=None,\n    separators=None,\n    default=None,\n)\n\ndef dump(obj, fp, *, skipkeys=False, ensure_ascii=True, check_circular=True,\n        allow_nan=True, cls=None, indent=None, separators=None,\n        default=None, sort_keys=False, **kw):\n    \"\"\"Serialize ``obj`` as a JSON formatted stream to ``fp`` (a\n    ``.write()``-supporting file-like object).\n\n    If ``skipkeys`` is true then ``dict`` keys that are not basic types\n    (``str``, ``int``, ``float``, ``bool``, ``None``) will be skipped\n    instead of raising a ``TypeError``.\n\n    If ``ensure_ascii`` is false, then the strings written to ``fp`` can\n    contain non-ASCII characters if they appear in strings contained in\n    ``obj``. Otherwise, all such characters are escaped in JSON strings.\n\n    If ``check_circular`` is false, then the circular reference check\n    for container types will be skipped and a circular reference will\n    result in an ``RecursionError`` (or worse).\n\n    If ``allow_nan`` is false, then it will be a ``ValueError`` to\n    serialize out of range ``float`` values (``nan``, ``inf``, ``-inf``)\n    in strict compliance of the JSON specification, instead of using the\n    JavaScript equivalents (``NaN``, ``Infinity``, ``-Infinity``).\n\n    If ``indent`` is a non-negative integer, then JSON array elements and\n    object members will be pretty-printed with that indent level. An indent\n    level of 0 will only insert newlines. ``None`` is the most compact\n    representation.\n\n    If specified, ``separators`` should be an ``(item_separator, key_separator)``\n    tuple.  The default is ``(', ', ': ')`` if *indent* is ``None`` and\n    ``(',', ': ')`` otherwise.  To get the most compact JSON representation,\n    you should specify ``(',', ':')`` to eliminate whitespace.\n\n    ``default(obj)`` is a function that should return a serializable version\n    of obj or raise TypeError. The default simply raises TypeError.\n\n    If *sort_keys* is true (default: ``False``), then the output of\n    dictionaries will be sorted by key.\n\n    To use a custom ``JSONEncoder`` subclass (e.g. one that overrides the\n    ``.default()`` method to serialize additional types), specify it with\n    the ``cls`` kwarg; otherwise ``JSONEncoder`` is used.\n\n    \"\"\"\n    # cached encoder\n    if (not skipkeys and ensure_ascii and\n        check_circular and allow_nan and\n        cls is None and indent is None and separators is None and\n        default is None and not sort_keys and not kw):\n        iterable = _default_encoder.iterencode(obj)\n    else:\n        if cls is None:\n            cls = JSONEncoder\n        iterable = cls(skipkeys=skipkeys, ensure_ascii=ensure_ascii,\n            check_circular=check_circular, allow_nan=allow_nan, indent=indent,\n            separators=separators,\n            default=default, sort_keys=sort_keys, **kw).iterencode(obj)\n    # could accelerate with writelines in some versions of Python, at\n    # a debuggability cost\n    for chunk in iterable:\n        fp.write(chunk)\n\n\ndef dumps(obj, *, skipkeys=False, ensure_ascii=True, check_circular=True,\n        allow_nan=True, cls=None, indent=None, separators=None,\n        default=None, sort_keys=False, **kw):\n    \"\"\"Serialize ``obj`` to a JSON formatted ``str``.\n\n    If ``skipkeys`` is true then ``dict`` keys that are not basic types\n    (``str``, ``int``, ``float``, ``bool``, ``None``) will be skipped\n    instead of raising a ``TypeError``.\n\n    If ``ensure_ascii`` is false, then the return value can contain non-ASCII\n    characters if they appear in strings contained in ``obj``. Otherwise, all\n    such characters are escaped in JSON strings.\n\n    If ``check_circular`` is false, then the circular reference check\n    for container types will be skipped and a circular reference will\n    result in an ``RecursionError`` (or worse).\n\n    If ``allow_nan`` is false, then it will be a ``ValueError`` to\n    serialize out of range ``float`` values (``nan``, ``inf``, ``-inf``) in\n    strict compliance of the JSON specification, instead of using the\n    JavaScript equivalents (``NaN``, ``Infinity``, ``-Infinity``).\n\n    If ``indent`` is a non-negative integer, then JSON array elements and\n    object members will be pretty-printed with that indent level. An indent\n    level of 0 will only insert newlines. ``None`` is the most compact\n    representation.\n\n    If specified, ``separators`` should be an ``(item_separator, key_separator)``\n    tuple.  The default is ``(', ', ': ')`` if *indent* is ``None`` and\n    ``(',', ': ')`` otherwise.  To get the most compact JSON representation,\n    you should specify ``(',', ':')`` to eliminate whitespace.\n\n    ``default(obj)`` is a function that should return a serializable version\n    of obj or raise TypeError. The default simply raises TypeError.\n\n    If *sort_keys* is true (default: ``False``), then the output of\n    dictionaries will be sorted by key.\n\n    To use a custom ``JSONEncoder`` subclass (e.g. one that overrides the\n    ``.default()`` method to serialize additional types), specify it with\n    the ``cls`` kwarg; otherwise ``JSONEncoder`` is used.\n\n    \"\"\"\n    # cached encoder\n    if (not skipkeys and ensure_ascii and\n        check_circular and allow_nan and\n        cls is None and indent is None and separators is None and\n        default is None and not sort_keys and not kw):\n        return _default_encoder.encode(obj)\n    if cls is None:\n        cls = JSONEncoder\n    return cls(\n        skipkeys=skipkeys, ensure_ascii=ensure_ascii,\n        check_circular=check_circular, allow_nan=allow_nan, indent=indent,\n        separators=separators, default=default, sort_keys=sort_keys,\n        **kw).encode(obj)\n\n\n_default_decoder = JSONDecoder(object_hook=None, object_pairs_hook=None)\n\n\ndef detect_encoding(b):\n    bstartswith = b.startswith\n    if bstartswith((codecs.BOM_UTF32_BE, codecs.BOM_UTF32_LE)):\n        return 'utf-32'\n    if bstartswith((codecs.BOM_UTF16_BE, codecs.BOM_UTF16_LE)):\n        return 'utf-16'\n    if bstartswith(codecs.BOM_UTF8):\n        return 'utf-8-sig'\n\n    if len(b) >= 4:\n        if not b[0]:\n            # 00 00 -- -- - utf-32-be\n            # 00 XX -- -- - utf-16-be\n            return 'utf-16-be' if b[1] else 'utf-32-be'\n        if not b[1]:\n            # XX 00 00 00 - utf-32-le\n            # XX 00 00 XX - utf-16-le\n            # XX 00 XX -- - utf-16-le\n            return 'utf-16-le' if b[2] or b[3] else 'utf-32-le'\n    elif len(b) == 2:\n        if not b[0]:\n            # 00 XX - utf-16-be\n            return 'utf-16-be'\n        if not b[1]:\n            # XX 00 - utf-16-le\n            return 'utf-16-le'\n    # default\n    return 'utf-8'\n\n\ndef load(fp, *, cls=None, object_hook=None, parse_float=None,\n        parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n    \"\"\"Deserialize ``fp`` (a ``.read()``-supporting file-like object containing\n    a JSON document) to a Python object.\n\n    ``object_hook`` is an optional function that will be called with the\n    result of any object literal decode (a ``dict``). The return value of\n    ``object_hook`` will be used instead of the ``dict``. This feature\n    can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n\n    ``object_pairs_hook`` is an optional function that will be called with the\n    result of any object literal decoded with an ordered list of pairs.  The\n    return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n    This feature can be used to implement custom decoders.  If ``object_hook``\n    is also defined, the ``object_pairs_hook`` takes priority.\n\n    To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n    kwarg; otherwise ``JSONDecoder`` is used.\n    \"\"\"\n    return loads(fp.read(),\n        cls=cls, object_hook=object_hook,\n        parse_float=parse_float, parse_int=parse_int,\n        parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)\n\n\ndef loads(s, *, cls=None, object_hook=None, parse_float=None,\n        parse_int=None, parse_constant=None, object_pairs_hook=None, **kw):\n    \"\"\"Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance\n    containing a JSON document) to a Python object.\n\n    ``object_hook`` is an optional function that will be called with the\n    result of any object literal decode (a ``dict``). The return value of\n    ``object_hook`` will be used instead of the ``dict``. This feature\n    can be used to implement custom decoders (e.g. JSON-RPC class hinting).\n\n    ``object_pairs_hook`` is an optional function that will be called with the\n    result of any object literal decoded with an ordered list of pairs.  The\n    return value of ``object_pairs_hook`` will be used instead of the ``dict``.\n    This feature can be used to implement custom decoders.  If ``object_hook``\n    is also defined, the ``object_pairs_hook`` takes priority.\n\n    ``parse_float``, if specified, will be called with the string\n    of every JSON float to be decoded. By default this is equivalent to\n    float(num_str). This can be used to use another datatype or parser\n    for JSON floats (e.g. decimal.Decimal).\n\n    ``parse_int``, if specified, will be called with the string\n    of every JSON int to be decoded. By default this is equivalent to\n    int(num_str). This can be used to use another datatype or parser\n    for JSON integers (e.g. float).\n\n    ``parse_constant``, if specified, will be called with one of the\n    following strings: -Infinity, Infinity, NaN.\n    This can be used to raise an exception if invalid JSON numbers\n    are encountered.\n\n    To use a custom ``JSONDecoder`` subclass, specify it with the ``cls``\n    kwarg; otherwise ``JSONDecoder`` is used.\n    \"\"\"\n    if isinstance(s, str):\n        if s.startswith('\\ufeff'):\n            raise JSONDecodeError(\"Unexpected UTF-8 BOM (decode using utf-8-sig)\",\n                                  s, 0)\n    else:\n        if not isinstance(s, (bytes, bytearray)):\n            raise TypeError(f'the JSON object must be str, bytes or bytearray, '\n                            f'not {s.__class__.__name__}')\n        s = s.decode(detect_encoding(s), 'surrogatepass')\n\n    if (cls is None and object_hook is None and\n            parse_int is None and parse_float is None and\n            parse_constant is None and object_pairs_hook is None and not kw):\n        return _default_decoder.decode(s)\n    if cls is None:\n        cls = JSONDecoder\n    if object_hook is not None:\n        kw['object_hook'] = object_hook\n    if object_pairs_hook is not None:\n        kw['object_pairs_hook'] = object_pairs_hook\n    if parse_float is not None:\n        kw['parse_float'] = parse_float\n    if parse_int is not None:\n        kw['parse_int'] = parse_int\n    if parse_constant is not None:\n        kw['parse_constant'] = parse_constant\n    return cls(**kw).decode(s)\n", 359], "C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py": ["import os\nimport os.path\nimport json\nimport geopandas as gpd\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nfrom typing import Tuple, Iterable\nfrom shapely.ops import unary_union\nfrom shapely import Polygon\n\nconfig_path = \"./config.json\"\ncoverage_path = \"./coverage.json\"\n\n\ndef find_s57_within_range(\n        longi: float,\n        lati: float,\n        size: float,\n        debug: bool=False,\n) -> Iterable[str]:\n    s57_candidates = []\n\n    with open(coverage_path, \"r\") as fd:\n        s57_dict = json.loads(fd.read())\n    \n    os_r = size * np.sqrt(2)\n\n    for s57_id in s57_dict.keys():\n        area_longi, area_lati, r = s57_dict[s57_id]\n\n        dist = np.hypot(longi-area_longi, lati-area_lati)\n        if dist <= (os_r + r):\n            s57_candidates.append(s57_id)\n    return s57_candidates\n\n\n\ndef find_s57_within_range_native(\n        longi: float,\n        lati: float,\n        size: float,\n        debug: bool=False,\n) -> Iterable[str]:\n    if debug:\n        fig, ax = plt.subplots()\n\n    s57_candidates = []\n    # create shape for OS coverage\n    os_coverage = Polygon(\n        [\n            (longi+size, lati+size), (longi-size, lati+size),\n            (longi-size, lati-size), (longi+size, lati-size),\n        ]\n    )\n\n    if debug:\n        gpd.GeoSeries(os_coverage).plot(ax=ax, edgecolor='red', facecolor='none')\n\n    # fetch paths for all s57 files within source directory\n    with open(config_path, \"r\") as fd:\n        s57_source = json.load(fd)[\"s57_dir\"]\n\n    s57_file_paths = os.listdir(s57_source)\n    s57_ids = [file_name[:-4] for file_name in s57_file_paths if file_name[-4:] == \".000\"]\n    s57_file_paths = [os.path.join(s57_source, file_name) for file_name in s57_file_paths]\n\n    for s57_id, file_name in zip(s57_ids, s57_file_paths):\n        gdf = gpd.read_file(file_name, layer=\"M_COVR\")\n        union_geom = unary_union(gdf.geometry)\n        convex_hull = union_geom.convex_hull\n\n        if convex_hull.intersects(os_coverage):\n            s57_candidates.append(s57_id)\n            if debug:\n                gpd.GeoSeries(convex_hull).plot(ax=ax, edgecolor='blue', facecolor='none')\n\n    if debug:\n        plt.show()\n    return s57_candidates\n\n\nif __name__ == \"__main__\":\n    s57_candidates = find_s57_within_range_native(\n        longi=120.25, lati=36, size=0.5\n    )\n    print(s57_candidates)\n    s57_candidates = find_s57_within_range(\n        longi=120.25, lati=36, size=0.5\n    )\n    print(s57_candidates)", 90], "C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py": ["# Module 'ntpath' -- common operations on WinNT/Win95 pathnames\n\"\"\"Common pathname manipulations, WindowsNT/95 version.\n\nInstead of importing this module directly, import os and refer to this\nmodule as os.path.\n\"\"\"\n\n# strings representing various path-related bits and pieces\n# These are primarily for export; internally, they are hardcoded.\n# Should be set before imports for resolving cyclic dependency.\ncurdir = '.'\npardir = '..'\nextsep = '.'\nsep = '\\\\'\npathsep = ';'\naltsep = '/'\ndefpath = '.;C:\\\\bin'\ndevnull = 'nul'\n\nimport os\nimport sys\nimport stat\nimport genericpath\nfrom genericpath import *\n\n__all__ = [\"normcase\",\"isabs\",\"join\",\"splitdrive\",\"split\",\"splitext\",\n           \"basename\",\"dirname\",\"commonprefix\",\"getsize\",\"getmtime\",\n           \"getatime\",\"getctime\", \"islink\",\"exists\",\"lexists\",\"isdir\",\"isfile\",\n           \"ismount\", \"expanduser\",\"expandvars\",\"normpath\",\"abspath\",\n           \"curdir\",\"pardir\",\"sep\",\"pathsep\",\"defpath\",\"altsep\",\n           \"extsep\",\"devnull\",\"realpath\",\"supports_unicode_filenames\",\"relpath\",\n           \"samefile\", \"sameopenfile\", \"samestat\", \"commonpath\"]\n\ndef _get_bothseps(path):\n    if isinstance(path, bytes):\n        return b'\\\\/'\n    else:\n        return '\\\\/'\n\n# Normalize the case of a pathname and map slashes to backslashes.\n# Other normalizations (such as optimizing '../' away) are not done\n# (this is done by normpath).\n\ndef normcase(s):\n    \"\"\"Normalize case of pathname.\n\n    Makes all characters lowercase and all slashes into backslashes.\"\"\"\n    s = os.fspath(s)\n    if isinstance(s, bytes):\n        return s.replace(b'/', b'\\\\').lower()\n    else:\n        return s.replace('/', '\\\\').lower()\n\n\n# Return whether a path is absolute.\n# Trivial in Posix, harder on Windows.\n# For Windows it is absolute if it starts with a slash or backslash (current\n# volume), or if a pathname after the volume-letter-and-colon or UNC-resource\n# starts with a slash or backslash.\n\ndef isabs(s):\n    \"\"\"Test whether a path is absolute\"\"\"\n    s = os.fspath(s)\n    # Paths beginning with \\\\?\\ are always absolute, but do not\n    # necessarily contain a drive.\n    if isinstance(s, bytes):\n        if s.replace(b'/', b'\\\\').startswith(b'\\\\\\\\?\\\\'):\n            return True\n    else:\n        if s.replace('/', '\\\\').startswith('\\\\\\\\?\\\\'):\n            return True\n    s = splitdrive(s)[1]\n    return len(s) > 0 and s[0] in _get_bothseps(s)\n\n\n# Join two (or more) paths.\ndef join(path, *paths):\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        sep = b'\\\\'\n        seps = b'\\\\/'\n        colon = b':'\n    else:\n        sep = '\\\\'\n        seps = '\\\\/'\n        colon = ':'\n    try:\n        if not paths:\n            path[:0] + sep  #23780: Ensure compatible data type even if p is null.\n        result_drive, result_path = splitdrive(path)\n        for p in map(os.fspath, paths):\n            p_drive, p_path = splitdrive(p)\n            if p_path and p_path[0] in seps:\n                # Second path is absolute\n                if p_drive or not result_drive:\n                    result_drive = p_drive\n                result_path = p_path\n                continue\n            elif p_drive and p_drive != result_drive:\n                if p_drive.lower() != result_drive.lower():\n                    # Different drives => ignore the first path entirely\n                    result_drive = p_drive\n                    result_path = p_path\n                    continue\n                # Same drive in different case\n                result_drive = p_drive\n            # Second path is relative to the first\n            if result_path and result_path[-1] not in seps:\n                result_path = result_path + sep\n            result_path = result_path + p_path\n        ## add separator between UNC and non-absolute path\n        if (result_path and result_path[0] not in seps and\n            result_drive and result_drive[-1:] != colon):\n            return result_drive + sep + result_path\n        return result_drive + result_path\n    except (TypeError, AttributeError, BytesWarning):\n        genericpath._check_arg_types('join', path, *paths)\n        raise\n\n\n# Split a path in a drive specification (a drive letter followed by a\n# colon) and the path specification.\n# It is always true that drivespec + pathspec == p\ndef splitdrive(p):\n    \"\"\"Split a pathname into drive/UNC sharepoint and relative path specifiers.\n    Returns a 2-tuple (drive_or_unc, path); either part may be empty.\n\n    If you assign\n        result = splitdrive(p)\n    It is always true that:\n        result[0] + result[1] == p\n\n    If the path contained a drive letter, drive_or_unc will contain everything\n    up to and including the colon.  e.g. splitdrive(\"c:/dir\") returns (\"c:\", \"/dir\")\n\n    If the path contained a UNC path, the drive_or_unc will contain the host name\n    and share up to but not including the fourth directory separator character.\n    e.g. splitdrive(\"//host/computer/dir\") returns (\"//host/computer\", \"/dir\")\n\n    Paths cannot contain both a drive letter and a UNC path.\n\n    \"\"\"\n    p = os.fspath(p)\n    if len(p) >= 2:\n        if isinstance(p, bytes):\n            sep = b'\\\\'\n            altsep = b'/'\n            colon = b':'\n        else:\n            sep = '\\\\'\n            altsep = '/'\n            colon = ':'\n        normp = p.replace(altsep, sep)\n        if (normp[0:2] == sep*2) and (normp[2:3] != sep):\n            # is a UNC path:\n            # vvvvvvvvvvvvvvvvvvvv drive letter or UNC path\n            # \\\\machine\\mountpoint\\directory\\etc\\...\n            #           directory ^^^^^^^^^^^^^^^\n            index = normp.find(sep, 2)\n            if index == -1:\n                return p[:0], p\n            index2 = normp.find(sep, index + 1)\n            # a UNC path can't have two slashes in a row\n            # (after the initial two)\n            if index2 == index + 1:\n                return p[:0], p\n            if index2 == -1:\n                index2 = len(p)\n            return p[:index2], p[index2:]\n        if normp[1:2] == colon:\n            return p[:2], p[2:]\n    return p[:0], p\n\n\n# Split a path in head (everything up to the last '/') and tail (the\n# rest).  After the trailing '/' is stripped, the invariant\n# join(head, tail) == p holds.\n# The resulting head won't end in '/' unless it is the root.\n\ndef split(p):\n    \"\"\"Split a pathname.\n\n    Return tuple (head, tail) where tail is everything after the final slash.\n    Either part may be empty.\"\"\"\n    p = os.fspath(p)\n    seps = _get_bothseps(p)\n    d, p = splitdrive(p)\n    # set i to index beyond p's last slash\n    i = len(p)\n    while i and p[i-1] not in seps:\n        i -= 1\n    head, tail = p[:i], p[i:]  # now tail has no slashes\n    # remove trailing slashes from head, unless it's all slashes\n    head = head.rstrip(seps) or head\n    return d + head, tail\n\n\n# Split a path in root and extension.\n# The extension is everything starting at the last dot in the last\n# pathname component; the root is everything before that.\n# It is always true that root + ext == p.\n\ndef splitext(p):\n    p = os.fspath(p)\n    if isinstance(p, bytes):\n        return genericpath._splitext(p, b'\\\\', b'/', b'.')\n    else:\n        return genericpath._splitext(p, '\\\\', '/', '.')\nsplitext.__doc__ = genericpath._splitext.__doc__\n\n\n# Return the tail (basename) part of a path.\n\ndef basename(p):\n    \"\"\"Returns the final component of a pathname\"\"\"\n    return split(p)[1]\n\n\n# Return the head (dirname) part of a path.\n\ndef dirname(p):\n    \"\"\"Returns the directory component of a pathname\"\"\"\n    return split(p)[0]\n\n# Is a path a symbolic link?\n# This will always return false on systems where os.lstat doesn't exist.\n\ndef islink(path):\n    \"\"\"Test whether a path is a symbolic link.\n    This will always return false for Windows prior to 6.0.\n    \"\"\"\n    try:\n        st = os.lstat(path)\n    except (OSError, ValueError, AttributeError):\n        return False\n    return stat.S_ISLNK(st.st_mode)\n\n# Being true for dangling symbolic links is also useful.\n\ndef lexists(path):\n    \"\"\"Test whether a path exists.  Returns True for broken symbolic links\"\"\"\n    try:\n        st = os.lstat(path)\n    except (OSError, ValueError):\n        return False\n    return True\n\n# Is a path a mount point?\n# Any drive letter root (eg c:\\)\n# Any share UNC (eg \\\\server\\share)\n# Any volume mounted on a filesystem folder\n#\n# No one method detects all three situations. Historically we've lexically\n# detected drive letter roots and share UNCs. The canonical approach to\n# detecting mounted volumes (querying the reparse tag) fails for the most\n# common case: drive letter roots. The alternative which uses GetVolumePathName\n# fails if the drive letter is the result of a SUBST.\ntry:\n    from nt import _getvolumepathname\nexcept ImportError:\n    _getvolumepathname = None\ndef ismount(path):\n    \"\"\"Test whether a path is a mount point (a drive root, the root of a\n    share, or a mounted volume)\"\"\"\n    path = os.fspath(path)\n    seps = _get_bothseps(path)\n    path = abspath(path)\n    root, rest = splitdrive(path)\n    if root and root[0] in seps:\n        return (not rest) or (rest in seps)\n    if rest in seps:\n        return True\n\n    if _getvolumepathname:\n        return path.rstrip(seps) == _getvolumepathname(path).rstrip(seps)\n    else:\n        return False\n\n\n# Expand paths beginning with '~' or '~user'.\n# '~' means $HOME; '~user' means that user's home directory.\n# If the path doesn't begin with '~', or if the user or $HOME is unknown,\n# the path is returned unchanged (leaving error reporting to whatever\n# function is called with the expanded path as argument).\n# See also module 'glob' for expansion of *, ? and [...] in pathnames.\n# (A function should also be defined to do full *sh-style environment\n# variable expansion.)\n\ndef expanduser(path):\n    \"\"\"Expand ~ and ~user constructs.\n\n    If user or $HOME is unknown, do nothing.\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        tilde = b'~'\n    else:\n        tilde = '~'\n    if not path.startswith(tilde):\n        return path\n    i, n = 1, len(path)\n    while i < n and path[i] not in _get_bothseps(path):\n        i += 1\n\n    if 'USERPROFILE' in os.environ:\n        userhome = os.environ['USERPROFILE']\n    elif not 'HOMEPATH' in os.environ:\n        return path\n    else:\n        try:\n            drive = os.environ['HOMEDRIVE']\n        except KeyError:\n            drive = ''\n        userhome = join(drive, os.environ['HOMEPATH'])\n\n    if isinstance(path, bytes):\n        userhome = os.fsencode(userhome)\n\n    if i != 1: #~user\n        userhome = join(dirname(userhome), path[1:i])\n\n    return userhome + path[i:]\n\n\n# Expand paths containing shell variable substitutions.\n# The following rules apply:\n#       - no expansion within single quotes\n#       - '$$' is translated into '$'\n#       - '%%' is translated into '%' if '%%' are not seen in %var1%%var2%\n#       - ${varname} is accepted.\n#       - $varname is accepted.\n#       - %varname% is accepted.\n#       - varnames can be made out of letters, digits and the characters '_-'\n#         (though is not verified in the ${varname} and %varname% cases)\n# XXX With COMMAND.COM you can use any characters in a variable name,\n# XXX except '^|<>='.\n\ndef expandvars(path):\n    \"\"\"Expand shell variables of the forms $var, ${var} and %var%.\n\n    Unknown variables are left unchanged.\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        if b'$' not in path and b'%' not in path:\n            return path\n        import string\n        varchars = bytes(string.ascii_letters + string.digits + '_-', 'ascii')\n        quote = b'\\''\n        percent = b'%'\n        brace = b'{'\n        rbrace = b'}'\n        dollar = b'$'\n        environ = getattr(os, 'environb', None)\n    else:\n        if '$' not in path and '%' not in path:\n            return path\n        import string\n        varchars = string.ascii_letters + string.digits + '_-'\n        quote = '\\''\n        percent = '%'\n        brace = '{'\n        rbrace = '}'\n        dollar = '$'\n        environ = os.environ\n    res = path[:0]\n    index = 0\n    pathlen = len(path)\n    while index < pathlen:\n        c = path[index:index+1]\n        if c == quote:   # no expansion within single quotes\n            path = path[index + 1:]\n            pathlen = len(path)\n            try:\n                index = path.index(c)\n                res += c + path[:index + 1]\n            except ValueError:\n                res += c + path\n                index = pathlen - 1\n        elif c == percent:  # variable or '%'\n            if path[index + 1:index + 2] == percent:\n                res += c\n                index += 1\n            else:\n                path = path[index+1:]\n                pathlen = len(path)\n                try:\n                    index = path.index(percent)\n                except ValueError:\n                    res += percent + path\n                    index = pathlen - 1\n                else:\n                    var = path[:index]\n                    try:\n                        if environ is None:\n                            value = os.fsencode(os.environ[os.fsdecode(var)])\n                        else:\n                            value = environ[var]\n                    except KeyError:\n                        value = percent + var + percent\n                    res += value\n        elif c == dollar:  # variable or '$$'\n            if path[index + 1:index + 2] == dollar:\n                res += c\n                index += 1\n            elif path[index + 1:index + 2] == brace:\n                path = path[index+2:]\n                pathlen = len(path)\n                try:\n                    index = path.index(rbrace)\n                except ValueError:\n                    res += dollar + brace + path\n                    index = pathlen - 1\n                else:\n                    var = path[:index]\n                    try:\n                        if environ is None:\n                            value = os.fsencode(os.environ[os.fsdecode(var)])\n                        else:\n                            value = environ[var]\n                    except KeyError:\n                        value = dollar + brace + var + rbrace\n                    res += value\n            else:\n                var = path[:0]\n                index += 1\n                c = path[index:index + 1]\n                while c and c in varchars:\n                    var += c\n                    index += 1\n                    c = path[index:index + 1]\n                try:\n                    if environ is None:\n                        value = os.fsencode(os.environ[os.fsdecode(var)])\n                    else:\n                        value = environ[var]\n                except KeyError:\n                    value = dollar + var\n                res += value\n                if c:\n                    index -= 1\n        else:\n            res += c\n        index += 1\n    return res\n\n\n# Normalize a path, e.g. A//B, A/./B and A/foo/../B all become A\\B.\n# Previously, this function also truncated pathnames to 8+3 format,\n# but as this module is called \"ntpath\", that's obviously wrong!\n\ndef normpath(path):\n    \"\"\"Normalize path, eliminating double slashes, etc.\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        sep = b'\\\\'\n        altsep = b'/'\n        curdir = b'.'\n        pardir = b'..'\n        special_prefixes = (b'\\\\\\\\.\\\\', b'\\\\\\\\?\\\\')\n    else:\n        sep = '\\\\'\n        altsep = '/'\n        curdir = '.'\n        pardir = '..'\n        special_prefixes = ('\\\\\\\\.\\\\', '\\\\\\\\?\\\\')\n    if path.startswith(special_prefixes):\n        # in the case of paths with these prefixes:\n        # \\\\.\\ -> device names\n        # \\\\?\\ -> literal paths\n        # do not do any normalization, but return the path\n        # unchanged apart from the call to os.fspath()\n        return path\n    path = path.replace(altsep, sep)\n    prefix, path = splitdrive(path)\n\n    # collapse initial backslashes\n    if path.startswith(sep):\n        prefix += sep\n        path = path.lstrip(sep)\n\n    comps = path.split(sep)\n    i = 0\n    while i < len(comps):\n        if not comps[i] or comps[i] == curdir:\n            del comps[i]\n        elif comps[i] == pardir:\n            if i > 0 and comps[i-1] != pardir:\n                del comps[i-1:i+1]\n                i -= 1\n            elif i == 0 and prefix.endswith(sep):\n                del comps[i]\n            else:\n                i += 1\n        else:\n            i += 1\n    # If the path is now empty, substitute '.'\n    if not prefix and not comps:\n        comps.append(curdir)\n    return prefix + sep.join(comps)\n\ndef _abspath_fallback(path):\n    \"\"\"Return the absolute version of a path as a fallback function in case\n    `nt._getfullpathname` is not available or raises OSError. See bpo-31047 for\n    more.\n\n    \"\"\"\n\n    path = os.fspath(path)\n    if not isabs(path):\n        if isinstance(path, bytes):\n            cwd = os.getcwdb()\n        else:\n            cwd = os.getcwd()\n        path = join(cwd, path)\n    return normpath(path)\n\n# Return an absolute path.\ntry:\n    from nt import _getfullpathname\n\nexcept ImportError: # not running on Windows - mock up something sensible\n    abspath = _abspath_fallback\n\nelse:  # use native Windows method on Windows\n    def abspath(path):\n        \"\"\"Return the absolute version of a path.\"\"\"\n        try:\n            return normpath(_getfullpathname(path))\n        except (OSError, ValueError):\n            return _abspath_fallback(path)\n\ntry:\n    from nt import _getfinalpathname, readlink as _nt_readlink\nexcept ImportError:\n    # realpath is a no-op on systems without _getfinalpathname support.\n    realpath = abspath\nelse:\n    def _readlink_deep(path):\n        # These error codes indicate that we should stop reading links and\n        # return the path we currently have.\n        # 1: ERROR_INVALID_FUNCTION\n        # 2: ERROR_FILE_NOT_FOUND\n        # 3: ERROR_DIRECTORY_NOT_FOUND\n        # 5: ERROR_ACCESS_DENIED\n        # 21: ERROR_NOT_READY (implies drive with no media)\n        # 32: ERROR_SHARING_VIOLATION (probably an NTFS paging file)\n        # 50: ERROR_NOT_SUPPORTED (implies no support for reparse points)\n        # 67: ERROR_BAD_NET_NAME (implies remote server unavailable)\n        # 87: ERROR_INVALID_PARAMETER\n        # 4390: ERROR_NOT_A_REPARSE_POINT\n        # 4392: ERROR_INVALID_REPARSE_DATA\n        # 4393: ERROR_REPARSE_TAG_INVALID\n        allowed_winerror = 1, 2, 3, 5, 21, 32, 50, 67, 87, 4390, 4392, 4393\n\n        seen = set()\n        while normcase(path) not in seen:\n            seen.add(normcase(path))\n            try:\n                old_path = path\n                path = _nt_readlink(path)\n                # Links may be relative, so resolve them against their\n                # own location\n                if not isabs(path):\n                    # If it's something other than a symlink, we don't know\n                    # what it's actually going to be resolved against, so\n                    # just return the old path.\n                    if not islink(old_path):\n                        path = old_path\n                        break\n                    path = normpath(join(dirname(old_path), path))\n            except OSError as ex:\n                if ex.winerror in allowed_winerror:\n                    break\n                raise\n            except ValueError:\n                # Stop on reparse points that are not symlinks\n                break\n        return path\n\n    def _getfinalpathname_nonstrict(path):\n        # These error codes indicate that we should stop resolving the path\n        # and return the value we currently have.\n        # 1: ERROR_INVALID_FUNCTION\n        # 2: ERROR_FILE_NOT_FOUND\n        # 3: ERROR_DIRECTORY_NOT_FOUND\n        # 5: ERROR_ACCESS_DENIED\n        # 21: ERROR_NOT_READY (implies drive with no media)\n        # 32: ERROR_SHARING_VIOLATION (probably an NTFS paging file)\n        # 50: ERROR_NOT_SUPPORTED\n        # 67: ERROR_BAD_NET_NAME (implies remote server unavailable)\n        # 87: ERROR_INVALID_PARAMETER\n        # 123: ERROR_INVALID_NAME\n        # 1920: ERROR_CANT_ACCESS_FILE\n        # 1921: ERROR_CANT_RESOLVE_FILENAME (implies unfollowable symlink)\n        allowed_winerror = 1, 2, 3, 5, 21, 32, 50, 67, 87, 123, 1920, 1921\n\n        # Non-strict algorithm is to find as much of the target directory\n        # as we can and join the rest.\n        tail = ''\n        while path:\n            try:\n                path = _getfinalpathname(path)\n                return join(path, tail) if tail else path\n            except OSError as ex:\n                if ex.winerror not in allowed_winerror:\n                    raise\n                try:\n                    # The OS could not resolve this path fully, so we attempt\n                    # to follow the link ourselves. If we succeed, join the tail\n                    # and return.\n                    new_path = _readlink_deep(path)\n                    if new_path != path:\n                        return join(new_path, tail) if tail else new_path\n                except OSError:\n                    # If we fail to readlink(), let's keep traversing\n                    pass\n                path, name = split(path)\n                # TODO (bpo-38186): Request the real file name from the directory\n                # entry using FindFirstFileW. For now, we will return the path\n                # as best we have it\n                if path and not name:\n                    return path + tail\n                tail = join(name, tail) if tail else name\n        return tail\n\n    def realpath(path):\n        path = normpath(path)\n        if isinstance(path, bytes):\n            prefix = b'\\\\\\\\?\\\\'\n            unc_prefix = b'\\\\\\\\?\\\\UNC\\\\'\n            new_unc_prefix = b'\\\\\\\\'\n            cwd = os.getcwdb()\n            # bpo-38081: Special case for realpath(b'nul')\n            if normcase(path) == normcase(os.fsencode(devnull)):\n                return b'\\\\\\\\.\\\\NUL'\n        else:\n            prefix = '\\\\\\\\?\\\\'\n            unc_prefix = '\\\\\\\\?\\\\UNC\\\\'\n            new_unc_prefix = '\\\\\\\\'\n            cwd = os.getcwd()\n            # bpo-38081: Special case for realpath('nul')\n            if normcase(path) == normcase(devnull):\n                return '\\\\\\\\.\\\\NUL'\n        had_prefix = path.startswith(prefix)\n        if not had_prefix and not isabs(path):\n            path = join(cwd, path)\n        try:\n            path = _getfinalpathname(path)\n            initial_winerror = 0\n        except OSError as ex:\n            initial_winerror = ex.winerror\n            path = _getfinalpathname_nonstrict(path)\n        # The path returned by _getfinalpathname will always start with \\\\?\\ -\n        # strip off that prefix unless it was already provided on the original\n        # path.\n        if not had_prefix and path.startswith(prefix):\n            # For UNC paths, the prefix will actually be \\\\?\\UNC\\\n            # Handle that case as well.\n            if path.startswith(unc_prefix):\n                spath = new_unc_prefix + path[len(unc_prefix):]\n            else:\n                spath = path[len(prefix):]\n            # Ensure that the non-prefixed path resolves to the same path\n            try:\n                if _getfinalpathname(spath) == path:\n                    path = spath\n            except OSError as ex:\n                # If the path does not exist and originally did not exist, then\n                # strip the prefix anyway.\n                if ex.winerror == initial_winerror:\n                    path = spath\n        return path\n\n\n# Win9x family and earlier have no Unicode filename support.\nsupports_unicode_filenames = (hasattr(sys, \"getwindowsversion\") and\n                              sys.getwindowsversion()[3] >= 2)\n\ndef relpath(path, start=None):\n    \"\"\"Return a relative version of a path\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        sep = b'\\\\'\n        curdir = b'.'\n        pardir = b'..'\n    else:\n        sep = '\\\\'\n        curdir = '.'\n        pardir = '..'\n\n    if start is None:\n        start = curdir\n\n    if not path:\n        raise ValueError(\"no path specified\")\n\n    start = os.fspath(start)\n    try:\n        start_abs = abspath(normpath(start))\n        path_abs = abspath(normpath(path))\n        start_drive, start_rest = splitdrive(start_abs)\n        path_drive, path_rest = splitdrive(path_abs)\n        if normcase(start_drive) != normcase(path_drive):\n            raise ValueError(\"path is on mount %r, start on mount %r\" % (\n                path_drive, start_drive))\n\n        start_list = [x for x in start_rest.split(sep) if x]\n        path_list = [x for x in path_rest.split(sep) if x]\n        # Work out how much of the filepath is shared by start and path.\n        i = 0\n        for e1, e2 in zip(start_list, path_list):\n            if normcase(e1) != normcase(e2):\n                break\n            i += 1\n\n        rel_list = [pardir] * (len(start_list)-i) + path_list[i:]\n        if not rel_list:\n            return curdir\n        return join(*rel_list)\n    except (TypeError, ValueError, AttributeError, BytesWarning, DeprecationWarning):\n        genericpath._check_arg_types('relpath', path, start)\n        raise\n\n\n# Return the longest common sub-path of the sequence of paths given as input.\n# The function is case-insensitive and 'separator-insensitive', i.e. if the\n# only difference between two paths is the use of '\\' versus '/' as separator,\n# they are deemed to be equal.\n#\n# However, the returned path will have the standard '\\' separator (even if the\n# given paths had the alternative '/' separator) and will have the case of the\n# first path given in the sequence. Additionally, any trailing separator is\n# stripped from the returned path.\n\ndef commonpath(paths):\n    \"\"\"Given a sequence of path names, returns the longest common sub-path.\"\"\"\n\n    if not paths:\n        raise ValueError('commonpath() arg is an empty sequence')\n\n    paths = tuple(map(os.fspath, paths))\n    if isinstance(paths[0], bytes):\n        sep = b'\\\\'\n        altsep = b'/'\n        curdir = b'.'\n    else:\n        sep = '\\\\'\n        altsep = '/'\n        curdir = '.'\n\n    try:\n        drivesplits = [splitdrive(p.replace(altsep, sep).lower()) for p in paths]\n        split_paths = [p.split(sep) for d, p in drivesplits]\n\n        try:\n            isabs, = set(p[:1] == sep for d, p in drivesplits)\n        except ValueError:\n            raise ValueError(\"Can't mix absolute and relative paths\") from None\n\n        # Check that all drive letters or UNC paths match. The check is made only\n        # now otherwise type errors for mixing strings and bytes would not be\n        # caught.\n        if len(set(d for d, p in drivesplits)) != 1:\n            raise ValueError(\"Paths don't have the same drive\")\n\n        drive, path = splitdrive(paths[0].replace(altsep, sep))\n        common = path.split(sep)\n        common = [c for c in common if c and c != curdir]\n\n        split_paths = [[c for c in s if c and c != curdir] for s in split_paths]\n        s1 = min(split_paths)\n        s2 = max(split_paths)\n        for i, c in enumerate(s1):\n            if c != s2[i]:\n                common = common[:i]\n                break\n        else:\n            common = common[:len(s1)]\n\n        prefix = drive + sep if isabs else drive\n        return prefix + sep.join(common)\n    except (TypeError, AttributeError):\n        genericpath._check_arg_types('commonpath', *paths)\n        raise\n\n\ntry:\n    # The genericpath.isdir implementation uses os.stat and checks the mode\n    # attribute to tell whether or not the path is a directory.\n    # This is overkill on Windows - just pass the path to GetFileAttributes\n    # and check the attribute from there.\n    from nt import _isdir as isdir\nexcept ImportError:\n    # Use genericpath.isdir as imported above.\n    pass\n", 794], "C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py": ["from __future__ import annotations\n\nimport os\nimport urllib.request\nimport warnings\nfrom io import IOBase\nfrom packaging.version import Version\nfrom pathlib import Path\n\n# Adapted from pandas.io.common\nfrom urllib.parse import urlparse as parse_url\nfrom urllib.parse import uses_netloc, uses_params, uses_relative\n\nimport numpy as np\nimport pandas as pd\nfrom pandas.api.types import is_integer_dtype\n\nimport shapely\nfrom shapely.geometry import mapping\nfrom shapely.geometry.base import BaseGeometry\n\nfrom geopandas import GeoDataFrame, GeoSeries\nfrom geopandas._compat import HAS_PYPROJ, PANDAS_GE_20\nfrom geopandas.io.util import vsi_path\n\n_VALID_URLS = set(uses_relative + uses_netloc + uses_params)\n_VALID_URLS.discard(\"\")\n# file:// URIs are supported by fiona/pyogrio -> don't already open + read the file here\n_VALID_URLS.discard(\"file\")\n\nfiona = None\nfiona_env = None\nfiona_import_error = None\nFIONA_GE_19 = False\n\n\ndef _import_fiona():\n    global fiona\n    global fiona_env\n    global fiona_import_error\n    global FIONA_GE_19\n\n    if fiona is None:\n        try:\n            import fiona\n\n            # only try to import fiona.Env if the main fiona import succeeded\n            # (otherwise you can get confusing \"AttributeError: module 'fiona'\n            # has no attribute '_loading'\" / partially initialized module errors)\n            try:\n                from fiona import Env as fiona_env\n            except ImportError:\n                try:\n                    from fiona import drivers as fiona_env\n                except ImportError:\n                    fiona_env = None\n\n            FIONA_GE_19 = Version(Version(fiona.__version__).base_version) >= Version(\n                \"1.9.0\"\n            )\n\n        except ImportError as err:\n            fiona = False\n            fiona_import_error = str(err)\n\n\npyogrio = None\npyogrio_import_error = None\n\n\ndef _import_pyogrio():\n    global pyogrio\n    global pyogrio_import_error\n\n    if pyogrio is None:\n        try:\n            import pyogrio\n\n        except ImportError as err:\n            pyogrio = False\n            pyogrio_import_error = str(err)\n\n\ndef _check_fiona(func):\n    if not fiona:\n        raise ImportError(\n            f\"the {func} requires the 'fiona' package, but it is not installed or does \"\n            f\"not import correctly.\\nImporting fiona resulted in: {fiona_import_error}\"\n        )\n\n\ndef _check_pyogrio(func):\n    if not pyogrio:\n        raise ImportError(\n            f\"the {func} requires the 'pyogrio' package, but it is not installed \"\n            \"or does not import correctly.\"\n            \"\\nImporting pyogrio resulted in: {pyogrio_import_error}\"\n        )\n\n\ndef _check_metadata_supported(metadata: str | None, engine: str, driver: str) -> None:\n    if metadata is None:\n        return\n    if driver != \"GPKG\":\n        raise NotImplementedError(\n            \"The 'metadata' keyword is only supported for the GPKG driver.\"\n        )\n\n    if engine == \"fiona\" and not FIONA_GE_19:\n        raise NotImplementedError(\n            \"The 'metadata' keyword is only supported for Fiona >= 1.9.\"\n        )\n\n\ndef _check_engine(engine, func):\n    # if not specified through keyword or option, then default to \"pyogrio\" if\n    # installed, otherwise try fiona\n    if engine is None:\n        import geopandas\n\n        engine = geopandas.options.io_engine\n\n    if engine is None:\n        _import_pyogrio()\n        if pyogrio:\n            engine = \"pyogrio\"\n        else:\n            _import_fiona()\n            if fiona:\n                engine = \"fiona\"\n\n    if engine == \"pyogrio\":\n        _import_pyogrio()\n        _check_pyogrio(func)\n    elif engine == \"fiona\":\n        _import_fiona()\n        _check_fiona(func)\n    elif engine is None:\n        raise ImportError(\n            f\"The {func} requires the 'pyogrio' or 'fiona' package, \"\n            \"but neither is installed or imports correctly.\"\n            f\"\\nImporting pyogrio resulted in: {pyogrio_import_error}\"\n            f\"\\nImporting fiona resulted in: {fiona_import_error}\"\n        )\n\n    return engine\n\n\n_EXTENSION_TO_DRIVER = {\n    \".bna\": \"BNA\",\n    \".dxf\": \"DXF\",\n    \".csv\": \"CSV\",\n    \".shp\": \"ESRI Shapefile\",\n    \".dbf\": \"ESRI Shapefile\",\n    \".json\": \"GeoJSON\",\n    \".geojson\": \"GeoJSON\",\n    \".geojsonl\": \"GeoJSONSeq\",\n    \".geojsons\": \"GeoJSONSeq\",\n    \".gpkg\": \"GPKG\",\n    \".gml\": \"GML\",\n    \".xml\": \"GML\",\n    \".gpx\": \"GPX\",\n    \".gtm\": \"GPSTrackMaker\",\n    \".gtz\": \"GPSTrackMaker\",\n    \".tab\": \"MapInfo File\",\n    \".mif\": \"MapInfo File\",\n    \".mid\": \"MapInfo File\",\n    \".dgn\": \"DGN\",\n    \".fgb\": \"FlatGeobuf\",\n}\n\n\ndef _expand_user(path):\n    \"\"\"Expand paths that use ~.\"\"\"\n    if isinstance(path, str):\n        path = os.path.expanduser(path)\n    elif isinstance(path, Path):\n        path = path.expanduser()\n    return path\n\n\ndef _is_url(url):\n    \"\"\"Check to see if *url* has a valid protocol.\"\"\"\n    try:\n        return parse_url(url).scheme in _VALID_URLS\n    except Exception:\n        return False\n\n\ndef _read_file(\n    filename, bbox=None, mask=None, columns=None, rows=None, engine=None, **kwargs\n):\n    \"\"\"\n    Returns a GeoDataFrame from a file or URL.\n\n    Parameters\n    ----------\n    filename : str, path object or file-like object\n        Either the absolute or relative path to the file or URL to\n        be opened, or any object with a read() method (such as an open file\n        or StringIO)\n    bbox : tuple | GeoDataFrame or GeoSeries | shapely Geometry, default None\n        Filter features by given bounding box, GeoSeries, GeoDataFrame or a shapely\n        geometry. With engine=\"fiona\", CRS mis-matches are resolved if given a GeoSeries\n        or GeoDataFrame. With engine=\"pyogrio\", bbox must be in the same CRS as the\n        dataset. Tuple is (minx, miny, maxx, maxy) to match the bounds property of\n        shapely geometry objects. Cannot be used with mask.\n    mask : dict | GeoDataFrame or GeoSeries | shapely Geometry, default None\n        Filter for features that intersect with the given dict-like geojson\n        geometry, GeoSeries, GeoDataFrame or shapely geometry.\n        CRS mis-matches are resolved if given a GeoSeries or GeoDataFrame.\n        Cannot be used with bbox. If multiple geometries are passed, this will\n        first union all geometries, which may be computationally expensive.\n    columns : list, optional\n        List of column names to import from the data source. Column names\n        must exactly match the names in the data source. To avoid reading\n        any columns (besides the geometry column), pass an empty list-like.\n        By default reads all columns.\n    rows : int or slice, default None\n        Load in specific rows by passing an integer (first `n` rows) or a\n        slice() object.\n    engine : str,  \"pyogrio\" or \"fiona\"\n        The underlying library that is used to read the file. Currently, the\n        supported options are \"pyogrio\" and \"fiona\". Defaults to \"pyogrio\" if\n        installed, otherwise tries \"fiona\". Engine can also be set globally\n        with the ``geopandas.options.io_engine`` option.\n    **kwargs :\n        Keyword args to be passed to the engine, and can be used to write\n        to multi-layer data, store data within archives (zip files), etc.\n        In case of the \"pyogrio\" engine, the keyword arguments are passed to\n        `pyogrio.write_dataframe`. In case of the \"fiona\" engine, the keyword\n        arguments are passed to fiona.open`. For more information on possible\n        keywords, type: ``import pyogrio; help(pyogrio.write_dataframe)``.\n\n\n    Examples\n    --------\n    >>> df = geopandas.read_file(\"nybb.shp\")  # doctest: +SKIP\n\n    Specifying layer of GPKG:\n\n    >>> df = geopandas.read_file(\"file.gpkg\", layer='cities')  # doctest: +SKIP\n\n    Reading only first 10 rows:\n\n    >>> df = geopandas.read_file(\"nybb.shp\", rows=10)  # doctest: +SKIP\n\n    Reading only geometries intersecting ``mask``:\n\n    >>> df = geopandas.read_file(\"nybb.shp\", mask=polygon)  # doctest: +SKIP\n\n    Reading only geometries intersecting ``bbox``:\n\n    >>> df = geopandas.read_file(\"nybb.shp\", bbox=(0, 0, 10, 20))  # doctest: +SKIP\n\n    Returns\n    -------\n    :obj:`geopandas.GeoDataFrame` or :obj:`pandas.DataFrame` :\n        If `ignore_geometry=True` a :obj:`pandas.DataFrame` will be returned.\n\n    Notes\n    -----\n    The format drivers will attempt to detect the encoding of your data, but\n    may fail. In this case, the proper encoding can be specified explicitly\n    by using the encoding keyword parameter, e.g. ``encoding='utf-8'``.\n\n    When specifying a URL, geopandas will check if the server supports reading\n    partial data and in that case pass the URL as is to the underlying engine,\n    which will then use the network file system handler of GDAL to read from\n    the URL. Otherwise geopandas will download the data from the URL and pass\n    all data in-memory to the underlying engine.\n    If you need more control over how the URL is read, you can specify the\n    GDAL virtual filesystem manually (e.g. ``/vsicurl/https://...``). See the\n    GDAL documentation on filesystems for more details\n    (https://gdal.org/user/virtual_file_systems.html#vsicurl-http-https-ftp-files-random-access).\n\n    \"\"\"\n    engine = _check_engine(engine, \"'read_file' function\")\n\n    filename = _expand_user(filename)\n\n    from_bytes = False\n    if _is_url(filename):\n        # if it is a url that supports random access -> pass through to\n        # pyogrio/fiona as is (to support downloading only part of the file)\n        # otherwise still download manually because pyogrio/fiona don't support\n        # all types of urls (https://github.com/geopandas/geopandas/issues/2908)\n        with urllib.request.urlopen(filename) as response:\n            if not response.headers.get(\"Accept-Ranges\") == \"bytes\":\n                filename = response.read()\n                from_bytes = True\n\n    if engine == \"pyogrio\":\n        return _read_file_pyogrio(\n            filename, bbox=bbox, mask=mask, columns=columns, rows=rows, **kwargs\n        )\n\n    elif engine == \"fiona\":\n        if pd.api.types.is_file_like(filename):\n            data = filename.read()\n            path_or_bytes = data.encode(\"utf-8\") if isinstance(data, str) else data\n            from_bytes = True\n        else:\n            path_or_bytes = filename\n\n        return _read_file_fiona(\n            path_or_bytes,\n            from_bytes,\n            bbox=bbox,\n            mask=mask,\n            columns=columns,\n            rows=rows,\n            **kwargs,\n        )\n\n    else:\n        raise ValueError(f\"unknown engine '{engine}'\")\n\n\ndef _read_file_fiona(\n    path_or_bytes,\n    from_bytes,\n    bbox=None,\n    mask=None,\n    columns=None,\n    rows=None,\n    where=None,\n    **kwargs,\n):\n    if where is not None and not FIONA_GE_19:\n        raise NotImplementedError(\"where requires fiona 1.9+\")\n\n    if columns is not None:\n        if \"include_fields\" in kwargs:\n            raise ValueError(\n                \"Cannot specify both 'include_fields' and 'columns' keywords\"\n            )\n        if not FIONA_GE_19:\n            raise NotImplementedError(\"'columns' keyword requires fiona 1.9+\")\n        kwargs[\"include_fields\"] = columns\n    elif \"include_fields\" in kwargs:\n        # alias to columns, as this variable is used below to specify column order\n        # in the dataframe creation\n        columns = kwargs[\"include_fields\"]\n\n    if not from_bytes:\n        # Opening a file via URL or file-like-object above automatically detects a\n        # zipped file. In order to match that behavior, attempt to add a zip scheme\n        # if missing.\n        path_or_bytes = vsi_path(str(path_or_bytes))\n\n    if from_bytes:\n        reader = fiona.BytesCollection\n    else:\n        reader = fiona.open\n\n    with fiona_env():\n        with reader(path_or_bytes, **kwargs) as features:\n            crs = features.crs_wkt\n            # attempt to get EPSG code\n            try:\n                # fiona 1.9+\n                epsg = features.crs.to_epsg(confidence_threshold=100)\n                if epsg is not None:\n                    crs = epsg\n            except AttributeError:\n                # fiona <= 1.8\n                try:\n                    crs = features.crs[\"init\"]\n                except (TypeError, KeyError):\n                    pass\n\n            # handle loading the bounding box\n            if bbox is not None:\n                if isinstance(bbox, (GeoDataFrame, GeoSeries)):\n                    bbox = tuple(bbox.to_crs(crs).total_bounds)\n                elif isinstance(bbox, BaseGeometry):\n                    bbox = bbox.bounds\n                assert len(bbox) == 4\n            # handle loading the mask\n            elif isinstance(mask, (GeoDataFrame, GeoSeries)):\n                mask = mapping(mask.to_crs(crs).union_all())\n            elif isinstance(mask, BaseGeometry):\n                mask = mapping(mask)\n\n            filters = {}\n            if bbox is not None:\n                filters[\"bbox\"] = bbox\n            if mask is not None:\n                filters[\"mask\"] = mask\n            if where is not None:\n                filters[\"where\"] = where\n\n            # setup the data loading filter\n            if rows is not None:\n                if isinstance(rows, int):\n                    rows = slice(rows)\n                elif not isinstance(rows, slice):\n                    raise TypeError(\"'rows' must be an integer or a slice.\")\n                f_filt = features.filter(rows.start, rows.stop, rows.step, **filters)\n            elif filters:\n                f_filt = features.filter(**filters)\n            else:\n                f_filt = features\n            # get list of columns\n            columns = columns or list(features.schema[\"properties\"])\n            datetime_fields = [\n                k for (k, v) in features.schema[\"properties\"].items() if v == \"datetime\"\n            ]\n            if (\n                kwargs.get(\"ignore_geometry\", False)\n                or features.schema[\"geometry\"] == \"None\"\n            ):\n                df = pd.DataFrame(\n                    [record[\"properties\"] for record in f_filt], columns=columns\n                )\n            else:\n                df = GeoDataFrame.from_features(\n                    f_filt, crs=crs, columns=columns + [\"geometry\"]\n                )\n            for k in datetime_fields:\n                as_dt = None\n                # plain try catch for when pandas will raise in the future\n                # TODO we can tighten the exception type in future when it does\n                try:\n                    with warnings.catch_warnings():\n                        # pandas 2.x does not yet enforce this behaviour but raises a\n                        # warning  -> we want to to suppress this warning for our users,\n                        # and do this by turning it into an error so we take the\n                        # `except` code path to try again with utc=True\n                        warnings.filterwarnings(\n                            \"error\",\n                            \"In a future version of pandas, parsing datetimes with \"\n                            \"mixed time zones will raise an error\",\n                            FutureWarning,\n                        )\n                        as_dt = pd.to_datetime(df[k])\n                except Exception:\n                    pass\n                if as_dt is None or as_dt.dtype == \"object\":\n                    # if to_datetime failed, try again for mixed timezone offsets\n                    # This can still fail if there are invalid datetimes\n                    try:\n                        as_dt = pd.to_datetime(df[k], utc=True)\n                    except Exception:\n                        pass\n                # if to_datetime succeeded, round datetimes as\n                # fiona only supports up to ms precision (any microseconds are\n                # floating point rounding error)\n                if as_dt is not None and not (as_dt.dtype == \"object\"):\n                    if PANDAS_GE_20:\n                        df[k] = as_dt.dt.as_unit(\"ms\")\n                    else:\n                        df[k] = as_dt.dt.round(freq=\"ms\")\n            return df\n\n\ndef _read_file_pyogrio(path_or_bytes, bbox=None, mask=None, rows=None, **kwargs):\n    import pyogrio\n\n    if rows is not None:\n        if isinstance(rows, int):\n            kwargs[\"max_features\"] = rows\n        elif isinstance(rows, slice):\n            if rows.start is not None:\n                if rows.start < 0:\n                    raise ValueError(\n                        \"Negative slice start not supported with the 'pyogrio' engine.\"\n                    )\n                kwargs[\"skip_features\"] = rows.start\n            if rows.stop is not None:\n                kwargs[\"max_features\"] = rows.stop - (rows.start or 0)\n            if rows.step is not None:\n                raise ValueError(\"slice with step is not supported\")\n        else:\n            raise TypeError(\"'rows' must be an integer or a slice.\")\n\n    if bbox is not None and mask is not None:\n        # match error message from Fiona\n        raise ValueError(\"mask and bbox can not be set together\")\n\n    if bbox is not None:\n        if isinstance(bbox, (GeoDataFrame, GeoSeries)):\n            crs = pyogrio.read_info(path_or_bytes).get(\"crs\")\n            if isinstance(path_or_bytes, IOBase):\n                path_or_bytes.seek(0)\n\n            bbox = tuple(bbox.to_crs(crs).total_bounds)\n        elif isinstance(bbox, BaseGeometry):\n            bbox = bbox.bounds\n        if len(bbox) != 4:\n            raise ValueError(\"'bbox' should be a length-4 tuple.\")\n\n    if mask is not None:\n        # NOTE: mask cannot be used at same time as bbox keyword\n        if isinstance(mask, (GeoDataFrame, GeoSeries)):\n            crs = pyogrio.read_info(path_or_bytes).get(\"crs\")\n            if isinstance(path_or_bytes, IOBase):\n                path_or_bytes.seek(0)\n\n            mask = shapely.unary_union(mask.to_crs(crs).geometry.values)\n        elif isinstance(mask, BaseGeometry):\n            mask = shapely.unary_union(mask)\n        elif isinstance(mask, dict) or hasattr(mask, \"__geo_interface__\"):\n            # convert GeoJSON to shapely geometry\n            mask = shapely.geometry.shape(mask)\n\n        kwargs[\"mask\"] = mask\n\n    if kwargs.pop(\"ignore_geometry\", False):\n        kwargs[\"read_geometry\"] = False\n\n    # translate `ignore_fields`/`include_fields` keyword for back compat with fiona\n    if \"ignore_fields\" in kwargs and \"include_fields\" in kwargs:\n        raise ValueError(\"Cannot specify both 'ignore_fields' and 'include_fields'\")\n    elif \"ignore_fields\" in kwargs:\n        if kwargs.get(\"columns\", None) is not None:\n            raise ValueError(\n                \"Cannot specify both 'columns' and 'ignore_fields' keywords\"\n            )\n        warnings.warn(\n            \"The 'include_fields' and 'ignore_fields' keywords are deprecated, and \"\n            \"will be removed in a future release. You can use the 'columns' keyword \"\n            \"instead to select which columns to read.\",\n            DeprecationWarning,\n            stacklevel=3,\n        )\n        ignore_fields = kwargs.pop(\"ignore_fields\")\n        fields = pyogrio.read_info(path_or_bytes)[\"fields\"]\n        include_fields = [col for col in fields if col not in ignore_fields]\n        kwargs[\"columns\"] = include_fields\n    elif \"include_fields\" in kwargs:\n        # translate `include_fields` keyword for back compat with fiona engine\n        if kwargs.get(\"columns\", None) is not None:\n            raise ValueError(\n                \"Cannot specify both 'columns' and 'include_fields' keywords\"\n            )\n        warnings.warn(\n            \"The 'include_fields' and 'ignore_fields' keywords are deprecated, and \"\n            \"will be removed in a future release. You can use the 'columns' keyword \"\n            \"instead to select which columns to read.\",\n            DeprecationWarning,\n            stacklevel=3,\n        )\n        kwargs[\"columns\"] = kwargs.pop(\"include_fields\")\n\n    return pyogrio.read_dataframe(path_or_bytes, bbox=bbox, **kwargs)\n\n\ndef _detect_driver(path):\n    \"\"\"\n    Attempt to auto-detect driver based on the extension\n    \"\"\"\n    try:\n        # in case the path is a file handle\n        path = path.name\n    except AttributeError:\n        pass\n    try:\n        return _EXTENSION_TO_DRIVER[Path(path).suffix.lower()]\n    except KeyError:\n        # Assume it is a shapefile folder for now. In the future,\n        # will likely raise an exception when the expected\n        # folder writing behavior is more clearly defined.\n        return \"ESRI Shapefile\"\n\n\ndef _to_file(\n    df,\n    filename,\n    driver=None,\n    schema=None,\n    index=None,\n    mode=\"w\",\n    crs=None,\n    engine=None,\n    metadata=None,\n    **kwargs,\n):\n    \"\"\"\n    Write this GeoDataFrame to an OGR data source\n\n    A dictionary of supported OGR providers is available via:\n\n    >>> import pyogrio\n    >>> pyogrio.list_drivers()  # doctest: +SKIP\n\n    Parameters\n    ----------\n    df : GeoDataFrame to be written\n    filename : string\n        File path or file handle to write to. The path may specify a\n        GDAL VSI scheme.\n    driver : string, default None\n        The OGR format driver used to write the vector file.\n        If not specified, it attempts to infer it from the file extension.\n        If no extension is specified, it saves ESRI Shapefile to a folder.\n    schema : dict, default None\n        If specified, the schema dictionary is passed to Fiona to\n        better control how the file is written. If None, GeoPandas\n        will determine the schema based on each column's dtype.\n        Not supported for the \"pyogrio\" engine.\n    index : bool, default None\n        If True, write index into one or more columns (for MultiIndex).\n        Default None writes the index into one or more columns only if\n        the index is named, is a MultiIndex, or has a non-integer data\n        type. If False, no index is written.\n\n        .. versionadded:: 0.7\n            Previously the index was not written.\n    mode : string, default 'w'\n        The write mode, 'w' to overwrite the existing file and 'a' to append;\n        when using the pyogrio engine, you can also pass ``append=True``.\n        Not all drivers support appending. For the fiona engine, the drivers\n        that support appending are listed in fiona.supported_drivers or\n        https://github.com/Toblerity/Fiona/blob/master/fiona/drvsupport.py.\n        For the pyogrio engine, you should be able to use any driver that\n        is available in your installation of GDAL that supports append\n        capability; see the specific driver entry at\n        https://gdal.org/drivers/vector/index.html for more information.\n    crs : pyproj.CRS, default None\n        If specified, the CRS is passed to Fiona to\n        better control how the file is written. If None, GeoPandas\n        will determine the crs based on crs df attribute.\n        The value can be anything accepted\n        by :meth:`pyproj.CRS.from_user_input() <pyproj.crs.CRS.from_user_input>`,\n        such as an authority string (eg \"EPSG:4326\") or a WKT string.\n    engine : str,  \"pyogrio\" or \"fiona\"\n        The underlying library that is used to read the file. Currently, the\n        supported options are \"pyogrio\" and \"fiona\". Defaults to \"pyogrio\" if\n        installed, otherwise tries \"fiona\". Engine can also be set globally\n        with the ``geopandas.options.io_engine`` option.\n    metadata : dict[str, str], default None\n        Optional metadata to be stored in the file. Keys and values must be\n        strings. Only supported for the \"GPKG\" driver\n        (requires Fiona >= 1.9 or pyogrio >= 0.6).\n    **kwargs :\n        Keyword args to be passed to the engine, and can be used to write\n        to multi-layer data, store data within archives (zip files), etc.\n        In case of the \"fiona\" engine, the keyword arguments are passed to\n        fiona.open`. For more information on possible keywords, type:\n        ``import fiona; help(fiona.open)``. In case of the \"pyogrio\" engine,\n        the keyword arguments are passed to `pyogrio.write_dataframe`.\n\n    Notes\n    -----\n    The format drivers will attempt to detect the encoding of your data, but\n    may fail. In this case, the proper encoding can be specified explicitly\n    by using the encoding keyword parameter, e.g. ``encoding='utf-8'``.\n    \"\"\"\n    engine = _check_engine(engine, \"'to_file' method\")\n\n    filename = _expand_user(filename)\n\n    if index is None:\n        # Determine if index attribute(s) should be saved to file\n        # (only if they are named or are non-integer)\n        index = list(df.index.names) != [None] or not is_integer_dtype(df.index.dtype)\n    if index:\n        df = df.reset_index(drop=False)\n\n    if driver is None:\n        driver = _detect_driver(filename)\n\n    if driver == \"ESRI Shapefile\" and any(len(c) > 10 for c in df.columns.tolist()):\n        warnings.warn(\n            \"Column names longer than 10 characters will be truncated when saved to \"\n            \"ESRI Shapefile.\",\n            stacklevel=3,\n        )\n\n    if (df.dtypes == \"geometry\").sum() > 1:\n        raise ValueError(\n            \"GeoDataFrame contains multiple geometry columns but GeoDataFrame.to_file \"\n            \"supports only a single geometry column. Use a GeoDataFrame.to_parquet or \"\n            \"GeoDataFrame.to_feather, drop additional geometry columns or convert them \"\n            \"to a supported format like a well-known text (WKT) using \"\n            \"`GeoSeries.to_wkt()`.\",\n        )\n    _check_metadata_supported(metadata, engine, driver)\n\n    if mode not in (\"w\", \"a\"):\n        raise ValueError(f\"'mode' should be one of 'w' or 'a', got '{mode}' instead\")\n\n    if engine == \"pyogrio\":\n        _to_file_pyogrio(df, filename, driver, schema, crs, mode, metadata, **kwargs)\n    elif engine == \"fiona\":\n        _to_file_fiona(df, filename, driver, schema, crs, mode, metadata, **kwargs)\n    else:\n        raise ValueError(f\"unknown engine '{engine}'\")\n\n\ndef _to_file_fiona(df, filename, driver, schema, crs, mode, metadata, **kwargs):\n    if not HAS_PYPROJ and crs:\n        raise ImportError(\n            \"The 'pyproj' package is required to write a file with a CRS, but it is not\"\n            \" installed or does not import correctly.\"\n        )\n\n    if schema is None:\n        schema = infer_schema(df)\n\n    if crs:\n        from pyproj import CRS\n\n        crs = CRS.from_user_input(crs)\n    else:\n        crs = df.crs\n\n    with fiona_env():\n        crs_wkt = None\n        try:\n            gdal_version = Version(\n                fiona.env.get_gdal_release_name().strip(\"e\")\n            )  # GH3147\n        except (AttributeError, ValueError):\n            gdal_version = Version(\"2.0.0\")  # just assume it is not the latest\n        if gdal_version >= Version(\"3.0.0\") and crs:\n            crs_wkt = crs.to_wkt()\n        elif crs:\n            crs_wkt = crs.to_wkt(\"WKT1_GDAL\")\n        with fiona.open(\n            filename, mode=mode, driver=driver, crs_wkt=crs_wkt, schema=schema, **kwargs\n        ) as colxn:\n            if metadata is not None:\n                colxn.update_tags(metadata)\n            colxn.writerecords(df.iterfeatures())\n\n\ndef _to_file_pyogrio(df, filename, driver, schema, crs, mode, metadata, **kwargs):\n    import pyogrio\n\n    if schema is not None:\n        raise ValueError(\n            \"The 'schema' argument is not supported with the 'pyogrio' engine.\"\n        )\n\n    if mode == \"a\":\n        kwargs[\"append\"] = True\n\n    if crs is not None:\n        raise ValueError(\"Passing 'crs' is not supported with the 'pyogrio' engine.\")\n\n    # for the fiona engine, this check is done in gdf.iterfeatures()\n    if not df.columns.is_unique:\n        raise ValueError(\"GeoDataFrame cannot contain duplicated column names.\")\n\n    pyogrio.write_dataframe(df, filename, driver=driver, metadata=metadata, **kwargs)\n\n\ndef infer_schema(df):\n    from collections import OrderedDict\n\n    # TODO: test pandas string type and boolean type once released\n    types = {\n        \"Int32\": \"int32\",\n        \"int32\": \"int32\",\n        \"Int64\": \"int\",\n        \"string\": \"str\",\n        \"boolean\": \"bool\",\n    }\n\n    def convert_type(column, in_type):\n        if in_type == object:\n            return \"str\"\n        if in_type.name.startswith(\"datetime64\"):\n            # numpy datetime type regardless of frequency\n            return \"datetime\"\n        if str(in_type) in types:\n            out_type = types[str(in_type)]\n        else:\n            out_type = type(np.zeros(1, in_type).item()).__name__\n        if out_type == \"long\":\n            out_type = \"int\"\n        return out_type\n\n    properties = OrderedDict(\n        [\n            (col, convert_type(col, _type))\n            for col, _type in zip(df.columns, df.dtypes)\n            if col != df._geometry_column_name\n        ]\n    )\n\n    if df.empty:\n        warnings.warn(\n            \"You are attempting to write an empty DataFrame to file. \"\n            \"For some drivers, this operation may fail.\",\n            UserWarning,\n            stacklevel=3,\n        )\n\n    # Since https://github.com/Toblerity/Fiona/issues/446 resolution,\n    # Fiona allows a list of geometry types\n    geom_types = _geometry_types(df)\n\n    schema = {\"geometry\": geom_types, \"properties\": properties}\n\n    return schema\n\n\ndef _geometry_types(df):\n    \"\"\"\n    Determine the geometry types in the GeoDataFrame for the schema.\n    \"\"\"\n    geom_types_2D = df[~df.geometry.has_z].geometry.geom_type.unique()\n    geom_types_2D = [gtype for gtype in geom_types_2D if gtype is not None]\n    geom_types_3D = df[df.geometry.has_z].geometry.geom_type.unique()\n    geom_types_3D = [\"3D \" + gtype for gtype in geom_types_3D if gtype is not None]\n    geom_types = geom_types_3D + geom_types_2D\n\n    if len(geom_types) == 0:\n        # Default geometry type supported by Fiona\n        # (Since https://github.com/Toblerity/Fiona/issues/446 resolution)\n        return \"Unknown\"\n\n    if len(geom_types) == 1:\n        geom_types = geom_types[0]\n\n    return geom_types\n\n\ndef _list_layers(filename) -> pd.DataFrame:\n    \"\"\"List layers available in a file.\n\n    Provides an overview of layers available in a file or URL together with their\n    geometry types. When supported by the data source, this includes both spatial and\n    non-spatial layers. Non-spatial layers are indicated by the ``\"geometry_type\"``\n    column being ``None``. GeoPandas will not read such layers but they can be read into\n    a pd.DataFrame using :func:`pyogrio.read_dataframe`.\n\n    Parameters\n    ----------\n    filename : str, path object or file-like object\n        Either the absolute or relative path to the file or URL to\n        be opened, or any object with a read() method (such as an open file\n        or StringIO)\n\n    Returns\n    -------\n    pandas.DataFrame\n        A DataFrame with columns \"name\" and \"geometry_type\" and one row per layer.\n    \"\"\"\n    _import_pyogrio()\n    _check_pyogrio(\"list_layers\")\n\n    import pyogrio\n\n    return pd.DataFrame(\n        pyogrio.list_layers(filename), columns=[\"name\", \"geometry_type\"]\n    )\n", 851], "C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py": ["# pyright: reportPropertyTypeMismatch=false\nfrom __future__ import annotations\n\nimport collections\nfrom copy import deepcopy\nimport datetime as dt\nfrom functools import partial\nimport gc\nfrom json import loads\nimport operator\nimport pickle\nimport re\nimport sys\nfrom typing import (\n    TYPE_CHECKING,\n    Any,\n    Callable,\n    ClassVar,\n    Literal,\n    NoReturn,\n    cast,\n    final,\n    overload,\n)\nimport warnings\nimport weakref\n\nimport numpy as np\n\nfrom pandas._config import (\n    config,\n    using_copy_on_write,\n    warn_copy_on_write,\n)\n\nfrom pandas._libs import lib\nfrom pandas._libs.lib import is_range_indexer\nfrom pandas._libs.tslibs import (\n    Period,\n    Tick,\n    Timestamp,\n    to_offset,\n)\nfrom pandas._libs.tslibs.dtypes import freq_to_period_freqstr\nfrom pandas._typing import (\n    AlignJoin,\n    AnyArrayLike,\n    ArrayLike,\n    Axes,\n    Axis,\n    AxisInt,\n    CompressionOptions,\n    DtypeArg,\n    DtypeBackend,\n    DtypeObj,\n    FilePath,\n    FillnaOptions,\n    FloatFormatType,\n    FormattersType,\n    Frequency,\n    IgnoreRaise,\n    IndexKeyFunc,\n    IndexLabel,\n    InterpolateOptions,\n    IntervalClosedType,\n    JSONSerializable,\n    Level,\n    Manager,\n    NaPosition,\n    NDFrameT,\n    OpenFileErrors,\n    RandomState,\n    ReindexMethod,\n    Renamer,\n    Scalar,\n    Self,\n    SequenceNotStr,\n    SortKind,\n    StorageOptions,\n    Suffixes,\n    T,\n    TimeAmbiguous,\n    TimedeltaConvertibleTypes,\n    TimeNonexistent,\n    TimestampConvertibleTypes,\n    TimeUnit,\n    ValueKeyFunc,\n    WriteBuffer,\n    WriteExcelBuffer,\n    npt,\n)\nfrom pandas.compat import PYPY\nfrom pandas.compat._constants import REF_COUNT\nfrom pandas.compat._optional import import_optional_dependency\nfrom pandas.compat.numpy import function as nv\nfrom pandas.errors import (\n    AbstractMethodError,\n    ChainedAssignmentError,\n    InvalidIndexError,\n    SettingWithCopyError,\n    SettingWithCopyWarning,\n    _chained_assignment_method_msg,\n    _chained_assignment_warning_method_msg,\n    _check_cacher,\n)\nfrom pandas.util._decorators import (\n    deprecate_nonkeyword_arguments,\n    doc,\n)\nfrom pandas.util._exceptions import find_stack_level\nfrom pandas.util._validators import (\n    check_dtype_backend,\n    validate_ascending,\n    validate_bool_kwarg,\n    validate_fillna_kwargs,\n    validate_inclusive,\n)\n\nfrom pandas.core.dtypes.astype import astype_is_view\nfrom pandas.core.dtypes.common import (\n    ensure_object,\n    ensure_platform_int,\n    ensure_str,\n    is_bool,\n    is_bool_dtype,\n    is_dict_like,\n    is_extension_array_dtype,\n    is_list_like,\n    is_number,\n    is_numeric_dtype,\n    is_re_compilable,\n    is_scalar,\n    pandas_dtype,\n)\nfrom pandas.core.dtypes.dtypes import (\n    DatetimeTZDtype,\n    ExtensionDtype,\n)\nfrom pandas.core.dtypes.generic import (\n    ABCDataFrame,\n    ABCSeries,\n)\nfrom pandas.core.dtypes.inference import (\n    is_hashable,\n    is_nested_list_like,\n)\nfrom pandas.core.dtypes.missing import (\n    isna,\n    notna,\n)\n\nfrom pandas.core import (\n    algorithms as algos,\n    arraylike,\n    common,\n    indexing,\n    missing,\n    nanops,\n    sample,\n)\nfrom pandas.core.array_algos.replace import should_use_regex\nfrom pandas.core.arrays import ExtensionArray\nfrom pandas.core.base import PandasObject\nfrom pandas.core.construction import extract_array\nfrom pandas.core.flags import Flags\nfrom pandas.core.indexes.api import (\n    DatetimeIndex,\n    Index,\n    MultiIndex,\n    PeriodIndex,\n    RangeIndex,\n    default_index,\n    ensure_index,\n)\nfrom pandas.core.internals import (\n    ArrayManager,\n    BlockManager,\n    SingleArrayManager,\n)\nfrom pandas.core.internals.construction import (\n    mgr_to_mgr,\n    ndarray_to_mgr,\n)\nfrom pandas.core.methods.describe import describe_ndframe\nfrom pandas.core.missing import (\n    clean_fill_method,\n    clean_reindex_fill_method,\n    find_valid_index,\n)\nfrom pandas.core.reshape.concat import concat\nfrom pandas.core.shared_docs import _shared_docs\nfrom pandas.core.sorting import get_indexer_indexer\nfrom pandas.core.window import (\n    Expanding,\n    ExponentialMovingWindow,\n    Rolling,\n    Window,\n)\n\nfrom pandas.io.formats.format import (\n    DataFrameFormatter,\n    DataFrameRenderer,\n)\nfrom pandas.io.formats.printing import pprint_thing\n\nif TYPE_CHECKING:\n    from collections.abc import (\n        Hashable,\n        Iterator,\n        Mapping,\n        Sequence,\n    )\n\n    from pandas._libs.tslibs import BaseOffset\n\n    from pandas import (\n        DataFrame,\n        ExcelWriter,\n        HDFStore,\n        Series,\n    )\n    from pandas.core.indexers.objects import BaseIndexer\n    from pandas.core.resample import Resampler\n\n# goal is to be able to define the docs close to function, while still being\n# able to share\n_shared_docs = {**_shared_docs}\n_shared_doc_kwargs = {\n    \"axes\": \"keywords for axes\",\n    \"klass\": \"Series/DataFrame\",\n    \"axes_single_arg\": \"{0 or 'index'} for Series, {0 or 'index', 1 or 'columns'} for DataFrame\",  # noqa: E501\n    \"inplace\": \"\"\"\n    inplace : bool, default False\n        If True, performs operation inplace and returns None.\"\"\",\n    \"optional_by\": \"\"\"\n        by : str or list of str\n            Name or list of names to sort by\"\"\",\n}\n\n\nbool_t = bool  # Need alias because NDFrame has def bool:\n\n\nclass NDFrame(PandasObject, indexing.IndexingMixin):\n    \"\"\"\n    N-dimensional analogue of DataFrame. Store multi-dimensional in a\n    size-mutable, labeled data structure\n\n    Parameters\n    ----------\n    data : BlockManager\n    axes : list\n    copy : bool, default False\n    \"\"\"\n\n    _internal_names: list[str] = [\n        \"_mgr\",\n        \"_cacher\",\n        \"_item_cache\",\n        \"_cache\",\n        \"_is_copy\",\n        \"_name\",\n        \"_metadata\",\n        \"_flags\",\n    ]\n    _internal_names_set: set[str] = set(_internal_names)\n    _accessors: set[str] = set()\n    _hidden_attrs: frozenset[str] = frozenset([])\n    _metadata: list[str] = []\n    _is_copy: weakref.ReferenceType[NDFrame] | str | None = None\n    _mgr: Manager\n    _attrs: dict[Hashable, Any]\n    _typ: str\n\n    # ----------------------------------------------------------------------\n    # Constructors\n\n    def __init__(self, data: Manager) -> None:\n        object.__setattr__(self, \"_is_copy\", None)\n        object.__setattr__(self, \"_mgr\", data)\n        object.__setattr__(self, \"_item_cache\", {})\n        object.__setattr__(self, \"_attrs\", {})\n        object.__setattr__(self, \"_flags\", Flags(self, allows_duplicate_labels=True))\n\n    @final\n    @classmethod\n    def _init_mgr(\n        cls,\n        mgr: Manager,\n        axes: dict[Literal[\"index\", \"columns\"], Axes | None],\n        dtype: DtypeObj | None = None,\n        copy: bool_t = False,\n    ) -> Manager:\n        \"\"\"passed a manager and a axes dict\"\"\"\n        for a, axe in axes.items():\n            if axe is not None:\n                axe = ensure_index(axe)\n                bm_axis = cls._get_block_manager_axis(a)\n                mgr = mgr.reindex_axis(axe, axis=bm_axis)\n\n        # make a copy if explicitly requested\n        if copy:\n            mgr = mgr.copy()\n        if dtype is not None:\n            # avoid further copies if we can\n            if (\n                isinstance(mgr, BlockManager)\n                and len(mgr.blocks) == 1\n                and mgr.blocks[0].values.dtype == dtype\n            ):\n                pass\n            else:\n                mgr = mgr.astype(dtype=dtype)\n        return mgr\n\n    @final\n    def _as_manager(self, typ: str, copy: bool_t = True) -> Self:\n        \"\"\"\n        Private helper function to create a DataFrame with specific manager.\n\n        Parameters\n        ----------\n        typ : {\"block\", \"array\"}\n        copy : bool, default True\n            Only controls whether the conversion from Block->ArrayManager\n            copies the 1D arrays (to ensure proper/contiguous memory layout).\n\n        Returns\n        -------\n        DataFrame\n            New DataFrame using specified manager type. Is not guaranteed\n            to be a copy or not.\n        \"\"\"\n        new_mgr: Manager\n        new_mgr = mgr_to_mgr(self._mgr, typ=typ, copy=copy)\n        # fastpath of passing a manager doesn't check the option/manager class\n        return self._constructor_from_mgr(new_mgr, axes=new_mgr.axes).__finalize__(self)\n\n    @classmethod\n    def _from_mgr(cls, mgr: Manager, axes: list[Index]) -> Self:\n        \"\"\"\n        Construct a new object of this type from a Manager object and axes.\n\n        Parameters\n        ----------\n        mgr : Manager\n            Must have the same ndim as cls.\n        axes : list[Index]\n\n        Notes\n        -----\n        The axes must match mgr.axes, but are required for future-proofing\n        in the event that axes are refactored out of the Manager objects.\n        \"\"\"\n        obj = cls.__new__(cls)\n        NDFrame.__init__(obj, mgr)\n        return obj\n\n    # ----------------------------------------------------------------------\n    # attrs and flags\n\n    @property\n    def attrs(self) -> dict[Hashable, Any]:\n        \"\"\"\n        Dictionary of global attributes of this dataset.\n\n        .. warning::\n\n           attrs is experimental and may change without warning.\n\n        See Also\n        --------\n        DataFrame.flags : Global flags applying to this object.\n\n        Notes\n        -----\n        Many operations that create new datasets will copy ``attrs``. Copies\n        are always deep so that changing ``attrs`` will only affect the\n        present dataset. ``pandas.concat`` copies ``attrs`` only if all input\n        datasets have the same ``attrs``.\n\n        Examples\n        --------\n        For Series:\n\n        >>> ser = pd.Series([1, 2, 3])\n        >>> ser.attrs = {\"A\": [10, 20, 30]}\n        >>> ser.attrs\n        {'A': [10, 20, 30]}\n\n        For DataFrame:\n\n        >>> df = pd.DataFrame({'A': [1, 2], 'B': [3, 4]})\n        >>> df.attrs = {\"A\": [10, 20, 30]}\n        >>> df.attrs\n        {'A': [10, 20, 30]}\n        \"\"\"\n        return self._attrs\n\n    @attrs.setter\n    def attrs(self, value: Mapping[Hashable, Any]) -> None:\n        self._attrs = dict(value)\n\n    @final\n    @property\n    def flags(self) -> Flags:\n        \"\"\"\n        Get the properties associated with this pandas object.\n\n        The available flags are\n\n        * :attr:`Flags.allows_duplicate_labels`\n\n        See Also\n        --------\n        Flags : Flags that apply to pandas objects.\n        DataFrame.attrs : Global metadata applying to this dataset.\n\n        Notes\n        -----\n        \"Flags\" differ from \"metadata\". Flags reflect properties of the\n        pandas object (the Series or DataFrame). Metadata refer to properties\n        of the dataset, and should be stored in :attr:`DataFrame.attrs`.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({\"A\": [1, 2]})\n        >>> df.flags\n        <Flags(allows_duplicate_labels=True)>\n\n        Flags can be get or set using ``.``\n\n        >>> df.flags.allows_duplicate_labels\n        True\n        >>> df.flags.allows_duplicate_labels = False\n\n        Or by slicing with a key\n\n        >>> df.flags[\"allows_duplicate_labels\"]\n        False\n        >>> df.flags[\"allows_duplicate_labels\"] = True\n        \"\"\"\n        return self._flags\n\n    @final\n    def set_flags(\n        self,\n        *,\n        copy: bool_t = False,\n        allows_duplicate_labels: bool_t | None = None,\n    ) -> Self:\n        \"\"\"\n        Return a new object with updated flags.\n\n        Parameters\n        ----------\n        copy : bool, default False\n            Specify if a copy of the object should be made.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n        allows_duplicate_labels : bool, optional\n            Whether the returned object allows duplicate labels.\n\n        Returns\n        -------\n        Series or DataFrame\n            The same type as the caller.\n\n        See Also\n        --------\n        DataFrame.attrs : Global metadata applying to this dataset.\n        DataFrame.flags : Global flags applying to this object.\n\n        Notes\n        -----\n        This method returns a new object that's a view on the same data\n        as the input. Mutating the input or the output values will be reflected\n        in the other.\n\n        This method is intended to be used in method chains.\n\n        \"Flags\" differ from \"metadata\". Flags reflect properties of the\n        pandas object (the Series or DataFrame). Metadata refer to properties\n        of the dataset, and should be stored in :attr:`DataFrame.attrs`.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({\"A\": [1, 2]})\n        >>> df.flags.allows_duplicate_labels\n        True\n        >>> df2 = df.set_flags(allows_duplicate_labels=False)\n        >>> df2.flags.allows_duplicate_labels\n        False\n        \"\"\"\n        df = self.copy(deep=copy and not using_copy_on_write())\n        if allows_duplicate_labels is not None:\n            df.flags[\"allows_duplicate_labels\"] = allows_duplicate_labels\n        return df\n\n    @final\n    @classmethod\n    def _validate_dtype(cls, dtype) -> DtypeObj | None:\n        \"\"\"validate the passed dtype\"\"\"\n        if dtype is not None:\n            dtype = pandas_dtype(dtype)\n\n            # a compound dtype\n            if dtype.kind == \"V\":\n                raise NotImplementedError(\n                    \"compound dtypes are not implemented \"\n                    f\"in the {cls.__name__} constructor\"\n                )\n\n        return dtype\n\n    # ----------------------------------------------------------------------\n    # Construction\n\n    @property\n    def _constructor(self) -> Callable[..., Self]:\n        \"\"\"\n        Used when a manipulation result has the same dimensions as the\n        original.\n        \"\"\"\n        raise AbstractMethodError(self)\n\n    # ----------------------------------------------------------------------\n    # Internals\n\n    @final\n    @property\n    def _data(self):\n        # GH#33054 retained because some downstream packages uses this,\n        #  e.g. fastparquet\n        # GH#33333\n        warnings.warn(\n            f\"{type(self).__name__}._data is deprecated and will be removed in \"\n            \"a future version. Use public APIs instead.\",\n            DeprecationWarning,\n            stacklevel=find_stack_level(),\n        )\n        return self._mgr\n\n    # ----------------------------------------------------------------------\n    # Axis\n    _AXIS_ORDERS: list[Literal[\"index\", \"columns\"]]\n    _AXIS_TO_AXIS_NUMBER: dict[Axis, AxisInt] = {0: 0, \"index\": 0, \"rows\": 0}\n    _info_axis_number: int\n    _info_axis_name: Literal[\"index\", \"columns\"]\n    _AXIS_LEN: int\n\n    @final\n    def _construct_axes_dict(self, axes: Sequence[Axis] | None = None, **kwargs):\n        \"\"\"Return an axes dictionary for myself.\"\"\"\n        d = {a: self._get_axis(a) for a in (axes or self._AXIS_ORDERS)}\n        # error: Argument 1 to \"update\" of \"MutableMapping\" has incompatible type\n        # \"Dict[str, Any]\"; expected \"SupportsKeysAndGetItem[Union[int, str], Any]\"\n        d.update(kwargs)  # type: ignore[arg-type]\n        return d\n\n    @final\n    @classmethod\n    def _get_axis_number(cls, axis: Axis) -> AxisInt:\n        try:\n            return cls._AXIS_TO_AXIS_NUMBER[axis]\n        except KeyError:\n            raise ValueError(f\"No axis named {axis} for object type {cls.__name__}\")\n\n    @final\n    @classmethod\n    def _get_axis_name(cls, axis: Axis) -> Literal[\"index\", \"columns\"]:\n        axis_number = cls._get_axis_number(axis)\n        return cls._AXIS_ORDERS[axis_number]\n\n    @final\n    def _get_axis(self, axis: Axis) -> Index:\n        axis_number = self._get_axis_number(axis)\n        assert axis_number in {0, 1}\n        return self.index if axis_number == 0 else self.columns\n\n    @final\n    @classmethod\n    def _get_block_manager_axis(cls, axis: Axis) -> AxisInt:\n        \"\"\"Map the axis to the block_manager axis.\"\"\"\n        axis = cls._get_axis_number(axis)\n        ndim = cls._AXIS_LEN\n        if ndim == 2:\n            # i.e. DataFrame\n            return 1 - axis\n        return axis\n\n    @final\n    def _get_axis_resolvers(self, axis: str) -> dict[str, Series | MultiIndex]:\n        # index or columns\n        axis_index = getattr(self, axis)\n        d = {}\n        prefix = axis[0]\n\n        for i, name in enumerate(axis_index.names):\n            if name is not None:\n                key = level = name\n            else:\n                # prefix with 'i' or 'c' depending on the input axis\n                # e.g., you must do ilevel_0 for the 0th level of an unnamed\n                # multiiindex\n                key = f\"{prefix}level_{i}\"\n                level = i\n\n            level_values = axis_index.get_level_values(level)\n            s = level_values.to_series()\n            s.index = axis_index\n            d[key] = s\n\n        # put the index/columns itself in the dict\n        if isinstance(axis_index, MultiIndex):\n            dindex = axis_index\n        else:\n            dindex = axis_index.to_series()\n\n        d[axis] = dindex\n        return d\n\n    @final\n    def _get_index_resolvers(self) -> dict[Hashable, Series | MultiIndex]:\n        from pandas.core.computation.parsing import clean_column_name\n\n        d: dict[str, Series | MultiIndex] = {}\n        for axis_name in self._AXIS_ORDERS:\n            d.update(self._get_axis_resolvers(axis_name))\n\n        return {clean_column_name(k): v for k, v in d.items() if not isinstance(k, int)}\n\n    @final\n    def _get_cleaned_column_resolvers(self) -> dict[Hashable, Series]:\n        \"\"\"\n        Return the special character free column resolvers of a dataframe.\n\n        Column names with special characters are 'cleaned up' so that they can\n        be referred to by backtick quoting.\n        Used in :meth:`DataFrame.eval`.\n        \"\"\"\n        from pandas.core.computation.parsing import clean_column_name\n        from pandas.core.series import Series\n\n        if isinstance(self, ABCSeries):\n            return {clean_column_name(self.name): self}\n\n        return {\n            clean_column_name(k): Series(\n                v, copy=False, index=self.index, name=k\n            ).__finalize__(self)\n            for k, v in zip(self.columns, self._iter_column_arrays())\n            if not isinstance(k, int)\n        }\n\n    @final\n    @property\n    def _info_axis(self) -> Index:\n        return getattr(self, self._info_axis_name)\n\n    def _is_view_after_cow_rules(self):\n        # Only to be used in cases of chained assignment checks, this is a\n        # simplified check that assumes that either the whole object is a view\n        # or a copy\n        if len(self._mgr.blocks) == 0:  # type: ignore[union-attr]\n            return False\n        return self._mgr.blocks[0].refs.has_reference()  # type: ignore[union-attr]\n\n    @property\n    def shape(self) -> tuple[int, ...]:\n        \"\"\"\n        Return a tuple of axis dimensions\n        \"\"\"\n        return tuple(len(self._get_axis(a)) for a in self._AXIS_ORDERS)\n\n    @property\n    def axes(self) -> list[Index]:\n        \"\"\"\n        Return index label(s) of the internal NDFrame\n        \"\"\"\n        # we do it this way because if we have reversed axes, then\n        # the block manager shows then reversed\n        return [self._get_axis(a) for a in self._AXIS_ORDERS]\n\n    @final\n    @property\n    def ndim(self) -> int:\n        \"\"\"\n        Return an int representing the number of axes / array dimensions.\n\n        Return 1 if Series. Otherwise return 2 if DataFrame.\n\n        See Also\n        --------\n        ndarray.ndim : Number of array dimensions.\n\n        Examples\n        --------\n        >>> s = pd.Series({'a': 1, 'b': 2, 'c': 3})\n        >>> s.ndim\n        1\n\n        >>> df = pd.DataFrame({'col1': [1, 2], 'col2': [3, 4]})\n        >>> df.ndim\n        2\n        \"\"\"\n        return self._mgr.ndim\n\n    @final\n    @property\n    def size(self) -> int:\n        \"\"\"\n        Return an int representing the number of elements in this object.\n\n        Return the number of rows if Series. Otherwise return the number of\n        rows times number of columns if DataFrame.\n\n        See Also\n        --------\n        ndarray.size : Number of elements in the array.\n\n        Examples\n        --------\n        >>> s = pd.Series({'a': 1, 'b': 2, 'c': 3})\n        >>> s.size\n        3\n\n        >>> df = pd.DataFrame({'col1': [1, 2], 'col2': [3, 4]})\n        >>> df.size\n        4\n        \"\"\"\n\n        return int(np.prod(self.shape))\n\n    def set_axis(\n        self,\n        labels,\n        *,\n        axis: Axis = 0,\n        copy: bool_t | None = None,\n    ) -> Self:\n        \"\"\"\n        Assign desired index to given axis.\n\n        Indexes for%(extended_summary_sub)s row labels can be changed by assigning\n        a list-like or Index.\n\n        Parameters\n        ----------\n        labels : list-like, Index\n            The values for the new index.\n\n        axis : %(axes_single_arg)s, default 0\n            The axis to update. The value 0 identifies the rows. For `Series`\n            this parameter is unused and defaults to 0.\n\n        copy : bool, default True\n            Whether to make a copy of the underlying data.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n\n        Returns\n        -------\n        %(klass)s\n            An object of type %(klass)s.\n\n        See Also\n        --------\n        %(klass)s.rename_axis : Alter the name of the index%(see_also_sub)s.\n        \"\"\"\n        return self._set_axis_nocheck(labels, axis, inplace=False, copy=copy)\n\n    @final\n    def _set_axis_nocheck(\n        self, labels, axis: Axis, inplace: bool_t, copy: bool_t | None\n    ):\n        if inplace:\n            setattr(self, self._get_axis_name(axis), labels)\n        else:\n            # With copy=False, we create a new object but don't copy the\n            #  underlying data.\n            obj = self.copy(deep=copy and not using_copy_on_write())\n            setattr(obj, obj._get_axis_name(axis), labels)\n            return obj\n\n    @final\n    def _set_axis(self, axis: AxisInt, labels: AnyArrayLike | list) -> None:\n        \"\"\"\n        This is called from the cython code when we set the `index` attribute\n        directly, e.g. `series.index = [1, 2, 3]`.\n        \"\"\"\n        labels = ensure_index(labels)\n        self._mgr.set_axis(axis, labels)\n        self._clear_item_cache()\n\n    @final\n    def swapaxes(self, axis1: Axis, axis2: Axis, copy: bool_t | None = None) -> Self:\n        \"\"\"\n        Interchange axes and swap values axes appropriately.\n\n        .. deprecated:: 2.1.0\n            ``swapaxes`` is deprecated and will be removed.\n            Please use ``transpose`` instead.\n\n        Returns\n        -------\n        same as input\n\n        Examples\n        --------\n        Please see examples for :meth:`DataFrame.transpose`.\n        \"\"\"\n        warnings.warn(\n            # GH#51946\n            f\"'{type(self).__name__}.swapaxes' is deprecated and \"\n            \"will be removed in a future version. \"\n            f\"Please use '{type(self).__name__}.transpose' instead.\",\n            FutureWarning,\n            stacklevel=find_stack_level(),\n        )\n\n        i = self._get_axis_number(axis1)\n        j = self._get_axis_number(axis2)\n\n        if i == j:\n            return self.copy(deep=copy and not using_copy_on_write())\n\n        mapping = {i: j, j: i}\n\n        new_axes = [self._get_axis(mapping.get(k, k)) for k in range(self._AXIS_LEN)]\n        new_values = self._values.swapaxes(i, j)  # type: ignore[union-attr]\n        if self._mgr.is_single_block and isinstance(self._mgr, BlockManager):\n            # This should only get hit in case of having a single block, otherwise a\n            # copy is made, we don't have to set up references.\n            new_mgr = ndarray_to_mgr(\n                new_values,\n                new_axes[0],\n                new_axes[1],\n                dtype=None,\n                copy=False,\n                typ=\"block\",\n            )\n            assert isinstance(new_mgr, BlockManager)\n            assert isinstance(self._mgr, BlockManager)\n            new_mgr.blocks[0].refs = self._mgr.blocks[0].refs\n            new_mgr.blocks[0].refs.add_reference(new_mgr.blocks[0])\n            if not using_copy_on_write() and copy is not False:\n                new_mgr = new_mgr.copy(deep=True)\n\n            out = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes)\n            return out.__finalize__(self, method=\"swapaxes\")\n\n        return self._constructor(\n            new_values,\n            *new_axes,\n            # The no-copy case for CoW is handled above\n            copy=False,\n        ).__finalize__(self, method=\"swapaxes\")\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def droplevel(self, level: IndexLabel, axis: Axis = 0) -> Self:\n        \"\"\"\n        Return {klass} with requested index / column level(s) removed.\n\n        Parameters\n        ----------\n        level : int, str, or list-like\n            If a string is given, must be the name of a level\n            If list-like, elements must be names or positional indexes\n            of levels.\n\n        axis : {{0 or 'index', 1 or 'columns'}}, default 0\n            Axis along which the level(s) is removed:\n\n            * 0 or 'index': remove level(s) in column.\n            * 1 or 'columns': remove level(s) in row.\n\n            For `Series` this parameter is unused and defaults to 0.\n\n        Returns\n        -------\n        {klass}\n            {klass} with requested index / column level(s) removed.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame([\n        ...     [1, 2, 3, 4],\n        ...     [5, 6, 7, 8],\n        ...     [9, 10, 11, 12]\n        ... ]).set_index([0, 1]).rename_axis(['a', 'b'])\n\n        >>> df.columns = pd.MultiIndex.from_tuples([\n        ...     ('c', 'e'), ('d', 'f')\n        ... ], names=['level_1', 'level_2'])\n\n        >>> df\n        level_1   c   d\n        level_2   e   f\n        a b\n        1 2      3   4\n        5 6      7   8\n        9 10    11  12\n\n        >>> df.droplevel('a')\n        level_1   c   d\n        level_2   e   f\n        b\n        2        3   4\n        6        7   8\n        10      11  12\n\n        >>> df.droplevel('level_2', axis=1)\n        level_1   c   d\n        a b\n        1 2      3   4\n        5 6      7   8\n        9 10    11  12\n        \"\"\"\n        labels = self._get_axis(axis)\n        new_labels = labels.droplevel(level)\n        return self.set_axis(new_labels, axis=axis, copy=None)\n\n    def pop(self, item: Hashable) -> Series | Any:\n        result = self[item]\n        del self[item]\n\n        return result\n\n    @final\n    def squeeze(self, axis: Axis | None = None):\n        \"\"\"\n        Squeeze 1 dimensional axis objects into scalars.\n\n        Series or DataFrames with a single element are squeezed to a scalar.\n        DataFrames with a single column or a single row are squeezed to a\n        Series. Otherwise the object is unchanged.\n\n        This method is most useful when you don't know if your\n        object is a Series or DataFrame, but you do know it has just a single\n        column. In that case you can safely call `squeeze` to ensure you have a\n        Series.\n\n        Parameters\n        ----------\n        axis : {0 or 'index', 1 or 'columns', None}, default None\n            A specific axis to squeeze. By default, all length-1 axes are\n            squeezed. For `Series` this parameter is unused and defaults to `None`.\n\n        Returns\n        -------\n        DataFrame, Series, or scalar\n            The projection after squeezing `axis` or all the axes.\n\n        See Also\n        --------\n        Series.iloc : Integer-location based indexing for selecting scalars.\n        DataFrame.iloc : Integer-location based indexing for selecting Series.\n        Series.to_frame : Inverse of DataFrame.squeeze for a\n            single-column DataFrame.\n\n        Examples\n        --------\n        >>> primes = pd.Series([2, 3, 5, 7])\n\n        Slicing might produce a Series with a single value:\n\n        >>> even_primes = primes[primes % 2 == 0]\n        >>> even_primes\n        0    2\n        dtype: int64\n\n        >>> even_primes.squeeze()\n        2\n\n        Squeezing objects with more than one value in every axis does nothing:\n\n        >>> odd_primes = primes[primes % 2 == 1]\n        >>> odd_primes\n        1    3\n        2    5\n        3    7\n        dtype: int64\n\n        >>> odd_primes.squeeze()\n        1    3\n        2    5\n        3    7\n        dtype: int64\n\n        Squeezing is even more effective when used with DataFrames.\n\n        >>> df = pd.DataFrame([[1, 2], [3, 4]], columns=['a', 'b'])\n        >>> df\n           a  b\n        0  1  2\n        1  3  4\n\n        Slicing a single column will produce a DataFrame with the columns\n        having only one value:\n\n        >>> df_a = df[['a']]\n        >>> df_a\n           a\n        0  1\n        1  3\n\n        So the columns can be squeezed down, resulting in a Series:\n\n        >>> df_a.squeeze('columns')\n        0    1\n        1    3\n        Name: a, dtype: int64\n\n        Slicing a single row from a single column will produce a single\n        scalar DataFrame:\n\n        >>> df_0a = df.loc[df.index < 1, ['a']]\n        >>> df_0a\n           a\n        0  1\n\n        Squeezing the rows produces a single scalar Series:\n\n        >>> df_0a.squeeze('rows')\n        a    1\n        Name: 0, dtype: int64\n\n        Squeezing all axes will project directly into a scalar:\n\n        >>> df_0a.squeeze()\n        1\n        \"\"\"\n        axes = range(self._AXIS_LEN) if axis is None else (self._get_axis_number(axis),)\n        result = self.iloc[\n            tuple(\n                0 if i in axes and len(a) == 1 else slice(None)\n                for i, a in enumerate(self.axes)\n            )\n        ]\n        if isinstance(result, NDFrame):\n            result = result.__finalize__(self, method=\"squeeze\")\n        return result\n\n    # ----------------------------------------------------------------------\n    # Rename\n\n    @final\n    def _rename(\n        self,\n        mapper: Renamer | None = None,\n        *,\n        index: Renamer | None = None,\n        columns: Renamer | None = None,\n        axis: Axis | None = None,\n        copy: bool_t | None = None,\n        inplace: bool_t = False,\n        level: Level | None = None,\n        errors: str = \"ignore\",\n    ) -> Self | None:\n        # called by Series.rename and DataFrame.rename\n\n        if mapper is None and index is None and columns is None:\n            raise TypeError(\"must pass an index to rename\")\n\n        if index is not None or columns is not None:\n            if axis is not None:\n                raise TypeError(\n                    \"Cannot specify both 'axis' and any of 'index' or 'columns'\"\n                )\n            if mapper is not None:\n                raise TypeError(\n                    \"Cannot specify both 'mapper' and any of 'index' or 'columns'\"\n                )\n        else:\n            # use the mapper argument\n            if axis and self._get_axis_number(axis) == 1:\n                columns = mapper\n            else:\n                index = mapper\n\n        self._check_inplace_and_allows_duplicate_labels(inplace)\n        result = self if inplace else self.copy(deep=copy and not using_copy_on_write())\n\n        for axis_no, replacements in enumerate((index, columns)):\n            if replacements is None:\n                continue\n\n            ax = self._get_axis(axis_no)\n            f = common.get_rename_function(replacements)\n\n            if level is not None:\n                level = ax._get_level_number(level)\n\n            # GH 13473\n            if not callable(replacements):\n                if ax._is_multi and level is not None:\n                    indexer = ax.get_level_values(level).get_indexer_for(replacements)\n                else:\n                    indexer = ax.get_indexer_for(replacements)\n\n                if errors == \"raise\" and len(indexer[indexer == -1]):\n                    missing_labels = [\n                        label\n                        for index, label in enumerate(replacements)\n                        if indexer[index] == -1\n                    ]\n                    raise KeyError(f\"{missing_labels} not found in axis\")\n\n            new_index = ax._transform_index(f, level=level)\n            result._set_axis_nocheck(new_index, axis=axis_no, inplace=True, copy=False)\n            result._clear_item_cache()\n\n        if inplace:\n            self._update_inplace(result)\n            return None\n        else:\n            return result.__finalize__(self, method=\"rename\")\n\n    @overload\n    def rename_axis(\n        self,\n        mapper: IndexLabel | lib.NoDefault = ...,\n        *,\n        index=...,\n        columns=...,\n        axis: Axis = ...,\n        copy: bool_t | None = ...,\n        inplace: Literal[False] = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def rename_axis(\n        self,\n        mapper: IndexLabel | lib.NoDefault = ...,\n        *,\n        index=...,\n        columns=...,\n        axis: Axis = ...,\n        copy: bool_t | None = ...,\n        inplace: Literal[True],\n    ) -> None:\n        ...\n\n    @overload\n    def rename_axis(\n        self,\n        mapper: IndexLabel | lib.NoDefault = ...,\n        *,\n        index=...,\n        columns=...,\n        axis: Axis = ...,\n        copy: bool_t | None = ...,\n        inplace: bool_t = ...,\n    ) -> Self | None:\n        ...\n\n    def rename_axis(\n        self,\n        mapper: IndexLabel | lib.NoDefault = lib.no_default,\n        *,\n        index=lib.no_default,\n        columns=lib.no_default,\n        axis: Axis = 0,\n        copy: bool_t | None = None,\n        inplace: bool_t = False,\n    ) -> Self | None:\n        \"\"\"\n        Set the name of the axis for the index or columns.\n\n        Parameters\n        ----------\n        mapper : scalar, list-like, optional\n            Value to set the axis name attribute.\n        index, columns : scalar, list-like, dict-like or function, optional\n            A scalar, list-like, dict-like or functions transformations to\n            apply to that axis' values.\n            Note that the ``columns`` parameter is not allowed if the\n            object is a Series. This parameter only apply for DataFrame\n            type objects.\n\n            Use either ``mapper`` and ``axis`` to\n            specify the axis to target with ``mapper``, or ``index``\n            and/or ``columns``.\n        axis : {0 or 'index', 1 or 'columns'}, default 0\n            The axis to rename. For `Series` this parameter is unused and defaults to 0.\n        copy : bool, default None\n            Also copy underlying data.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n        inplace : bool, default False\n            Modifies the object directly, instead of creating a new Series\n            or DataFrame.\n\n        Returns\n        -------\n        Series, DataFrame, or None\n            The same type as the caller or None if ``inplace=True``.\n\n        See Also\n        --------\n        Series.rename : Alter Series index labels or name.\n        DataFrame.rename : Alter DataFrame index labels or name.\n        Index.rename : Set new names on index.\n\n        Notes\n        -----\n        ``DataFrame.rename_axis`` supports two calling conventions\n\n        * ``(index=index_mapper, columns=columns_mapper, ...)``\n        * ``(mapper, axis={'index', 'columns'}, ...)``\n\n        The first calling convention will only modify the names of\n        the index and/or the names of the Index object that is the columns.\n        In this case, the parameter ``copy`` is ignored.\n\n        The second calling convention will modify the names of the\n        corresponding index if mapper is a list or a scalar.\n        However, if mapper is dict-like or a function, it will use the\n        deprecated behavior of modifying the axis *labels*.\n\n        We *highly* recommend using keyword arguments to clarify your\n        intent.\n\n        Examples\n        --------\n        **Series**\n\n        >>> s = pd.Series([\"dog\", \"cat\", \"monkey\"])\n        >>> s\n        0       dog\n        1       cat\n        2    monkey\n        dtype: object\n        >>> s.rename_axis(\"animal\")\n        animal\n        0    dog\n        1    cat\n        2    monkey\n        dtype: object\n\n        **DataFrame**\n\n        >>> df = pd.DataFrame({\"num_legs\": [4, 4, 2],\n        ...                    \"num_arms\": [0, 0, 2]},\n        ...                   [\"dog\", \"cat\", \"monkey\"])\n        >>> df\n                num_legs  num_arms\n        dog            4         0\n        cat            4         0\n        monkey         2         2\n        >>> df = df.rename_axis(\"animal\")\n        >>> df\n                num_legs  num_arms\n        animal\n        dog            4         0\n        cat            4         0\n        monkey         2         2\n        >>> df = df.rename_axis(\"limbs\", axis=\"columns\")\n        >>> df\n        limbs   num_legs  num_arms\n        animal\n        dog            4         0\n        cat            4         0\n        monkey         2         2\n\n        **MultiIndex**\n\n        >>> df.index = pd.MultiIndex.from_product([['mammal'],\n        ...                                        ['dog', 'cat', 'monkey']],\n        ...                                       names=['type', 'name'])\n        >>> df\n        limbs          num_legs  num_arms\n        type   name\n        mammal dog            4         0\n               cat            4         0\n               monkey         2         2\n\n        >>> df.rename_axis(index={'type': 'class'})\n        limbs          num_legs  num_arms\n        class  name\n        mammal dog            4         0\n               cat            4         0\n               monkey         2         2\n\n        >>> df.rename_axis(columns=str.upper)\n        LIMBS          num_legs  num_arms\n        type   name\n        mammal dog            4         0\n               cat            4         0\n               monkey         2         2\n        \"\"\"\n        axes = {\"index\": index, \"columns\": columns}\n\n        if axis is not None:\n            axis = self._get_axis_number(axis)\n\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n        if copy and using_copy_on_write():\n            copy = False\n\n        if mapper is not lib.no_default:\n            # Use v0.23 behavior if a scalar or list\n            non_mapper = is_scalar(mapper) or (\n                is_list_like(mapper) and not is_dict_like(mapper)\n            )\n            if non_mapper:\n                return self._set_axis_name(\n                    mapper, axis=axis, inplace=inplace, copy=copy\n                )\n            else:\n                raise ValueError(\"Use `.rename` to alter labels with a mapper.\")\n        else:\n            # Use new behavior.  Means that index and/or columns\n            # is specified\n            result = self if inplace else self.copy(deep=copy)\n\n            for axis in range(self._AXIS_LEN):\n                v = axes.get(self._get_axis_name(axis))\n                if v is lib.no_default:\n                    continue\n                non_mapper = is_scalar(v) or (is_list_like(v) and not is_dict_like(v))\n                if non_mapper:\n                    newnames = v\n                else:\n                    f = common.get_rename_function(v)\n                    curnames = self._get_axis(axis).names\n                    newnames = [f(name) for name in curnames]\n                result._set_axis_name(newnames, axis=axis, inplace=True, copy=copy)\n            if not inplace:\n                return result\n            return None\n\n    @final\n    def _set_axis_name(\n        self, name, axis: Axis = 0, inplace: bool_t = False, copy: bool_t | None = True\n    ):\n        \"\"\"\n        Set the name(s) of the axis.\n\n        Parameters\n        ----------\n        name : str or list of str\n            Name(s) to set.\n        axis : {0 or 'index', 1 or 'columns'}, default 0\n            The axis to set the label. The value 0 or 'index' specifies index,\n            and the value 1 or 'columns' specifies columns.\n        inplace : bool, default False\n            If `True`, do operation inplace and return None.\n        copy:\n            Whether to make a copy of the result.\n\n        Returns\n        -------\n        Series, DataFrame, or None\n            The same type as the caller or `None` if `inplace` is `True`.\n\n        See Also\n        --------\n        DataFrame.rename : Alter the axis labels of :class:`DataFrame`.\n        Series.rename : Alter the index labels or set the index name\n            of :class:`Series`.\n        Index.rename : Set the name of :class:`Index` or :class:`MultiIndex`.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({\"num_legs\": [4, 4, 2]},\n        ...                   [\"dog\", \"cat\", \"monkey\"])\n        >>> df\n                num_legs\n        dog            4\n        cat            4\n        monkey         2\n        >>> df._set_axis_name(\"animal\")\n                num_legs\n        animal\n        dog            4\n        cat            4\n        monkey         2\n        >>> df.index = pd.MultiIndex.from_product(\n        ...                [[\"mammal\"], ['dog', 'cat', 'monkey']])\n        >>> df._set_axis_name([\"type\", \"name\"])\n                       num_legs\n        type   name\n        mammal dog        4\n               cat        4\n               monkey     2\n        \"\"\"\n        axis = self._get_axis_number(axis)\n        idx = self._get_axis(axis).set_names(name)\n\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        renamed = self if inplace else self.copy(deep=copy)\n        if axis == 0:\n            renamed.index = idx\n        else:\n            renamed.columns = idx\n\n        if not inplace:\n            return renamed\n\n    # ----------------------------------------------------------------------\n    # Comparison Methods\n\n    @final\n    def _indexed_same(self, other) -> bool_t:\n        return all(\n            self._get_axis(a).equals(other._get_axis(a)) for a in self._AXIS_ORDERS\n        )\n\n    @final\n    def equals(self, other: object) -> bool_t:\n        \"\"\"\n        Test whether two objects contain the same elements.\n\n        This function allows two Series or DataFrames to be compared against\n        each other to see if they have the same shape and elements. NaNs in\n        the same location are considered equal.\n\n        The row/column index do not need to have the same type, as long\n        as the values are considered equal. Corresponding columns and\n        index must be of the same dtype.\n\n        Parameters\n        ----------\n        other : Series or DataFrame\n            The other Series or DataFrame to be compared with the first.\n\n        Returns\n        -------\n        bool\n            True if all elements are the same in both objects, False\n            otherwise.\n\n        See Also\n        --------\n        Series.eq : Compare two Series objects of the same length\n            and return a Series where each element is True if the element\n            in each Series is equal, False otherwise.\n        DataFrame.eq : Compare two DataFrame objects of the same shape and\n            return a DataFrame where each element is True if the respective\n            element in each DataFrame is equal, False otherwise.\n        testing.assert_series_equal : Raises an AssertionError if left and\n            right are not equal. Provides an easy interface to ignore\n            inequality in dtypes, indexes and precision among others.\n        testing.assert_frame_equal : Like assert_series_equal, but targets\n            DataFrames.\n        numpy.array_equal : Return True if two arrays have the same shape\n            and elements, False otherwise.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({1: [10], 2: [20]})\n        >>> df\n            1   2\n        0  10  20\n\n        DataFrames df and exactly_equal have the same types and values for\n        their elements and column labels, which will return True.\n\n        >>> exactly_equal = pd.DataFrame({1: [10], 2: [20]})\n        >>> exactly_equal\n            1   2\n        0  10  20\n        >>> df.equals(exactly_equal)\n        True\n\n        DataFrames df and different_column_type have the same element\n        types and values, but have different types for the column labels,\n        which will still return True.\n\n        >>> different_column_type = pd.DataFrame({1.0: [10], 2.0: [20]})\n        >>> different_column_type\n           1.0  2.0\n        0   10   20\n        >>> df.equals(different_column_type)\n        True\n\n        DataFrames df and different_data_type have different types for the\n        same values for their elements, and will return False even though\n        their column labels are the same values and types.\n\n        >>> different_data_type = pd.DataFrame({1: [10.0], 2: [20.0]})\n        >>> different_data_type\n              1     2\n        0  10.0  20.0\n        >>> df.equals(different_data_type)\n        False\n        \"\"\"\n        if not (isinstance(other, type(self)) or isinstance(self, type(other))):\n            return False\n        other = cast(NDFrame, other)\n        return self._mgr.equals(other._mgr)\n\n    # -------------------------------------------------------------------------\n    # Unary Methods\n\n    @final\n    def __neg__(self) -> Self:\n        def blk_func(values: ArrayLike):\n            if is_bool_dtype(values.dtype):\n                # error: Argument 1 to \"inv\" has incompatible type \"Union\n                # [ExtensionArray, ndarray[Any, Any]]\"; expected\n                # \"_SupportsInversion[ndarray[Any, dtype[bool_]]]\"\n                return operator.inv(values)  # type: ignore[arg-type]\n            else:\n                # error: Argument 1 to \"neg\" has incompatible type \"Union\n                # [ExtensionArray, ndarray[Any, Any]]\"; expected\n                # \"_SupportsNeg[ndarray[Any, dtype[Any]]]\"\n                return operator.neg(values)  # type: ignore[arg-type]\n\n        new_data = self._mgr.apply(blk_func)\n        res = self._constructor_from_mgr(new_data, axes=new_data.axes)\n        return res.__finalize__(self, method=\"__neg__\")\n\n    @final\n    def __pos__(self) -> Self:\n        def blk_func(values: ArrayLike):\n            if is_bool_dtype(values.dtype):\n                return values.copy()\n            else:\n                # error: Argument 1 to \"pos\" has incompatible type \"Union\n                # [ExtensionArray, ndarray[Any, Any]]\"; expected\n                # \"_SupportsPos[ndarray[Any, dtype[Any]]]\"\n                return operator.pos(values)  # type: ignore[arg-type]\n\n        new_data = self._mgr.apply(blk_func)\n        res = self._constructor_from_mgr(new_data, axes=new_data.axes)\n        return res.__finalize__(self, method=\"__pos__\")\n\n    @final\n    def __invert__(self) -> Self:\n        if not self.size:\n            # inv fails with 0 len\n            return self.copy(deep=False)\n\n        new_data = self._mgr.apply(operator.invert)\n        res = self._constructor_from_mgr(new_data, axes=new_data.axes)\n        return res.__finalize__(self, method=\"__invert__\")\n\n    @final\n    def __nonzero__(self) -> NoReturn:\n        raise ValueError(\n            f\"The truth value of a {type(self).__name__} is ambiguous. \"\n            \"Use a.empty, a.bool(), a.item(), a.any() or a.all().\"\n        )\n\n    __bool__ = __nonzero__\n\n    @final\n    def bool(self) -> bool_t:\n        \"\"\"\n        Return the bool of a single element Series or DataFrame.\n\n        .. deprecated:: 2.1.0\n\n           bool is deprecated and will be removed in future version of pandas.\n           For ``Series`` use ``pandas.Series.item``.\n\n        This must be a boolean scalar value, either True or False. It will raise a\n        ValueError if the Series or DataFrame does not have exactly 1 element, or that\n        element is not boolean (integer values 0 and 1 will also raise an exception).\n\n        Returns\n        -------\n        bool\n            The value in the Series or DataFrame.\n\n        See Also\n        --------\n        Series.astype : Change the data type of a Series, including to boolean.\n        DataFrame.astype : Change the data type of a DataFrame, including to boolean.\n        numpy.bool_ : NumPy boolean data type, used by pandas for boolean values.\n\n        Examples\n        --------\n        The method will only work for single element objects with a boolean value:\n\n        >>> pd.Series([True]).bool()  # doctest: +SKIP\n        True\n        >>> pd.Series([False]).bool()  # doctest: +SKIP\n        False\n\n        >>> pd.DataFrame({'col': [True]}).bool()  # doctest: +SKIP\n        True\n        >>> pd.DataFrame({'col': [False]}).bool()  # doctest: +SKIP\n        False\n\n        This is an alternative method and will only work\n        for single element objects with a boolean value:\n\n        >>> pd.Series([True]).item()  # doctest: +SKIP\n        True\n        >>> pd.Series([False]).item()  # doctest: +SKIP\n        False\n        \"\"\"\n\n        warnings.warn(\n            f\"{type(self).__name__}.bool is now deprecated and will be removed \"\n            \"in future version of pandas\",\n            FutureWarning,\n            stacklevel=find_stack_level(),\n        )\n        v = self.squeeze()\n        if isinstance(v, (bool, np.bool_)):\n            return bool(v)\n        elif is_scalar(v):\n            raise ValueError(\n                \"bool cannot act on a non-boolean single element \"\n                f\"{type(self).__name__}\"\n            )\n\n        self.__nonzero__()\n        # for mypy (__nonzero__ raises)\n        return True\n\n    @final\n    def abs(self) -> Self:\n        \"\"\"\n        Return a Series/DataFrame with absolute numeric value of each element.\n\n        This function only applies to elements that are all numeric.\n\n        Returns\n        -------\n        abs\n            Series/DataFrame containing the absolute value of each element.\n\n        See Also\n        --------\n        numpy.absolute : Calculate the absolute value element-wise.\n\n        Notes\n        -----\n        For ``complex`` inputs, ``1.2 + 1j``, the absolute value is\n        :math:`\\\\sqrt{ a^2 + b^2 }`.\n\n        Examples\n        --------\n        Absolute numeric values in a Series.\n\n        >>> s = pd.Series([-1.10, 2, -3.33, 4])\n        >>> s.abs()\n        0    1.10\n        1    2.00\n        2    3.33\n        3    4.00\n        dtype: float64\n\n        Absolute numeric values in a Series with complex numbers.\n\n        >>> s = pd.Series([1.2 + 1j])\n        >>> s.abs()\n        0    1.56205\n        dtype: float64\n\n        Absolute numeric values in a Series with a Timedelta element.\n\n        >>> s = pd.Series([pd.Timedelta('1 days')])\n        >>> s.abs()\n        0   1 days\n        dtype: timedelta64[ns]\n\n        Select rows with data closest to certain value using argsort (from\n        `StackOverflow <https://stackoverflow.com/a/17758115>`__).\n\n        >>> df = pd.DataFrame({\n        ...     'a': [4, 5, 6, 7],\n        ...     'b': [10, 20, 30, 40],\n        ...     'c': [100, 50, -30, -50]\n        ... })\n        >>> df\n             a    b    c\n        0    4   10  100\n        1    5   20   50\n        2    6   30  -30\n        3    7   40  -50\n        >>> df.loc[(df.c - 43).abs().argsort()]\n             a    b    c\n        1    5   20   50\n        0    4   10  100\n        2    6   30  -30\n        3    7   40  -50\n        \"\"\"\n        res_mgr = self._mgr.apply(np.abs)\n        return self._constructor_from_mgr(res_mgr, axes=res_mgr.axes).__finalize__(\n            self, name=\"abs\"\n        )\n\n    @final\n    def __abs__(self) -> Self:\n        return self.abs()\n\n    @final\n    def __round__(self, decimals: int = 0) -> Self:\n        return self.round(decimals).__finalize__(self, method=\"__round__\")\n\n    # -------------------------------------------------------------------------\n    # Label or Level Combination Helpers\n    #\n    # A collection of helper methods for DataFrame/Series operations that\n    # accept a combination of column/index labels and levels.  All such\n    # operations should utilize/extend these methods when possible so that we\n    # have consistent precedence and validation logic throughout the library.\n\n    @final\n    def _is_level_reference(self, key: Level, axis: Axis = 0) -> bool_t:\n        \"\"\"\n        Test whether a key is a level reference for a given axis.\n\n        To be considered a level reference, `key` must be a string that:\n          - (axis=0): Matches the name of an index level and does NOT match\n            a column label.\n          - (axis=1): Matches the name of a column level and does NOT match\n            an index label.\n\n        Parameters\n        ----------\n        key : Hashable\n            Potential level name for the given axis\n        axis : int, default 0\n            Axis that levels are associated with (0 for index, 1 for columns)\n\n        Returns\n        -------\n        is_level : bool\n        \"\"\"\n        axis_int = self._get_axis_number(axis)\n\n        return (\n            key is not None\n            and is_hashable(key)\n            and key in self.axes[axis_int].names\n            and not self._is_label_reference(key, axis=axis_int)\n        )\n\n    @final\n    def _is_label_reference(self, key: Level, axis: Axis = 0) -> bool_t:\n        \"\"\"\n        Test whether a key is a label reference for a given axis.\n\n        To be considered a label reference, `key` must be a string that:\n          - (axis=0): Matches a column label\n          - (axis=1): Matches an index label\n\n        Parameters\n        ----------\n        key : Hashable\n            Potential label name, i.e. Index entry.\n        axis : int, default 0\n            Axis perpendicular to the axis that labels are associated with\n            (0 means search for column labels, 1 means search for index labels)\n\n        Returns\n        -------\n        is_label: bool\n        \"\"\"\n        axis_int = self._get_axis_number(axis)\n        other_axes = (ax for ax in range(self._AXIS_LEN) if ax != axis_int)\n\n        return (\n            key is not None\n            and is_hashable(key)\n            and any(key in self.axes[ax] for ax in other_axes)\n        )\n\n    @final\n    def _is_label_or_level_reference(self, key: Level, axis: AxisInt = 0) -> bool_t:\n        \"\"\"\n        Test whether a key is a label or level reference for a given axis.\n\n        To be considered either a label or a level reference, `key` must be a\n        string that:\n          - (axis=0): Matches a column label or an index level\n          - (axis=1): Matches an index label or a column level\n\n        Parameters\n        ----------\n        key : Hashable\n            Potential label or level name\n        axis : int, default 0\n            Axis that levels are associated with (0 for index, 1 for columns)\n\n        Returns\n        -------\n        bool\n        \"\"\"\n        return self._is_level_reference(key, axis=axis) or self._is_label_reference(\n            key, axis=axis\n        )\n\n    @final\n    def _check_label_or_level_ambiguity(self, key: Level, axis: Axis = 0) -> None:\n        \"\"\"\n        Check whether `key` is ambiguous.\n\n        By ambiguous, we mean that it matches both a level of the input\n        `axis` and a label of the other axis.\n\n        Parameters\n        ----------\n        key : Hashable\n            Label or level name.\n        axis : int, default 0\n            Axis that levels are associated with (0 for index, 1 for columns).\n\n        Raises\n        ------\n        ValueError: `key` is ambiguous\n        \"\"\"\n\n        axis_int = self._get_axis_number(axis)\n        other_axes = (ax for ax in range(self._AXIS_LEN) if ax != axis_int)\n\n        if (\n            key is not None\n            and is_hashable(key)\n            and key in self.axes[axis_int].names\n            and any(key in self.axes[ax] for ax in other_axes)\n        ):\n            # Build an informative and grammatical warning\n            level_article, level_type = (\n                (\"an\", \"index\") if axis_int == 0 else (\"a\", \"column\")\n            )\n\n            label_article, label_type = (\n                (\"a\", \"column\") if axis_int == 0 else (\"an\", \"index\")\n            )\n\n            msg = (\n                f\"'{key}' is both {level_article} {level_type} level and \"\n                f\"{label_article} {label_type} label, which is ambiguous.\"\n            )\n            raise ValueError(msg)\n\n    @final\n    def _get_label_or_level_values(self, key: Level, axis: AxisInt = 0) -> ArrayLike:\n        \"\"\"\n        Return a 1-D array of values associated with `key`, a label or level\n        from the given `axis`.\n\n        Retrieval logic:\n          - (axis=0): Return column values if `key` matches a column label.\n            Otherwise return index level values if `key` matches an index\n            level.\n          - (axis=1): Return row values if `key` matches an index label.\n            Otherwise return column level values if 'key' matches a column\n            level\n\n        Parameters\n        ----------\n        key : Hashable\n            Label or level name.\n        axis : int, default 0\n            Axis that levels are associated with (0 for index, 1 for columns)\n\n        Returns\n        -------\n        np.ndarray or ExtensionArray\n\n        Raises\n        ------\n        KeyError\n            if `key` matches neither a label nor a level\n        ValueError\n            if `key` matches multiple labels\n        \"\"\"\n        axis = self._get_axis_number(axis)\n        other_axes = [ax for ax in range(self._AXIS_LEN) if ax != axis]\n\n        if self._is_label_reference(key, axis=axis):\n            self._check_label_or_level_ambiguity(key, axis=axis)\n            values = self.xs(key, axis=other_axes[0])._values\n        elif self._is_level_reference(key, axis=axis):\n            values = self.axes[axis].get_level_values(key)._values\n        else:\n            raise KeyError(key)\n\n        # Check for duplicates\n        if values.ndim > 1:\n            if other_axes and isinstance(self._get_axis(other_axes[0]), MultiIndex):\n                multi_message = (\n                    \"\\n\"\n                    \"For a multi-index, the label must be a \"\n                    \"tuple with elements corresponding to each level.\"\n                )\n            else:\n                multi_message = \"\"\n\n            label_axis_name = \"column\" if axis == 0 else \"index\"\n            raise ValueError(\n                f\"The {label_axis_name} label '{key}' is not unique.{multi_message}\"\n            )\n\n        return values\n\n    @final\n    def _drop_labels_or_levels(self, keys, axis: AxisInt = 0):\n        \"\"\"\n        Drop labels and/or levels for the given `axis`.\n\n        For each key in `keys`:\n          - (axis=0): If key matches a column label then drop the column.\n            Otherwise if key matches an index level then drop the level.\n          - (axis=1): If key matches an index label then drop the row.\n            Otherwise if key matches a column level then drop the level.\n\n        Parameters\n        ----------\n        keys : str or list of str\n            labels or levels to drop\n        axis : int, default 0\n            Axis that levels are associated with (0 for index, 1 for columns)\n\n        Returns\n        -------\n        dropped: DataFrame\n\n        Raises\n        ------\n        ValueError\n            if any `keys` match neither a label nor a level\n        \"\"\"\n        axis = self._get_axis_number(axis)\n\n        # Validate keys\n        keys = common.maybe_make_list(keys)\n        invalid_keys = [\n            k for k in keys if not self._is_label_or_level_reference(k, axis=axis)\n        ]\n\n        if invalid_keys:\n            raise ValueError(\n                \"The following keys are not valid labels or \"\n                f\"levels for axis {axis}: {invalid_keys}\"\n            )\n\n        # Compute levels and labels to drop\n        levels_to_drop = [k for k in keys if self._is_level_reference(k, axis=axis)]\n\n        labels_to_drop = [k for k in keys if not self._is_level_reference(k, axis=axis)]\n\n        # Perform copy upfront and then use inplace operations below.\n        # This ensures that we always perform exactly one copy.\n        # ``copy`` and/or ``inplace`` options could be added in the future.\n        dropped = self.copy(deep=False)\n\n        if axis == 0:\n            # Handle dropping index levels\n            if levels_to_drop:\n                dropped.reset_index(levels_to_drop, drop=True, inplace=True)\n\n            # Handle dropping columns labels\n            if labels_to_drop:\n                dropped.drop(labels_to_drop, axis=1, inplace=True)\n        else:\n            # Handle dropping column levels\n            if levels_to_drop:\n                if isinstance(dropped.columns, MultiIndex):\n                    # Drop the specified levels from the MultiIndex\n                    dropped.columns = dropped.columns.droplevel(levels_to_drop)\n                else:\n                    # Drop the last level of Index by replacing with\n                    # a RangeIndex\n                    dropped.columns = RangeIndex(dropped.columns.size)\n\n            # Handle dropping index labels\n            if labels_to_drop:\n                dropped.drop(labels_to_drop, axis=0, inplace=True)\n\n        return dropped\n\n    # ----------------------------------------------------------------------\n    # Iteration\n\n    # https://github.com/python/typeshed/issues/2148#issuecomment-520783318\n    # Incompatible types in assignment (expression has type \"None\", base class\n    # \"object\" defined the type as \"Callable[[object], int]\")\n    __hash__: ClassVar[None]  # type: ignore[assignment]\n\n    def __iter__(self) -> Iterator:\n        \"\"\"\n        Iterate over info axis.\n\n        Returns\n        -------\n        iterator\n            Info axis as iterator.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]})\n        >>> for x in df:\n        ...     print(x)\n        A\n        B\n        \"\"\"\n        return iter(self._info_axis)\n\n    # can we get a better explanation of this?\n    def keys(self) -> Index:\n        \"\"\"\n        Get the 'info axis' (see Indexing for more).\n\n        This is index for Series, columns for DataFrame.\n\n        Returns\n        -------\n        Index\n            Info axis.\n\n        Examples\n        --------\n        >>> d = pd.DataFrame(data={'A': [1, 2, 3], 'B': [0, 4, 8]},\n        ...                  index=['a', 'b', 'c'])\n        >>> d\n           A  B\n        a  1  0\n        b  2  4\n        c  3  8\n        >>> d.keys()\n        Index(['A', 'B'], dtype='object')\n        \"\"\"\n        return self._info_axis\n\n    def items(self):\n        \"\"\"\n        Iterate over (label, values) on info axis\n\n        This is index for Series and columns for DataFrame.\n\n        Returns\n        -------\n        Generator\n        \"\"\"\n        for h in self._info_axis:\n            yield h, self[h]\n\n    def __len__(self) -> int:\n        \"\"\"Returns length of info axis\"\"\"\n        return len(self._info_axis)\n\n    @final\n    def __contains__(self, key) -> bool_t:\n        \"\"\"True if the key is in the info axis\"\"\"\n        return key in self._info_axis\n\n    @property\n    def empty(self) -> bool_t:\n        \"\"\"\n        Indicator whether Series/DataFrame is empty.\n\n        True if Series/DataFrame is entirely empty (no items), meaning any of the\n        axes are of length 0.\n\n        Returns\n        -------\n        bool\n            If Series/DataFrame is empty, return True, if not return False.\n\n        See Also\n        --------\n        Series.dropna : Return series without null values.\n        DataFrame.dropna : Return DataFrame with labels on given axis omitted\n            where (all or any) data are missing.\n\n        Notes\n        -----\n        If Series/DataFrame contains only NaNs, it is still not considered empty. See\n        the example below.\n\n        Examples\n        --------\n        An example of an actual empty DataFrame. Notice the index is empty:\n\n        >>> df_empty = pd.DataFrame({'A' : []})\n        >>> df_empty\n        Empty DataFrame\n        Columns: [A]\n        Index: []\n        >>> df_empty.empty\n        True\n\n        If we only have NaNs in our DataFrame, it is not considered empty! We\n        will need to drop the NaNs to make the DataFrame empty:\n\n        >>> df = pd.DataFrame({'A' : [np.nan]})\n        >>> df\n            A\n        0 NaN\n        >>> df.empty\n        False\n        >>> df.dropna().empty\n        True\n\n        >>> ser_empty = pd.Series({'A' : []})\n        >>> ser_empty\n        A    []\n        dtype: object\n        >>> ser_empty.empty\n        False\n        >>> ser_empty = pd.Series()\n        >>> ser_empty.empty\n        True\n        \"\"\"\n        return any(len(self._get_axis(a)) == 0 for a in self._AXIS_ORDERS)\n\n    # ----------------------------------------------------------------------\n    # Array Interface\n\n    # This is also set in IndexOpsMixin\n    # GH#23114 Ensure ndarray.__op__(DataFrame) returns NotImplemented\n    __array_priority__: int = 1000\n\n    def __array__(self, dtype: npt.DTypeLike | None = None) -> np.ndarray:\n        values = self._values\n        arr = np.asarray(values, dtype=dtype)\n        if (\n            astype_is_view(values.dtype, arr.dtype)\n            and using_copy_on_write()\n            and self._mgr.is_single_block\n        ):\n            # Check if both conversions can be done without a copy\n            if astype_is_view(self.dtypes.iloc[0], values.dtype) and astype_is_view(\n                values.dtype, arr.dtype\n            ):\n                arr = arr.view()\n                arr.flags.writeable = False\n        return arr\n\n    @final\n    def __array_ufunc__(\n        self, ufunc: np.ufunc, method: str, *inputs: Any, **kwargs: Any\n    ):\n        return arraylike.array_ufunc(self, ufunc, method, *inputs, **kwargs)\n\n    # ----------------------------------------------------------------------\n    # Picklability\n\n    @final\n    def __getstate__(self) -> dict[str, Any]:\n        meta = {k: getattr(self, k, None) for k in self._metadata}\n        return {\n            \"_mgr\": self._mgr,\n            \"_typ\": self._typ,\n            \"_metadata\": self._metadata,\n            \"attrs\": self.attrs,\n            \"_flags\": {k: self.flags[k] for k in self.flags._keys},\n            **meta,\n        }\n\n    @final\n    def __setstate__(self, state) -> None:\n        if isinstance(state, BlockManager):\n            self._mgr = state\n        elif isinstance(state, dict):\n            if \"_data\" in state and \"_mgr\" not in state:\n                # compat for older pickles\n                state[\"_mgr\"] = state.pop(\"_data\")\n            typ = state.get(\"_typ\")\n            if typ is not None:\n                attrs = state.get(\"_attrs\", {})\n                if attrs is None:  # should not happen, but better be on the safe side\n                    attrs = {}\n                object.__setattr__(self, \"_attrs\", attrs)\n                flags = state.get(\"_flags\", {\"allows_duplicate_labels\": True})\n                object.__setattr__(self, \"_flags\", Flags(self, **flags))\n\n                # set in the order of internal names\n                # to avoid definitional recursion\n                # e.g. say fill_value needing _mgr to be\n                # defined\n                meta = set(self._internal_names + self._metadata)\n                for k in list(meta):\n                    if k in state and k != \"_flags\":\n                        v = state[k]\n                        object.__setattr__(self, k, v)\n\n                for k, v in state.items():\n                    if k not in meta:\n                        object.__setattr__(self, k, v)\n\n            else:\n                raise NotImplementedError(\"Pre-0.12 pickles are no longer supported\")\n        elif len(state) == 2:\n            raise NotImplementedError(\"Pre-0.12 pickles are no longer supported\")\n\n        self._item_cache: dict[Hashable, Series] = {}\n\n    # ----------------------------------------------------------------------\n    # Rendering Methods\n\n    def __repr__(self) -> str:\n        # string representation based upon iterating over self\n        # (since, by definition, `PandasContainers` are iterable)\n        prepr = f\"[{','.join(map(pprint_thing, self))}]\"\n        return f\"{type(self).__name__}({prepr})\"\n\n    @final\n    def _repr_latex_(self):\n        \"\"\"\n        Returns a LaTeX representation for a particular object.\n        Mainly for use with nbconvert (jupyter notebook conversion to pdf).\n        \"\"\"\n        if config.get_option(\"styler.render.repr\") == \"latex\":\n            return self.to_latex()\n        else:\n            return None\n\n    @final\n    def _repr_data_resource_(self):\n        \"\"\"\n        Not a real Jupyter special repr method, but we use the same\n        naming convention.\n        \"\"\"\n        if config.get_option(\"display.html.table_schema\"):\n            data = self.head(config.get_option(\"display.max_rows\"))\n\n            as_json = data.to_json(orient=\"table\")\n            as_json = cast(str, as_json)\n            return loads(as_json, object_pairs_hook=collections.OrderedDict)\n\n    # ----------------------------------------------------------------------\n    # I/O Methods\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\", \"excel_writer\"], name=\"to_excel\"\n    )\n    @doc(\n        klass=\"object\",\n        storage_options=_shared_docs[\"storage_options\"],\n        storage_options_versionadded=\"1.2.0\",\n    )\n    def to_excel(\n        self,\n        excel_writer: FilePath | WriteExcelBuffer | ExcelWriter,\n        sheet_name: str = \"Sheet1\",\n        na_rep: str = \"\",\n        float_format: str | None = None,\n        columns: Sequence[Hashable] | None = None,\n        header: Sequence[Hashable] | bool_t = True,\n        index: bool_t = True,\n        index_label: IndexLabel | None = None,\n        startrow: int = 0,\n        startcol: int = 0,\n        engine: Literal[\"openpyxl\", \"xlsxwriter\"] | None = None,\n        merge_cells: bool_t = True,\n        inf_rep: str = \"inf\",\n        freeze_panes: tuple[int, int] | None = None,\n        storage_options: StorageOptions | None = None,\n        engine_kwargs: dict[str, Any] | None = None,\n    ) -> None:\n        \"\"\"\n        Write {klass} to an Excel sheet.\n\n        To write a single {klass} to an Excel .xlsx file it is only necessary to\n        specify a target file name. To write to multiple sheets it is necessary to\n        create an `ExcelWriter` object with a target file name, and specify a sheet\n        in the file to write to.\n\n        Multiple sheets may be written to by specifying unique `sheet_name`.\n        With all data written to the file it is necessary to save the changes.\n        Note that creating an `ExcelWriter` object with a file name that already\n        exists will result in the contents of the existing file being erased.\n\n        Parameters\n        ----------\n        excel_writer : path-like, file-like, or ExcelWriter object\n            File path or existing ExcelWriter.\n        sheet_name : str, default 'Sheet1'\n            Name of sheet which will contain DataFrame.\n        na_rep : str, default ''\n            Missing data representation.\n        float_format : str, optional\n            Format string for floating point numbers. For example\n            ``float_format=\"%.2f\"`` will format 0.1234 to 0.12.\n        columns : sequence or list of str, optional\n            Columns to write.\n        header : bool or list of str, default True\n            Write out the column names. If a list of string is given it is\n            assumed to be aliases for the column names.\n        index : bool, default True\n            Write row names (index).\n        index_label : str or sequence, optional\n            Column label for index column(s) if desired. If not specified, and\n            `header` and `index` are True, then the index names are used. A\n            sequence should be given if the DataFrame uses MultiIndex.\n        startrow : int, default 0\n            Upper left cell row to dump data frame.\n        startcol : int, default 0\n            Upper left cell column to dump data frame.\n        engine : str, optional\n            Write engine to use, 'openpyxl' or 'xlsxwriter'. You can also set this\n            via the options ``io.excel.xlsx.writer`` or\n            ``io.excel.xlsm.writer``.\n\n        merge_cells : bool, default True\n            Write MultiIndex and Hierarchical Rows as merged cells.\n        inf_rep : str, default 'inf'\n            Representation for infinity (there is no native representation for\n            infinity in Excel).\n        freeze_panes : tuple of int (length 2), optional\n            Specifies the one-based bottommost row and rightmost column that\n            is to be frozen.\n        {storage_options}\n\n            .. versionadded:: {storage_options_versionadded}\n        engine_kwargs : dict, optional\n            Arbitrary keyword arguments passed to excel engine.\n\n        See Also\n        --------\n        to_csv : Write DataFrame to a comma-separated values (csv) file.\n        ExcelWriter : Class for writing DataFrame objects into excel sheets.\n        read_excel : Read an Excel file into a pandas DataFrame.\n        read_csv : Read a comma-separated values (csv) file into DataFrame.\n        io.formats.style.Styler.to_excel : Add styles to Excel sheet.\n\n        Notes\n        -----\n        For compatibility with :meth:`~DataFrame.to_csv`,\n        to_excel serializes lists and dicts to strings before writing.\n\n        Once a workbook has been saved it is not possible to write further\n        data without rewriting the whole workbook.\n\n        Examples\n        --------\n\n        Create, write to and save a workbook:\n\n        >>> df1 = pd.DataFrame([['a', 'b'], ['c', 'd']],\n        ...                    index=['row 1', 'row 2'],\n        ...                    columns=['col 1', 'col 2'])\n        >>> df1.to_excel(\"output.xlsx\")  # doctest: +SKIP\n\n        To specify the sheet name:\n\n        >>> df1.to_excel(\"output.xlsx\",\n        ...              sheet_name='Sheet_name_1')  # doctest: +SKIP\n\n        If you wish to write to more than one sheet in the workbook, it is\n        necessary to specify an ExcelWriter object:\n\n        >>> df2 = df1.copy()\n        >>> with pd.ExcelWriter('output.xlsx') as writer:  # doctest: +SKIP\n        ...     df1.to_excel(writer, sheet_name='Sheet_name_1')\n        ...     df2.to_excel(writer, sheet_name='Sheet_name_2')\n\n        ExcelWriter can also be used to append to an existing Excel file:\n\n        >>> with pd.ExcelWriter('output.xlsx',\n        ...                     mode='a') as writer:  # doctest: +SKIP\n        ...     df1.to_excel(writer, sheet_name='Sheet_name_3')\n\n        To set the library that is used to write the Excel file,\n        you can pass the `engine` keyword (the default engine is\n        automatically chosen depending on the file extension):\n\n        >>> df1.to_excel('output1.xlsx', engine='xlsxwriter')  # doctest: +SKIP\n        \"\"\"\n        if engine_kwargs is None:\n            engine_kwargs = {}\n\n        df = self if isinstance(self, ABCDataFrame) else self.to_frame()\n\n        from pandas.io.formats.excel import ExcelFormatter\n\n        formatter = ExcelFormatter(\n            df,\n            na_rep=na_rep,\n            cols=columns,\n            header=header,\n            float_format=float_format,\n            index=index,\n            index_label=index_label,\n            merge_cells=merge_cells,\n            inf_rep=inf_rep,\n        )\n        formatter.write(\n            excel_writer,\n            sheet_name=sheet_name,\n            startrow=startrow,\n            startcol=startcol,\n            freeze_panes=freeze_panes,\n            engine=engine,\n            storage_options=storage_options,\n            engine_kwargs=engine_kwargs,\n        )\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\", \"path_or_buf\"], name=\"to_json\"\n    )\n    @doc(\n        storage_options=_shared_docs[\"storage_options\"],\n        compression_options=_shared_docs[\"compression_options\"] % \"path_or_buf\",\n    )\n    def to_json(\n        self,\n        path_or_buf: FilePath | WriteBuffer[bytes] | WriteBuffer[str] | None = None,\n        orient: Literal[\"split\", \"records\", \"index\", \"table\", \"columns\", \"values\"]\n        | None = None,\n        date_format: str | None = None,\n        double_precision: int = 10,\n        force_ascii: bool_t = True,\n        date_unit: TimeUnit = \"ms\",\n        default_handler: Callable[[Any], JSONSerializable] | None = None,\n        lines: bool_t = False,\n        compression: CompressionOptions = \"infer\",\n        index: bool_t | None = None,\n        indent: int | None = None,\n        storage_options: StorageOptions | None = None,\n        mode: Literal[\"a\", \"w\"] = \"w\",\n    ) -> str | None:\n        \"\"\"\n        Convert the object to a JSON string.\n\n        Note NaN's and None will be converted to null and datetime objects\n        will be converted to UNIX timestamps.\n\n        Parameters\n        ----------\n        path_or_buf : str, path object, file-like object, or None, default None\n            String, path object (implementing os.PathLike[str]), or file-like\n            object implementing a write() function. If None, the result is\n            returned as a string.\n        orient : str\n            Indication of expected JSON string format.\n\n            * Series:\n\n                - default is 'index'\n                - allowed values are: {{'split', 'records', 'index', 'table'}}.\n\n            * DataFrame:\n\n                - default is 'columns'\n                - allowed values are: {{'split', 'records', 'index', 'columns',\n                  'values', 'table'}}.\n\n            * The format of the JSON string:\n\n                - 'split' : dict like {{'index' -> [index], 'columns' -> [columns],\n                  'data' -> [values]}}\n                - 'records' : list like [{{column -> value}}, ... , {{column -> value}}]\n                - 'index' : dict like {{index -> {{column -> value}}}}\n                - 'columns' : dict like {{column -> {{index -> value}}}}\n                - 'values' : just the values array\n                - 'table' : dict like {{'schema': {{schema}}, 'data': {{data}}}}\n\n                Describing the data, where data component is like ``orient='records'``.\n\n        date_format : {{None, 'epoch', 'iso'}}\n            Type of date conversion. 'epoch' = epoch milliseconds,\n            'iso' = ISO8601. The default depends on the `orient`. For\n            ``orient='table'``, the default is 'iso'. For all other orients,\n            the default is 'epoch'.\n        double_precision : int, default 10\n            The number of decimal places to use when encoding\n            floating point values. The possible maximal value is 15.\n            Passing double_precision greater than 15 will raise a ValueError.\n        force_ascii : bool, default True\n            Force encoded string to be ASCII.\n        date_unit : str, default 'ms' (milliseconds)\n            The time unit to encode to, governs timestamp and ISO8601\n            precision.  One of 's', 'ms', 'us', 'ns' for second, millisecond,\n            microsecond, and nanosecond respectively.\n        default_handler : callable, default None\n            Handler to call if object cannot otherwise be converted to a\n            suitable format for JSON. Should receive a single argument which is\n            the object to convert and return a serialisable object.\n        lines : bool, default False\n            If 'orient' is 'records' write out line-delimited json format. Will\n            throw ValueError if incorrect 'orient' since others are not\n            list-like.\n        {compression_options}\n\n            .. versionchanged:: 1.4.0 Zstandard support.\n\n        index : bool or None, default None\n            The index is only used when 'orient' is 'split', 'index', 'column',\n            or 'table'. Of these, 'index' and 'column' do not support\n            `index=False`.\n\n        indent : int, optional\n           Length of whitespace used to indent each record.\n\n        {storage_options}\n\n        mode : str, default 'w' (writing)\n            Specify the IO mode for output when supplying a path_or_buf.\n            Accepted args are 'w' (writing) and 'a' (append) only.\n            mode='a' is only supported when lines is True and orient is 'records'.\n\n        Returns\n        -------\n        None or str\n            If path_or_buf is None, returns the resulting json format as a\n            string. Otherwise returns None.\n\n        See Also\n        --------\n        read_json : Convert a JSON string to pandas object.\n\n        Notes\n        -----\n        The behavior of ``indent=0`` varies from the stdlib, which does not\n        indent the output but does insert newlines. Currently, ``indent=0``\n        and the default ``indent=None`` are equivalent in pandas, though this\n        may change in a future release.\n\n        ``orient='table'`` contains a 'pandas_version' field under 'schema'.\n        This stores the version of `pandas` used in the latest revision of the\n        schema.\n\n        Examples\n        --------\n        >>> from json import loads, dumps\n        >>> df = pd.DataFrame(\n        ...     [[\"a\", \"b\"], [\"c\", \"d\"]],\n        ...     index=[\"row 1\", \"row 2\"],\n        ...     columns=[\"col 1\", \"col 2\"],\n        ... )\n\n        >>> result = df.to_json(orient=\"split\")\n        >>> parsed = loads(result)\n        >>> dumps(parsed, indent=4)  # doctest: +SKIP\n        {{\n            \"columns\": [\n                \"col 1\",\n                \"col 2\"\n            ],\n            \"index\": [\n                \"row 1\",\n                \"row 2\"\n            ],\n            \"data\": [\n                [\n                    \"a\",\n                    \"b\"\n                ],\n                [\n                    \"c\",\n                    \"d\"\n                ]\n            ]\n        }}\n\n        Encoding/decoding a Dataframe using ``'records'`` formatted JSON.\n        Note that index labels are not preserved with this encoding.\n\n        >>> result = df.to_json(orient=\"records\")\n        >>> parsed = loads(result)\n        >>> dumps(parsed, indent=4)  # doctest: +SKIP\n        [\n            {{\n                \"col 1\": \"a\",\n                \"col 2\": \"b\"\n            }},\n            {{\n                \"col 1\": \"c\",\n                \"col 2\": \"d\"\n            }}\n        ]\n\n        Encoding/decoding a Dataframe using ``'index'`` formatted JSON:\n\n        >>> result = df.to_json(orient=\"index\")\n        >>> parsed = loads(result)\n        >>> dumps(parsed, indent=4)  # doctest: +SKIP\n        {{\n            \"row 1\": {{\n                \"col 1\": \"a\",\n                \"col 2\": \"b\"\n            }},\n            \"row 2\": {{\n                \"col 1\": \"c\",\n                \"col 2\": \"d\"\n            }}\n        }}\n\n        Encoding/decoding a Dataframe using ``'columns'`` formatted JSON:\n\n        >>> result = df.to_json(orient=\"columns\")\n        >>> parsed = loads(result)\n        >>> dumps(parsed, indent=4)  # doctest: +SKIP\n        {{\n            \"col 1\": {{\n                \"row 1\": \"a\",\n                \"row 2\": \"c\"\n            }},\n            \"col 2\": {{\n                \"row 1\": \"b\",\n                \"row 2\": \"d\"\n            }}\n        }}\n\n        Encoding/decoding a Dataframe using ``'values'`` formatted JSON:\n\n        >>> result = df.to_json(orient=\"values\")\n        >>> parsed = loads(result)\n        >>> dumps(parsed, indent=4)  # doctest: +SKIP\n        [\n            [\n                \"a\",\n                \"b\"\n            ],\n            [\n                \"c\",\n                \"d\"\n            ]\n        ]\n\n        Encoding with Table Schema:\n\n        >>> result = df.to_json(orient=\"table\")\n        >>> parsed = loads(result)\n        >>> dumps(parsed, indent=4)  # doctest: +SKIP\n        {{\n            \"schema\": {{\n                \"fields\": [\n                    {{\n                        \"name\": \"index\",\n                        \"type\": \"string\"\n                    }},\n                    {{\n                        \"name\": \"col 1\",\n                        \"type\": \"string\"\n                    }},\n                    {{\n                        \"name\": \"col 2\",\n                        \"type\": \"string\"\n                    }}\n                ],\n                \"primaryKey\": [\n                    \"index\"\n                ],\n                \"pandas_version\": \"1.4.0\"\n            }},\n            \"data\": [\n                {{\n                    \"index\": \"row 1\",\n                    \"col 1\": \"a\",\n                    \"col 2\": \"b\"\n                }},\n                {{\n                    \"index\": \"row 2\",\n                    \"col 1\": \"c\",\n                    \"col 2\": \"d\"\n                }}\n            ]\n        }}\n        \"\"\"\n        from pandas.io import json\n\n        if date_format is None and orient == \"table\":\n            date_format = \"iso\"\n        elif date_format is None:\n            date_format = \"epoch\"\n\n        config.is_nonnegative_int(indent)\n        indent = indent or 0\n\n        return json.to_json(\n            path_or_buf=path_or_buf,\n            obj=self,\n            orient=orient,\n            date_format=date_format,\n            double_precision=double_precision,\n            force_ascii=force_ascii,\n            date_unit=date_unit,\n            default_handler=default_handler,\n            lines=lines,\n            compression=compression,\n            index=index,\n            indent=indent,\n            storage_options=storage_options,\n            mode=mode,\n        )\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\", \"path_or_buf\"], name=\"to_hdf\"\n    )\n    def to_hdf(\n        self,\n        path_or_buf: FilePath | HDFStore,\n        key: str,\n        mode: Literal[\"a\", \"w\", \"r+\"] = \"a\",\n        complevel: int | None = None,\n        complib: Literal[\"zlib\", \"lzo\", \"bzip2\", \"blosc\"] | None = None,\n        append: bool_t = False,\n        format: Literal[\"fixed\", \"table\"] | None = None,\n        index: bool_t = True,\n        min_itemsize: int | dict[str, int] | None = None,\n        nan_rep=None,\n        dropna: bool_t | None = None,\n        data_columns: Literal[True] | list[str] | None = None,\n        errors: OpenFileErrors = \"strict\",\n        encoding: str = \"UTF-8\",\n    ) -> None:\n        \"\"\"\n        Write the contained data to an HDF5 file using HDFStore.\n\n        Hierarchical Data Format (HDF) is self-describing, allowing an\n        application to interpret the structure and contents of a file with\n        no outside information. One HDF file can hold a mix of related objects\n        which can be accessed as a group or as individual objects.\n\n        In order to add another DataFrame or Series to an existing HDF file\n        please use append mode and a different a key.\n\n        .. warning::\n\n           One can store a subclass of ``DataFrame`` or ``Series`` to HDF5,\n           but the type of the subclass is lost upon storing.\n\n        For more information see the :ref:`user guide <io.hdf5>`.\n\n        Parameters\n        ----------\n        path_or_buf : str or pandas.HDFStore\n            File path or HDFStore object.\n        key : str\n            Identifier for the group in the store.\n        mode : {'a', 'w', 'r+'}, default 'a'\n            Mode to open file:\n\n            - 'w': write, a new file is created (an existing file with\n              the same name would be deleted).\n            - 'a': append, an existing file is opened for reading and\n              writing, and if the file does not exist it is created.\n            - 'r+': similar to 'a', but the file must already exist.\n        complevel : {0-9}, default None\n            Specifies a compression level for data.\n            A value of 0 or None disables compression.\n        complib : {'zlib', 'lzo', 'bzip2', 'blosc'}, default 'zlib'\n            Specifies the compression library to be used.\n            These additional compressors for Blosc are supported\n            (default if no compressor specified: 'blosc:blosclz'):\n            {'blosc:blosclz', 'blosc:lz4', 'blosc:lz4hc', 'blosc:snappy',\n            'blosc:zlib', 'blosc:zstd'}.\n            Specifying a compression library which is not available issues\n            a ValueError.\n        append : bool, default False\n            For Table formats, append the input data to the existing.\n        format : {'fixed', 'table', None}, default 'fixed'\n            Possible values:\n\n            - 'fixed': Fixed format. Fast writing/reading. Not-appendable,\n              nor searchable.\n            - 'table': Table format. Write as a PyTables Table structure\n              which may perform worse but allow more flexible operations\n              like searching / selecting subsets of the data.\n            - If None, pd.get_option('io.hdf.default_format') is checked,\n              followed by fallback to \"fixed\".\n        index : bool, default True\n            Write DataFrame index as a column.\n        min_itemsize : dict or int, optional\n            Map column names to minimum string sizes for columns.\n        nan_rep : Any, optional\n            How to represent null values as str.\n            Not allowed with append=True.\n        dropna : bool, default False, optional\n            Remove missing values.\n        data_columns : list of columns or True, optional\n            List of columns to create as indexed data columns for on-disk\n            queries, or True to use all columns. By default only the axes\n            of the object are indexed. See\n            :ref:`Query via data columns<io.hdf5-query-data-columns>`. for\n            more information.\n            Applicable only to format='table'.\n        errors : str, default 'strict'\n            Specifies how encoding and decoding errors are to be handled.\n            See the errors argument for :func:`open` for a full list\n            of options.\n        encoding : str, default \"UTF-8\"\n\n        See Also\n        --------\n        read_hdf : Read from HDF file.\n        DataFrame.to_orc : Write a DataFrame to the binary orc format.\n        DataFrame.to_parquet : Write a DataFrame to the binary parquet format.\n        DataFrame.to_sql : Write to a SQL table.\n        DataFrame.to_feather : Write out feather-format for DataFrames.\n        DataFrame.to_csv : Write out to a csv file.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'A': [1, 2, 3], 'B': [4, 5, 6]},\n        ...                   index=['a', 'b', 'c'])  # doctest: +SKIP\n        >>> df.to_hdf('data.h5', key='df', mode='w')  # doctest: +SKIP\n\n        We can add another object to the same file:\n\n        >>> s = pd.Series([1, 2, 3, 4])  # doctest: +SKIP\n        >>> s.to_hdf('data.h5', key='s')  # doctest: +SKIP\n\n        Reading from HDF file:\n\n        >>> pd.read_hdf('data.h5', 'df')  # doctest: +SKIP\n        A  B\n        a  1  4\n        b  2  5\n        c  3  6\n        >>> pd.read_hdf('data.h5', 's')  # doctest: +SKIP\n        0    1\n        1    2\n        2    3\n        3    4\n        dtype: int64\n        \"\"\"\n        from pandas.io import pytables\n\n        # Argument 3 to \"to_hdf\" has incompatible type \"NDFrame\"; expected\n        # \"Union[DataFrame, Series]\" [arg-type]\n        pytables.to_hdf(\n            path_or_buf,\n            key,\n            self,  # type: ignore[arg-type]\n            mode=mode,\n            complevel=complevel,\n            complib=complib,\n            append=append,\n            format=format,\n            index=index,\n            min_itemsize=min_itemsize,\n            nan_rep=nan_rep,\n            dropna=dropna,\n            data_columns=data_columns,\n            errors=errors,\n            encoding=encoding,\n        )\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\", \"name\", \"con\"], name=\"to_sql\"\n    )\n    def to_sql(\n        self,\n        name: str,\n        con,\n        schema: str | None = None,\n        if_exists: Literal[\"fail\", \"replace\", \"append\"] = \"fail\",\n        index: bool_t = True,\n        index_label: IndexLabel | None = None,\n        chunksize: int | None = None,\n        dtype: DtypeArg | None = None,\n        method: Literal[\"multi\"] | Callable | None = None,\n    ) -> int | None:\n        \"\"\"\n        Write records stored in a DataFrame to a SQL database.\n\n        Databases supported by SQLAlchemy [1]_ are supported. Tables can be\n        newly created, appended to, or overwritten.\n\n        Parameters\n        ----------\n        name : str\n            Name of SQL table.\n        con : sqlalchemy.engine.(Engine or Connection) or sqlite3.Connection\n            Using SQLAlchemy makes it possible to use any DB supported by that\n            library. Legacy support is provided for sqlite3.Connection objects. The user\n            is responsible for engine disposal and connection closure for the SQLAlchemy\n            connectable. See `here \\\n                <https://docs.sqlalchemy.org/en/20/core/connections.html>`_.\n            If passing a sqlalchemy.engine.Connection which is already in a transaction,\n            the transaction will not be committed.  If passing a sqlite3.Connection,\n            it will not be possible to roll back the record insertion.\n\n        schema : str, optional\n            Specify the schema (if database flavor supports this). If None, use\n            default schema.\n        if_exists : {'fail', 'replace', 'append'}, default 'fail'\n            How to behave if the table already exists.\n\n            * fail: Raise a ValueError.\n            * replace: Drop the table before inserting new values.\n            * append: Insert new values to the existing table.\n\n        index : bool, default True\n            Write DataFrame index as a column. Uses `index_label` as the column\n            name in the table. Creates a table index for this column.\n        index_label : str or sequence, default None\n            Column label for index column(s). If None is given (default) and\n            `index` is True, then the index names are used.\n            A sequence should be given if the DataFrame uses MultiIndex.\n        chunksize : int, optional\n            Specify the number of rows in each batch to be written at a time.\n            By default, all rows will be written at once.\n        dtype : dict or scalar, optional\n            Specifying the datatype for columns. If a dictionary is used, the\n            keys should be the column names and the values should be the\n            SQLAlchemy types or strings for the sqlite3 legacy mode. If a\n            scalar is provided, it will be applied to all columns.\n        method : {None, 'multi', callable}, optional\n            Controls the SQL insertion clause used:\n\n            * None : Uses standard SQL ``INSERT`` clause (one per row).\n            * 'multi': Pass multiple values in a single ``INSERT`` clause.\n            * callable with signature ``(pd_table, conn, keys, data_iter)``.\n\n            Details and a sample callable implementation can be found in the\n            section :ref:`insert method <io.sql.method>`.\n\n        Returns\n        -------\n        None or int\n            Number of rows affected by to_sql. None is returned if the callable\n            passed into ``method`` does not return an integer number of rows.\n\n            The number of returned rows affected is the sum of the ``rowcount``\n            attribute of ``sqlite3.Cursor`` or SQLAlchemy connectable which may not\n            reflect the exact number of written rows as stipulated in the\n            `sqlite3 <https://docs.python.org/3/library/sqlite3.html#sqlite3.Cursor.rowcount>`__ or\n            `SQLAlchemy <https://docs.sqlalchemy.org/en/20/core/connections.html#sqlalchemy.engine.CursorResult.rowcount>`__.\n\n            .. versionadded:: 1.4.0\n\n        Raises\n        ------\n        ValueError\n            When the table already exists and `if_exists` is 'fail' (the\n            default).\n\n        See Also\n        --------\n        read_sql : Read a DataFrame from a table.\n\n        Notes\n        -----\n        Timezone aware datetime columns will be written as\n        ``Timestamp with timezone`` type with SQLAlchemy if supported by the\n        database. Otherwise, the datetimes will be stored as timezone unaware\n        timestamps local to the original timezone.\n\n        References\n        ----------\n        .. [1] https://docs.sqlalchemy.org\n        .. [2] https://www.python.org/dev/peps/pep-0249/\n\n        Examples\n        --------\n        Create an in-memory SQLite database.\n\n        >>> from sqlalchemy import create_engine\n        >>> engine = create_engine('sqlite://', echo=False)\n\n        Create a table from scratch with 3 rows.\n\n        >>> df = pd.DataFrame({'name' : ['User 1', 'User 2', 'User 3']})\n        >>> df\n             name\n        0  User 1\n        1  User 2\n        2  User 3\n\n        >>> df.to_sql(name='users', con=engine)\n        3\n        >>> from sqlalchemy import text\n        >>> with engine.connect() as conn:\n        ...    conn.execute(text(\"SELECT * FROM users\")).fetchall()\n        [(0, 'User 1'), (1, 'User 2'), (2, 'User 3')]\n\n        An `sqlalchemy.engine.Connection` can also be passed to `con`:\n\n        >>> with engine.begin() as connection:\n        ...     df1 = pd.DataFrame({'name' : ['User 4', 'User 5']})\n        ...     df1.to_sql(name='users', con=connection, if_exists='append')\n        2\n\n        This is allowed to support operations that require that the same\n        DBAPI connection is used for the entire operation.\n\n        >>> df2 = pd.DataFrame({'name' : ['User 6', 'User 7']})\n        >>> df2.to_sql(name='users', con=engine, if_exists='append')\n        2\n        >>> with engine.connect() as conn:\n        ...    conn.execute(text(\"SELECT * FROM users\")).fetchall()\n        [(0, 'User 1'), (1, 'User 2'), (2, 'User 3'),\n         (0, 'User 4'), (1, 'User 5'), (0, 'User 6'),\n         (1, 'User 7')]\n\n        Overwrite the table with just ``df2``.\n\n        >>> df2.to_sql(name='users', con=engine, if_exists='replace',\n        ...            index_label='id')\n        2\n        >>> with engine.connect() as conn:\n        ...    conn.execute(text(\"SELECT * FROM users\")).fetchall()\n        [(0, 'User 6'), (1, 'User 7')]\n\n        Use ``method`` to define a callable insertion method to do nothing\n        if there's a primary key conflict on a table in a PostgreSQL database.\n\n        >>> from sqlalchemy.dialects.postgresql import insert\n        >>> def insert_on_conflict_nothing(table, conn, keys, data_iter):\n        ...     # \"a\" is the primary key in \"conflict_table\"\n        ...     data = [dict(zip(keys, row)) for row in data_iter]\n        ...     stmt = insert(table.table).values(data).on_conflict_do_nothing(index_elements=[\"a\"])\n        ...     result = conn.execute(stmt)\n        ...     return result.rowcount\n        >>> df_conflict.to_sql(name=\"conflict_table\", con=conn, if_exists=\"append\", method=insert_on_conflict_nothing)  # doctest: +SKIP\n        0\n\n        For MySQL, a callable to update columns ``b`` and ``c`` if there's a conflict\n        on a primary key.\n\n        >>> from sqlalchemy.dialects.mysql import insert\n        >>> def insert_on_conflict_update(table, conn, keys, data_iter):\n        ...     # update columns \"b\" and \"c\" on primary key conflict\n        ...     data = [dict(zip(keys, row)) for row in data_iter]\n        ...     stmt = (\n        ...         insert(table.table)\n        ...         .values(data)\n        ...     )\n        ...     stmt = stmt.on_duplicate_key_update(b=stmt.inserted.b, c=stmt.inserted.c)\n        ...     result = conn.execute(stmt)\n        ...     return result.rowcount\n        >>> df_conflict.to_sql(name=\"conflict_table\", con=conn, if_exists=\"append\", method=insert_on_conflict_update)  # doctest: +SKIP\n        2\n\n        Specify the dtype (especially useful for integers with missing values).\n        Notice that while pandas is forced to store the data as floating point,\n        the database supports nullable integers. When fetching the data with\n        Python, we get back integer scalars.\n\n        >>> df = pd.DataFrame({\"A\": [1, None, 2]})\n        >>> df\n             A\n        0  1.0\n        1  NaN\n        2  2.0\n\n        >>> from sqlalchemy.types import Integer\n        >>> df.to_sql(name='integers', con=engine, index=False,\n        ...           dtype={\"A\": Integer()})\n        3\n\n        >>> with engine.connect() as conn:\n        ...   conn.execute(text(\"SELECT * FROM integers\")).fetchall()\n        [(1,), (None,), (2,)]\n        \"\"\"  # noqa: E501\n        from pandas.io import sql\n\n        return sql.to_sql(\n            self,\n            name,\n            con,\n            schema=schema,\n            if_exists=if_exists,\n            index=index,\n            index_label=index_label,\n            chunksize=chunksize,\n            dtype=dtype,\n            method=method,\n        )\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\", \"path\"], name=\"to_pickle\"\n    )\n    @doc(\n        storage_options=_shared_docs[\"storage_options\"],\n        compression_options=_shared_docs[\"compression_options\"] % \"path\",\n    )\n    def to_pickle(\n        self,\n        path: FilePath | WriteBuffer[bytes],\n        compression: CompressionOptions = \"infer\",\n        protocol: int = pickle.HIGHEST_PROTOCOL,\n        storage_options: StorageOptions | None = None,\n    ) -> None:\n        \"\"\"\n        Pickle (serialize) object to file.\n\n        Parameters\n        ----------\n        path : str, path object, or file-like object\n            String, path object (implementing ``os.PathLike[str]``), or file-like\n            object implementing a binary ``write()`` function. File path where\n            the pickled object will be stored.\n        {compression_options}\n        protocol : int\n            Int which indicates which protocol should be used by the pickler,\n            default HIGHEST_PROTOCOL (see [1]_ paragraph 12.1.2). The possible\n            values are 0, 1, 2, 3, 4, 5. A negative value for the protocol\n            parameter is equivalent to setting its value to HIGHEST_PROTOCOL.\n\n            .. [1] https://docs.python.org/3/library/pickle.html.\n\n        {storage_options}\n\n        See Also\n        --------\n        read_pickle : Load pickled pandas object (or any object) from file.\n        DataFrame.to_hdf : Write DataFrame to an HDF5 file.\n        DataFrame.to_sql : Write DataFrame to a SQL database.\n        DataFrame.to_parquet : Write a DataFrame to the binary parquet format.\n\n        Examples\n        --------\n        >>> original_df = pd.DataFrame({{\"foo\": range(5), \"bar\": range(5, 10)}})  # doctest: +SKIP\n        >>> original_df  # doctest: +SKIP\n           foo  bar\n        0    0    5\n        1    1    6\n        2    2    7\n        3    3    8\n        4    4    9\n        >>> original_df.to_pickle(\"./dummy.pkl\")  # doctest: +SKIP\n\n        >>> unpickled_df = pd.read_pickle(\"./dummy.pkl\")  # doctest: +SKIP\n        >>> unpickled_df  # doctest: +SKIP\n           foo  bar\n        0    0    5\n        1    1    6\n        2    2    7\n        3    3    8\n        4    4    9\n        \"\"\"  # noqa: E501\n        from pandas.io.pickle import to_pickle\n\n        to_pickle(\n            self,\n            path,\n            compression=compression,\n            protocol=protocol,\n            storage_options=storage_options,\n        )\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\"], name=\"to_clipboard\"\n    )\n    def to_clipboard(\n        self, excel: bool_t = True, sep: str | None = None, **kwargs\n    ) -> None:\n        r\"\"\"\n        Copy object to the system clipboard.\n\n        Write a text representation of object to the system clipboard.\n        This can be pasted into Excel, for example.\n\n        Parameters\n        ----------\n        excel : bool, default True\n            Produce output in a csv format for easy pasting into excel.\n\n            - True, use the provided separator for csv pasting.\n            - False, write a string representation of the object to the clipboard.\n\n        sep : str, default ``'\\t'``\n            Field delimiter.\n        **kwargs\n            These parameters will be passed to DataFrame.to_csv.\n\n        See Also\n        --------\n        DataFrame.to_csv : Write a DataFrame to a comma-separated values\n            (csv) file.\n        read_clipboard : Read text from clipboard and pass to read_csv.\n\n        Notes\n        -----\n        Requirements for your platform.\n\n          - Linux : `xclip`, or `xsel` (with `PyQt4` modules)\n          - Windows : none\n          - macOS : none\n\n        This method uses the processes developed for the package `pyperclip`. A\n        solution to render any output string format is given in the examples.\n\n        Examples\n        --------\n        Copy the contents of a DataFrame to the clipboard.\n\n        >>> df = pd.DataFrame([[1, 2, 3], [4, 5, 6]], columns=['A', 'B', 'C'])\n\n        >>> df.to_clipboard(sep=',')  # doctest: +SKIP\n        ... # Wrote the following to the system clipboard:\n        ... # ,A,B,C\n        ... # 0,1,2,3\n        ... # 1,4,5,6\n\n        We can omit the index by passing the keyword `index` and setting\n        it to false.\n\n        >>> df.to_clipboard(sep=',', index=False)  # doctest: +SKIP\n        ... # Wrote the following to the system clipboard:\n        ... # A,B,C\n        ... # 1,2,3\n        ... # 4,5,6\n\n        Using the original `pyperclip` package for any string output format.\n\n        .. code-block:: python\n\n           import pyperclip\n           html = df.style.to_html()\n           pyperclip.copy(html)\n        \"\"\"\n        from pandas.io import clipboards\n\n        clipboards.to_clipboard(self, excel=excel, sep=sep, **kwargs)\n\n    @final\n    def to_xarray(self):\n        \"\"\"\n        Return an xarray object from the pandas object.\n\n        Returns\n        -------\n        xarray.DataArray or xarray.Dataset\n            Data in the pandas structure converted to Dataset if the object is\n            a DataFrame, or a DataArray if the object is a Series.\n\n        See Also\n        --------\n        DataFrame.to_hdf : Write DataFrame to an HDF5 file.\n        DataFrame.to_parquet : Write a DataFrame to the binary parquet format.\n\n        Notes\n        -----\n        See the `xarray docs <https://xarray.pydata.org/en/stable/>`__\n\n        Examples\n        --------\n        >>> df = pd.DataFrame([('falcon', 'bird', 389.0, 2),\n        ...                    ('parrot', 'bird', 24.0, 2),\n        ...                    ('lion', 'mammal', 80.5, 4),\n        ...                    ('monkey', 'mammal', np.nan, 4)],\n        ...                   columns=['name', 'class', 'max_speed',\n        ...                            'num_legs'])\n        >>> df\n             name   class  max_speed  num_legs\n        0  falcon    bird      389.0         2\n        1  parrot    bird       24.0         2\n        2    lion  mammal       80.5         4\n        3  monkey  mammal        NaN         4\n\n        >>> df.to_xarray()\n        <xarray.Dataset>\n        Dimensions:    (index: 4)\n        Coordinates:\n          * index      (index) int64 0 1 2 3\n        Data variables:\n            name       (index) object 'falcon' 'parrot' 'lion' 'monkey'\n            class      (index) object 'bird' 'bird' 'mammal' 'mammal'\n            max_speed  (index) float64 389.0 24.0 80.5 nan\n            num_legs   (index) int64 2 2 4 4\n\n        >>> df['max_speed'].to_xarray()\n        <xarray.DataArray 'max_speed' (index: 4)>\n        array([389. ,  24. ,  80.5,   nan])\n        Coordinates:\n          * index    (index) int64 0 1 2 3\n\n        >>> dates = pd.to_datetime(['2018-01-01', '2018-01-01',\n        ...                         '2018-01-02', '2018-01-02'])\n        >>> df_multiindex = pd.DataFrame({'date': dates,\n        ...                               'animal': ['falcon', 'parrot',\n        ...                                          'falcon', 'parrot'],\n        ...                               'speed': [350, 18, 361, 15]})\n        >>> df_multiindex = df_multiindex.set_index(['date', 'animal'])\n\n        >>> df_multiindex\n                           speed\n        date       animal\n        2018-01-01 falcon    350\n                   parrot     18\n        2018-01-02 falcon    361\n                   parrot     15\n\n        >>> df_multiindex.to_xarray()\n        <xarray.Dataset>\n        Dimensions:  (date: 2, animal: 2)\n        Coordinates:\n          * date     (date) datetime64[ns] 2018-01-01 2018-01-02\n          * animal   (animal) object 'falcon' 'parrot'\n        Data variables:\n            speed    (date, animal) int64 350 18 361 15\n        \"\"\"\n        xarray = import_optional_dependency(\"xarray\")\n\n        if self.ndim == 1:\n            return xarray.DataArray.from_series(self)\n        else:\n            return xarray.Dataset.from_dataframe(self)\n\n    @overload\n    def to_latex(\n        self,\n        buf: None = ...,\n        columns: Sequence[Hashable] | None = ...,\n        header: bool_t | SequenceNotStr[str] = ...,\n        index: bool_t = ...,\n        na_rep: str = ...,\n        formatters: FormattersType | None = ...,\n        float_format: FloatFormatType | None = ...,\n        sparsify: bool_t | None = ...,\n        index_names: bool_t = ...,\n        bold_rows: bool_t = ...,\n        column_format: str | None = ...,\n        longtable: bool_t | None = ...,\n        escape: bool_t | None = ...,\n        encoding: str | None = ...,\n        decimal: str = ...,\n        multicolumn: bool_t | None = ...,\n        multicolumn_format: str | None = ...,\n        multirow: bool_t | None = ...,\n        caption: str | tuple[str, str] | None = ...,\n        label: str | None = ...,\n        position: str | None = ...,\n    ) -> str:\n        ...\n\n    @overload\n    def to_latex(\n        self,\n        buf: FilePath | WriteBuffer[str],\n        columns: Sequence[Hashable] | None = ...,\n        header: bool_t | SequenceNotStr[str] = ...,\n        index: bool_t = ...,\n        na_rep: str = ...,\n        formatters: FormattersType | None = ...,\n        float_format: FloatFormatType | None = ...,\n        sparsify: bool_t | None = ...,\n        index_names: bool_t = ...,\n        bold_rows: bool_t = ...,\n        column_format: str | None = ...,\n        longtable: bool_t | None = ...,\n        escape: bool_t | None = ...,\n        encoding: str | None = ...,\n        decimal: str = ...,\n        multicolumn: bool_t | None = ...,\n        multicolumn_format: str | None = ...,\n        multirow: bool_t | None = ...,\n        caption: str | tuple[str, str] | None = ...,\n        label: str | None = ...,\n        position: str | None = ...,\n    ) -> None:\n        ...\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\", \"buf\"], name=\"to_latex\"\n    )\n    def to_latex(\n        self,\n        buf: FilePath | WriteBuffer[str] | None = None,\n        columns: Sequence[Hashable] | None = None,\n        header: bool_t | SequenceNotStr[str] = True,\n        index: bool_t = True,\n        na_rep: str = \"NaN\",\n        formatters: FormattersType | None = None,\n        float_format: FloatFormatType | None = None,\n        sparsify: bool_t | None = None,\n        index_names: bool_t = True,\n        bold_rows: bool_t = False,\n        column_format: str | None = None,\n        longtable: bool_t | None = None,\n        escape: bool_t | None = None,\n        encoding: str | None = None,\n        decimal: str = \".\",\n        multicolumn: bool_t | None = None,\n        multicolumn_format: str | None = None,\n        multirow: bool_t | None = None,\n        caption: str | tuple[str, str] | None = None,\n        label: str | None = None,\n        position: str | None = None,\n    ) -> str | None:\n        r\"\"\"\n        Render object to a LaTeX tabular, longtable, or nested table.\n\n        Requires ``\\usepackage{{booktabs}}``.  The output can be copy/pasted\n        into a main LaTeX document or read from an external file\n        with ``\\input{{table.tex}}``.\n\n        .. versionchanged:: 2.0.0\n           Refactored to use the Styler implementation via jinja2 templating.\n\n        Parameters\n        ----------\n        buf : str, Path or StringIO-like, optional, default None\n            Buffer to write to. If None, the output is returned as a string.\n        columns : list of label, optional\n            The subset of columns to write. Writes all columns by default.\n        header : bool or list of str, default True\n            Write out the column names. If a list of strings is given,\n            it is assumed to be aliases for the column names.\n        index : bool, default True\n            Write row names (index).\n        na_rep : str, default 'NaN'\n            Missing data representation.\n        formatters : list of functions or dict of {{str: function}}, optional\n            Formatter functions to apply to columns' elements by position or\n            name. The result of each function must be a unicode string.\n            List must be of length equal to the number of columns.\n        float_format : one-parameter function or str, optional, default None\n            Formatter for floating point numbers. For example\n            ``float_format=\"%.2f\"`` and ``float_format=\"{{:0.2f}}\".format`` will\n            both result in 0.1234 being formatted as 0.12.\n        sparsify : bool, optional\n            Set to False for a DataFrame with a hierarchical index to print\n            every multiindex key at each row. By default, the value will be\n            read from the config module.\n        index_names : bool, default True\n            Prints the names of the indexes.\n        bold_rows : bool, default False\n            Make the row labels bold in the output.\n        column_format : str, optional\n            The columns format as specified in `LaTeX table format\n            <https://en.wikibooks.org/wiki/LaTeX/Tables>`__ e.g. 'rcl' for 3\n            columns. By default, 'l' will be used for all columns except\n            columns of numbers, which default to 'r'.\n        longtable : bool, optional\n            Use a longtable environment instead of tabular. Requires\n            adding a \\usepackage{{longtable}} to your LaTeX preamble.\n            By default, the value will be read from the pandas config\n            module, and set to `True` if the option ``styler.latex.environment`` is\n            `\"longtable\"`.\n\n            .. versionchanged:: 2.0.0\n               The pandas option affecting this argument has changed.\n        escape : bool, optional\n            By default, the value will be read from the pandas config\n            module and set to `True` if the option ``styler.format.escape`` is\n            `\"latex\"`. When set to False prevents from escaping latex special\n            characters in column names.\n\n            .. versionchanged:: 2.0.0\n               The pandas option affecting this argument has changed, as has the\n               default value to `False`.\n        encoding : str, optional\n            A string representing the encoding to use in the output file,\n            defaults to 'utf-8'.\n        decimal : str, default '.'\n            Character recognized as decimal separator, e.g. ',' in Europe.\n        multicolumn : bool, default True\n            Use \\multicolumn to enhance MultiIndex columns.\n            The default will be read from the config module, and is set\n            as the option ``styler.sparse.columns``.\n\n            .. versionchanged:: 2.0.0\n               The pandas option affecting this argument has changed.\n        multicolumn_format : str, default 'r'\n            The alignment for multicolumns, similar to `column_format`\n            The default will be read from the config module, and is set as the option\n            ``styler.latex.multicol_align``.\n\n            .. versionchanged:: 2.0.0\n               The pandas option affecting this argument has changed, as has the\n               default value to \"r\".\n        multirow : bool, default True\n            Use \\multirow to enhance MultiIndex rows. Requires adding a\n            \\usepackage{{multirow}} to your LaTeX preamble. Will print\n            centered labels (instead of top-aligned) across the contained\n            rows, separating groups via clines. The default will be read\n            from the pandas config module, and is set as the option\n            ``styler.sparse.index``.\n\n            .. versionchanged:: 2.0.0\n               The pandas option affecting this argument has changed, as has the\n               default value to `True`.\n        caption : str or tuple, optional\n            Tuple (full_caption, short_caption),\n            which results in ``\\caption[short_caption]{{full_caption}}``;\n            if a single string is passed, no short caption will be set.\n        label : str, optional\n            The LaTeX label to be placed inside ``\\label{{}}`` in the output.\n            This is used with ``\\ref{{}}`` in the main ``.tex`` file.\n\n        position : str, optional\n            The LaTeX positional argument for tables, to be placed after\n            ``\\begin{{}}`` in the output.\n\n        Returns\n        -------\n        str or None\n            If buf is None, returns the result as a string. Otherwise returns None.\n\n        See Also\n        --------\n        io.formats.style.Styler.to_latex : Render a DataFrame to LaTeX\n            with conditional formatting.\n        DataFrame.to_string : Render a DataFrame to a console-friendly\n            tabular output.\n        DataFrame.to_html : Render a DataFrame as an HTML table.\n\n        Notes\n        -----\n        As of v2.0.0 this method has changed to use the Styler implementation as\n        part of :meth:`.Styler.to_latex` via ``jinja2`` templating. This means\n        that ``jinja2`` is a requirement, and needs to be installed, for this method\n        to function. It is advised that users switch to using Styler, since that\n        implementation is more frequently updated and contains much more\n        flexibility with the output.\n\n        Examples\n        --------\n        Convert a general DataFrame to LaTeX with formatting:\n\n        >>> df = pd.DataFrame(dict(name=['Raphael', 'Donatello'],\n        ...                        age=[26, 45],\n        ...                        height=[181.23, 177.65]))\n        >>> print(df.to_latex(index=False,\n        ...                   formatters={\"name\": str.upper},\n        ...                   float_format=\"{:.1f}\".format,\n        ... ))  # doctest: +SKIP\n        \\begin{tabular}{lrr}\n        \\toprule\n        name & age & height \\\\\n        \\midrule\n        RAPHAEL & 26 & 181.2 \\\\\n        DONATELLO & 45 & 177.7 \\\\\n        \\bottomrule\n        \\end{tabular}\n        \"\"\"\n        # Get defaults from the pandas config\n        if self.ndim == 1:\n            self = self.to_frame()\n        if longtable is None:\n            longtable = config.get_option(\"styler.latex.environment\") == \"longtable\"\n        if escape is None:\n            escape = config.get_option(\"styler.format.escape\") == \"latex\"\n        if multicolumn is None:\n            multicolumn = config.get_option(\"styler.sparse.columns\")\n        if multicolumn_format is None:\n            multicolumn_format = config.get_option(\"styler.latex.multicol_align\")\n        if multirow is None:\n            multirow = config.get_option(\"styler.sparse.index\")\n\n        if column_format is not None and not isinstance(column_format, str):\n            raise ValueError(\"`column_format` must be str or unicode\")\n        length = len(self.columns) if columns is None else len(columns)\n        if isinstance(header, (list, tuple)) and len(header) != length:\n            raise ValueError(f\"Writing {length} cols but got {len(header)} aliases\")\n\n        # Refactor formatters/float_format/decimal/na_rep/escape to Styler structure\n        base_format_ = {\n            \"na_rep\": na_rep,\n            \"escape\": \"latex\" if escape else None,\n            \"decimal\": decimal,\n        }\n        index_format_: dict[str, Any] = {\"axis\": 0, **base_format_}\n        column_format_: dict[str, Any] = {\"axis\": 1, **base_format_}\n\n        if isinstance(float_format, str):\n            float_format_: Callable | None = lambda x: float_format % x\n        else:\n            float_format_ = float_format\n\n        def _wrap(x, alt_format_):\n            if isinstance(x, (float, complex)) and float_format_ is not None:\n                return float_format_(x)\n            else:\n                return alt_format_(x)\n\n        formatters_: list | tuple | dict | Callable | None = None\n        if isinstance(formatters, list):\n            formatters_ = {\n                c: partial(_wrap, alt_format_=formatters[i])\n                for i, c in enumerate(self.columns)\n            }\n        elif isinstance(formatters, dict):\n            index_formatter = formatters.pop(\"__index__\", None)\n            column_formatter = formatters.pop(\"__columns__\", None)\n            if index_formatter is not None:\n                index_format_.update({\"formatter\": index_formatter})\n            if column_formatter is not None:\n                column_format_.update({\"formatter\": column_formatter})\n\n            formatters_ = formatters\n            float_columns = self.select_dtypes(include=\"float\").columns\n            for col in float_columns:\n                if col not in formatters.keys():\n                    formatters_.update({col: float_format_})\n        elif formatters is None and float_format is not None:\n            formatters_ = partial(_wrap, alt_format_=lambda v: v)\n        format_index_ = [index_format_, column_format_]\n\n        # Deal with hiding indexes and relabelling column names\n        hide_: list[dict] = []\n        relabel_index_: list[dict] = []\n        if columns:\n            hide_.append(\n                {\n                    \"subset\": [c for c in self.columns if c not in columns],\n                    \"axis\": \"columns\",\n                }\n            )\n        if header is False:\n            hide_.append({\"axis\": \"columns\"})\n        elif isinstance(header, (list, tuple)):\n            relabel_index_.append({\"labels\": header, \"axis\": \"columns\"})\n            format_index_ = [index_format_]  # column_format is overwritten\n\n        if index is False:\n            hide_.append({\"axis\": \"index\"})\n        if index_names is False:\n            hide_.append({\"names\": True, \"axis\": \"index\"})\n\n        render_kwargs_ = {\n            \"hrules\": True,\n            \"sparse_index\": sparsify,\n            \"sparse_columns\": sparsify,\n            \"environment\": \"longtable\" if longtable else None,\n            \"multicol_align\": multicolumn_format\n            if multicolumn\n            else f\"naive-{multicolumn_format}\",\n            \"multirow_align\": \"t\" if multirow else \"naive\",\n            \"encoding\": encoding,\n            \"caption\": caption,\n            \"label\": label,\n            \"position\": position,\n            \"column_format\": column_format,\n            \"clines\": \"skip-last;data\"\n            if (multirow and isinstance(self.index, MultiIndex))\n            else None,\n            \"bold_rows\": bold_rows,\n        }\n\n        return self._to_latex_via_styler(\n            buf,\n            hide=hide_,\n            relabel_index=relabel_index_,\n            format={\"formatter\": formatters_, **base_format_},\n            format_index=format_index_,\n            render_kwargs=render_kwargs_,\n        )\n\n    @final\n    def _to_latex_via_styler(\n        self,\n        buf=None,\n        *,\n        hide: dict | list[dict] | None = None,\n        relabel_index: dict | list[dict] | None = None,\n        format: dict | list[dict] | None = None,\n        format_index: dict | list[dict] | None = None,\n        render_kwargs: dict | None = None,\n    ):\n        \"\"\"\n        Render object to a LaTeX tabular, longtable, or nested table.\n\n        Uses the ``Styler`` implementation with the following, ordered, method chaining:\n\n        .. code-block:: python\n           styler = Styler(DataFrame)\n           styler.hide(**hide)\n           styler.relabel_index(**relabel_index)\n           styler.format(**format)\n           styler.format_index(**format_index)\n           styler.to_latex(buf=buf, **render_kwargs)\n\n        Parameters\n        ----------\n        buf : str, Path or StringIO-like, optional, default None\n            Buffer to write to. If None, the output is returned as a string.\n        hide : dict, list of dict\n            Keyword args to pass to the method call of ``Styler.hide``. If a list will\n            call the method numerous times.\n        relabel_index : dict, list of dict\n            Keyword args to pass to the method of ``Styler.relabel_index``. If a list\n            will call the method numerous times.\n        format : dict, list of dict\n            Keyword args to pass to the method call of ``Styler.format``. If a list will\n            call the method numerous times.\n        format_index : dict, list of dict\n            Keyword args to pass to the method call of ``Styler.format_index``. If a\n            list will call the method numerous times.\n        render_kwargs : dict\n            Keyword args to pass to the method call of ``Styler.to_latex``.\n\n        Returns\n        -------\n        str or None\n            If buf is None, returns the result as a string. Otherwise returns None.\n        \"\"\"\n        from pandas.io.formats.style import Styler\n\n        self = cast(\"DataFrame\", self)\n        styler = Styler(self, uuid=\"\")\n\n        for kw_name in [\"hide\", \"relabel_index\", \"format\", \"format_index\"]:\n            kw = vars()[kw_name]\n            if isinstance(kw, dict):\n                getattr(styler, kw_name)(**kw)\n            elif isinstance(kw, list):\n                for sub_kw in kw:\n                    getattr(styler, kw_name)(**sub_kw)\n\n        # bold_rows is not a direct kwarg of Styler.to_latex\n        render_kwargs = {} if render_kwargs is None else render_kwargs\n        if render_kwargs.pop(\"bold_rows\"):\n            styler.map_index(lambda v: \"textbf:--rwrap;\")\n\n        return styler.to_latex(buf=buf, **render_kwargs)\n\n    @overload\n    def to_csv(\n        self,\n        path_or_buf: None = ...,\n        sep: str = ...,\n        na_rep: str = ...,\n        float_format: str | Callable | None = ...,\n        columns: Sequence[Hashable] | None = ...,\n        header: bool_t | list[str] = ...,\n        index: bool_t = ...,\n        index_label: IndexLabel | None = ...,\n        mode: str = ...,\n        encoding: str | None = ...,\n        compression: CompressionOptions = ...,\n        quoting: int | None = ...,\n        quotechar: str = ...,\n        lineterminator: str | None = ...,\n        chunksize: int | None = ...,\n        date_format: str | None = ...,\n        doublequote: bool_t = ...,\n        escapechar: str | None = ...,\n        decimal: str = ...,\n        errors: OpenFileErrors = ...,\n        storage_options: StorageOptions = ...,\n    ) -> str:\n        ...\n\n    @overload\n    def to_csv(\n        self,\n        path_or_buf: FilePath | WriteBuffer[bytes] | WriteBuffer[str],\n        sep: str = ...,\n        na_rep: str = ...,\n        float_format: str | Callable | None = ...,\n        columns: Sequence[Hashable] | None = ...,\n        header: bool_t | list[str] = ...,\n        index: bool_t = ...,\n        index_label: IndexLabel | None = ...,\n        mode: str = ...,\n        encoding: str | None = ...,\n        compression: CompressionOptions = ...,\n        quoting: int | None = ...,\n        quotechar: str = ...,\n        lineterminator: str | None = ...,\n        chunksize: int | None = ...,\n        date_format: str | None = ...,\n        doublequote: bool_t = ...,\n        escapechar: str | None = ...,\n        decimal: str = ...,\n        errors: OpenFileErrors = ...,\n        storage_options: StorageOptions = ...,\n    ) -> None:\n        ...\n\n    @final\n    @deprecate_nonkeyword_arguments(\n        version=\"3.0\", allowed_args=[\"self\", \"path_or_buf\"], name=\"to_csv\"\n    )\n    @doc(\n        storage_options=_shared_docs[\"storage_options\"],\n        compression_options=_shared_docs[\"compression_options\"] % \"path_or_buf\",\n    )\n    def to_csv(\n        self,\n        path_or_buf: FilePath | WriteBuffer[bytes] | WriteBuffer[str] | None = None,\n        sep: str = \",\",\n        na_rep: str = \"\",\n        float_format: str | Callable | None = None,\n        columns: Sequence[Hashable] | None = None,\n        header: bool_t | list[str] = True,\n        index: bool_t = True,\n        index_label: IndexLabel | None = None,\n        mode: str = \"w\",\n        encoding: str | None = None,\n        compression: CompressionOptions = \"infer\",\n        quoting: int | None = None,\n        quotechar: str = '\"',\n        lineterminator: str | None = None,\n        chunksize: int | None = None,\n        date_format: str | None = None,\n        doublequote: bool_t = True,\n        escapechar: str | None = None,\n        decimal: str = \".\",\n        errors: OpenFileErrors = \"strict\",\n        storage_options: StorageOptions | None = None,\n    ) -> str | None:\n        r\"\"\"\n        Write object to a comma-separated values (csv) file.\n\n        Parameters\n        ----------\n        path_or_buf : str, path object, file-like object, or None, default None\n            String, path object (implementing os.PathLike[str]), or file-like\n            object implementing a write() function. If None, the result is\n            returned as a string. If a non-binary file object is passed, it should\n            be opened with `newline=''`, disabling universal newlines. If a binary\n            file object is passed, `mode` might need to contain a `'b'`.\n        sep : str, default ','\n            String of length 1. Field delimiter for the output file.\n        na_rep : str, default ''\n            Missing data representation.\n        float_format : str, Callable, default None\n            Format string for floating point numbers. If a Callable is given, it takes\n            precedence over other numeric formatting parameters, like decimal.\n        columns : sequence, optional\n            Columns to write.\n        header : bool or list of str, default True\n            Write out the column names. If a list of strings is given it is\n            assumed to be aliases for the column names.\n        index : bool, default True\n            Write row names (index).\n        index_label : str or sequence, or False, default None\n            Column label for index column(s) if desired. If None is given, and\n            `header` and `index` are True, then the index names are used. A\n            sequence should be given if the object uses MultiIndex. If\n            False do not print fields for index names. Use index_label=False\n            for easier importing in R.\n        mode : {{'w', 'x', 'a'}}, default 'w'\n            Forwarded to either `open(mode=)` or `fsspec.open(mode=)` to control\n            the file opening. Typical values include:\n\n            - 'w', truncate the file first.\n            - 'x', exclusive creation, failing if the file already exists.\n            - 'a', append to the end of file if it exists.\n\n        encoding : str, optional\n            A string representing the encoding to use in the output file,\n            defaults to 'utf-8'. `encoding` is not supported if `path_or_buf`\n            is a non-binary file object.\n        {compression_options}\n\n               May be a dict with key 'method' as compression mode\n               and other entries as additional compression options if\n               compression mode is 'zip'.\n\n               Passing compression options as keys in dict is\n               supported for compression modes 'gzip', 'bz2', 'zstd', and 'zip'.\n        quoting : optional constant from csv module\n            Defaults to csv.QUOTE_MINIMAL. If you have set a `float_format`\n            then floats are converted to strings and thus csv.QUOTE_NONNUMERIC\n            will treat them as non-numeric.\n        quotechar : str, default '\\\"'\n            String of length 1. Character used to quote fields.\n        lineterminator : str, optional\n            The newline character or character sequence to use in the output\n            file. Defaults to `os.linesep`, which depends on the OS in which\n            this method is called ('\\\\n' for linux, '\\\\r\\\\n' for Windows, i.e.).\n\n            .. versionchanged:: 1.5.0\n\n                Previously was line_terminator, changed for consistency with\n                read_csv and the standard library 'csv' module.\n\n        chunksize : int or None\n            Rows to write at a time.\n        date_format : str, default None\n            Format string for datetime objects.\n        doublequote : bool, default True\n            Control quoting of `quotechar` inside a field.\n        escapechar : str, default None\n            String of length 1. Character used to escape `sep` and `quotechar`\n            when appropriate.\n        decimal : str, default '.'\n            Character recognized as decimal separator. E.g. use ',' for\n            European data.\n        errors : str, default 'strict'\n            Specifies how encoding and decoding errors are to be handled.\n            See the errors argument for :func:`open` for a full list\n            of options.\n\n        {storage_options}\n\n        Returns\n        -------\n        None or str\n            If path_or_buf is None, returns the resulting csv format as a\n            string. Otherwise returns None.\n\n        See Also\n        --------\n        read_csv : Load a CSV file into a DataFrame.\n        to_excel : Write DataFrame to an Excel file.\n\n        Examples\n        --------\n        Create 'out.csv' containing 'df' without indices\n\n        >>> df = pd.DataFrame({{'name': ['Raphael', 'Donatello'],\n        ...                    'mask': ['red', 'purple'],\n        ...                    'weapon': ['sai', 'bo staff']}})\n        >>> df.to_csv('out.csv', index=False)  # doctest: +SKIP\n\n        Create 'out.zip' containing 'out.csv'\n\n        >>> df.to_csv(index=False)\n        'name,mask,weapon\\nRaphael,red,sai\\nDonatello,purple,bo staff\\n'\n        >>> compression_opts = dict(method='zip',\n        ...                         archive_name='out.csv')  # doctest: +SKIP\n        >>> df.to_csv('out.zip', index=False,\n        ...           compression=compression_opts)  # doctest: +SKIP\n\n        To write a csv file to a new folder or nested folder you will first\n        need to create it using either Pathlib or os:\n\n        >>> from pathlib import Path  # doctest: +SKIP\n        >>> filepath = Path('folder/subfolder/out.csv')  # doctest: +SKIP\n        >>> filepath.parent.mkdir(parents=True, exist_ok=True)  # doctest: +SKIP\n        >>> df.to_csv(filepath)  # doctest: +SKIP\n\n        >>> import os  # doctest: +SKIP\n        >>> os.makedirs('folder/subfolder', exist_ok=True)  # doctest: +SKIP\n        >>> df.to_csv('folder/subfolder/out.csv')  # doctest: +SKIP\n        \"\"\"\n        df = self if isinstance(self, ABCDataFrame) else self.to_frame()\n\n        formatter = DataFrameFormatter(\n            frame=df,\n            header=header,\n            index=index,\n            na_rep=na_rep,\n            float_format=float_format,\n            decimal=decimal,\n        )\n\n        return DataFrameRenderer(formatter).to_csv(\n            path_or_buf,\n            lineterminator=lineterminator,\n            sep=sep,\n            encoding=encoding,\n            errors=errors,\n            compression=compression,\n            quoting=quoting,\n            columns=columns,\n            index_label=index_label,\n            mode=mode,\n            chunksize=chunksize,\n            quotechar=quotechar,\n            date_format=date_format,\n            doublequote=doublequote,\n            escapechar=escapechar,\n            storage_options=storage_options,\n        )\n\n    # ----------------------------------------------------------------------\n    # Lookup Caching\n\n    def _reset_cacher(self) -> None:\n        \"\"\"\n        Reset the cacher.\n        \"\"\"\n        raise AbstractMethodError(self)\n\n    def _maybe_update_cacher(\n        self,\n        clear: bool_t = False,\n        verify_is_copy: bool_t = True,\n        inplace: bool_t = False,\n    ) -> None:\n        \"\"\"\n        See if we need to update our parent cacher if clear, then clear our\n        cache.\n\n        Parameters\n        ----------\n        clear : bool, default False\n            Clear the item cache.\n        verify_is_copy : bool, default True\n            Provide is_copy checks.\n        \"\"\"\n        if using_copy_on_write():\n            return\n\n        if verify_is_copy:\n            self._check_setitem_copy(t=\"referent\")\n\n        if clear:\n            self._clear_item_cache()\n\n    def _clear_item_cache(self) -> None:\n        raise AbstractMethodError(self)\n\n    # ----------------------------------------------------------------------\n    # Indexing Methods\n\n    @final\n    def take(self, indices, axis: Axis = 0, **kwargs) -> Self:\n        \"\"\"\n        Return the elements in the given *positional* indices along an axis.\n\n        This means that we are not indexing according to actual values in\n        the index attribute of the object. We are indexing according to the\n        actual position of the element in the object.\n\n        Parameters\n        ----------\n        indices : array-like\n            An array of ints indicating which positions to take.\n        axis : {0 or 'index', 1 or 'columns', None}, default 0\n            The axis on which to select elements. ``0`` means that we are\n            selecting rows, ``1`` means that we are selecting columns.\n            For `Series` this parameter is unused and defaults to 0.\n        **kwargs\n            For compatibility with :meth:`numpy.take`. Has no effect on the\n            output.\n\n        Returns\n        -------\n        same type as caller\n            An array-like containing the elements taken from the object.\n\n        See Also\n        --------\n        DataFrame.loc : Select a subset of a DataFrame by labels.\n        DataFrame.iloc : Select a subset of a DataFrame by positions.\n        numpy.take : Take elements from an array along an axis.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame([('falcon', 'bird', 389.0),\n        ...                    ('parrot', 'bird', 24.0),\n        ...                    ('lion', 'mammal', 80.5),\n        ...                    ('monkey', 'mammal', np.nan)],\n        ...                   columns=['name', 'class', 'max_speed'],\n        ...                   index=[0, 2, 3, 1])\n        >>> df\n             name   class  max_speed\n        0  falcon    bird      389.0\n        2  parrot    bird       24.0\n        3    lion  mammal       80.5\n        1  monkey  mammal        NaN\n\n        Take elements at positions 0 and 3 along the axis 0 (default).\n\n        Note how the actual indices selected (0 and 1) do not correspond to\n        our selected indices 0 and 3. That's because we are selecting the 0th\n        and 3rd rows, not rows whose indices equal 0 and 3.\n\n        >>> df.take([0, 3])\n             name   class  max_speed\n        0  falcon    bird      389.0\n        1  monkey  mammal        NaN\n\n        Take elements at indices 1 and 2 along the axis 1 (column selection).\n\n        >>> df.take([1, 2], axis=1)\n            class  max_speed\n        0    bird      389.0\n        2    bird       24.0\n        3  mammal       80.5\n        1  mammal        NaN\n\n        We may take elements using negative integers for positive indices,\n        starting from the end of the object, just like with Python lists.\n\n        >>> df.take([-1, -2])\n             name   class  max_speed\n        1  monkey  mammal        NaN\n        3    lion  mammal       80.5\n        \"\"\"\n\n        nv.validate_take((), kwargs)\n\n        if not isinstance(indices, slice):\n            indices = np.asarray(indices, dtype=np.intp)\n            if (\n                axis == 0\n                and indices.ndim == 1\n                and using_copy_on_write()\n                and is_range_indexer(indices, len(self))\n            ):\n                return self.copy(deep=None)\n        elif self.ndim == 1:\n            raise TypeError(\n                f\"{type(self).__name__}.take requires a sequence of integers, \"\n                \"not slice.\"\n            )\n        else:\n            warnings.warn(\n                # GH#51539\n                f\"Passing a slice to {type(self).__name__}.take is deprecated \"\n                \"and will raise in a future version. Use `obj[slicer]` or pass \"\n                \"a sequence of integers instead.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n            # We can get here with a slice via DataFrame.__getitem__\n            indices = np.arange(\n                indices.start, indices.stop, indices.step, dtype=np.intp\n            )\n\n        new_data = self._mgr.take(\n            indices,\n            axis=self._get_block_manager_axis(axis),\n            verify=True,\n        )\n        return self._constructor_from_mgr(new_data, axes=new_data.axes).__finalize__(\n            self, method=\"take\"\n        )\n\n    @final\n    def _take_with_is_copy(self, indices, axis: Axis = 0) -> Self:\n        \"\"\"\n        Internal version of the `take` method that sets the `_is_copy`\n        attribute to keep track of the parent dataframe (using in indexing\n        for the SettingWithCopyWarning).\n\n        For Series this does the same as the public take (it never sets `_is_copy`).\n\n        See the docstring of `take` for full explanation of the parameters.\n        \"\"\"\n        result = self.take(indices=indices, axis=axis)\n        # Maybe set copy if we didn't actually change the index.\n        if self.ndim == 2 and not result._get_axis(axis).equals(self._get_axis(axis)):\n            result._set_is_copy(self)\n        return result\n\n    @final\n    def xs(\n        self,\n        key: IndexLabel,\n        axis: Axis = 0,\n        level: IndexLabel | None = None,\n        drop_level: bool_t = True,\n    ) -> Self:\n        \"\"\"\n        Return cross-section from the Series/DataFrame.\n\n        This method takes a `key` argument to select data at a particular\n        level of a MultiIndex.\n\n        Parameters\n        ----------\n        key : label or tuple of label\n            Label contained in the index, or partially in a MultiIndex.\n        axis : {0 or 'index', 1 or 'columns'}, default 0\n            Axis to retrieve cross-section on.\n        level : object, defaults to first n levels (n=1 or len(key))\n            In case of a key partially contained in a MultiIndex, indicate\n            which levels are used. Levels can be referred by label or position.\n        drop_level : bool, default True\n            If False, returns object with same levels as self.\n\n        Returns\n        -------\n        Series or DataFrame\n            Cross-section from the original Series or DataFrame\n            corresponding to the selected index levels.\n\n        See Also\n        --------\n        DataFrame.loc : Access a group of rows and columns\n            by label(s) or a boolean array.\n        DataFrame.iloc : Purely integer-location based indexing\n            for selection by position.\n\n        Notes\n        -----\n        `xs` can not be used to set values.\n\n        MultiIndex Slicers is a generic way to get/set values on\n        any level or levels.\n        It is a superset of `xs` functionality, see\n        :ref:`MultiIndex Slicers <advanced.mi_slicers>`.\n\n        Examples\n        --------\n        >>> d = {'num_legs': [4, 4, 2, 2],\n        ...      'num_wings': [0, 0, 2, 2],\n        ...      'class': ['mammal', 'mammal', 'mammal', 'bird'],\n        ...      'animal': ['cat', 'dog', 'bat', 'penguin'],\n        ...      'locomotion': ['walks', 'walks', 'flies', 'walks']}\n        >>> df = pd.DataFrame(data=d)\n        >>> df = df.set_index(['class', 'animal', 'locomotion'])\n        >>> df\n                                   num_legs  num_wings\n        class  animal  locomotion\n        mammal cat     walks              4          0\n               dog     walks              4          0\n               bat     flies              2          2\n        bird   penguin walks              2          2\n\n        Get values at specified index\n\n        >>> df.xs('mammal')\n                           num_legs  num_wings\n        animal locomotion\n        cat    walks              4          0\n        dog    walks              4          0\n        bat    flies              2          2\n\n        Get values at several indexes\n\n        >>> df.xs(('mammal', 'dog', 'walks'))\n        num_legs     4\n        num_wings    0\n        Name: (mammal, dog, walks), dtype: int64\n\n        Get values at specified index and level\n\n        >>> df.xs('cat', level=1)\n                           num_legs  num_wings\n        class  locomotion\n        mammal walks              4          0\n\n        Get values at several indexes and levels\n\n        >>> df.xs(('bird', 'walks'),\n        ...       level=[0, 'locomotion'])\n                 num_legs  num_wings\n        animal\n        penguin         2          2\n\n        Get values at specified column and axis\n\n        >>> df.xs('num_wings', axis=1)\n        class   animal   locomotion\n        mammal  cat      walks         0\n                dog      walks         0\n                bat      flies         2\n        bird    penguin  walks         2\n        Name: num_wings, dtype: int64\n        \"\"\"\n        axis = self._get_axis_number(axis)\n        labels = self._get_axis(axis)\n\n        if isinstance(key, list):\n            raise TypeError(\"list keys are not supported in xs, pass a tuple instead\")\n\n        if level is not None:\n            if not isinstance(labels, MultiIndex):\n                raise TypeError(\"Index must be a MultiIndex\")\n            loc, new_ax = labels.get_loc_level(key, level=level, drop_level=drop_level)\n\n            # create the tuple of the indexer\n            _indexer = [slice(None)] * self.ndim\n            _indexer[axis] = loc\n            indexer = tuple(_indexer)\n\n            result = self.iloc[indexer]\n            setattr(result, result._get_axis_name(axis), new_ax)\n            return result\n\n        if axis == 1:\n            if drop_level:\n                return self[key]\n            index = self.columns\n        else:\n            index = self.index\n\n        if isinstance(index, MultiIndex):\n            loc, new_index = index._get_loc_level(key, level=0)\n            if not drop_level:\n                if lib.is_integer(loc):\n                    # Slice index must be an integer or None\n                    new_index = index[loc : loc + 1]\n                else:\n                    new_index = index[loc]\n        else:\n            loc = index.get_loc(key)\n\n            if isinstance(loc, np.ndarray):\n                if loc.dtype == np.bool_:\n                    (inds,) = loc.nonzero()\n                    return self._take_with_is_copy(inds, axis=axis)\n                else:\n                    return self._take_with_is_copy(loc, axis=axis)\n\n            if not is_scalar(loc):\n                new_index = index[loc]\n\n        if is_scalar(loc) and axis == 0:\n            # In this case loc should be an integer\n            if self.ndim == 1:\n                # if we encounter an array-like and we only have 1 dim\n                # that means that their are list/ndarrays inside the Series!\n                # so just return them (GH 6394)\n                return self._values[loc]\n\n            new_mgr = self._mgr.fast_xs(loc)\n\n            result = self._constructor_sliced_from_mgr(new_mgr, axes=new_mgr.axes)\n            result._name = self.index[loc]\n            result = result.__finalize__(self)\n        elif is_scalar(loc):\n            result = self.iloc[:, slice(loc, loc + 1)]\n        elif axis == 1:\n            result = self.iloc[:, loc]\n        else:\n            result = self.iloc[loc]\n            result.index = new_index\n\n        # this could be a view\n        # but only in a single-dtyped view sliceable case\n        result._set_is_copy(self, copy=not result._is_view)\n        return result\n\n    def __getitem__(self, item):\n        raise AbstractMethodError(self)\n\n    @final\n    def _getitem_slice(self, key: slice) -> Self:\n        \"\"\"\n        __getitem__ for the case where the key is a slice object.\n        \"\"\"\n        # _convert_slice_indexer to determine if this slice is positional\n        #  or label based, and if the latter, convert to positional\n        slobj = self.index._convert_slice_indexer(key, kind=\"getitem\")\n        if isinstance(slobj, np.ndarray):\n            # reachable with DatetimeIndex\n            indexer = lib.maybe_indices_to_slice(\n                slobj.astype(np.intp, copy=False), len(self)\n            )\n            if isinstance(indexer, np.ndarray):\n                # GH#43223 If we can not convert, use take\n                return self.take(indexer, axis=0)\n            slobj = indexer\n        return self._slice(slobj)\n\n    def _slice(self, slobj: slice, axis: AxisInt = 0) -> Self:\n        \"\"\"\n        Construct a slice of this container.\n\n        Slicing with this method is *always* positional.\n        \"\"\"\n        assert isinstance(slobj, slice), type(slobj)\n        axis = self._get_block_manager_axis(axis)\n        new_mgr = self._mgr.get_slice(slobj, axis=axis)\n        result = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes)\n        result = result.__finalize__(self)\n\n        # this could be a view\n        # but only in a single-dtyped view sliceable case\n        is_copy = axis != 0 or result._is_view\n        result._set_is_copy(self, copy=is_copy)\n        return result\n\n    @final\n    def _set_is_copy(self, ref: NDFrame, copy: bool_t = True) -> None:\n        if not copy:\n            self._is_copy = None\n        else:\n            assert ref is not None\n            self._is_copy = weakref.ref(ref)\n\n    def _check_is_chained_assignment_possible(self) -> bool_t:\n        \"\"\"\n        Check if we are a view, have a cacher, and are of mixed type.\n        If so, then force a setitem_copy check.\n\n        Should be called just near setting a value\n\n        Will return a boolean if it we are a view and are cached, but a\n        single-dtype meaning that the cacher should be updated following\n        setting.\n        \"\"\"\n        if self._is_copy:\n            self._check_setitem_copy(t=\"referent\")\n        return False\n\n    @final\n    def _check_setitem_copy(self, t: str = \"setting\", force: bool_t = False):\n        \"\"\"\n\n        Parameters\n        ----------\n        t : str, the type of setting error\n        force : bool, default False\n           If True, then force showing an error.\n\n        validate if we are doing a setitem on a chained copy.\n\n        It is technically possible to figure out that we are setting on\n        a copy even WITH a multi-dtyped pandas object. In other words, some\n        blocks may be views while other are not. Currently _is_view will ALWAYS\n        return False for multi-blocks to avoid having to handle this case.\n\n        df = DataFrame(np.arange(0,9), columns=['count'])\n        df['group'] = 'b'\n\n        # This technically need not raise SettingWithCopy if both are view\n        # (which is not generally guaranteed but is usually True.  However,\n        # this is in general not a good practice and we recommend using .loc.\n        df.iloc[0:5]['group'] = 'a'\n\n        \"\"\"\n        if using_copy_on_write() or warn_copy_on_write():\n            return\n\n        # return early if the check is not needed\n        if not (force or self._is_copy):\n            return\n\n        value = config.get_option(\"mode.chained_assignment\")\n        if value is None:\n            return\n\n        # see if the copy is not actually referred; if so, then dissolve\n        # the copy weakref\n        if self._is_copy is not None and not isinstance(self._is_copy, str):\n            r = self._is_copy()\n            if not gc.get_referents(r) or (r is not None and r.shape == self.shape):\n                self._is_copy = None\n                return\n\n        # a custom message\n        if isinstance(self._is_copy, str):\n            t = self._is_copy\n\n        elif t == \"referent\":\n            t = (\n                \"\\n\"\n                \"A value is trying to be set on a copy of a slice from a \"\n                \"DataFrame\\n\\n\"\n                \"See the caveats in the documentation: \"\n                \"https://pandas.pydata.org/pandas-docs/stable/user_guide/\"\n                \"indexing.html#returning-a-view-versus-a-copy\"\n            )\n\n        else:\n            t = (\n                \"\\n\"\n                \"A value is trying to be set on a copy of a slice from a \"\n                \"DataFrame.\\n\"\n                \"Try using .loc[row_indexer,col_indexer] = value \"\n                \"instead\\n\\nSee the caveats in the documentation: \"\n                \"https://pandas.pydata.org/pandas-docs/stable/user_guide/\"\n                \"indexing.html#returning-a-view-versus-a-copy\"\n            )\n\n        if value == \"raise\":\n            raise SettingWithCopyError(t)\n        if value == \"warn\":\n            warnings.warn(t, SettingWithCopyWarning, stacklevel=find_stack_level())\n\n    @final\n    def __delitem__(self, key) -> None:\n        \"\"\"\n        Delete item\n        \"\"\"\n        deleted = False\n\n        maybe_shortcut = False\n        if self.ndim == 2 and isinstance(self.columns, MultiIndex):\n            try:\n                # By using engine's __contains__ we effectively\n                # restrict to same-length tuples\n                maybe_shortcut = key not in self.columns._engine\n            except TypeError:\n                pass\n\n        if maybe_shortcut:\n            # Allow shorthand to delete all columns whose first len(key)\n            # elements match key:\n            if not isinstance(key, tuple):\n                key = (key,)\n            for col in self.columns:\n                if isinstance(col, tuple) and col[: len(key)] == key:\n                    del self[col]\n                    deleted = True\n        if not deleted:\n            # If the above loop ran and didn't delete anything because\n            # there was no match, this call should raise the appropriate\n            # exception:\n            loc = self.axes[-1].get_loc(key)\n            self._mgr = self._mgr.idelete(loc)\n\n        # delete from the caches\n        try:\n            del self._item_cache[key]\n        except KeyError:\n            pass\n\n    # ----------------------------------------------------------------------\n    # Unsorted\n\n    @final\n    def _check_inplace_and_allows_duplicate_labels(self, inplace: bool_t):\n        if inplace and not self.flags.allows_duplicate_labels:\n            raise ValueError(\n                \"Cannot specify 'inplace=True' when \"\n                \"'self.flags.allows_duplicate_labels' is False.\"\n            )\n\n    @final\n    def get(self, key, default=None):\n        \"\"\"\n        Get item from object for given key (ex: DataFrame column).\n\n        Returns default value if not found.\n\n        Parameters\n        ----------\n        key : object\n\n        Returns\n        -------\n        same type as items contained in object\n\n        Examples\n        --------\n        >>> df = pd.DataFrame(\n        ...     [\n        ...         [24.3, 75.7, \"high\"],\n        ...         [31, 87.8, \"high\"],\n        ...         [22, 71.6, \"medium\"],\n        ...         [35, 95, \"medium\"],\n        ...     ],\n        ...     columns=[\"temp_celsius\", \"temp_fahrenheit\", \"windspeed\"],\n        ...     index=pd.date_range(start=\"2014-02-12\", end=\"2014-02-15\", freq=\"D\"),\n        ... )\n\n        >>> df\n                    temp_celsius  temp_fahrenheit windspeed\n        2014-02-12          24.3             75.7      high\n        2014-02-13          31.0             87.8      high\n        2014-02-14          22.0             71.6    medium\n        2014-02-15          35.0             95.0    medium\n\n        >>> df.get([\"temp_celsius\", \"windspeed\"])\n                    temp_celsius windspeed\n        2014-02-12          24.3      high\n        2014-02-13          31.0      high\n        2014-02-14          22.0    medium\n        2014-02-15          35.0    medium\n\n        >>> ser = df['windspeed']\n        >>> ser.get('2014-02-13')\n        'high'\n\n        If the key isn't found, the default value will be used.\n\n        >>> df.get([\"temp_celsius\", \"temp_kelvin\"], default=\"default_value\")\n        'default_value'\n\n        >>> ser.get('2014-02-10', '[unknown]')\n        '[unknown]'\n        \"\"\"\n        try:\n            return self[key]\n        except (KeyError, ValueError, IndexError):\n            return default\n\n    @final\n    @property\n    def _is_view(self) -> bool_t:\n        \"\"\"Return boolean indicating if self is view of another array\"\"\"\n        return self._mgr.is_view\n\n    @final\n    def reindex_like(\n        self,\n        other,\n        method: Literal[\"backfill\", \"bfill\", \"pad\", \"ffill\", \"nearest\"] | None = None,\n        copy: bool_t | None = None,\n        limit: int | None = None,\n        tolerance=None,\n    ) -> Self:\n        \"\"\"\n        Return an object with matching indices as other object.\n\n        Conform the object to the same index on all axes. Optional\n        filling logic, placing NaN in locations having no value\n        in the previous index. A new object is produced unless the\n        new index is equivalent to the current one and copy=False.\n\n        Parameters\n        ----------\n        other : Object of the same data type\n            Its row and column indices are used to define the new indices\n            of this object.\n        method : {None, 'backfill'/'bfill', 'pad'/'ffill', 'nearest'}\n            Method to use for filling holes in reindexed DataFrame.\n            Please note: this is only applicable to DataFrames/Series with a\n            monotonically increasing/decreasing index.\n\n            * None (default): don't fill gaps\n            * pad / ffill: propagate last valid observation forward to next\n              valid\n            * backfill / bfill: use next valid observation to fill gap\n            * nearest: use nearest valid observations to fill gap.\n\n        copy : bool, default True\n            Return a new object, even if the passed indexes are the same.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n        limit : int, default None\n            Maximum number of consecutive labels to fill for inexact matches.\n        tolerance : optional\n            Maximum distance between original and new labels for inexact\n            matches. The values of the index at the matching locations must\n            satisfy the equation ``abs(index[indexer] - target) <= tolerance``.\n\n            Tolerance may be a scalar value, which applies the same tolerance\n            to all values, or list-like, which applies variable tolerance per\n            element. List-like includes list, tuple, array, Series, and must be\n            the same size as the index and its dtype must exactly match the\n            index's type.\n\n        Returns\n        -------\n        Series or DataFrame\n            Same type as caller, but with changed indices on each axis.\n\n        See Also\n        --------\n        DataFrame.set_index : Set row labels.\n        DataFrame.reset_index : Remove row labels or move them to new columns.\n        DataFrame.reindex : Change to new indices or expand indices.\n\n        Notes\n        -----\n        Same as calling\n        ``.reindex(index=other.index, columns=other.columns,...)``.\n\n        Examples\n        --------\n        >>> df1 = pd.DataFrame([[24.3, 75.7, 'high'],\n        ...                     [31, 87.8, 'high'],\n        ...                     [22, 71.6, 'medium'],\n        ...                     [35, 95, 'medium']],\n        ...                    columns=['temp_celsius', 'temp_fahrenheit',\n        ...                             'windspeed'],\n        ...                    index=pd.date_range(start='2014-02-12',\n        ...                                        end='2014-02-15', freq='D'))\n\n        >>> df1\n                    temp_celsius  temp_fahrenheit windspeed\n        2014-02-12          24.3             75.7      high\n        2014-02-13          31.0             87.8      high\n        2014-02-14          22.0             71.6    medium\n        2014-02-15          35.0             95.0    medium\n\n        >>> df2 = pd.DataFrame([[28, 'low'],\n        ...                     [30, 'low'],\n        ...                     [35.1, 'medium']],\n        ...                    columns=['temp_celsius', 'windspeed'],\n        ...                    index=pd.DatetimeIndex(['2014-02-12', '2014-02-13',\n        ...                                            '2014-02-15']))\n\n        >>> df2\n                    temp_celsius windspeed\n        2014-02-12          28.0       low\n        2014-02-13          30.0       low\n        2014-02-15          35.1    medium\n\n        >>> df2.reindex_like(df1)\n                    temp_celsius  temp_fahrenheit windspeed\n        2014-02-12          28.0              NaN       low\n        2014-02-13          30.0              NaN       low\n        2014-02-14           NaN              NaN       NaN\n        2014-02-15          35.1              NaN    medium\n        \"\"\"\n        d = other._construct_axes_dict(\n            axes=self._AXIS_ORDERS,\n            method=method,\n            copy=copy,\n            limit=limit,\n            tolerance=tolerance,\n        )\n\n        return self.reindex(**d)\n\n    @overload\n    def drop(\n        self,\n        labels: IndexLabel = ...,\n        *,\n        axis: Axis = ...,\n        index: IndexLabel = ...,\n        columns: IndexLabel = ...,\n        level: Level | None = ...,\n        inplace: Literal[True],\n        errors: IgnoreRaise = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def drop(\n        self,\n        labels: IndexLabel = ...,\n        *,\n        axis: Axis = ...,\n        index: IndexLabel = ...,\n        columns: IndexLabel = ...,\n        level: Level | None = ...,\n        inplace: Literal[False] = ...,\n        errors: IgnoreRaise = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def drop(\n        self,\n        labels: IndexLabel = ...,\n        *,\n        axis: Axis = ...,\n        index: IndexLabel = ...,\n        columns: IndexLabel = ...,\n        level: Level | None = ...,\n        inplace: bool_t = ...,\n        errors: IgnoreRaise = ...,\n    ) -> Self | None:\n        ...\n\n    def drop(\n        self,\n        labels: IndexLabel | None = None,\n        *,\n        axis: Axis = 0,\n        index: IndexLabel | None = None,\n        columns: IndexLabel | None = None,\n        level: Level | None = None,\n        inplace: bool_t = False,\n        errors: IgnoreRaise = \"raise\",\n    ) -> Self | None:\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n        if labels is not None:\n            if index is not None or columns is not None:\n                raise ValueError(\"Cannot specify both 'labels' and 'index'/'columns'\")\n            axis_name = self._get_axis_name(axis)\n            axes = {axis_name: labels}\n        elif index is not None or columns is not None:\n            axes = {\"index\": index}\n            if self.ndim == 2:\n                axes[\"columns\"] = columns\n        else:\n            raise ValueError(\n                \"Need to specify at least one of 'labels', 'index' or 'columns'\"\n            )\n\n        obj = self\n\n        for axis, labels in axes.items():\n            if labels is not None:\n                obj = obj._drop_axis(labels, axis, level=level, errors=errors)\n\n        if inplace:\n            self._update_inplace(obj)\n            return None\n        else:\n            return obj\n\n    @final\n    def _drop_axis(\n        self,\n        labels,\n        axis,\n        level=None,\n        errors: IgnoreRaise = \"raise\",\n        only_slice: bool_t = False,\n    ) -> Self:\n        \"\"\"\n        Drop labels from specified axis. Used in the ``drop`` method\n        internally.\n\n        Parameters\n        ----------\n        labels : single label or list-like\n        axis : int or axis name\n        level : int or level name, default None\n            For MultiIndex\n        errors : {'ignore', 'raise'}, default 'raise'\n            If 'ignore', suppress error and existing labels are dropped.\n        only_slice : bool, default False\n            Whether indexing along columns should be view-only.\n\n        \"\"\"\n        axis_num = self._get_axis_number(axis)\n        axis = self._get_axis(axis)\n\n        if axis.is_unique:\n            if level is not None:\n                if not isinstance(axis, MultiIndex):\n                    raise AssertionError(\"axis must be a MultiIndex\")\n                new_axis = axis.drop(labels, level=level, errors=errors)\n            else:\n                new_axis = axis.drop(labels, errors=errors)\n            indexer = axis.get_indexer(new_axis)\n\n        # Case for non-unique axis\n        else:\n            is_tuple_labels = is_nested_list_like(labels) or isinstance(labels, tuple)\n            labels = ensure_object(common.index_labels_to_array(labels))\n            if level is not None:\n                if not isinstance(axis, MultiIndex):\n                    raise AssertionError(\"axis must be a MultiIndex\")\n                mask = ~axis.get_level_values(level).isin(labels)\n\n                # GH 18561 MultiIndex.drop should raise if label is absent\n                if errors == \"raise\" and mask.all():\n                    raise KeyError(f\"{labels} not found in axis\")\n            elif (\n                isinstance(axis, MultiIndex)\n                and labels.dtype == \"object\"\n                and not is_tuple_labels\n            ):\n                # Set level to zero in case of MultiIndex and label is string,\n                #  because isin can't handle strings for MultiIndexes GH#36293\n                # In case of tuples we get dtype object but have to use isin GH#42771\n                mask = ~axis.get_level_values(0).isin(labels)\n            else:\n                mask = ~axis.isin(labels)\n                # Check if label doesn't exist along axis\n                labels_missing = (axis.get_indexer_for(labels) == -1).any()\n                if errors == \"raise\" and labels_missing:\n                    raise KeyError(f\"{labels} not found in axis\")\n\n            if isinstance(mask.dtype, ExtensionDtype):\n                # GH#45860\n                mask = mask.to_numpy(dtype=bool)\n\n            indexer = mask.nonzero()[0]\n            new_axis = axis.take(indexer)\n\n        bm_axis = self.ndim - axis_num - 1\n        new_mgr = self._mgr.reindex_indexer(\n            new_axis,\n            indexer,\n            axis=bm_axis,\n            allow_dups=True,\n            copy=None,\n            only_slice=only_slice,\n        )\n        result = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes)\n        if self.ndim == 1:\n            result._name = self.name\n\n        return result.__finalize__(self)\n\n    @final\n    def _update_inplace(self, result, verify_is_copy: bool_t = True) -> None:\n        \"\"\"\n        Replace self internals with result.\n\n        Parameters\n        ----------\n        result : same type as self\n        verify_is_copy : bool, default True\n            Provide is_copy checks.\n        \"\"\"\n        # NOTE: This does *not* call __finalize__ and that's an explicit\n        # decision that we may revisit in the future.\n        self._reset_cache()\n        self._clear_item_cache()\n        self._mgr = result._mgr\n        self._maybe_update_cacher(verify_is_copy=verify_is_copy, inplace=True)\n\n    @final\n    def add_prefix(self, prefix: str, axis: Axis | None = None) -> Self:\n        \"\"\"\n        Prefix labels with string `prefix`.\n\n        For Series, the row labels are prefixed.\n        For DataFrame, the column labels are prefixed.\n\n        Parameters\n        ----------\n        prefix : str\n            The string to add before each label.\n        axis : {0 or 'index', 1 or 'columns', None}, default None\n            Axis to add prefix on\n\n            .. versionadded:: 2.0.0\n\n        Returns\n        -------\n        Series or DataFrame\n            New Series or DataFrame with updated labels.\n\n        See Also\n        --------\n        Series.add_suffix: Suffix row labels with string `suffix`.\n        DataFrame.add_suffix: Suffix column labels with string `suffix`.\n\n        Examples\n        --------\n        >>> s = pd.Series([1, 2, 3, 4])\n        >>> s\n        0    1\n        1    2\n        2    3\n        3    4\n        dtype: int64\n\n        >>> s.add_prefix('item_')\n        item_0    1\n        item_1    2\n        item_2    3\n        item_3    4\n        dtype: int64\n\n        >>> df = pd.DataFrame({'A': [1, 2, 3, 4], 'B': [3, 4, 5, 6]})\n        >>> df\n           A  B\n        0  1  3\n        1  2  4\n        2  3  5\n        3  4  6\n\n        >>> df.add_prefix('col_')\n             col_A  col_B\n        0       1       3\n        1       2       4\n        2       3       5\n        3       4       6\n        \"\"\"\n        f = lambda x: f\"{prefix}{x}\"\n\n        axis_name = self._info_axis_name\n        if axis is not None:\n            axis_name = self._get_axis_name(axis)\n\n        mapper = {axis_name: f}\n\n        # error: Incompatible return value type (got \"Optional[Self]\",\n        # expected \"Self\")\n        # error: Argument 1 to \"rename\" of \"NDFrame\" has incompatible type\n        # \"**Dict[str, partial[str]]\"; expected \"Union[str, int, None]\"\n        # error: Keywords must be strings\n        return self._rename(**mapper)  # type: ignore[return-value, arg-type, misc]\n\n    @final\n    def add_suffix(self, suffix: str, axis: Axis | None = None) -> Self:\n        \"\"\"\n        Suffix labels with string `suffix`.\n\n        For Series, the row labels are suffixed.\n        For DataFrame, the column labels are suffixed.\n\n        Parameters\n        ----------\n        suffix : str\n            The string to add after each label.\n        axis : {0 or 'index', 1 or 'columns', None}, default None\n            Axis to add suffix on\n\n            .. versionadded:: 2.0.0\n\n        Returns\n        -------\n        Series or DataFrame\n            New Series or DataFrame with updated labels.\n\n        See Also\n        --------\n        Series.add_prefix: Prefix row labels with string `prefix`.\n        DataFrame.add_prefix: Prefix column labels with string `prefix`.\n\n        Examples\n        --------\n        >>> s = pd.Series([1, 2, 3, 4])\n        >>> s\n        0    1\n        1    2\n        2    3\n        3    4\n        dtype: int64\n\n        >>> s.add_suffix('_item')\n        0_item    1\n        1_item    2\n        2_item    3\n        3_item    4\n        dtype: int64\n\n        >>> df = pd.DataFrame({'A': [1, 2, 3, 4], 'B': [3, 4, 5, 6]})\n        >>> df\n           A  B\n        0  1  3\n        1  2  4\n        2  3  5\n        3  4  6\n\n        >>> df.add_suffix('_col')\n             A_col  B_col\n        0       1       3\n        1       2       4\n        2       3       5\n        3       4       6\n        \"\"\"\n        f = lambda x: f\"{x}{suffix}\"\n\n        axis_name = self._info_axis_name\n        if axis is not None:\n            axis_name = self._get_axis_name(axis)\n\n        mapper = {axis_name: f}\n        # error: Incompatible return value type (got \"Optional[Self]\",\n        # expected \"Self\")\n        # error: Argument 1 to \"rename\" of \"NDFrame\" has incompatible type\n        # \"**Dict[str, partial[str]]\"; expected \"Union[str, int, None]\"\n        # error: Keywords must be strings\n        return self._rename(**mapper)  # type: ignore[return-value, arg-type, misc]\n\n    @overload\n    def sort_values(\n        self,\n        *,\n        axis: Axis = ...,\n        ascending: bool_t | Sequence[bool_t] = ...,\n        inplace: Literal[False] = ...,\n        kind: SortKind = ...,\n        na_position: NaPosition = ...,\n        ignore_index: bool_t = ...,\n        key: ValueKeyFunc = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def sort_values(\n        self,\n        *,\n        axis: Axis = ...,\n        ascending: bool_t | Sequence[bool_t] = ...,\n        inplace: Literal[True],\n        kind: SortKind = ...,\n        na_position: NaPosition = ...,\n        ignore_index: bool_t = ...,\n        key: ValueKeyFunc = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def sort_values(\n        self,\n        *,\n        axis: Axis = ...,\n        ascending: bool_t | Sequence[bool_t] = ...,\n        inplace: bool_t = ...,\n        kind: SortKind = ...,\n        na_position: NaPosition = ...,\n        ignore_index: bool_t = ...,\n        key: ValueKeyFunc = ...,\n    ) -> Self | None:\n        ...\n\n    def sort_values(\n        self,\n        *,\n        axis: Axis = 0,\n        ascending: bool_t | Sequence[bool_t] = True,\n        inplace: bool_t = False,\n        kind: SortKind = \"quicksort\",\n        na_position: NaPosition = \"last\",\n        ignore_index: bool_t = False,\n        key: ValueKeyFunc | None = None,\n    ) -> Self | None:\n        \"\"\"\n        Sort by the values along either axis.\n\n        Parameters\n        ----------%(optional_by)s\n        axis : %(axes_single_arg)s, default 0\n             Axis to be sorted.\n        ascending : bool or list of bool, default True\n             Sort ascending vs. descending. Specify list for multiple sort\n             orders.  If this is a list of bools, must match the length of\n             the by.\n        inplace : bool, default False\n             If True, perform operation in-place.\n        kind : {'quicksort', 'mergesort', 'heapsort', 'stable'}, default 'quicksort'\n             Choice of sorting algorithm. See also :func:`numpy.sort` for more\n             information. `mergesort` and `stable` are the only stable algorithms. For\n             DataFrames, this option is only applied when sorting on a single\n             column or label.\n        na_position : {'first', 'last'}, default 'last'\n             Puts NaNs at the beginning if `first`; `last` puts NaNs at the\n             end.\n        ignore_index : bool, default False\n             If True, the resulting axis will be labeled 0, 1, \u2026, n - 1.\n        key : callable, optional\n            Apply the key function to the values\n            before sorting. This is similar to the `key` argument in the\n            builtin :meth:`sorted` function, with the notable difference that\n            this `key` function should be *vectorized*. It should expect a\n            ``Series`` and return a Series with the same shape as the input.\n            It will be applied to each column in `by` independently.\n\n        Returns\n        -------\n        DataFrame or None\n            DataFrame with sorted values or None if ``inplace=True``.\n\n        See Also\n        --------\n        DataFrame.sort_index : Sort a DataFrame by the index.\n        Series.sort_values : Similar method for a Series.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({\n        ...     'col1': ['A', 'A', 'B', np.nan, 'D', 'C'],\n        ...     'col2': [2, 1, 9, 8, 7, 4],\n        ...     'col3': [0, 1, 9, 4, 2, 3],\n        ...     'col4': ['a', 'B', 'c', 'D', 'e', 'F']\n        ... })\n        >>> df\n          col1  col2  col3 col4\n        0    A     2     0    a\n        1    A     1     1    B\n        2    B     9     9    c\n        3  NaN     8     4    D\n        4    D     7     2    e\n        5    C     4     3    F\n\n        Sort by col1\n\n        >>> df.sort_values(by=['col1'])\n          col1  col2  col3 col4\n        0    A     2     0    a\n        1    A     1     1    B\n        2    B     9     9    c\n        5    C     4     3    F\n        4    D     7     2    e\n        3  NaN     8     4    D\n\n        Sort by multiple columns\n\n        >>> df.sort_values(by=['col1', 'col2'])\n          col1  col2  col3 col4\n        1    A     1     1    B\n        0    A     2     0    a\n        2    B     9     9    c\n        5    C     4     3    F\n        4    D     7     2    e\n        3  NaN     8     4    D\n\n        Sort Descending\n\n        >>> df.sort_values(by='col1', ascending=False)\n          col1  col2  col3 col4\n        4    D     7     2    e\n        5    C     4     3    F\n        2    B     9     9    c\n        0    A     2     0    a\n        1    A     1     1    B\n        3  NaN     8     4    D\n\n        Putting NAs first\n\n        >>> df.sort_values(by='col1', ascending=False, na_position='first')\n          col1  col2  col3 col4\n        3  NaN     8     4    D\n        4    D     7     2    e\n        5    C     4     3    F\n        2    B     9     9    c\n        0    A     2     0    a\n        1    A     1     1    B\n\n        Sorting with a key function\n\n        >>> df.sort_values(by='col4', key=lambda col: col.str.lower())\n           col1  col2  col3 col4\n        0    A     2     0    a\n        1    A     1     1    B\n        2    B     9     9    c\n        3  NaN     8     4    D\n        4    D     7     2    e\n        5    C     4     3    F\n\n        Natural sort with the key argument,\n        using the `natsort <https://github.com/SethMMorton/natsort>` package.\n\n        >>> df = pd.DataFrame({\n        ...    \"time\": ['0hr', '128hr', '72hr', '48hr', '96hr'],\n        ...    \"value\": [10, 20, 30, 40, 50]\n        ... })\n        >>> df\n            time  value\n        0    0hr     10\n        1  128hr     20\n        2   72hr     30\n        3   48hr     40\n        4   96hr     50\n        >>> from natsort import index_natsorted\n        >>> df.sort_values(\n        ...     by=\"time\",\n        ...     key=lambda x: np.argsort(index_natsorted(df[\"time\"]))\n        ... )\n            time  value\n        0    0hr     10\n        3   48hr     40\n        2   72hr     30\n        4   96hr     50\n        1  128hr     20\n        \"\"\"\n        raise AbstractMethodError(self)\n\n    @overload\n    def sort_index(\n        self,\n        *,\n        axis: Axis = ...,\n        level: IndexLabel = ...,\n        ascending: bool_t | Sequence[bool_t] = ...,\n        inplace: Literal[True],\n        kind: SortKind = ...,\n        na_position: NaPosition = ...,\n        sort_remaining: bool_t = ...,\n        ignore_index: bool_t = ...,\n        key: IndexKeyFunc = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def sort_index(\n        self,\n        *,\n        axis: Axis = ...,\n        level: IndexLabel = ...,\n        ascending: bool_t | Sequence[bool_t] = ...,\n        inplace: Literal[False] = ...,\n        kind: SortKind = ...,\n        na_position: NaPosition = ...,\n        sort_remaining: bool_t = ...,\n        ignore_index: bool_t = ...,\n        key: IndexKeyFunc = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def sort_index(\n        self,\n        *,\n        axis: Axis = ...,\n        level: IndexLabel = ...,\n        ascending: bool_t | Sequence[bool_t] = ...,\n        inplace: bool_t = ...,\n        kind: SortKind = ...,\n        na_position: NaPosition = ...,\n        sort_remaining: bool_t = ...,\n        ignore_index: bool_t = ...,\n        key: IndexKeyFunc = ...,\n    ) -> Self | None:\n        ...\n\n    def sort_index(\n        self,\n        *,\n        axis: Axis = 0,\n        level: IndexLabel | None = None,\n        ascending: bool_t | Sequence[bool_t] = True,\n        inplace: bool_t = False,\n        kind: SortKind = \"quicksort\",\n        na_position: NaPosition = \"last\",\n        sort_remaining: bool_t = True,\n        ignore_index: bool_t = False,\n        key: IndexKeyFunc | None = None,\n    ) -> Self | None:\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        axis = self._get_axis_number(axis)\n        ascending = validate_ascending(ascending)\n\n        target = self._get_axis(axis)\n\n        indexer = get_indexer_indexer(\n            target, level, ascending, kind, na_position, sort_remaining, key\n        )\n\n        if indexer is None:\n            if inplace:\n                result = self\n            else:\n                result = self.copy(deep=None)\n\n            if ignore_index:\n                result.index = default_index(len(self))\n            if inplace:\n                return None\n            else:\n                return result\n\n        baxis = self._get_block_manager_axis(axis)\n        new_data = self._mgr.take(indexer, axis=baxis, verify=False)\n\n        # reconstruct axis if needed\n        if not ignore_index:\n            new_axis = new_data.axes[baxis]._sort_levels_monotonic()\n        else:\n            new_axis = default_index(len(indexer))\n        new_data.set_axis(baxis, new_axis)\n\n        result = self._constructor_from_mgr(new_data, axes=new_data.axes)\n\n        if inplace:\n            return self._update_inplace(result)\n        else:\n            return result.__finalize__(self, method=\"sort_index\")\n\n    @doc(\n        klass=_shared_doc_kwargs[\"klass\"],\n        optional_reindex=\"\",\n    )\n    def reindex(\n        self,\n        labels=None,\n        *,\n        index=None,\n        columns=None,\n        axis: Axis | None = None,\n        method: ReindexMethod | None = None,\n        copy: bool_t | None = None,\n        level: Level | None = None,\n        fill_value: Scalar | None = np.nan,\n        limit: int | None = None,\n        tolerance=None,\n    ) -> Self:\n        \"\"\"\n        Conform {klass} to new index with optional filling logic.\n\n        Places NA/NaN in locations having no value in the previous index. A new object\n        is produced unless the new index is equivalent to the current one and\n        ``copy=False``.\n\n        Parameters\n        ----------\n        {optional_reindex}\n        method : {{None, 'backfill'/'bfill', 'pad'/'ffill', 'nearest'}}\n            Method to use for filling holes in reindexed DataFrame.\n            Please note: this is only applicable to DataFrames/Series with a\n            monotonically increasing/decreasing index.\n\n            * None (default): don't fill gaps\n            * pad / ffill: Propagate last valid observation forward to next\n              valid.\n            * backfill / bfill: Use next valid observation to fill gap.\n            * nearest: Use nearest valid observations to fill gap.\n\n        copy : bool, default True\n            Return a new object, even if the passed indexes are the same.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n        level : int or name\n            Broadcast across a level, matching Index values on the\n            passed MultiIndex level.\n        fill_value : scalar, default np.nan\n            Value to use for missing values. Defaults to NaN, but can be any\n            \"compatible\" value.\n        limit : int, default None\n            Maximum number of consecutive elements to forward or backward fill.\n        tolerance : optional\n            Maximum distance between original and new labels for inexact\n            matches. The values of the index at the matching locations most\n            satisfy the equation ``abs(index[indexer] - target) <= tolerance``.\n\n            Tolerance may be a scalar value, which applies the same tolerance\n            to all values, or list-like, which applies variable tolerance per\n            element. List-like includes list, tuple, array, Series, and must be\n            the same size as the index and its dtype must exactly match the\n            index's type.\n\n        Returns\n        -------\n        {klass} with changed index.\n\n        See Also\n        --------\n        DataFrame.set_index : Set row labels.\n        DataFrame.reset_index : Remove row labels or move them to new columns.\n        DataFrame.reindex_like : Change to same indices as other DataFrame.\n\n        Examples\n        --------\n        ``DataFrame.reindex`` supports two calling conventions\n\n        * ``(index=index_labels, columns=column_labels, ...)``\n        * ``(labels, axis={{'index', 'columns'}}, ...)``\n\n        We *highly* recommend using keyword arguments to clarify your\n        intent.\n\n        Create a dataframe with some fictional data.\n\n        >>> index = ['Firefox', 'Chrome', 'Safari', 'IE10', 'Konqueror']\n        >>> df = pd.DataFrame({{'http_status': [200, 200, 404, 404, 301],\n        ...                   'response_time': [0.04, 0.02, 0.07, 0.08, 1.0]}},\n        ...                   index=index)\n        >>> df\n                   http_status  response_time\n        Firefox            200           0.04\n        Chrome             200           0.02\n        Safari             404           0.07\n        IE10               404           0.08\n        Konqueror          301           1.00\n\n        Create a new index and reindex the dataframe. By default\n        values in the new index that do not have corresponding\n        records in the dataframe are assigned ``NaN``.\n\n        >>> new_index = ['Safari', 'Iceweasel', 'Comodo Dragon', 'IE10',\n        ...              'Chrome']\n        >>> df.reindex(new_index)\n                       http_status  response_time\n        Safari               404.0           0.07\n        Iceweasel              NaN            NaN\n        Comodo Dragon          NaN            NaN\n        IE10                 404.0           0.08\n        Chrome               200.0           0.02\n\n        We can fill in the missing values by passing a value to\n        the keyword ``fill_value``. Because the index is not monotonically\n        increasing or decreasing, we cannot use arguments to the keyword\n        ``method`` to fill the ``NaN`` values.\n\n        >>> df.reindex(new_index, fill_value=0)\n                       http_status  response_time\n        Safari                 404           0.07\n        Iceweasel                0           0.00\n        Comodo Dragon            0           0.00\n        IE10                   404           0.08\n        Chrome                 200           0.02\n\n        >>> df.reindex(new_index, fill_value='missing')\n                      http_status response_time\n        Safari                404          0.07\n        Iceweasel         missing       missing\n        Comodo Dragon     missing       missing\n        IE10                  404          0.08\n        Chrome                200          0.02\n\n        We can also reindex the columns.\n\n        >>> df.reindex(columns=['http_status', 'user_agent'])\n                   http_status  user_agent\n        Firefox            200         NaN\n        Chrome             200         NaN\n        Safari             404         NaN\n        IE10               404         NaN\n        Konqueror          301         NaN\n\n        Or we can use \"axis-style\" keyword arguments\n\n        >>> df.reindex(['http_status', 'user_agent'], axis=\"columns\")\n                   http_status  user_agent\n        Firefox            200         NaN\n        Chrome             200         NaN\n        Safari             404         NaN\n        IE10               404         NaN\n        Konqueror          301         NaN\n\n        To further illustrate the filling functionality in\n        ``reindex``, we will create a dataframe with a\n        monotonically increasing index (for example, a sequence\n        of dates).\n\n        >>> date_index = pd.date_range('1/1/2010', periods=6, freq='D')\n        >>> df2 = pd.DataFrame({{\"prices\": [100, 101, np.nan, 100, 89, 88]}},\n        ...                    index=date_index)\n        >>> df2\n                    prices\n        2010-01-01   100.0\n        2010-01-02   101.0\n        2010-01-03     NaN\n        2010-01-04   100.0\n        2010-01-05    89.0\n        2010-01-06    88.0\n\n        Suppose we decide to expand the dataframe to cover a wider\n        date range.\n\n        >>> date_index2 = pd.date_range('12/29/2009', periods=10, freq='D')\n        >>> df2.reindex(date_index2)\n                    prices\n        2009-12-29     NaN\n        2009-12-30     NaN\n        2009-12-31     NaN\n        2010-01-01   100.0\n        2010-01-02   101.0\n        2010-01-03     NaN\n        2010-01-04   100.0\n        2010-01-05    89.0\n        2010-01-06    88.0\n        2010-01-07     NaN\n\n        The index entries that did not have a value in the original data frame\n        (for example, '2009-12-29') are by default filled with ``NaN``.\n        If desired, we can fill in the missing values using one of several\n        options.\n\n        For example, to back-propagate the last valid value to fill the ``NaN``\n        values, pass ``bfill`` as an argument to the ``method`` keyword.\n\n        >>> df2.reindex(date_index2, method='bfill')\n                    prices\n        2009-12-29   100.0\n        2009-12-30   100.0\n        2009-12-31   100.0\n        2010-01-01   100.0\n        2010-01-02   101.0\n        2010-01-03     NaN\n        2010-01-04   100.0\n        2010-01-05    89.0\n        2010-01-06    88.0\n        2010-01-07     NaN\n\n        Please note that the ``NaN`` value present in the original dataframe\n        (at index value 2010-01-03) will not be filled by any of the\n        value propagation schemes. This is because filling while reindexing\n        does not look at dataframe values, but only compares the original and\n        desired indexes. If you do want to fill in the ``NaN`` values present\n        in the original dataframe, use the ``fillna()`` method.\n\n        See the :ref:`user guide <basics.reindexing>` for more.\n        \"\"\"\n        # TODO: Decide if we care about having different examples for different\n        # kinds\n\n        if index is not None and columns is not None and labels is not None:\n            raise TypeError(\"Cannot specify all of 'labels', 'index', 'columns'.\")\n        elif index is not None or columns is not None:\n            if axis is not None:\n                raise TypeError(\n                    \"Cannot specify both 'axis' and any of 'index' or 'columns'\"\n                )\n            if labels is not None:\n                if index is not None:\n                    columns = labels\n                else:\n                    index = labels\n        else:\n            if axis and self._get_axis_number(axis) == 1:\n                columns = labels\n            else:\n                index = labels\n        axes: dict[Literal[\"index\", \"columns\"], Any] = {\n            \"index\": index,\n            \"columns\": columns,\n        }\n        method = clean_reindex_fill_method(method)\n\n        # if all axes that are requested to reindex are equal, then only copy\n        # if indicated must have index names equal here as well as values\n        if copy and using_copy_on_write():\n            copy = False\n        if all(\n            self._get_axis(axis_name).identical(ax)\n            for axis_name, ax in axes.items()\n            if ax is not None\n        ):\n            return self.copy(deep=copy)\n\n        # check if we are a multi reindex\n        if self._needs_reindex_multi(axes, method, level):\n            return self._reindex_multi(axes, copy, fill_value)\n\n        # perform the reindex on the axes\n        return self._reindex_axes(\n            axes, level, limit, tolerance, method, fill_value, copy\n        ).__finalize__(self, method=\"reindex\")\n\n    @final\n    def _reindex_axes(\n        self,\n        axes,\n        level: Level | None,\n        limit: int | None,\n        tolerance,\n        method,\n        fill_value: Scalar | None,\n        copy: bool_t | None,\n    ) -> Self:\n        \"\"\"Perform the reindex for all the axes.\"\"\"\n        obj = self\n        for a in self._AXIS_ORDERS:\n            labels = axes[a]\n            if labels is None:\n                continue\n\n            ax = self._get_axis(a)\n            new_index, indexer = ax.reindex(\n                labels, level=level, limit=limit, tolerance=tolerance, method=method\n            )\n\n            axis = self._get_axis_number(a)\n            obj = obj._reindex_with_indexers(\n                {axis: [new_index, indexer]},\n                fill_value=fill_value,\n                copy=copy,\n                allow_dups=False,\n            )\n            # If we've made a copy once, no need to make another one\n            copy = False\n\n        return obj\n\n    def _needs_reindex_multi(self, axes, method, level: Level | None) -> bool_t:\n        \"\"\"Check if we do need a multi reindex.\"\"\"\n        return (\n            (common.count_not_none(*axes.values()) == self._AXIS_LEN)\n            and method is None\n            and level is None\n            # reindex_multi calls self.values, so we only want to go\n            #  down that path when doing so is cheap.\n            and self._can_fast_transpose\n        )\n\n    def _reindex_multi(self, axes, copy, fill_value):\n        raise AbstractMethodError(self)\n\n    @final\n    def _reindex_with_indexers(\n        self,\n        reindexers,\n        fill_value=None,\n        copy: bool_t | None = False,\n        allow_dups: bool_t = False,\n    ) -> Self:\n        \"\"\"allow_dups indicates an internal call here\"\"\"\n        # reindex doing multiple operations on different axes if indicated\n        new_data = self._mgr\n        for axis in sorted(reindexers.keys()):\n            index, indexer = reindexers[axis]\n            baxis = self._get_block_manager_axis(axis)\n\n            if index is None:\n                continue\n\n            index = ensure_index(index)\n            if indexer is not None:\n                indexer = ensure_platform_int(indexer)\n\n            # TODO: speed up on homogeneous DataFrame objects (see _reindex_multi)\n            new_data = new_data.reindex_indexer(\n                index,\n                indexer,\n                axis=baxis,\n                fill_value=fill_value,\n                allow_dups=allow_dups,\n                copy=copy,\n            )\n            # If we've made a copy once, no need to make another one\n            copy = False\n\n        if (\n            (copy or copy is None)\n            and new_data is self._mgr\n            and not using_copy_on_write()\n        ):\n            new_data = new_data.copy(deep=copy)\n        elif using_copy_on_write() and new_data is self._mgr:\n            new_data = new_data.copy(deep=False)\n\n        return self._constructor_from_mgr(new_data, axes=new_data.axes).__finalize__(\n            self\n        )\n\n    def filter(\n        self,\n        items=None,\n        like: str | None = None,\n        regex: str | None = None,\n        axis: Axis | None = None,\n    ) -> Self:\n        \"\"\"\n        Subset the dataframe rows or columns according to the specified index labels.\n\n        Note that this routine does not filter a dataframe on its\n        contents. The filter is applied to the labels of the index.\n\n        Parameters\n        ----------\n        items : list-like\n            Keep labels from axis which are in items.\n        like : str\n            Keep labels from axis for which \"like in label == True\".\n        regex : str (regular expression)\n            Keep labels from axis for which re.search(regex, label) == True.\n        axis : {0 or 'index', 1 or 'columns', None}, default None\n            The axis to filter on, expressed either as an index (int)\n            or axis name (str). By default this is the info axis, 'columns' for\n            DataFrame. For `Series` this parameter is unused and defaults to `None`.\n\n        Returns\n        -------\n        same type as input object\n\n        See Also\n        --------\n        DataFrame.loc : Access a group of rows and columns\n            by label(s) or a boolean array.\n\n        Notes\n        -----\n        The ``items``, ``like``, and ``regex`` parameters are\n        enforced to be mutually exclusive.\n\n        ``axis`` defaults to the info axis that is used when indexing\n        with ``[]``.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame(np.array(([1, 2, 3], [4, 5, 6])),\n        ...                   index=['mouse', 'rabbit'],\n        ...                   columns=['one', 'two', 'three'])\n        >>> df\n                one  two  three\n        mouse     1    2      3\n        rabbit    4    5      6\n\n        >>> # select columns by name\n        >>> df.filter(items=['one', 'three'])\n                 one  three\n        mouse     1      3\n        rabbit    4      6\n\n        >>> # select columns by regular expression\n        >>> df.filter(regex='e$', axis=1)\n                 one  three\n        mouse     1      3\n        rabbit    4      6\n\n        >>> # select rows containing 'bbi'\n        >>> df.filter(like='bbi', axis=0)\n                 one  two  three\n        rabbit    4    5      6\n        \"\"\"\n        nkw = common.count_not_none(items, like, regex)\n        if nkw > 1:\n            raise TypeError(\n                \"Keyword arguments `items`, `like`, or `regex` \"\n                \"are mutually exclusive\"\n            )\n\n        if axis is None:\n            axis = self._info_axis_name\n        labels = self._get_axis(axis)\n\n        if items is not None:\n            name = self._get_axis_name(axis)\n            items = Index(items).intersection(labels)\n            if len(items) == 0:\n                # Keep the dtype of labels when we are empty\n                items = items.astype(labels.dtype)\n            # error: Keywords must be strings\n            return self.reindex(**{name: items})  # type: ignore[misc]\n        elif like:\n\n            def f(x) -> bool_t:\n                assert like is not None  # needed for mypy\n                return like in ensure_str(x)\n\n            values = labels.map(f)\n            return self.loc(axis=axis)[values]\n        elif regex:\n\n            def f(x) -> bool_t:\n                return matcher.search(ensure_str(x)) is not None\n\n            matcher = re.compile(regex)\n            values = labels.map(f)\n            return self.loc(axis=axis)[values]\n        else:\n            raise TypeError(\"Must pass either `items`, `like`, or `regex`\")\n\n    @final\n    def head(self, n: int = 5) -> Self:\n        \"\"\"\n        Return the first `n` rows.\n\n        This function returns the first `n` rows for the object based\n        on position. It is useful for quickly testing if your object\n        has the right type of data in it.\n\n        For negative values of `n`, this function returns all rows except\n        the last `|n|` rows, equivalent to ``df[:n]``.\n\n        If n is larger than the number of rows, this function returns all rows.\n\n        Parameters\n        ----------\n        n : int, default 5\n            Number of rows to select.\n\n        Returns\n        -------\n        same type as caller\n            The first `n` rows of the caller object.\n\n        See Also\n        --------\n        DataFrame.tail: Returns the last `n` rows.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'animal': ['alligator', 'bee', 'falcon', 'lion',\n        ...                    'monkey', 'parrot', 'shark', 'whale', 'zebra']})\n        >>> df\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n        3       lion\n        4     monkey\n        5     parrot\n        6      shark\n        7      whale\n        8      zebra\n\n        Viewing the first 5 lines\n\n        >>> df.head()\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n        3       lion\n        4     monkey\n\n        Viewing the first `n` lines (three in this case)\n\n        >>> df.head(3)\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n\n        For negative values of `n`\n\n        >>> df.head(-3)\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n        3       lion\n        4     monkey\n        5     parrot\n        \"\"\"\n        if using_copy_on_write():\n            return self.iloc[:n].copy()\n        return self.iloc[:n]\n\n    @final\n    def tail(self, n: int = 5) -> Self:\n        \"\"\"\n        Return the last `n` rows.\n\n        This function returns last `n` rows from the object based on\n        position. It is useful for quickly verifying data, for example,\n        after sorting or appending rows.\n\n        For negative values of `n`, this function returns all rows except\n        the first `|n|` rows, equivalent to ``df[|n|:]``.\n\n        If n is larger than the number of rows, this function returns all rows.\n\n        Parameters\n        ----------\n        n : int, default 5\n            Number of rows to select.\n\n        Returns\n        -------\n        type of caller\n            The last `n` rows of the caller object.\n\n        See Also\n        --------\n        DataFrame.head : The first `n` rows of the caller object.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'animal': ['alligator', 'bee', 'falcon', 'lion',\n        ...                    'monkey', 'parrot', 'shark', 'whale', 'zebra']})\n        >>> df\n              animal\n        0  alligator\n        1        bee\n        2     falcon\n        3       lion\n        4     monkey\n        5     parrot\n        6      shark\n        7      whale\n        8      zebra\n\n        Viewing the last 5 lines\n\n        >>> df.tail()\n           animal\n        4  monkey\n        5  parrot\n        6   shark\n        7   whale\n        8   zebra\n\n        Viewing the last `n` lines (three in this case)\n\n        >>> df.tail(3)\n          animal\n        6  shark\n        7  whale\n        8  zebra\n\n        For negative values of `n`\n\n        >>> df.tail(-3)\n           animal\n        3    lion\n        4  monkey\n        5  parrot\n        6   shark\n        7   whale\n        8   zebra\n        \"\"\"\n        if using_copy_on_write():\n            if n == 0:\n                return self.iloc[0:0].copy()\n            return self.iloc[-n:].copy()\n        if n == 0:\n            return self.iloc[0:0]\n        return self.iloc[-n:]\n\n    @final\n    def sample(\n        self,\n        n: int | None = None,\n        frac: float | None = None,\n        replace: bool_t = False,\n        weights=None,\n        random_state: RandomState | None = None,\n        axis: Axis | None = None,\n        ignore_index: bool_t = False,\n    ) -> Self:\n        \"\"\"\n        Return a random sample of items from an axis of object.\n\n        You can use `random_state` for reproducibility.\n\n        Parameters\n        ----------\n        n : int, optional\n            Number of items from axis to return. Cannot be used with `frac`.\n            Default = 1 if `frac` = None.\n        frac : float, optional\n            Fraction of axis items to return. Cannot be used with `n`.\n        replace : bool, default False\n            Allow or disallow sampling of the same row more than once.\n        weights : str or ndarray-like, optional\n            Default 'None' results in equal probability weighting.\n            If passed a Series, will align with target object on index. Index\n            values in weights not found in sampled object will be ignored and\n            index values in sampled object not in weights will be assigned\n            weights of zero.\n            If called on a DataFrame, will accept the name of a column\n            when axis = 0.\n            Unless weights are a Series, weights must be same length as axis\n            being sampled.\n            If weights do not sum to 1, they will be normalized to sum to 1.\n            Missing values in the weights column will be treated as zero.\n            Infinite values not allowed.\n        random_state : int, array-like, BitGenerator, np.random.RandomState, np.random.Generator, optional\n            If int, array-like, or BitGenerator, seed for random number generator.\n            If np.random.RandomState or np.random.Generator, use as given.\n\n            .. versionchanged:: 1.4.0\n\n                np.random.Generator objects now accepted\n\n        axis : {0 or 'index', 1 or 'columns', None}, default None\n            Axis to sample. Accepts axis number or name. Default is stat axis\n            for given data type. For `Series` this parameter is unused and defaults to `None`.\n        ignore_index : bool, default False\n            If True, the resulting index will be labeled 0, 1, \u2026, n - 1.\n\n            .. versionadded:: 1.3.0\n\n        Returns\n        -------\n        Series or DataFrame\n            A new object of same type as caller containing `n` items randomly\n            sampled from the caller object.\n\n        See Also\n        --------\n        DataFrameGroupBy.sample: Generates random samples from each group of a\n            DataFrame object.\n        SeriesGroupBy.sample: Generates random samples from each group of a\n            Series object.\n        numpy.random.choice: Generates a random sample from a given 1-D numpy\n            array.\n\n        Notes\n        -----\n        If `frac` > 1, `replacement` should be set to `True`.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'num_legs': [2, 4, 8, 0],\n        ...                    'num_wings': [2, 0, 0, 0],\n        ...                    'num_specimen_seen': [10, 2, 1, 8]},\n        ...                   index=['falcon', 'dog', 'spider', 'fish'])\n        >>> df\n                num_legs  num_wings  num_specimen_seen\n        falcon         2          2                 10\n        dog            4          0                  2\n        spider         8          0                  1\n        fish           0          0                  8\n\n        Extract 3 random elements from the ``Series`` ``df['num_legs']``:\n        Note that we use `random_state` to ensure the reproducibility of\n        the examples.\n\n        >>> df['num_legs'].sample(n=3, random_state=1)\n        fish      0\n        spider    8\n        falcon    2\n        Name: num_legs, dtype: int64\n\n        A random 50% sample of the ``DataFrame`` with replacement:\n\n        >>> df.sample(frac=0.5, replace=True, random_state=1)\n              num_legs  num_wings  num_specimen_seen\n        dog          4          0                  2\n        fish         0          0                  8\n\n        An upsample sample of the ``DataFrame`` with replacement:\n        Note that `replace` parameter has to be `True` for `frac` parameter > 1.\n\n        >>> df.sample(frac=2, replace=True, random_state=1)\n                num_legs  num_wings  num_specimen_seen\n        dog            4          0                  2\n        fish           0          0                  8\n        falcon         2          2                 10\n        falcon         2          2                 10\n        fish           0          0                  8\n        dog            4          0                  2\n        fish           0          0                  8\n        dog            4          0                  2\n\n        Using a DataFrame column as weights. Rows with larger value in the\n        `num_specimen_seen` column are more likely to be sampled.\n\n        >>> df.sample(n=2, weights='num_specimen_seen', random_state=1)\n                num_legs  num_wings  num_specimen_seen\n        falcon         2          2                 10\n        fish           0          0                  8\n        \"\"\"  # noqa: E501\n        if axis is None:\n            axis = 0\n\n        axis = self._get_axis_number(axis)\n        obj_len = self.shape[axis]\n\n        # Process random_state argument\n        rs = common.random_state(random_state)\n\n        size = sample.process_sampling_size(n, frac, replace)\n        if size is None:\n            assert frac is not None\n            size = round(frac * obj_len)\n\n        if weights is not None:\n            weights = sample.preprocess_weights(self, weights, axis)\n\n        sampled_indices = sample.sample(obj_len, size, replace, weights, rs)\n        result = self.take(sampled_indices, axis=axis)\n\n        if ignore_index:\n            result.index = default_index(len(result))\n\n        return result\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def pipe(\n        self,\n        func: Callable[..., T] | tuple[Callable[..., T], str],\n        *args,\n        **kwargs,\n    ) -> T:\n        r\"\"\"\n        Apply chainable functions that expect Series or DataFrames.\n\n        Parameters\n        ----------\n        func : function\n            Function to apply to the {klass}.\n            ``args``, and ``kwargs`` are passed into ``func``.\n            Alternatively a ``(callable, data_keyword)`` tuple where\n            ``data_keyword`` is a string indicating the keyword of\n            ``callable`` that expects the {klass}.\n        *args : iterable, optional\n            Positional arguments passed into ``func``.\n        **kwargs : mapping, optional\n            A dictionary of keyword arguments passed into ``func``.\n\n        Returns\n        -------\n        the return type of ``func``.\n\n        See Also\n        --------\n        DataFrame.apply : Apply a function along input axis of DataFrame.\n        DataFrame.map : Apply a function elementwise on a whole DataFrame.\n        Series.map : Apply a mapping correspondence on a\n            :class:`~pandas.Series`.\n\n        Notes\n        -----\n        Use ``.pipe`` when chaining together functions that expect\n        Series, DataFrames or GroupBy objects.\n\n        Examples\n        --------\n        Constructing a income DataFrame from a dictionary.\n\n        >>> data = [[8000, 1000], [9500, np.nan], [5000, 2000]]\n        >>> df = pd.DataFrame(data, columns=['Salary', 'Others'])\n        >>> df\n           Salary  Others\n        0    8000  1000.0\n        1    9500     NaN\n        2    5000  2000.0\n\n        Functions that perform tax reductions on an income DataFrame.\n\n        >>> def subtract_federal_tax(df):\n        ...     return df * 0.9\n        >>> def subtract_state_tax(df, rate):\n        ...     return df * (1 - rate)\n        >>> def subtract_national_insurance(df, rate, rate_increase):\n        ...     new_rate = rate + rate_increase\n        ...     return df * (1 - new_rate)\n\n        Instead of writing\n\n        >>> subtract_national_insurance(\n        ...     subtract_state_tax(subtract_federal_tax(df), rate=0.12),\n        ...     rate=0.05,\n        ...     rate_increase=0.02)  # doctest: +SKIP\n\n        You can write\n\n        >>> (\n        ...     df.pipe(subtract_federal_tax)\n        ...     .pipe(subtract_state_tax, rate=0.12)\n        ...     .pipe(subtract_national_insurance, rate=0.05, rate_increase=0.02)\n        ... )\n            Salary   Others\n        0  5892.48   736.56\n        1  6997.32      NaN\n        2  3682.80  1473.12\n\n        If you have a function that takes the data as (say) the second\n        argument, pass a tuple indicating which keyword expects the\n        data. For example, suppose ``national_insurance`` takes its data as ``df``\n        in the second argument:\n\n        >>> def subtract_national_insurance(rate, df, rate_increase):\n        ...     new_rate = rate + rate_increase\n        ...     return df * (1 - new_rate)\n        >>> (\n        ...     df.pipe(subtract_federal_tax)\n        ...     .pipe(subtract_state_tax, rate=0.12)\n        ...     .pipe(\n        ...         (subtract_national_insurance, 'df'),\n        ...         rate=0.05,\n        ...         rate_increase=0.02\n        ...     )\n        ... )\n            Salary   Others\n        0  5892.48   736.56\n        1  6997.32      NaN\n        2  3682.80  1473.12\n        \"\"\"\n        if using_copy_on_write():\n            return common.pipe(self.copy(deep=None), func, *args, **kwargs)\n        return common.pipe(self, func, *args, **kwargs)\n\n    # ----------------------------------------------------------------------\n    # Attribute access\n\n    @final\n    def __finalize__(self, other, method: str | None = None, **kwargs) -> Self:\n        \"\"\"\n        Propagate metadata from other to self.\n\n        Parameters\n        ----------\n        other : the object from which to get the attributes that we are going\n            to propagate\n        method : str, optional\n            A passed method name providing context on where ``__finalize__``\n            was called.\n\n            .. warning::\n\n               The value passed as `method` are not currently considered\n               stable across pandas releases.\n        \"\"\"\n        if isinstance(other, NDFrame):\n            if other.attrs:\n                # We want attrs propagation to have minimal performance\n                # impact if attrs are not used; i.e. attrs is an empty dict.\n                # One could make the deepcopy unconditionally, but a deepcopy\n                # of an empty dict is 50x more expensive than the empty check.\n                self.attrs = deepcopy(other.attrs)\n\n            self.flags.allows_duplicate_labels = other.flags.allows_duplicate_labels\n            # For subclasses using _metadata.\n            for name in set(self._metadata) & set(other._metadata):\n                assert isinstance(name, str)\n                object.__setattr__(self, name, getattr(other, name, None))\n\n        if method == \"concat\":\n            # propagate attrs only if all concat arguments have the same attrs\n            if all(bool(obj.attrs) for obj in other.objs):\n                # all concatenate arguments have non-empty attrs\n                attrs = other.objs[0].attrs\n                have_same_attrs = all(obj.attrs == attrs for obj in other.objs[1:])\n                if have_same_attrs:\n                    self.attrs = deepcopy(attrs)\n\n            allows_duplicate_labels = all(\n                x.flags.allows_duplicate_labels for x in other.objs\n            )\n            self.flags.allows_duplicate_labels = allows_duplicate_labels\n\n        return self\n\n    @final\n    def __getattr__(self, name: str):\n        \"\"\"\n        After regular attribute access, try looking up the name\n        This allows simpler access to columns for interactive use.\n        \"\"\"\n        # Note: obj.x will always call obj.__getattribute__('x') prior to\n        # calling obj.__getattr__('x').\n        if (\n            name not in self._internal_names_set\n            and name not in self._metadata\n            and name not in self._accessors\n            and self._info_axis._can_hold_identifiers_and_holds_name(name)\n        ):\n            return self[name]\n        return object.__getattribute__(self, name)\n\n    @final\n    def __setattr__(self, name: str, value) -> None:\n        \"\"\"\n        After regular attribute access, try setting the name\n        This allows simpler access to columns for interactive use.\n        \"\"\"\n        # first try regular attribute access via __getattribute__, so that\n        # e.g. ``obj.x`` and ``obj.x = 4`` will always reference/modify\n        # the same attribute.\n\n        try:\n            object.__getattribute__(self, name)\n            return object.__setattr__(self, name, value)\n        except AttributeError:\n            pass\n\n        # if this fails, go on to more involved attribute setting\n        # (note that this matches __getattr__, above).\n        if name in self._internal_names_set:\n            object.__setattr__(self, name, value)\n        elif name in self._metadata:\n            object.__setattr__(self, name, value)\n        else:\n            try:\n                existing = getattr(self, name)\n                if isinstance(existing, Index):\n                    object.__setattr__(self, name, value)\n                elif name in self._info_axis:\n                    self[name] = value\n                else:\n                    object.__setattr__(self, name, value)\n            except (AttributeError, TypeError):\n                if isinstance(self, ABCDataFrame) and (is_list_like(value)):\n                    warnings.warn(\n                        \"Pandas doesn't allow columns to be \"\n                        \"created via a new attribute name - see \"\n                        \"https://pandas.pydata.org/pandas-docs/\"\n                        \"stable/indexing.html#attribute-access\",\n                        stacklevel=find_stack_level(),\n                    )\n                object.__setattr__(self, name, value)\n\n    @final\n    def _dir_additions(self) -> set[str]:\n        \"\"\"\n        add the string-like attributes from the info_axis.\n        If info_axis is a MultiIndex, its first level values are used.\n        \"\"\"\n        additions = super()._dir_additions()\n        if self._info_axis._can_hold_strings:\n            additions.update(self._info_axis._dir_additions_for_owner)\n        return additions\n\n    # ----------------------------------------------------------------------\n    # Consolidation of internals\n\n    @final\n    def _protect_consolidate(self, f):\n        \"\"\"\n        Consolidate _mgr -- if the blocks have changed, then clear the\n        cache\n        \"\"\"\n        if isinstance(self._mgr, (ArrayManager, SingleArrayManager)):\n            return f()\n        blocks_before = len(self._mgr.blocks)\n        result = f()\n        if len(self._mgr.blocks) != blocks_before:\n            self._clear_item_cache()\n        return result\n\n    @final\n    def _consolidate_inplace(self) -> None:\n        \"\"\"Consolidate data in place and return None\"\"\"\n\n        def f() -> None:\n            self._mgr = self._mgr.consolidate()\n\n        self._protect_consolidate(f)\n\n    @final\n    def _consolidate(self):\n        \"\"\"\n        Compute NDFrame with \"consolidated\" internals (data of each dtype\n        grouped together in a single ndarray).\n\n        Returns\n        -------\n        consolidated : same type as caller\n        \"\"\"\n        f = lambda: self._mgr.consolidate()\n        cons_data = self._protect_consolidate(f)\n        return self._constructor_from_mgr(cons_data, axes=cons_data.axes).__finalize__(\n            self\n        )\n\n    @final\n    @property\n    def _is_mixed_type(self) -> bool_t:\n        if self._mgr.is_single_block:\n            # Includes all Series cases\n            return False\n\n        if self._mgr.any_extension_types:\n            # Even if they have the same dtype, we can't consolidate them,\n            #  so we pretend this is \"mixed'\"\n            return True\n\n        return self.dtypes.nunique() > 1\n\n    @final\n    def _get_numeric_data(self) -> Self:\n        new_mgr = self._mgr.get_numeric_data()\n        return self._constructor_from_mgr(new_mgr, axes=new_mgr.axes).__finalize__(self)\n\n    @final\n    def _get_bool_data(self):\n        new_mgr = self._mgr.get_bool_data()\n        return self._constructor_from_mgr(new_mgr, axes=new_mgr.axes).__finalize__(self)\n\n    # ----------------------------------------------------------------------\n    # Internal Interface Methods\n\n    @property\n    def values(self):\n        raise AbstractMethodError(self)\n\n    @property\n    def _values(self) -> ArrayLike:\n        \"\"\"internal implementation\"\"\"\n        raise AbstractMethodError(self)\n\n    @property\n    def dtypes(self):\n        \"\"\"\n        Return the dtypes in the DataFrame.\n\n        This returns a Series with the data type of each column.\n        The result's index is the original DataFrame's columns. Columns\n        with mixed types are stored with the ``object`` dtype. See\n        :ref:`the User Guide <basics.dtypes>` for more.\n\n        Returns\n        -------\n        pandas.Series\n            The data type of each column.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'float': [1.0],\n        ...                    'int': [1],\n        ...                    'datetime': [pd.Timestamp('20180310')],\n        ...                    'string': ['foo']})\n        >>> df.dtypes\n        float              float64\n        int                  int64\n        datetime    datetime64[ns]\n        string              object\n        dtype: object\n        \"\"\"\n        data = self._mgr.get_dtypes()\n        return self._constructor_sliced(data, index=self._info_axis, dtype=np.object_)\n\n    @final\n    def astype(\n        self, dtype, copy: bool_t | None = None, errors: IgnoreRaise = \"raise\"\n    ) -> Self:\n        \"\"\"\n        Cast a pandas object to a specified dtype ``dtype``.\n\n        Parameters\n        ----------\n        dtype : str, data type, Series or Mapping of column name -> data type\n            Use a str, numpy.dtype, pandas.ExtensionDtype or Python type to\n            cast entire pandas object to the same type. Alternatively, use a\n            mapping, e.g. {col: dtype, ...}, where col is a column label and dtype is\n            a numpy.dtype or Python type to cast one or more of the DataFrame's\n            columns to column-specific types.\n        copy : bool, default True\n            Return a copy when ``copy=True`` (be very careful setting\n            ``copy=False`` as changes to values then may propagate to other\n            pandas objects).\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n        errors : {'raise', 'ignore'}, default 'raise'\n            Control raising of exceptions on invalid data for provided dtype.\n\n            - ``raise`` : allow exceptions to be raised\n            - ``ignore`` : suppress exceptions. On error return original object.\n\n        Returns\n        -------\n        same type as caller\n\n        See Also\n        --------\n        to_datetime : Convert argument to datetime.\n        to_timedelta : Convert argument to timedelta.\n        to_numeric : Convert argument to a numeric type.\n        numpy.ndarray.astype : Cast a numpy array to a specified type.\n\n        Notes\n        -----\n        .. versionchanged:: 2.0.0\n\n            Using ``astype`` to convert from timezone-naive dtype to\n            timezone-aware dtype will raise an exception.\n            Use :meth:`Series.dt.tz_localize` instead.\n\n        Examples\n        --------\n        Create a DataFrame:\n\n        >>> d = {'col1': [1, 2], 'col2': [3, 4]}\n        >>> df = pd.DataFrame(data=d)\n        >>> df.dtypes\n        col1    int64\n        col2    int64\n        dtype: object\n\n        Cast all columns to int32:\n\n        >>> df.astype('int32').dtypes\n        col1    int32\n        col2    int32\n        dtype: object\n\n        Cast col1 to int32 using a dictionary:\n\n        >>> df.astype({'col1': 'int32'}).dtypes\n        col1    int32\n        col2    int64\n        dtype: object\n\n        Create a series:\n\n        >>> ser = pd.Series([1, 2], dtype='int32')\n        >>> ser\n        0    1\n        1    2\n        dtype: int32\n        >>> ser.astype('int64')\n        0    1\n        1    2\n        dtype: int64\n\n        Convert to categorical type:\n\n        >>> ser.astype('category')\n        0    1\n        1    2\n        dtype: category\n        Categories (2, int32): [1, 2]\n\n        Convert to ordered categorical type with custom ordering:\n\n        >>> from pandas.api.types import CategoricalDtype\n        >>> cat_dtype = CategoricalDtype(\n        ...     categories=[2, 1], ordered=True)\n        >>> ser.astype(cat_dtype)\n        0    1\n        1    2\n        dtype: category\n        Categories (2, int64): [2 < 1]\n\n        Create a series of dates:\n\n        >>> ser_date = pd.Series(pd.date_range('20200101', periods=3))\n        >>> ser_date\n        0   2020-01-01\n        1   2020-01-02\n        2   2020-01-03\n        dtype: datetime64[ns]\n        \"\"\"\n        if copy and using_copy_on_write():\n            copy = False\n\n        if is_dict_like(dtype):\n            if self.ndim == 1:  # i.e. Series\n                if len(dtype) > 1 or self.name not in dtype:\n                    raise KeyError(\n                        \"Only the Series name can be used for \"\n                        \"the key in Series dtype mappings.\"\n                    )\n                new_type = dtype[self.name]\n                return self.astype(new_type, copy, errors)\n\n            # GH#44417 cast to Series so we can use .iat below, which will be\n            #  robust in case we\n            from pandas import Series\n\n            dtype_ser = Series(dtype, dtype=object)\n\n            for col_name in dtype_ser.index:\n                if col_name not in self:\n                    raise KeyError(\n                        \"Only a column name can be used for the \"\n                        \"key in a dtype mappings argument. \"\n                        f\"'{col_name}' not found in columns.\"\n                    )\n\n            dtype_ser = dtype_ser.reindex(self.columns, fill_value=None, copy=False)\n\n            results = []\n            for i, (col_name, col) in enumerate(self.items()):\n                cdt = dtype_ser.iat[i]\n                if isna(cdt):\n                    res_col = col.copy(deep=copy)\n                else:\n                    try:\n                        res_col = col.astype(dtype=cdt, copy=copy, errors=errors)\n                    except ValueError as ex:\n                        ex.args = (\n                            f\"{ex}: Error while type casting for column '{col_name}'\",\n                        )\n                        raise\n                results.append(res_col)\n\n        elif is_extension_array_dtype(dtype) and self.ndim > 1:\n            # TODO(EA2D): special case not needed with 2D EAs\n            dtype = pandas_dtype(dtype)\n            if isinstance(dtype, ExtensionDtype) and all(\n                arr.dtype == dtype for arr in self._mgr.arrays\n            ):\n                return self.copy(deep=copy)\n            # GH 18099/22869: columnwise conversion to extension dtype\n            # GH 24704: self.items handles duplicate column names\n            results = [\n                ser.astype(dtype, copy=copy, errors=errors) for _, ser in self.items()\n            ]\n\n        else:\n            # else, only a single dtype is given\n            new_data = self._mgr.astype(dtype=dtype, copy=copy, errors=errors)\n            res = self._constructor_from_mgr(new_data, axes=new_data.axes)\n            return res.__finalize__(self, method=\"astype\")\n\n        # GH 33113: handle empty frame or series\n        if not results:\n            return self.copy(deep=None)\n\n        # GH 19920: retain column metadata after concat\n        result = concat(results, axis=1, copy=False)\n        # GH#40810 retain subclass\n        # error: Incompatible types in assignment\n        # (expression has type \"Self\", variable has type \"DataFrame\")\n        result = self._constructor(result)  # type: ignore[assignment]\n        result.columns = self.columns\n        result = result.__finalize__(self, method=\"astype\")\n        # https://github.com/python/mypy/issues/8354\n        return cast(Self, result)\n\n    @final\n    def copy(self, deep: bool_t | None = True) -> Self:\n        \"\"\"\n        Make a copy of this object's indices and data.\n\n        When ``deep=True`` (default), a new object will be created with a\n        copy of the calling object's data and indices. Modifications to\n        the data or indices of the copy will not be reflected in the\n        original object (see notes below).\n\n        When ``deep=False``, a new object will be created without copying\n        the calling object's data or index (only references to the data\n        and index are copied). Any changes to the data of the original\n        will be reflected in the shallow copy (and vice versa).\n\n        .. note::\n            The ``deep=False`` behaviour as described above will change\n            in pandas 3.0. `Copy-on-Write\n            <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n            will be enabled by default, which means that the \"shallow\" copy\n            is that is returned with ``deep=False`` will still avoid making\n            an eager copy, but changes to the data of the original will *no*\n            longer be reflected in the shallow copy (or vice versa). Instead,\n            it makes use of a lazy (deferred) copy mechanism that will copy\n            the data only when any changes to the original or shallow copy is\n            made.\n\n            You can already get the future behavior and improvements through\n            enabling copy on write ``pd.options.mode.copy_on_write = True``\n\n        Parameters\n        ----------\n        deep : bool, default True\n            Make a deep copy, including a copy of the data and the indices.\n            With ``deep=False`` neither the indices nor the data are copied.\n\n        Returns\n        -------\n        Series or DataFrame\n            Object type matches caller.\n\n        Notes\n        -----\n        When ``deep=True``, data is copied but actual Python objects\n        will not be copied recursively, only the reference to the object.\n        This is in contrast to `copy.deepcopy` in the Standard Library,\n        which recursively copies object data (see examples below).\n\n        While ``Index`` objects are copied when ``deep=True``, the underlying\n        numpy array is not copied for performance reasons. Since ``Index`` is\n        immutable, the underlying data can be safely shared and a copy\n        is not needed.\n\n        Since pandas is not thread safe, see the\n        :ref:`gotchas <gotchas.thread-safety>` when copying in a threading\n        environment.\n\n        When ``copy_on_write`` in pandas config is set to ``True``, the\n        ``copy_on_write`` config takes effect even when ``deep=False``.\n        This means that any changes to the copied data would make a new copy\n        of the data upon write (and vice versa). Changes made to either the\n        original or copied variable would not be reflected in the counterpart.\n        See :ref:`Copy_on_Write <copy_on_write>` for more information.\n\n        Examples\n        --------\n        >>> s = pd.Series([1, 2], index=[\"a\", \"b\"])\n        >>> s\n        a    1\n        b    2\n        dtype: int64\n\n        >>> s_copy = s.copy()\n        >>> s_copy\n        a    1\n        b    2\n        dtype: int64\n\n        **Shallow copy versus default (deep) copy:**\n\n        >>> s = pd.Series([1, 2], index=[\"a\", \"b\"])\n        >>> deep = s.copy()\n        >>> shallow = s.copy(deep=False)\n\n        Shallow copy shares data and index with original.\n\n        >>> s is shallow\n        False\n        >>> s.values is shallow.values and s.index is shallow.index\n        True\n\n        Deep copy has own copy of data and index.\n\n        >>> s is deep\n        False\n        >>> s.values is deep.values or s.index is deep.index\n        False\n\n        Updates to the data shared by shallow copy and original is reflected\n        in both (NOTE: this will no longer be true for pandas >= 3.0);\n        deep copy remains unchanged.\n\n        >>> s.iloc[0] = 3\n        >>> shallow.iloc[1] = 4\n        >>> s\n        a    3\n        b    4\n        dtype: int64\n        >>> shallow\n        a    3\n        b    4\n        dtype: int64\n        >>> deep\n        a    1\n        b    2\n        dtype: int64\n\n        Note that when copying an object containing Python objects, a deep copy\n        will copy the data, but will not do so recursively. Updating a nested\n        data object will be reflected in the deep copy.\n\n        >>> s = pd.Series([[1, 2], [3, 4]])\n        >>> deep = s.copy()\n        >>> s[0][0] = 10\n        >>> s\n        0    [10, 2]\n        1     [3, 4]\n        dtype: object\n        >>> deep\n        0    [10, 2]\n        1     [3, 4]\n        dtype: object\n\n        **Copy-on-Write is set to true**, the shallow copy is not modified\n        when the original data is changed:\n\n        >>> with pd.option_context(\"mode.copy_on_write\", True):\n        ...     s = pd.Series([1, 2], index=[\"a\", \"b\"])\n        ...     copy = s.copy(deep=False)\n        ...     s.iloc[0] = 100\n        ...     s\n        a    100\n        b      2\n        dtype: int64\n        >>> copy\n        a    1\n        b    2\n        dtype: int64\n        \"\"\"\n        data = self._mgr.copy(deep=deep)\n        self._clear_item_cache()\n        return self._constructor_from_mgr(data, axes=data.axes).__finalize__(\n            self, method=\"copy\"\n        )\n\n    @final\n    def __copy__(self, deep: bool_t = True) -> Self:\n        return self.copy(deep=deep)\n\n    @final\n    def __deepcopy__(self, memo=None) -> Self:\n        \"\"\"\n        Parameters\n        ----------\n        memo, default None\n            Standard signature. Unused\n        \"\"\"\n        return self.copy(deep=True)\n\n    @final\n    def infer_objects(self, copy: bool_t | None = None) -> Self:\n        \"\"\"\n        Attempt to infer better dtypes for object columns.\n\n        Attempts soft conversion of object-dtyped\n        columns, leaving non-object and unconvertible\n        columns unchanged. The inference rules are the\n        same as during normal Series/DataFrame construction.\n\n        Parameters\n        ----------\n        copy : bool, default True\n            Whether to make a copy for non-object or non-inferable columns\n            or Series.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n\n        Returns\n        -------\n        same type as input object\n\n        See Also\n        --------\n        to_datetime : Convert argument to datetime.\n        to_timedelta : Convert argument to timedelta.\n        to_numeric : Convert argument to numeric type.\n        convert_dtypes : Convert argument to best possible dtype.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({\"A\": [\"a\", 1, 2, 3]})\n        >>> df = df.iloc[1:]\n        >>> df\n           A\n        1  1\n        2  2\n        3  3\n\n        >>> df.dtypes\n        A    object\n        dtype: object\n\n        >>> df.infer_objects().dtypes\n        A    int64\n        dtype: object\n        \"\"\"\n        new_mgr = self._mgr.convert(copy=copy)\n        res = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes)\n        return res.__finalize__(self, method=\"infer_objects\")\n\n    @final\n    def convert_dtypes(\n        self,\n        infer_objects: bool_t = True,\n        convert_string: bool_t = True,\n        convert_integer: bool_t = True,\n        convert_boolean: bool_t = True,\n        convert_floating: bool_t = True,\n        dtype_backend: DtypeBackend = \"numpy_nullable\",\n    ) -> Self:\n        \"\"\"\n        Convert columns to the best possible dtypes using dtypes supporting ``pd.NA``.\n\n        Parameters\n        ----------\n        infer_objects : bool, default True\n            Whether object dtypes should be converted to the best possible types.\n        convert_string : bool, default True\n            Whether object dtypes should be converted to ``StringDtype()``.\n        convert_integer : bool, default True\n            Whether, if possible, conversion can be done to integer extension types.\n        convert_boolean : bool, defaults True\n            Whether object dtypes should be converted to ``BooleanDtypes()``.\n        convert_floating : bool, defaults True\n            Whether, if possible, conversion can be done to floating extension types.\n            If `convert_integer` is also True, preference will be give to integer\n            dtypes if the floats can be faithfully casted to integers.\n        dtype_backend : {'numpy_nullable', 'pyarrow'}, default 'numpy_nullable'\n            Back-end data type applied to the resultant :class:`DataFrame`\n            (still experimental). Behaviour is as follows:\n\n            * ``\"numpy_nullable\"``: returns nullable-dtype-backed :class:`DataFrame`\n              (default).\n            * ``\"pyarrow\"``: returns pyarrow-backed nullable :class:`ArrowDtype`\n              DataFrame.\n\n            .. versionadded:: 2.0\n\n        Returns\n        -------\n        Series or DataFrame\n            Copy of input object with new dtype.\n\n        See Also\n        --------\n        infer_objects : Infer dtypes of objects.\n        to_datetime : Convert argument to datetime.\n        to_timedelta : Convert argument to timedelta.\n        to_numeric : Convert argument to a numeric type.\n\n        Notes\n        -----\n        By default, ``convert_dtypes`` will attempt to convert a Series (or each\n        Series in a DataFrame) to dtypes that support ``pd.NA``. By using the options\n        ``convert_string``, ``convert_integer``, ``convert_boolean`` and\n        ``convert_floating``, it is possible to turn off individual conversions\n        to ``StringDtype``, the integer extension types, ``BooleanDtype``\n        or floating extension types, respectively.\n\n        For object-dtyped columns, if ``infer_objects`` is ``True``, use the inference\n        rules as during normal Series/DataFrame construction.  Then, if possible,\n        convert to ``StringDtype``, ``BooleanDtype`` or an appropriate integer\n        or floating extension type, otherwise leave as ``object``.\n\n        If the dtype is integer, convert to an appropriate integer extension type.\n\n        If the dtype is numeric, and consists of all integers, convert to an\n        appropriate integer extension type. Otherwise, convert to an\n        appropriate floating extension type.\n\n        In the future, as new dtypes are added that support ``pd.NA``, the results\n        of this method will change to support those new dtypes.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame(\n        ...     {\n        ...         \"a\": pd.Series([1, 2, 3], dtype=np.dtype(\"int32\")),\n        ...         \"b\": pd.Series([\"x\", \"y\", \"z\"], dtype=np.dtype(\"O\")),\n        ...         \"c\": pd.Series([True, False, np.nan], dtype=np.dtype(\"O\")),\n        ...         \"d\": pd.Series([\"h\", \"i\", np.nan], dtype=np.dtype(\"O\")),\n        ...         \"e\": pd.Series([10, np.nan, 20], dtype=np.dtype(\"float\")),\n        ...         \"f\": pd.Series([np.nan, 100.5, 200], dtype=np.dtype(\"float\")),\n        ...     }\n        ... )\n\n        Start with a DataFrame with default dtypes.\n\n        >>> df\n           a  b      c    d     e      f\n        0  1  x   True    h  10.0    NaN\n        1  2  y  False    i   NaN  100.5\n        2  3  z    NaN  NaN  20.0  200.0\n\n        >>> df.dtypes\n        a      int32\n        b     object\n        c     object\n        d     object\n        e    float64\n        f    float64\n        dtype: object\n\n        Convert the DataFrame to use best possible dtypes.\n\n        >>> dfn = df.convert_dtypes()\n        >>> dfn\n           a  b      c     d     e      f\n        0  1  x   True     h    10   <NA>\n        1  2  y  False     i  <NA>  100.5\n        2  3  z   <NA>  <NA>    20  200.0\n\n        >>> dfn.dtypes\n        a             Int32\n        b    string[python]\n        c           boolean\n        d    string[python]\n        e             Int64\n        f           Float64\n        dtype: object\n\n        Start with a Series of strings and missing data represented by ``np.nan``.\n\n        >>> s = pd.Series([\"a\", \"b\", np.nan])\n        >>> s\n        0      a\n        1      b\n        2    NaN\n        dtype: object\n\n        Obtain a Series with dtype ``StringDtype``.\n\n        >>> s.convert_dtypes()\n        0       a\n        1       b\n        2    <NA>\n        dtype: string\n        \"\"\"\n        check_dtype_backend(dtype_backend)\n        new_mgr = self._mgr.convert_dtypes(  # type: ignore[union-attr]\n            infer_objects=infer_objects,\n            convert_string=convert_string,\n            convert_integer=convert_integer,\n            convert_boolean=convert_boolean,\n            convert_floating=convert_floating,\n            dtype_backend=dtype_backend,\n        )\n        res = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes)\n        return res.__finalize__(self, method=\"convert_dtypes\")\n\n    # ----------------------------------------------------------------------\n    # Filling NA's\n\n    def _deprecate_downcast(self, downcast, method_name: str):\n        # GH#40988\n        if downcast is not lib.no_default:\n            warnings.warn(\n                f\"The 'downcast' keyword in {method_name} is deprecated and \"\n                \"will be removed in a future version. Use \"\n                \"res.infer_objects(copy=False) to infer non-object dtype, or \"\n                \"pd.to_numeric with the 'downcast' keyword to downcast numeric \"\n                \"results.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        else:\n            downcast = None\n        return downcast\n\n    @final\n    def _pad_or_backfill(\n        self,\n        method: Literal[\"ffill\", \"bfill\", \"pad\", \"backfill\"],\n        *,\n        axis: None | Axis = None,\n        inplace: bool_t = False,\n        limit: None | int = None,\n        limit_area: Literal[\"inside\", \"outside\"] | None = None,\n        downcast: dict | None = None,\n    ):\n        if axis is None:\n            axis = 0\n        axis = self._get_axis_number(axis)\n        method = clean_fill_method(method)\n\n        if not self._mgr.is_single_block and axis == 1:\n            # e.g. test_align_fill_method\n            # TODO(3.0): once downcast is removed, we can do the .T\n            #  in all axis=1 cases, and remove axis kward from mgr.pad_or_backfill.\n            if inplace:\n                raise NotImplementedError()\n            result = self.T._pad_or_backfill(\n                method=method, limit=limit, limit_area=limit_area\n            ).T\n\n            return result\n\n        new_mgr = self._mgr.pad_or_backfill(\n            method=method,\n            axis=self._get_block_manager_axis(axis),\n            limit=limit,\n            limit_area=limit_area,\n            inplace=inplace,\n            downcast=downcast,\n        )\n        result = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes)\n        if inplace:\n            return self._update_inplace(result)\n        else:\n            return result.__finalize__(self, method=\"fillna\")\n\n    @overload\n    def fillna(\n        self,\n        value: Hashable | Mapping | Series | DataFrame = ...,\n        *,\n        method: FillnaOptions | None = ...,\n        axis: Axis | None = ...,\n        inplace: Literal[False] = ...,\n        limit: int | None = ...,\n        downcast: dict | None = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def fillna(\n        self,\n        value: Hashable | Mapping | Series | DataFrame = ...,\n        *,\n        method: FillnaOptions | None = ...,\n        axis: Axis | None = ...,\n        inplace: Literal[True],\n        limit: int | None = ...,\n        downcast: dict | None = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def fillna(\n        self,\n        value: Hashable | Mapping | Series | DataFrame = ...,\n        *,\n        method: FillnaOptions | None = ...,\n        axis: Axis | None = ...,\n        inplace: bool_t = ...,\n        limit: int | None = ...,\n        downcast: dict | None = ...,\n    ) -> Self | None:\n        ...\n\n    @final\n    @doc(\n        klass=_shared_doc_kwargs[\"klass\"],\n        axes_single_arg=_shared_doc_kwargs[\"axes_single_arg\"],\n    )\n    def fillna(\n        self,\n        value: Hashable | Mapping | Series | DataFrame | None = None,\n        *,\n        method: FillnaOptions | None = None,\n        axis: Axis | None = None,\n        inplace: bool_t = False,\n        limit: int | None = None,\n        downcast: dict | None | lib.NoDefault = lib.no_default,\n    ) -> Self | None:\n        \"\"\"\n        Fill NA/NaN values using the specified method.\n\n        Parameters\n        ----------\n        value : scalar, dict, Series, or DataFrame\n            Value to use to fill holes (e.g. 0), alternately a\n            dict/Series/DataFrame of values specifying which value to use for\n            each index (for a Series) or column (for a DataFrame).  Values not\n            in the dict/Series/DataFrame will not be filled. This value cannot\n            be a list.\n        method : {{'backfill', 'bfill', 'ffill', None}}, default None\n            Method to use for filling holes in reindexed Series:\n\n            * ffill: propagate last valid observation forward to next valid.\n            * backfill / bfill: use next valid observation to fill gap.\n\n            .. deprecated:: 2.1.0\n                Use ffill or bfill instead.\n\n        axis : {axes_single_arg}\n            Axis along which to fill missing values. For `Series`\n            this parameter is unused and defaults to 0.\n        inplace : bool, default False\n            If True, fill in-place. Note: this will modify any\n            other views on this object (e.g., a no-copy slice for a column in a\n            DataFrame).\n        limit : int, default None\n            If method is specified, this is the maximum number of consecutive\n            NaN values to forward/backward fill. In other words, if there is\n            a gap with more than this number of consecutive NaNs, it will only\n            be partially filled. If method is not specified, this is the\n            maximum number of entries along the entire axis where NaNs will be\n            filled. Must be greater than 0 if not None.\n        downcast : dict, default is None\n            A dict of item->dtype of what to downcast if possible,\n            or the string 'infer' which will try to downcast to an appropriate\n            equal type (e.g. float64 to int64 if possible).\n\n            .. deprecated:: 2.2.0\n\n        Returns\n        -------\n        {klass} or None\n            Object with missing values filled or None if ``inplace=True``.\n\n        See Also\n        --------\n        ffill : Fill values by propagating the last valid observation to next valid.\n        bfill : Fill values by using the next valid observation to fill the gap.\n        interpolate : Fill NaN values using interpolation.\n        reindex : Conform object to new index.\n        asfreq : Convert TimeSeries to specified frequency.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame([[np.nan, 2, np.nan, 0],\n        ...                    [3, 4, np.nan, 1],\n        ...                    [np.nan, np.nan, np.nan, np.nan],\n        ...                    [np.nan, 3, np.nan, 4]],\n        ...                   columns=list(\"ABCD\"))\n        >>> df\n             A    B   C    D\n        0  NaN  2.0 NaN  0.0\n        1  3.0  4.0 NaN  1.0\n        2  NaN  NaN NaN  NaN\n        3  NaN  3.0 NaN  4.0\n\n        Replace all NaN elements with 0s.\n\n        >>> df.fillna(0)\n             A    B    C    D\n        0  0.0  2.0  0.0  0.0\n        1  3.0  4.0  0.0  1.0\n        2  0.0  0.0  0.0  0.0\n        3  0.0  3.0  0.0  4.0\n\n        Replace all NaN elements in column 'A', 'B', 'C', and 'D', with 0, 1,\n        2, and 3 respectively.\n\n        >>> values = {{\"A\": 0, \"B\": 1, \"C\": 2, \"D\": 3}}\n        >>> df.fillna(value=values)\n             A    B    C    D\n        0  0.0  2.0  2.0  0.0\n        1  3.0  4.0  2.0  1.0\n        2  0.0  1.0  2.0  3.0\n        3  0.0  3.0  2.0  4.0\n\n        Only replace the first NaN element.\n\n        >>> df.fillna(value=values, limit=1)\n             A    B    C    D\n        0  0.0  2.0  2.0  0.0\n        1  3.0  4.0  NaN  1.0\n        2  NaN  1.0  NaN  3.0\n        3  NaN  3.0  NaN  4.0\n\n        When filling using a DataFrame, replacement happens along\n        the same column names and same indices\n\n        >>> df2 = pd.DataFrame(np.zeros((4, 4)), columns=list(\"ABCE\"))\n        >>> df.fillna(df2)\n             A    B    C    D\n        0  0.0  2.0  0.0  0.0\n        1  3.0  4.0  0.0  1.0\n        2  0.0  0.0  0.0  NaN\n        3  0.0  3.0  0.0  4.0\n\n        Note that column D is not affected since it is not present in df2.\n        \"\"\"\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and _check_cacher(self):\n                    # see https://github.com/pandas-dev/pandas/pull/56060#discussion_r1399245221\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        value, method = validate_fillna_kwargs(value, method)\n        if method is not None:\n            warnings.warn(\n                f\"{type(self).__name__}.fillna with 'method' is deprecated and \"\n                \"will raise in a future version. Use obj.ffill() or obj.bfill() \"\n                \"instead.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n\n        was_no_default = downcast is lib.no_default\n        downcast = self._deprecate_downcast(downcast, \"fillna\")\n\n        # set the default here, so functions examining the signaure\n        # can detect if something was set (e.g. in groupby) (GH9221)\n        if axis is None:\n            axis = 0\n        axis = self._get_axis_number(axis)\n\n        if value is None:\n            return self._pad_or_backfill(\n                # error: Argument 1 to \"_pad_or_backfill\" of \"NDFrame\" has\n                # incompatible type \"Optional[Literal['backfill', 'bfill', 'ffill',\n                # 'pad']]\"; expected \"Literal['ffill', 'bfill', 'pad', 'backfill']\"\n                method,  # type: ignore[arg-type]\n                axis=axis,\n                limit=limit,\n                inplace=inplace,\n                # error: Argument \"downcast\" to \"_fillna_with_method\" of \"NDFrame\"\n                # has incompatible type \"Union[Dict[Any, Any], None,\n                # Literal[_NoDefault.no_default]]\"; expected\n                # \"Optional[Dict[Any, Any]]\"\n                downcast=downcast,  # type: ignore[arg-type]\n            )\n        else:\n            if self.ndim == 1:\n                if isinstance(value, (dict, ABCSeries)):\n                    if not len(value):\n                        # test_fillna_nonscalar\n                        if inplace:\n                            return None\n                        return self.copy(deep=None)\n                    from pandas import Series\n\n                    value = Series(value)\n                    value = value.reindex(self.index, copy=False)\n                    value = value._values\n                elif not is_list_like(value):\n                    pass\n                else:\n                    raise TypeError(\n                        '\"value\" parameter must be a scalar, dict '\n                        \"or Series, but you passed a \"\n                        f'\"{type(value).__name__}\"'\n                    )\n\n                new_data = self._mgr.fillna(\n                    value=value, limit=limit, inplace=inplace, downcast=downcast\n                )\n\n            elif isinstance(value, (dict, ABCSeries)):\n                if axis == 1:\n                    raise NotImplementedError(\n                        \"Currently only can fill \"\n                        \"with dict/Series column \"\n                        \"by column\"\n                    )\n                if using_copy_on_write():\n                    result = self.copy(deep=None)\n                else:\n                    result = self if inplace else self.copy()\n                is_dict = isinstance(downcast, dict)\n                for k, v in value.items():\n                    if k not in result:\n                        continue\n\n                    if was_no_default:\n                        downcast_k = lib.no_default\n                    else:\n                        downcast_k = (\n                            # error: Incompatible types in assignment (expression\n                            # has type \"Union[Dict[Any, Any], None,\n                            # Literal[_NoDefault.no_default], Any]\", variable has\n                            # type \"_NoDefault\")\n                            downcast  # type: ignore[assignment]\n                            if not is_dict\n                            # error: Item \"None\" of \"Optional[Dict[Any, Any]]\" has\n                            # no attribute \"get\"\n                            else downcast.get(k)  # type: ignore[union-attr]\n                        )\n\n                    res_k = result[k].fillna(v, limit=limit, downcast=downcast_k)\n\n                    if not inplace:\n                        result[k] = res_k\n                    else:\n                        # We can write into our existing column(s) iff dtype\n                        #  was preserved.\n                        if isinstance(res_k, ABCSeries):\n                            # i.e. 'k' only shows up once in self.columns\n                            if res_k.dtype == result[k].dtype:\n                                result.loc[:, k] = res_k\n                            else:\n                                # Different dtype -> no way to do inplace.\n                                result[k] = res_k\n                        else:\n                            # see test_fillna_dict_inplace_nonunique_columns\n                            locs = result.columns.get_loc(k)\n                            if isinstance(locs, slice):\n                                locs = np.arange(self.shape[1])[locs]\n                            elif (\n                                isinstance(locs, np.ndarray) and locs.dtype.kind == \"b\"\n                            ):\n                                locs = locs.nonzero()[0]\n                            elif not (\n                                isinstance(locs, np.ndarray) and locs.dtype.kind == \"i\"\n                            ):\n                                # Should never be reached, but let's cover our bases\n                                raise NotImplementedError(\n                                    \"Unexpected get_loc result, please report a bug at \"\n                                    \"https://github.com/pandas-dev/pandas\"\n                                )\n\n                            for i, loc in enumerate(locs):\n                                res_loc = res_k.iloc[:, i]\n                                target = self.iloc[:, loc]\n\n                                if res_loc.dtype == target.dtype:\n                                    result.iloc[:, loc] = res_loc\n                                else:\n                                    result.isetitem(loc, res_loc)\n                if inplace:\n                    return self._update_inplace(result)\n                else:\n                    return result\n\n            elif not is_list_like(value):\n                if axis == 1:\n                    result = self.T.fillna(value=value, limit=limit).T\n                    new_data = result._mgr\n                else:\n                    new_data = self._mgr.fillna(\n                        value=value, limit=limit, inplace=inplace, downcast=downcast\n                    )\n            elif isinstance(value, ABCDataFrame) and self.ndim == 2:\n                new_data = self.where(self.notna(), value)._mgr\n            else:\n                raise ValueError(f\"invalid fill value with a {type(value)}\")\n\n        result = self._constructor_from_mgr(new_data, axes=new_data.axes)\n        if inplace:\n            return self._update_inplace(result)\n        else:\n            return result.__finalize__(self, method=\"fillna\")\n\n    @overload\n    def ffill(\n        self,\n        *,\n        axis: None | Axis = ...,\n        inplace: Literal[False] = ...,\n        limit: None | int = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: dict | None | lib.NoDefault = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def ffill(\n        self,\n        *,\n        axis: None | Axis = ...,\n        inplace: Literal[True],\n        limit: None | int = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: dict | None | lib.NoDefault = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def ffill(\n        self,\n        *,\n        axis: None | Axis = ...,\n        inplace: bool_t = ...,\n        limit: None | int = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: dict | None | lib.NoDefault = ...,\n    ) -> Self | None:\n        ...\n\n    @final\n    @doc(\n        klass=_shared_doc_kwargs[\"klass\"],\n        axes_single_arg=_shared_doc_kwargs[\"axes_single_arg\"],\n    )\n    def ffill(\n        self,\n        *,\n        axis: None | Axis = None,\n        inplace: bool_t = False,\n        limit: None | int = None,\n        limit_area: Literal[\"inside\", \"outside\"] | None = None,\n        downcast: dict | None | lib.NoDefault = lib.no_default,\n    ) -> Self | None:\n        \"\"\"\n        Fill NA/NaN values by propagating the last valid observation to next valid.\n\n        Parameters\n        ----------\n        axis : {axes_single_arg}\n            Axis along which to fill missing values. For `Series`\n            this parameter is unused and defaults to 0.\n        inplace : bool, default False\n            If True, fill in-place. Note: this will modify any\n            other views on this object (e.g., a no-copy slice for a column in a\n            DataFrame).\n        limit : int, default None\n            If method is specified, this is the maximum number of consecutive\n            NaN values to forward/backward fill. In other words, if there is\n            a gap with more than this number of consecutive NaNs, it will only\n            be partially filled. If method is not specified, this is the\n            maximum number of entries along the entire axis where NaNs will be\n            filled. Must be greater than 0 if not None.\n        limit_area : {{`None`, 'inside', 'outside'}}, default None\n            If limit is specified, consecutive NaNs will be filled with this\n            restriction.\n\n            * ``None``: No fill restriction.\n            * 'inside': Only fill NaNs surrounded by valid values\n              (interpolate).\n            * 'outside': Only fill NaNs outside valid values (extrapolate).\n\n            .. versionadded:: 2.2.0\n\n        downcast : dict, default is None\n            A dict of item->dtype of what to downcast if possible,\n            or the string 'infer' which will try to downcast to an appropriate\n            equal type (e.g. float64 to int64 if possible).\n\n            .. deprecated:: 2.2.0\n\n        Returns\n        -------\n        {klass} or None\n            Object with missing values filled or None if ``inplace=True``.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame([[np.nan, 2, np.nan, 0],\n        ...                    [3, 4, np.nan, 1],\n        ...                    [np.nan, np.nan, np.nan, np.nan],\n        ...                    [np.nan, 3, np.nan, 4]],\n        ...                   columns=list(\"ABCD\"))\n        >>> df\n             A    B   C    D\n        0  NaN  2.0 NaN  0.0\n        1  3.0  4.0 NaN  1.0\n        2  NaN  NaN NaN  NaN\n        3  NaN  3.0 NaN  4.0\n\n        >>> df.ffill()\n             A    B   C    D\n        0  NaN  2.0 NaN  0.0\n        1  3.0  4.0 NaN  1.0\n        2  3.0  4.0 NaN  1.0\n        3  3.0  3.0 NaN  4.0\n\n        >>> ser = pd.Series([1, np.nan, 2, 3])\n        >>> ser.ffill()\n        0   1.0\n        1   1.0\n        2   2.0\n        3   3.0\n        dtype: float64\n        \"\"\"\n        downcast = self._deprecate_downcast(downcast, \"ffill\")\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and _check_cacher(self):\n                    # see https://github.com/pandas-dev/pandas/pull/56060#discussion_r1399245221\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        return self._pad_or_backfill(\n            \"ffill\",\n            axis=axis,\n            inplace=inplace,\n            limit=limit,\n            limit_area=limit_area,\n            # error: Argument \"downcast\" to \"_fillna_with_method\" of \"NDFrame\"\n            # has incompatible type \"Union[Dict[Any, Any], None,\n            # Literal[_NoDefault.no_default]]\"; expected \"Optional[Dict[Any, Any]]\"\n            downcast=downcast,  # type: ignore[arg-type]\n        )\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def pad(\n        self,\n        *,\n        axis: None | Axis = None,\n        inplace: bool_t = False,\n        limit: None | int = None,\n        downcast: dict | None | lib.NoDefault = lib.no_default,\n    ) -> Self | None:\n        \"\"\"\n        Fill NA/NaN values by propagating the last valid observation to next valid.\n\n        .. deprecated:: 2.0\n\n            {klass}.pad is deprecated. Use {klass}.ffill instead.\n\n        Returns\n        -------\n        {klass} or None\n            Object with missing values filled or None if ``inplace=True``.\n\n        Examples\n        --------\n        Please see examples for :meth:`DataFrame.ffill` or :meth:`Series.ffill`.\n        \"\"\"\n        warnings.warn(\n            \"DataFrame.pad/Series.pad is deprecated. Use \"\n            \"DataFrame.ffill/Series.ffill instead\",\n            FutureWarning,\n            stacklevel=find_stack_level(),\n        )\n        return self.ffill(axis=axis, inplace=inplace, limit=limit, downcast=downcast)\n\n    @overload\n    def bfill(\n        self,\n        *,\n        axis: None | Axis = ...,\n        inplace: Literal[False] = ...,\n        limit: None | int = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: dict | None | lib.NoDefault = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def bfill(\n        self,\n        *,\n        axis: None | Axis = ...,\n        inplace: Literal[True],\n        limit: None | int = ...,\n        downcast: dict | None | lib.NoDefault = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def bfill(\n        self,\n        *,\n        axis: None | Axis = ...,\n        inplace: bool_t = ...,\n        limit: None | int = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: dict | None | lib.NoDefault = ...,\n    ) -> Self | None:\n        ...\n\n    @final\n    @doc(\n        klass=_shared_doc_kwargs[\"klass\"],\n        axes_single_arg=_shared_doc_kwargs[\"axes_single_arg\"],\n    )\n    def bfill(\n        self,\n        *,\n        axis: None | Axis = None,\n        inplace: bool_t = False,\n        limit: None | int = None,\n        limit_area: Literal[\"inside\", \"outside\"] | None = None,\n        downcast: dict | None | lib.NoDefault = lib.no_default,\n    ) -> Self | None:\n        \"\"\"\n        Fill NA/NaN values by using the next valid observation to fill the gap.\n\n        Parameters\n        ----------\n        axis : {axes_single_arg}\n            Axis along which to fill missing values. For `Series`\n            this parameter is unused and defaults to 0.\n        inplace : bool, default False\n            If True, fill in-place. Note: this will modify any\n            other views on this object (e.g., a no-copy slice for a column in a\n            DataFrame).\n        limit : int, default None\n            If method is specified, this is the maximum number of consecutive\n            NaN values to forward/backward fill. In other words, if there is\n            a gap with more than this number of consecutive NaNs, it will only\n            be partially filled. If method is not specified, this is the\n            maximum number of entries along the entire axis where NaNs will be\n            filled. Must be greater than 0 if not None.\n        limit_area : {{`None`, 'inside', 'outside'}}, default None\n            If limit is specified, consecutive NaNs will be filled with this\n            restriction.\n\n            * ``None``: No fill restriction.\n            * 'inside': Only fill NaNs surrounded by valid values\n              (interpolate).\n            * 'outside': Only fill NaNs outside valid values (extrapolate).\n\n            .. versionadded:: 2.2.0\n\n        downcast : dict, default is None\n            A dict of item->dtype of what to downcast if possible,\n            or the string 'infer' which will try to downcast to an appropriate\n            equal type (e.g. float64 to int64 if possible).\n\n            .. deprecated:: 2.2.0\n\n        Returns\n        -------\n        {klass} or None\n            Object with missing values filled or None if ``inplace=True``.\n\n        Examples\n        --------\n        For Series:\n\n        >>> s = pd.Series([1, None, None, 2])\n        >>> s.bfill()\n        0    1.0\n        1    2.0\n        2    2.0\n        3    2.0\n        dtype: float64\n        >>> s.bfill(limit=1)\n        0    1.0\n        1    NaN\n        2    2.0\n        3    2.0\n        dtype: float64\n\n        With DataFrame:\n\n        >>> df = pd.DataFrame({{'A': [1, None, None, 4], 'B': [None, 5, None, 7]}})\n        >>> df\n              A     B\n        0   1.0\t  NaN\n        1   NaN\t  5.0\n        2   NaN   NaN\n        3   4.0   7.0\n        >>> df.bfill()\n              A     B\n        0   1.0   5.0\n        1   4.0   5.0\n        2   4.0   7.0\n        3   4.0   7.0\n        >>> df.bfill(limit=1)\n              A     B\n        0   1.0   5.0\n        1   NaN   5.0\n        2   4.0   7.0\n        3   4.0   7.0\n        \"\"\"\n        downcast = self._deprecate_downcast(downcast, \"bfill\")\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and _check_cacher(self):\n                    # see https://github.com/pandas-dev/pandas/pull/56060#discussion_r1399245221\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        return self._pad_or_backfill(\n            \"bfill\",\n            axis=axis,\n            inplace=inplace,\n            limit=limit,\n            limit_area=limit_area,\n            # error: Argument \"downcast\" to \"_fillna_with_method\" of \"NDFrame\"\n            # has incompatible type \"Union[Dict[Any, Any], None,\n            # Literal[_NoDefault.no_default]]\"; expected \"Optional[Dict[Any, Any]]\"\n            downcast=downcast,  # type: ignore[arg-type]\n        )\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def backfill(\n        self,\n        *,\n        axis: None | Axis = None,\n        inplace: bool_t = False,\n        limit: None | int = None,\n        downcast: dict | None | lib.NoDefault = lib.no_default,\n    ) -> Self | None:\n        \"\"\"\n        Fill NA/NaN values by using the next valid observation to fill the gap.\n\n        .. deprecated:: 2.0\n\n            {klass}.backfill is deprecated. Use {klass}.bfill instead.\n\n        Returns\n        -------\n        {klass} or None\n            Object with missing values filled or None if ``inplace=True``.\n\n        Examples\n        --------\n        Please see examples for :meth:`DataFrame.bfill` or :meth:`Series.bfill`.\n        \"\"\"\n        warnings.warn(\n            \"DataFrame.backfill/Series.backfill is deprecated. Use \"\n            \"DataFrame.bfill/Series.bfill instead\",\n            FutureWarning,\n            stacklevel=find_stack_level(),\n        )\n        return self.bfill(axis=axis, inplace=inplace, limit=limit, downcast=downcast)\n\n    @overload\n    def replace(\n        self,\n        to_replace=...,\n        value=...,\n        *,\n        inplace: Literal[False] = ...,\n        limit: int | None = ...,\n        regex: bool_t = ...,\n        method: Literal[\"pad\", \"ffill\", \"bfill\"] | lib.NoDefault = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def replace(\n        self,\n        to_replace=...,\n        value=...,\n        *,\n        inplace: Literal[True],\n        limit: int | None = ...,\n        regex: bool_t = ...,\n        method: Literal[\"pad\", \"ffill\", \"bfill\"] | lib.NoDefault = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def replace(\n        self,\n        to_replace=...,\n        value=...,\n        *,\n        inplace: bool_t = ...,\n        limit: int | None = ...,\n        regex: bool_t = ...,\n        method: Literal[\"pad\", \"ffill\", \"bfill\"] | lib.NoDefault = ...,\n    ) -> Self | None:\n        ...\n\n    @final\n    @doc(\n        _shared_docs[\"replace\"],\n        klass=_shared_doc_kwargs[\"klass\"],\n        inplace=_shared_doc_kwargs[\"inplace\"],\n    )\n    def replace(\n        self,\n        to_replace=None,\n        value=lib.no_default,\n        *,\n        inplace: bool_t = False,\n        limit: int | None = None,\n        regex: bool_t = False,\n        method: Literal[\"pad\", \"ffill\", \"bfill\"] | lib.NoDefault = lib.no_default,\n    ) -> Self | None:\n        if method is not lib.no_default:\n            warnings.warn(\n                # GH#33302\n                f\"The 'method' keyword in {type(self).__name__}.replace is \"\n                \"deprecated and will be removed in a future version.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        elif limit is not None:\n            warnings.warn(\n                # GH#33302\n                f\"The 'limit' keyword in {type(self).__name__}.replace is \"\n                \"deprecated and will be removed in a future version.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        if (\n            value is lib.no_default\n            and method is lib.no_default\n            and not is_dict_like(to_replace)\n            and regex is False\n        ):\n            # case that goes through _replace_single and defaults to method=\"pad\"\n            warnings.warn(\n                # GH#33302\n                f\"{type(self).__name__}.replace without 'value' and with \"\n                \"non-dict-like 'to_replace' is deprecated \"\n                \"and will raise in a future version. \"\n                \"Explicitly specify the new values instead.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n\n        if not (\n            is_scalar(to_replace)\n            or is_re_compilable(to_replace)\n            or is_list_like(to_replace)\n        ):\n            raise TypeError(\n                \"Expecting 'to_replace' to be either a scalar, array-like, \"\n                \"dict or None, got invalid type \"\n                f\"{repr(type(to_replace).__name__)}\"\n            )\n\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and _check_cacher(self):\n                    # in non-CoW mode, chained Series access will populate the\n                    # `_item_cache` which results in an increased ref count not below\n                    # the threshold, while we still need to warn. We detect this case\n                    # of a Series derived from a DataFrame through the presence of\n                    # checking the `_cacher`\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        if not is_bool(regex) and to_replace is not None:\n            raise ValueError(\"'to_replace' must be 'None' if 'regex' is not a bool\")\n\n        if value is lib.no_default or method is not lib.no_default:\n            # GH#36984 if the user explicitly passes value=None we want to\n            #  respect that. We have the corner case where the user explicitly\n            #  passes value=None *and* a method, which we interpret as meaning\n            #  they want the (documented) default behavior.\n            if method is lib.no_default:\n                # TODO: get this to show up as the default in the docs?\n                method = \"pad\"\n\n            # passing a single value that is scalar like\n            # when value is None (GH5319), for compat\n            if not is_dict_like(to_replace) and not is_dict_like(regex):\n                to_replace = [to_replace]\n\n            if isinstance(to_replace, (tuple, list)):\n                # TODO: Consider copy-on-write for non-replaced columns's here\n                if isinstance(self, ABCDataFrame):\n                    from pandas import Series\n\n                    result = self.apply(\n                        Series._replace_single,\n                        args=(to_replace, method, inplace, limit),\n                    )\n                    if inplace:\n                        return None\n                    return result\n                return self._replace_single(to_replace, method, inplace, limit)\n\n            if not is_dict_like(to_replace):\n                if not is_dict_like(regex):\n                    raise TypeError(\n                        'If \"to_replace\" and \"value\" are both None '\n                        'and \"to_replace\" is not a list, then '\n                        \"regex must be a mapping\"\n                    )\n                to_replace = regex\n                regex = True\n\n            items = list(to_replace.items())\n            if items:\n                keys, values = zip(*items)\n            else:\n                # error: Incompatible types in assignment (expression has type\n                # \"list[Never]\", variable has type \"tuple[Any, ...]\")\n                keys, values = ([], [])  # type: ignore[assignment]\n\n            are_mappings = [is_dict_like(v) for v in values]\n\n            if any(are_mappings):\n                if not all(are_mappings):\n                    raise TypeError(\n                        \"If a nested mapping is passed, all values \"\n                        \"of the top level mapping must be mappings\"\n                    )\n                # passed a nested dict/Series\n                to_rep_dict = {}\n                value_dict = {}\n\n                for k, v in items:\n                    # error: Incompatible types in assignment (expression has type\n                    # \"list[Never]\", variable has type \"tuple[Any, ...]\")\n                    keys, values = list(zip(*v.items())) or (  # type: ignore[assignment]\n                        [],\n                        [],\n                    )\n\n                    to_rep_dict[k] = list(keys)\n                    value_dict[k] = list(values)\n\n                to_replace, value = to_rep_dict, value_dict\n            else:\n                to_replace, value = keys, values\n\n            return self.replace(\n                to_replace, value, inplace=inplace, limit=limit, regex=regex\n            )\n        else:\n            # need a non-zero len on all axes\n            if not self.size:\n                if inplace:\n                    return None\n                return self.copy(deep=None)\n\n            if is_dict_like(to_replace):\n                if is_dict_like(value):  # {'A' : NA} -> {'A' : 0}\n                    # Note: Checking below for `in foo.keys()` instead of\n                    #  `in foo` is needed for when we have a Series and not dict\n                    mapping = {\n                        col: (to_replace[col], value[col])\n                        for col in to_replace.keys()\n                        if col in value.keys() and col in self\n                    }\n                    return self._replace_columnwise(mapping, inplace, regex)\n\n                # {'A': NA} -> 0\n                elif not is_list_like(value):\n                    # Operate column-wise\n                    if self.ndim == 1:\n                        raise ValueError(\n                            \"Series.replace cannot use dict-like to_replace \"\n                            \"and non-None value\"\n                        )\n                    mapping = {\n                        col: (to_rep, value) for col, to_rep in to_replace.items()\n                    }\n                    return self._replace_columnwise(mapping, inplace, regex)\n                else:\n                    raise TypeError(\"value argument must be scalar, dict, or Series\")\n\n            elif is_list_like(to_replace):\n                if not is_list_like(value):\n                    # e.g. to_replace = [NA, ''] and value is 0,\n                    #  so we replace NA with 0 and then replace '' with 0\n                    value = [value] * len(to_replace)\n\n                # e.g. we have to_replace = [NA, ''] and value = [0, 'missing']\n                if len(to_replace) != len(value):\n                    raise ValueError(\n                        f\"Replacement lists must match in length. \"\n                        f\"Expecting {len(to_replace)} got {len(value)} \"\n                    )\n                new_data = self._mgr.replace_list(\n                    src_list=to_replace,\n                    dest_list=value,\n                    inplace=inplace,\n                    regex=regex,\n                )\n\n            elif to_replace is None:\n                if not (\n                    is_re_compilable(regex)\n                    or is_list_like(regex)\n                    or is_dict_like(regex)\n                ):\n                    raise TypeError(\n                        f\"'regex' must be a string or a compiled regular expression \"\n                        f\"or a list or dict of strings or regular expressions, \"\n                        f\"you passed a {repr(type(regex).__name__)}\"\n                    )\n                return self.replace(\n                    regex, value, inplace=inplace, limit=limit, regex=True\n                )\n            else:\n                # dest iterable dict-like\n                if is_dict_like(value):  # NA -> {'A' : 0, 'B' : -1}\n                    # Operate column-wise\n                    if self.ndim == 1:\n                        raise ValueError(\n                            \"Series.replace cannot use dict-value and \"\n                            \"non-None to_replace\"\n                        )\n                    mapping = {col: (to_replace, val) for col, val in value.items()}\n                    return self._replace_columnwise(mapping, inplace, regex)\n\n                elif not is_list_like(value):  # NA -> 0\n                    regex = should_use_regex(regex, to_replace)\n                    if regex:\n                        new_data = self._mgr.replace_regex(\n                            to_replace=to_replace,\n                            value=value,\n                            inplace=inplace,\n                        )\n                    else:\n                        new_data = self._mgr.replace(\n                            to_replace=to_replace, value=value, inplace=inplace\n                        )\n                else:\n                    raise TypeError(\n                        f'Invalid \"to_replace\" type: {repr(type(to_replace).__name__)}'\n                    )\n\n        result = self._constructor_from_mgr(new_data, axes=new_data.axes)\n        if inplace:\n            return self._update_inplace(result)\n        else:\n            return result.__finalize__(self, method=\"replace\")\n\n    @overload\n    def interpolate(\n        self,\n        method: InterpolateOptions = ...,\n        *,\n        axis: Axis = ...,\n        limit: int | None = ...,\n        inplace: Literal[False] = ...,\n        limit_direction: Literal[\"forward\", \"backward\", \"both\"] | None = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: Literal[\"infer\"] | None | lib.NoDefault = ...,\n        **kwargs,\n    ) -> Self:\n        ...\n\n    @overload\n    def interpolate(\n        self,\n        method: InterpolateOptions = ...,\n        *,\n        axis: Axis = ...,\n        limit: int | None = ...,\n        inplace: Literal[True],\n        limit_direction: Literal[\"forward\", \"backward\", \"both\"] | None = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: Literal[\"infer\"] | None | lib.NoDefault = ...,\n        **kwargs,\n    ) -> None:\n        ...\n\n    @overload\n    def interpolate(\n        self,\n        method: InterpolateOptions = ...,\n        *,\n        axis: Axis = ...,\n        limit: int | None = ...,\n        inplace: bool_t = ...,\n        limit_direction: Literal[\"forward\", \"backward\", \"both\"] | None = ...,\n        limit_area: Literal[\"inside\", \"outside\"] | None = ...,\n        downcast: Literal[\"infer\"] | None | lib.NoDefault = ...,\n        **kwargs,\n    ) -> Self | None:\n        ...\n\n    @final\n    def interpolate(\n        self,\n        method: InterpolateOptions = \"linear\",\n        *,\n        axis: Axis = 0,\n        limit: int | None = None,\n        inplace: bool_t = False,\n        limit_direction: Literal[\"forward\", \"backward\", \"both\"] | None = None,\n        limit_area: Literal[\"inside\", \"outside\"] | None = None,\n        downcast: Literal[\"infer\"] | None | lib.NoDefault = lib.no_default,\n        **kwargs,\n    ) -> Self | None:\n        \"\"\"\n        Fill NaN values using an interpolation method.\n\n        Please note that only ``method='linear'`` is supported for\n        DataFrame/Series with a MultiIndex.\n\n        Parameters\n        ----------\n        method : str, default 'linear'\n            Interpolation technique to use. One of:\n\n            * 'linear': Ignore the index and treat the values as equally\n              spaced. This is the only method supported on MultiIndexes.\n            * 'time': Works on daily and higher resolution data to interpolate\n              given length of interval.\n            * 'index', 'values': use the actual numerical values of the index.\n            * 'pad': Fill in NaNs using existing values.\n            * 'nearest', 'zero', 'slinear', 'quadratic', 'cubic',\n              'barycentric', 'polynomial': Passed to\n              `scipy.interpolate.interp1d`, whereas 'spline' is passed to\n              `scipy.interpolate.UnivariateSpline`. These methods use the numerical\n              values of the index.  Both 'polynomial' and 'spline' require that\n              you also specify an `order` (int), e.g.\n              ``df.interpolate(method='polynomial', order=5)``. Note that,\n              `slinear` method in Pandas refers to the Scipy first order `spline`\n              instead of Pandas first order `spline`.\n            * 'krogh', 'piecewise_polynomial', 'spline', 'pchip', 'akima',\n              'cubicspline': Wrappers around the SciPy interpolation methods of\n              similar names. See `Notes`.\n            * 'from_derivatives': Refers to\n              `scipy.interpolate.BPoly.from_derivatives`.\n\n        axis : {{0 or 'index', 1 or 'columns', None}}, default None\n            Axis to interpolate along. For `Series` this parameter is unused\n            and defaults to 0.\n        limit : int, optional\n            Maximum number of consecutive NaNs to fill. Must be greater than\n            0.\n        inplace : bool, default False\n            Update the data in place if possible.\n        limit_direction : {{'forward', 'backward', 'both'}}, Optional\n            Consecutive NaNs will be filled in this direction.\n\n            If limit is specified:\n                * If 'method' is 'pad' or 'ffill', 'limit_direction' must be 'forward'.\n                * If 'method' is 'backfill' or 'bfill', 'limit_direction' must be\n                  'backwards'.\n\n            If 'limit' is not specified:\n                * If 'method' is 'backfill' or 'bfill', the default is 'backward'\n                * else the default is 'forward'\n\n            raises ValueError if `limit_direction` is 'forward' or 'both' and\n                method is 'backfill' or 'bfill'.\n            raises ValueError if `limit_direction` is 'backward' or 'both' and\n                method is 'pad' or 'ffill'.\n\n        limit_area : {{`None`, 'inside', 'outside'}}, default None\n            If limit is specified, consecutive NaNs will be filled with this\n            restriction.\n\n            * ``None``: No fill restriction.\n            * 'inside': Only fill NaNs surrounded by valid values\n              (interpolate).\n            * 'outside': Only fill NaNs outside valid values (extrapolate).\n\n        downcast : optional, 'infer' or None, defaults to None\n            Downcast dtypes if possible.\n\n            .. deprecated:: 2.1.0\n\n        ``**kwargs`` : optional\n            Keyword arguments to pass on to the interpolating function.\n\n        Returns\n        -------\n        Series or DataFrame or None\n            Returns the same object type as the caller, interpolated at\n            some or all ``NaN`` values or None if ``inplace=True``.\n\n        See Also\n        --------\n        fillna : Fill missing values using different methods.\n        scipy.interpolate.Akima1DInterpolator : Piecewise cubic polynomials\n            (Akima interpolator).\n        scipy.interpolate.BPoly.from_derivatives : Piecewise polynomial in the\n            Bernstein basis.\n        scipy.interpolate.interp1d : Interpolate a 1-D function.\n        scipy.interpolate.KroghInterpolator : Interpolate polynomial (Krogh\n            interpolator).\n        scipy.interpolate.PchipInterpolator : PCHIP 1-d monotonic cubic\n            interpolation.\n        scipy.interpolate.CubicSpline : Cubic spline data interpolator.\n\n        Notes\n        -----\n        The 'krogh', 'piecewise_polynomial', 'spline', 'pchip' and 'akima'\n        methods are wrappers around the respective SciPy implementations of\n        similar names. These use the actual numerical values of the index.\n        For more information on their behavior, see the\n        `SciPy documentation\n        <https://docs.scipy.org/doc/scipy/reference/interpolate.html#univariate-interpolation>`__.\n\n        Examples\n        --------\n        Filling in ``NaN`` in a :class:`~pandas.Series` via linear\n        interpolation.\n\n        >>> s = pd.Series([0, 1, np.nan, 3])\n        >>> s\n        0    0.0\n        1    1.0\n        2    NaN\n        3    3.0\n        dtype: float64\n        >>> s.interpolate()\n        0    0.0\n        1    1.0\n        2    2.0\n        3    3.0\n        dtype: float64\n\n        Filling in ``NaN`` in a Series via polynomial interpolation or splines:\n        Both 'polynomial' and 'spline' methods require that you also specify\n        an ``order`` (int).\n\n        >>> s = pd.Series([0, 2, np.nan, 8])\n        >>> s.interpolate(method='polynomial', order=2)\n        0    0.000000\n        1    2.000000\n        2    4.666667\n        3    8.000000\n        dtype: float64\n\n        Fill the DataFrame forward (that is, going down) along each column\n        using linear interpolation.\n\n        Note how the last entry in column 'a' is interpolated differently,\n        because there is no entry after it to use for interpolation.\n        Note how the first entry in column 'b' remains ``NaN``, because there\n        is no entry before it to use for interpolation.\n\n        >>> df = pd.DataFrame([(0.0, np.nan, -1.0, 1.0),\n        ...                    (np.nan, 2.0, np.nan, np.nan),\n        ...                    (2.0, 3.0, np.nan, 9.0),\n        ...                    (np.nan, 4.0, -4.0, 16.0)],\n        ...                   columns=list('abcd'))\n        >>> df\n             a    b    c     d\n        0  0.0  NaN -1.0   1.0\n        1  NaN  2.0  NaN   NaN\n        2  2.0  3.0  NaN   9.0\n        3  NaN  4.0 -4.0  16.0\n        >>> df.interpolate(method='linear', limit_direction='forward', axis=0)\n             a    b    c     d\n        0  0.0  NaN -1.0   1.0\n        1  1.0  2.0 -2.0   5.0\n        2  2.0  3.0 -3.0   9.0\n        3  2.0  4.0 -4.0  16.0\n\n        Using polynomial interpolation.\n\n        >>> df['d'].interpolate(method='polynomial', order=2)\n        0     1.0\n        1     4.0\n        2     9.0\n        3    16.0\n        Name: d, dtype: float64\n        \"\"\"\n        if downcast is not lib.no_default:\n            # GH#40988\n            warnings.warn(\n                f\"The 'downcast' keyword in {type(self).__name__}.interpolate \"\n                \"is deprecated and will be removed in a future version. \"\n                \"Call result.infer_objects(copy=False) on the result instead.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        else:\n            downcast = None\n        if downcast is not None and downcast != \"infer\":\n            raise ValueError(\"downcast must be either None or 'infer'\")\n\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and _check_cacher(self):\n                    # see https://github.com/pandas-dev/pandas/pull/56060#discussion_r1399245221\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        axis = self._get_axis_number(axis)\n\n        if self.empty:\n            if inplace:\n                return None\n            return self.copy()\n\n        if not isinstance(method, str):\n            raise ValueError(\"'method' should be a string, not None.\")\n\n        fillna_methods = [\"ffill\", \"bfill\", \"pad\", \"backfill\"]\n        if method.lower() in fillna_methods:\n            # GH#53581\n            warnings.warn(\n                f\"{type(self).__name__}.interpolate with method={method} is \"\n                \"deprecated and will raise in a future version. \"\n                \"Use obj.ffill() or obj.bfill() instead.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n            obj, should_transpose = self, False\n        else:\n            obj, should_transpose = (self.T, True) if axis == 1 else (self, False)\n            if np.any(obj.dtypes == object):\n                # GH#53631\n                if not (obj.ndim == 2 and np.all(obj.dtypes == object)):\n                    # don't warn in cases that already raise\n                    warnings.warn(\n                        f\"{type(self).__name__}.interpolate with object dtype is \"\n                        \"deprecated and will raise in a future version. Call \"\n                        \"obj.infer_objects(copy=False) before interpolating instead.\",\n                        FutureWarning,\n                        stacklevel=find_stack_level(),\n                    )\n\n        if method in fillna_methods and \"fill_value\" in kwargs:\n            raise ValueError(\n                \"'fill_value' is not a valid keyword for \"\n                f\"{type(self).__name__}.interpolate with method from \"\n                f\"{fillna_methods}\"\n            )\n\n        if isinstance(obj.index, MultiIndex) and method != \"linear\":\n            raise ValueError(\n                \"Only `method=linear` interpolation is supported on MultiIndexes.\"\n            )\n\n        limit_direction = missing.infer_limit_direction(limit_direction, method)\n\n        if obj.ndim == 2 and np.all(obj.dtypes == object):\n            raise TypeError(\n                \"Cannot interpolate with all object-dtype columns \"\n                \"in the DataFrame. Try setting at least one \"\n                \"column to a numeric dtype.\"\n            )\n\n        if method.lower() in fillna_methods:\n            # TODO(3.0): remove this case\n            # TODO: warn/raise on limit_direction or kwargs which are ignored?\n            #  as of 2023-06-26 no tests get here with either\n            if not self._mgr.is_single_block and axis == 1:\n                # GH#53898\n                if inplace:\n                    raise NotImplementedError()\n                obj, axis, should_transpose = self.T, 1 - axis, True\n\n            new_data = obj._mgr.pad_or_backfill(\n                method=method,\n                axis=self._get_block_manager_axis(axis),\n                limit=limit,\n                limit_area=limit_area,\n                inplace=inplace,\n                downcast=downcast,\n            )\n        else:\n            index = missing.get_interp_index(method, obj.index)\n            new_data = obj._mgr.interpolate(\n                method=method,\n                index=index,\n                limit=limit,\n                limit_direction=limit_direction,\n                limit_area=limit_area,\n                inplace=inplace,\n                downcast=downcast,\n                **kwargs,\n            )\n\n        result = self._constructor_from_mgr(new_data, axes=new_data.axes)\n        if should_transpose:\n            result = result.T\n        if inplace:\n            return self._update_inplace(result)\n        else:\n            return result.__finalize__(self, method=\"interpolate\")\n\n    # ----------------------------------------------------------------------\n    # Timeseries methods Methods\n\n    @final\n    def asof(self, where, subset=None):\n        \"\"\"\n        Return the last row(s) without any NaNs before `where`.\n\n        The last row (for each element in `where`, if list) without any\n        NaN is taken.\n        In case of a :class:`~pandas.DataFrame`, the last row without NaN\n        considering only the subset of columns (if not `None`)\n\n        If there is no good value, NaN is returned for a Series or\n        a Series of NaN values for a DataFrame\n\n        Parameters\n        ----------\n        where : date or array-like of dates\n            Date(s) before which the last row(s) are returned.\n        subset : str or array-like of str, default `None`\n            For DataFrame, if not `None`, only use these columns to\n            check for NaNs.\n\n        Returns\n        -------\n        scalar, Series, or DataFrame\n\n            The return can be:\n\n            * scalar : when `self` is a Series and `where` is a scalar\n            * Series: when `self` is a Series and `where` is an array-like,\n              or when `self` is a DataFrame and `where` is a scalar\n            * DataFrame : when `self` is a DataFrame and `where` is an\n              array-like\n\n        See Also\n        --------\n        merge_asof : Perform an asof merge. Similar to left join.\n\n        Notes\n        -----\n        Dates are assumed to be sorted. Raises if this is not the case.\n\n        Examples\n        --------\n        A Series and a scalar `where`.\n\n        >>> s = pd.Series([1, 2, np.nan, 4], index=[10, 20, 30, 40])\n        >>> s\n        10    1.0\n        20    2.0\n        30    NaN\n        40    4.0\n        dtype: float64\n\n        >>> s.asof(20)\n        2.0\n\n        For a sequence `where`, a Series is returned. The first value is\n        NaN, because the first element of `where` is before the first\n        index value.\n\n        >>> s.asof([5, 20])\n        5     NaN\n        20    2.0\n        dtype: float64\n\n        Missing values are not considered. The following is ``2.0``, not\n        NaN, even though NaN is at the index location for ``30``.\n\n        >>> s.asof(30)\n        2.0\n\n        Take all columns into consideration\n\n        >>> df = pd.DataFrame({'a': [10., 20., 30., 40., 50.],\n        ...                    'b': [None, None, None, None, 500]},\n        ...                   index=pd.DatetimeIndex(['2018-02-27 09:01:00',\n        ...                                           '2018-02-27 09:02:00',\n        ...                                           '2018-02-27 09:03:00',\n        ...                                           '2018-02-27 09:04:00',\n        ...                                           '2018-02-27 09:05:00']))\n        >>> df.asof(pd.DatetimeIndex(['2018-02-27 09:03:30',\n        ...                           '2018-02-27 09:04:30']))\n                              a   b\n        2018-02-27 09:03:30 NaN NaN\n        2018-02-27 09:04:30 NaN NaN\n\n        Take a single column into consideration\n\n        >>> df.asof(pd.DatetimeIndex(['2018-02-27 09:03:30',\n        ...                           '2018-02-27 09:04:30']),\n        ...         subset=['a'])\n                                a   b\n        2018-02-27 09:03:30  30.0 NaN\n        2018-02-27 09:04:30  40.0 NaN\n        \"\"\"\n        if isinstance(where, str):\n            where = Timestamp(where)\n\n        if not self.index.is_monotonic_increasing:\n            raise ValueError(\"asof requires a sorted index\")\n\n        is_series = isinstance(self, ABCSeries)\n        if is_series:\n            if subset is not None:\n                raise ValueError(\"subset is not valid for Series\")\n        else:\n            if subset is None:\n                subset = self.columns\n            if not is_list_like(subset):\n                subset = [subset]\n\n        is_list = is_list_like(where)\n        if not is_list:\n            start = self.index[0]\n            if isinstance(self.index, PeriodIndex):\n                where = Period(where, freq=self.index.freq)\n\n            if where < start:\n                if not is_series:\n                    return self._constructor_sliced(\n                        index=self.columns, name=where, dtype=np.float64\n                    )\n                return np.nan\n\n            # It's always much faster to use a *while* loop here for\n            # Series than pre-computing all the NAs. However a\n            # *while* loop is extremely expensive for DataFrame\n            # so we later pre-compute all the NAs and use the same\n            # code path whether *where* is a scalar or list.\n            # See PR: https://github.com/pandas-dev/pandas/pull/14476\n            if is_series:\n                loc = self.index.searchsorted(where, side=\"right\")\n                if loc > 0:\n                    loc -= 1\n\n                values = self._values\n                while loc > 0 and isna(values[loc]):\n                    loc -= 1\n                return values[loc]\n\n        if not isinstance(where, Index):\n            where = Index(where) if is_list else Index([where])\n\n        nulls = self.isna() if is_series else self[subset].isna().any(axis=1)\n        if nulls.all():\n            if is_series:\n                self = cast(\"Series\", self)\n                return self._constructor(np.nan, index=where, name=self.name)\n            elif is_list:\n                self = cast(\"DataFrame\", self)\n                return self._constructor(np.nan, index=where, columns=self.columns)\n            else:\n                self = cast(\"DataFrame\", self)\n                return self._constructor_sliced(\n                    np.nan, index=self.columns, name=where[0]\n                )\n\n        locs = self.index.asof_locs(where, ~(nulls._values))\n\n        # mask the missing\n        mask = locs == -1\n        data = self.take(locs)\n        data.index = where\n        if mask.any():\n            # GH#16063 only do this setting when necessary, otherwise\n            #  we'd cast e.g. bools to floats\n            data.loc[mask] = np.nan\n        return data if is_list else data.iloc[-1]\n\n    # ----------------------------------------------------------------------\n    # Action Methods\n\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def isna(self) -> Self:\n        \"\"\"\n        Detect missing values.\n\n        Return a boolean same-sized object indicating if the values are NA.\n        NA values, such as None or :attr:`numpy.NaN`, gets mapped to True\n        values.\n        Everything else gets mapped to False values. Characters such as empty\n        strings ``''`` or :attr:`numpy.inf` are not considered NA values\n        (unless you set ``pandas.options.mode.use_inf_as_na = True``).\n\n        Returns\n        -------\n        {klass}\n            Mask of bool values for each element in {klass} that\n            indicates whether an element is an NA value.\n\n        See Also\n        --------\n        {klass}.isnull : Alias of isna.\n        {klass}.notna : Boolean inverse of isna.\n        {klass}.dropna : Omit axes labels with missing values.\n        isna : Top-level isna.\n\n        Examples\n        --------\n        Show which entries in a DataFrame are NA.\n\n        >>> df = pd.DataFrame(dict(age=[5, 6, np.nan],\n        ...                        born=[pd.NaT, pd.Timestamp('1939-05-27'),\n        ...                              pd.Timestamp('1940-04-25')],\n        ...                        name=['Alfred', 'Batman', ''],\n        ...                        toy=[None, 'Batmobile', 'Joker']))\n        >>> df\n           age       born    name        toy\n        0  5.0        NaT  Alfred       None\n        1  6.0 1939-05-27  Batman  Batmobile\n        2  NaN 1940-04-25              Joker\n\n        >>> df.isna()\n             age   born   name    toy\n        0  False   True  False   True\n        1  False  False  False  False\n        2   True  False  False  False\n\n        Show which entries in a Series are NA.\n\n        >>> ser = pd.Series([5, 6, np.nan])\n        >>> ser\n        0    5.0\n        1    6.0\n        2    NaN\n        dtype: float64\n\n        >>> ser.isna()\n        0    False\n        1    False\n        2     True\n        dtype: bool\n        \"\"\"\n        return isna(self).__finalize__(self, method=\"isna\")\n\n    @doc(isna, klass=_shared_doc_kwargs[\"klass\"])\n    def isnull(self) -> Self:\n        return isna(self).__finalize__(self, method=\"isnull\")\n\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def notna(self) -> Self:\n        \"\"\"\n        Detect existing (non-missing) values.\n\n        Return a boolean same-sized object indicating if the values are not NA.\n        Non-missing values get mapped to True. Characters such as empty\n        strings ``''`` or :attr:`numpy.inf` are not considered NA values\n        (unless you set ``pandas.options.mode.use_inf_as_na = True``).\n        NA values, such as None or :attr:`numpy.NaN`, get mapped to False\n        values.\n\n        Returns\n        -------\n        {klass}\n            Mask of bool values for each element in {klass} that\n            indicates whether an element is not an NA value.\n\n        See Also\n        --------\n        {klass}.notnull : Alias of notna.\n        {klass}.isna : Boolean inverse of notna.\n        {klass}.dropna : Omit axes labels with missing values.\n        notna : Top-level notna.\n\n        Examples\n        --------\n        Show which entries in a DataFrame are not NA.\n\n        >>> df = pd.DataFrame(dict(age=[5, 6, np.nan],\n        ...                        born=[pd.NaT, pd.Timestamp('1939-05-27'),\n        ...                              pd.Timestamp('1940-04-25')],\n        ...                        name=['Alfred', 'Batman', ''],\n        ...                        toy=[None, 'Batmobile', 'Joker']))\n        >>> df\n           age       born    name        toy\n        0  5.0        NaT  Alfred       None\n        1  6.0 1939-05-27  Batman  Batmobile\n        2  NaN 1940-04-25              Joker\n\n        >>> df.notna()\n             age   born  name    toy\n        0   True  False  True  False\n        1   True   True  True   True\n        2  False   True  True   True\n\n        Show which entries in a Series are not NA.\n\n        >>> ser = pd.Series([5, 6, np.nan])\n        >>> ser\n        0    5.0\n        1    6.0\n        2    NaN\n        dtype: float64\n\n        >>> ser.notna()\n        0     True\n        1     True\n        2    False\n        dtype: bool\n        \"\"\"\n        return notna(self).__finalize__(self, method=\"notna\")\n\n    @doc(notna, klass=_shared_doc_kwargs[\"klass\"])\n    def notnull(self) -> Self:\n        return notna(self).__finalize__(self, method=\"notnull\")\n\n    @final\n    def _clip_with_scalar(self, lower, upper, inplace: bool_t = False):\n        if (lower is not None and np.any(isna(lower))) or (\n            upper is not None and np.any(isna(upper))\n        ):\n            raise ValueError(\"Cannot use an NA value as a clip threshold\")\n\n        result = self\n        mask = self.isna()\n\n        if lower is not None:\n            cond = mask | (self >= lower)\n            result = result.where(\n                cond, lower, inplace=inplace\n            )  # type: ignore[assignment]\n        if upper is not None:\n            cond = mask | (self <= upper)\n            result = self if inplace else result\n            result = result.where(\n                cond, upper, inplace=inplace\n            )  # type: ignore[assignment]\n\n        return result\n\n    @final\n    def _clip_with_one_bound(self, threshold, method, axis, inplace):\n        if axis is not None:\n            axis = self._get_axis_number(axis)\n\n        # method is self.le for upper bound and self.ge for lower bound\n        if is_scalar(threshold) and is_number(threshold):\n            if method.__name__ == \"le\":\n                return self._clip_with_scalar(None, threshold, inplace=inplace)\n            return self._clip_with_scalar(threshold, None, inplace=inplace)\n\n        # GH #15390\n        # In order for where method to work, the threshold must\n        # be transformed to NDFrame from other array like structure.\n        if (not isinstance(threshold, ABCSeries)) and is_list_like(threshold):\n            if isinstance(self, ABCSeries):\n                threshold = self._constructor(threshold, index=self.index)\n            else:\n                threshold = self._align_for_op(threshold, axis, flex=None)[1]\n\n        # GH 40420\n        # Treat missing thresholds as no bounds, not clipping the values\n        if is_list_like(threshold):\n            fill_value = np.inf if method.__name__ == \"le\" else -np.inf\n            threshold_inf = threshold.fillna(fill_value)\n        else:\n            threshold_inf = threshold\n\n        subset = method(threshold_inf, axis=axis) | isna(self)\n\n        # GH 40420\n        return self.where(subset, threshold, axis=axis, inplace=inplace)\n\n    @overload\n    def clip(\n        self,\n        lower=...,\n        upper=...,\n        *,\n        axis: Axis | None = ...,\n        inplace: Literal[False] = ...,\n        **kwargs,\n    ) -> Self:\n        ...\n\n    @overload\n    def clip(\n        self,\n        lower=...,\n        upper=...,\n        *,\n        axis: Axis | None = ...,\n        inplace: Literal[True],\n        **kwargs,\n    ) -> None:\n        ...\n\n    @overload\n    def clip(\n        self,\n        lower=...,\n        upper=...,\n        *,\n        axis: Axis | None = ...,\n        inplace: bool_t = ...,\n        **kwargs,\n    ) -> Self | None:\n        ...\n\n    @final\n    def clip(\n        self,\n        lower=None,\n        upper=None,\n        *,\n        axis: Axis | None = None,\n        inplace: bool_t = False,\n        **kwargs,\n    ) -> Self | None:\n        \"\"\"\n        Trim values at input threshold(s).\n\n        Assigns values outside boundary to boundary values. Thresholds\n        can be singular values or array like, and in the latter case\n        the clipping is performed element-wise in the specified axis.\n\n        Parameters\n        ----------\n        lower : float or array-like, default None\n            Minimum threshold value. All values below this\n            threshold will be set to it. A missing\n            threshold (e.g `NA`) will not clip the value.\n        upper : float or array-like, default None\n            Maximum threshold value. All values above this\n            threshold will be set to it. A missing\n            threshold (e.g `NA`) will not clip the value.\n        axis : {{0 or 'index', 1 or 'columns', None}}, default None\n            Align object with lower and upper along the given axis.\n            For `Series` this parameter is unused and defaults to `None`.\n        inplace : bool, default False\n            Whether to perform the operation in place on the data.\n        *args, **kwargs\n            Additional keywords have no effect but might be accepted\n            for compatibility with numpy.\n\n        Returns\n        -------\n        Series or DataFrame or None\n            Same type as calling object with the values outside the\n            clip boundaries replaced or None if ``inplace=True``.\n\n        See Also\n        --------\n        Series.clip : Trim values at input threshold in series.\n        DataFrame.clip : Trim values at input threshold in dataframe.\n        numpy.clip : Clip (limit) the values in an array.\n\n        Examples\n        --------\n        >>> data = {'col_0': [9, -3, 0, -1, 5], 'col_1': [-2, -7, 6, 8, -5]}\n        >>> df = pd.DataFrame(data)\n        >>> df\n           col_0  col_1\n        0      9     -2\n        1     -3     -7\n        2      0      6\n        3     -1      8\n        4      5     -5\n\n        Clips per column using lower and upper thresholds:\n\n        >>> df.clip(-4, 6)\n           col_0  col_1\n        0      6     -2\n        1     -3     -4\n        2      0      6\n        3     -1      6\n        4      5     -4\n\n        Clips using specific lower and upper thresholds per column:\n\n        >>> df.clip([-2, -1], [4, 5])\n            col_0  col_1\n        0      4     -1\n        1     -2     -1\n        2      0      5\n        3     -1      5\n        4      4     -1\n\n        Clips using specific lower and upper thresholds per column element:\n\n        >>> t = pd.Series([2, -4, -1, 6, 3])\n        >>> t\n        0    2\n        1   -4\n        2   -1\n        3    6\n        4    3\n        dtype: int64\n\n        >>> df.clip(t, t + 4, axis=0)\n           col_0  col_1\n        0      6      2\n        1     -3     -4\n        2      0      3\n        3      6      8\n        4      5      3\n\n        Clips using specific lower threshold per column element, with missing values:\n\n        >>> t = pd.Series([2, -4, np.nan, 6, 3])\n        >>> t\n        0    2.0\n        1   -4.0\n        2    NaN\n        3    6.0\n        4    3.0\n        dtype: float64\n\n        >>> df.clip(t, axis=0)\n        col_0  col_1\n        0      9      2\n        1     -3     -4\n        2      0      6\n        3      6      8\n        4      5      3\n        \"\"\"\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and hasattr(self, \"_cacher\"):\n                    # see https://github.com/pandas-dev/pandas/pull/56060#discussion_r1399245221\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        axis = nv.validate_clip_with_axis(axis, (), kwargs)\n        if axis is not None:\n            axis = self._get_axis_number(axis)\n\n        # GH 17276\n        # numpy doesn't like NaN as a clip value\n        # so ignore\n        # GH 19992\n        # numpy doesn't drop a list-like bound containing NaN\n        isna_lower = isna(lower)\n        if not is_list_like(lower):\n            if np.any(isna_lower):\n                lower = None\n        elif np.all(isna_lower):\n            lower = None\n        isna_upper = isna(upper)\n        if not is_list_like(upper):\n            if np.any(isna_upper):\n                upper = None\n        elif np.all(isna_upper):\n            upper = None\n\n        # GH 2747 (arguments were reversed)\n        if (\n            lower is not None\n            and upper is not None\n            and is_scalar(lower)\n            and is_scalar(upper)\n        ):\n            lower, upper = min(lower, upper), max(lower, upper)\n\n        # fast-path for scalars\n        if (lower is None or is_number(lower)) and (upper is None or is_number(upper)):\n            return self._clip_with_scalar(lower, upper, inplace=inplace)\n\n        result = self\n        if lower is not None:\n            result = result._clip_with_one_bound(\n                lower, method=self.ge, axis=axis, inplace=inplace\n            )\n        if upper is not None:\n            if inplace:\n                result = self\n            result = result._clip_with_one_bound(\n                upper, method=self.le, axis=axis, inplace=inplace\n            )\n\n        return result\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def asfreq(\n        self,\n        freq: Frequency,\n        method: FillnaOptions | None = None,\n        how: Literal[\"start\", \"end\"] | None = None,\n        normalize: bool_t = False,\n        fill_value: Hashable | None = None,\n    ) -> Self:\n        \"\"\"\n        Convert time series to specified frequency.\n\n        Returns the original data conformed to a new index with the specified\n        frequency.\n\n        If the index of this {klass} is a :class:`~pandas.PeriodIndex`, the new index\n        is the result of transforming the original index with\n        :meth:`PeriodIndex.asfreq <pandas.PeriodIndex.asfreq>` (so the original index\n        will map one-to-one to the new index).\n\n        Otherwise, the new index will be equivalent to ``pd.date_range(start, end,\n        freq=freq)`` where ``start`` and ``end`` are, respectively, the first and\n        last entries in the original index (see :func:`pandas.date_range`). The\n        values corresponding to any timesteps in the new index which were not present\n        in the original index will be null (``NaN``), unless a method for filling\n        such unknowns is provided (see the ``method`` parameter below).\n\n        The :meth:`resample` method is more appropriate if an operation on each group of\n        timesteps (such as an aggregate) is necessary to represent the data at the new\n        frequency.\n\n        Parameters\n        ----------\n        freq : DateOffset or str\n            Frequency DateOffset or string.\n        method : {{'backfill'/'bfill', 'pad'/'ffill'}}, default None\n            Method to use for filling holes in reindexed Series (note this\n            does not fill NaNs that already were present):\n\n            * 'pad' / 'ffill': propagate last valid observation forward to next\n              valid\n            * 'backfill' / 'bfill': use NEXT valid observation to fill.\n        how : {{'start', 'end'}}, default end\n            For PeriodIndex only (see PeriodIndex.asfreq).\n        normalize : bool, default False\n            Whether to reset output index to midnight.\n        fill_value : scalar, optional\n            Value to use for missing values, applied during upsampling (note\n            this does not fill NaNs that already were present).\n\n        Returns\n        -------\n        {klass}\n            {klass} object reindexed to the specified frequency.\n\n        See Also\n        --------\n        reindex : Conform DataFrame to new index with optional filling logic.\n\n        Notes\n        -----\n        To learn more about the frequency strings, please see `this link\n        <https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases>`__.\n\n        Examples\n        --------\n        Start by creating a series with 4 one minute timestamps.\n\n        >>> index = pd.date_range('1/1/2000', periods=4, freq='min')\n        >>> series = pd.Series([0.0, None, 2.0, 3.0], index=index)\n        >>> df = pd.DataFrame({{'s': series}})\n        >>> df\n                               s\n        2000-01-01 00:00:00    0.0\n        2000-01-01 00:01:00    NaN\n        2000-01-01 00:02:00    2.0\n        2000-01-01 00:03:00    3.0\n\n        Upsample the series into 30 second bins.\n\n        >>> df.asfreq(freq='30s')\n                               s\n        2000-01-01 00:00:00    0.0\n        2000-01-01 00:00:30    NaN\n        2000-01-01 00:01:00    NaN\n        2000-01-01 00:01:30    NaN\n        2000-01-01 00:02:00    2.0\n        2000-01-01 00:02:30    NaN\n        2000-01-01 00:03:00    3.0\n\n        Upsample again, providing a ``fill value``.\n\n        >>> df.asfreq(freq='30s', fill_value=9.0)\n                               s\n        2000-01-01 00:00:00    0.0\n        2000-01-01 00:00:30    9.0\n        2000-01-01 00:01:00    NaN\n        2000-01-01 00:01:30    9.0\n        2000-01-01 00:02:00    2.0\n        2000-01-01 00:02:30    9.0\n        2000-01-01 00:03:00    3.0\n\n        Upsample again, providing a ``method``.\n\n        >>> df.asfreq(freq='30s', method='bfill')\n                               s\n        2000-01-01 00:00:00    0.0\n        2000-01-01 00:00:30    NaN\n        2000-01-01 00:01:00    NaN\n        2000-01-01 00:01:30    2.0\n        2000-01-01 00:02:00    2.0\n        2000-01-01 00:02:30    3.0\n        2000-01-01 00:03:00    3.0\n        \"\"\"\n        from pandas.core.resample import asfreq\n\n        return asfreq(\n            self,\n            freq,\n            method=method,\n            how=how,\n            normalize=normalize,\n            fill_value=fill_value,\n        )\n\n    @final\n    def at_time(self, time, asof: bool_t = False, axis: Axis | None = None) -> Self:\n        \"\"\"\n        Select values at particular time of day (e.g., 9:30AM).\n\n        Parameters\n        ----------\n        time : datetime.time or str\n            The values to select.\n        axis : {0 or 'index', 1 or 'columns'}, default 0\n            For `Series` this parameter is unused and defaults to 0.\n\n        Returns\n        -------\n        Series or DataFrame\n\n        Raises\n        ------\n        TypeError\n            If the index is not  a :class:`DatetimeIndex`\n\n        See Also\n        --------\n        between_time : Select values between particular times of the day.\n        first : Select initial periods of time series based on a date offset.\n        last : Select final periods of time series based on a date offset.\n        DatetimeIndex.indexer_at_time : Get just the index locations for\n            values at particular time of the day.\n\n        Examples\n        --------\n        >>> i = pd.date_range('2018-04-09', periods=4, freq='12h')\n        >>> ts = pd.DataFrame({'A': [1, 2, 3, 4]}, index=i)\n        >>> ts\n                             A\n        2018-04-09 00:00:00  1\n        2018-04-09 12:00:00  2\n        2018-04-10 00:00:00  3\n        2018-04-10 12:00:00  4\n\n        >>> ts.at_time('12:00')\n                             A\n        2018-04-09 12:00:00  2\n        2018-04-10 12:00:00  4\n        \"\"\"\n        if axis is None:\n            axis = 0\n        axis = self._get_axis_number(axis)\n\n        index = self._get_axis(axis)\n\n        if not isinstance(index, DatetimeIndex):\n            raise TypeError(\"Index must be DatetimeIndex\")\n\n        indexer = index.indexer_at_time(time, asof=asof)\n        return self._take_with_is_copy(indexer, axis=axis)\n\n    @final\n    def between_time(\n        self,\n        start_time,\n        end_time,\n        inclusive: IntervalClosedType = \"both\",\n        axis: Axis | None = None,\n    ) -> Self:\n        \"\"\"\n        Select values between particular times of the day (e.g., 9:00-9:30 AM).\n\n        By setting ``start_time`` to be later than ``end_time``,\n        you can get the times that are *not* between the two times.\n\n        Parameters\n        ----------\n        start_time : datetime.time or str\n            Initial time as a time filter limit.\n        end_time : datetime.time or str\n            End time as a time filter limit.\n        inclusive : {\"both\", \"neither\", \"left\", \"right\"}, default \"both\"\n            Include boundaries; whether to set each bound as closed or open.\n        axis : {0 or 'index', 1 or 'columns'}, default 0\n            Determine range time on index or columns value.\n            For `Series` this parameter is unused and defaults to 0.\n\n        Returns\n        -------\n        Series or DataFrame\n            Data from the original object filtered to the specified dates range.\n\n        Raises\n        ------\n        TypeError\n            If the index is not  a :class:`DatetimeIndex`\n\n        See Also\n        --------\n        at_time : Select values at a particular time of the day.\n        first : Select initial periods of time series based on a date offset.\n        last : Select final periods of time series based on a date offset.\n        DatetimeIndex.indexer_between_time : Get just the index locations for\n            values between particular times of the day.\n\n        Examples\n        --------\n        >>> i = pd.date_range('2018-04-09', periods=4, freq='1D20min')\n        >>> ts = pd.DataFrame({'A': [1, 2, 3, 4]}, index=i)\n        >>> ts\n                             A\n        2018-04-09 00:00:00  1\n        2018-04-10 00:20:00  2\n        2018-04-11 00:40:00  3\n        2018-04-12 01:00:00  4\n\n        >>> ts.between_time('0:15', '0:45')\n                             A\n        2018-04-10 00:20:00  2\n        2018-04-11 00:40:00  3\n\n        You get the times that are *not* between two times by setting\n        ``start_time`` later than ``end_time``:\n\n        >>> ts.between_time('0:45', '0:15')\n                             A\n        2018-04-09 00:00:00  1\n        2018-04-12 01:00:00  4\n        \"\"\"\n        if axis is None:\n            axis = 0\n        axis = self._get_axis_number(axis)\n\n        index = self._get_axis(axis)\n        if not isinstance(index, DatetimeIndex):\n            raise TypeError(\"Index must be DatetimeIndex\")\n\n        left_inclusive, right_inclusive = validate_inclusive(inclusive)\n        indexer = index.indexer_between_time(\n            start_time,\n            end_time,\n            include_start=left_inclusive,\n            include_end=right_inclusive,\n        )\n        return self._take_with_is_copy(indexer, axis=axis)\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def resample(\n        self,\n        rule,\n        axis: Axis | lib.NoDefault = lib.no_default,\n        closed: Literal[\"right\", \"left\"] | None = None,\n        label: Literal[\"right\", \"left\"] | None = None,\n        convention: Literal[\"start\", \"end\", \"s\", \"e\"] | lib.NoDefault = lib.no_default,\n        kind: Literal[\"timestamp\", \"period\"] | None | lib.NoDefault = lib.no_default,\n        on: Level | None = None,\n        level: Level | None = None,\n        origin: str | TimestampConvertibleTypes = \"start_day\",\n        offset: TimedeltaConvertibleTypes | None = None,\n        group_keys: bool_t = False,\n    ) -> Resampler:\n        \"\"\"\n        Resample time-series data.\n\n        Convenience method for frequency conversion and resampling of time series.\n        The object must have a datetime-like index (`DatetimeIndex`, `PeriodIndex`,\n        or `TimedeltaIndex`), or the caller must pass the label of a datetime-like\n        series/index to the ``on``/``level`` keyword parameter.\n\n        Parameters\n        ----------\n        rule : DateOffset, Timedelta or str\n            The offset string or object representing target conversion.\n        axis : {{0 or 'index', 1 or 'columns'}}, default 0\n            Which axis to use for up- or down-sampling. For `Series` this parameter\n            is unused and defaults to 0. Must be\n            `DatetimeIndex`, `TimedeltaIndex` or `PeriodIndex`.\n\n            .. deprecated:: 2.0.0\n                Use frame.T.resample(...) instead.\n        closed : {{'right', 'left'}}, default None\n            Which side of bin interval is closed. The default is 'left'\n            for all frequency offsets except for 'ME', 'YE', 'QE', 'BME',\n            'BA', 'BQE', and 'W' which all have a default of 'right'.\n        label : {{'right', 'left'}}, default None\n            Which bin edge label to label bucket with. The default is 'left'\n            for all frequency offsets except for 'ME', 'YE', 'QE', 'BME',\n            'BA', 'BQE', and 'W' which all have a default of 'right'.\n        convention : {{'start', 'end', 's', 'e'}}, default 'start'\n            For `PeriodIndex` only, controls whether to use the start or\n            end of `rule`.\n\n            .. deprecated:: 2.2.0\n                Convert PeriodIndex to DatetimeIndex before resampling instead.\n        kind : {{'timestamp', 'period'}}, optional, default None\n            Pass 'timestamp' to convert the resulting index to a\n            `DateTimeIndex` or 'period' to convert it to a `PeriodIndex`.\n            By default the input representation is retained.\n\n            .. deprecated:: 2.2.0\n                Convert index to desired type explicitly instead.\n\n        on : str, optional\n            For a DataFrame, column to use instead of index for resampling.\n            Column must be datetime-like.\n        level : str or int, optional\n            For a MultiIndex, level (name or number) to use for\n            resampling. `level` must be datetime-like.\n        origin : Timestamp or str, default 'start_day'\n            The timestamp on which to adjust the grouping. The timezone of origin\n            must match the timezone of the index.\n            If string, must be one of the following:\n\n            - 'epoch': `origin` is 1970-01-01\n            - 'start': `origin` is the first value of the timeseries\n            - 'start_day': `origin` is the first day at midnight of the timeseries\n\n            - 'end': `origin` is the last value of the timeseries\n            - 'end_day': `origin` is the ceiling midnight of the last day\n\n            .. versionadded:: 1.3.0\n\n            .. note::\n\n                Only takes effect for Tick-frequencies (i.e. fixed frequencies like\n                days, hours, and minutes, rather than months or quarters).\n        offset : Timedelta or str, default is None\n            An offset timedelta added to the origin.\n\n        group_keys : bool, default False\n            Whether to include the group keys in the result index when using\n            ``.apply()`` on the resampled object.\n\n            .. versionadded:: 1.5.0\n\n                Not specifying ``group_keys`` will retain values-dependent behavior\n                from pandas 1.4 and earlier (see :ref:`pandas 1.5.0 Release notes\n                <whatsnew_150.enhancements.resample_group_keys>` for examples).\n\n            .. versionchanged:: 2.0.0\n\n                ``group_keys`` now defaults to ``False``.\n\n        Returns\n        -------\n        pandas.api.typing.Resampler\n            :class:`~pandas.core.Resampler` object.\n\n        See Also\n        --------\n        Series.resample : Resample a Series.\n        DataFrame.resample : Resample a DataFrame.\n        groupby : Group {klass} by mapping, function, label, or list of labels.\n        asfreq : Reindex a {klass} with the given frequency without grouping.\n\n        Notes\n        -----\n        See the `user guide\n        <https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#resampling>`__\n        for more.\n\n        To learn more about the offset strings, please see `this link\n        <https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#dateoffset-objects>`__.\n\n        Examples\n        --------\n        Start by creating a series with 9 one minute timestamps.\n\n        >>> index = pd.date_range('1/1/2000', periods=9, freq='min')\n        >>> series = pd.Series(range(9), index=index)\n        >>> series\n        2000-01-01 00:00:00    0\n        2000-01-01 00:01:00    1\n        2000-01-01 00:02:00    2\n        2000-01-01 00:03:00    3\n        2000-01-01 00:04:00    4\n        2000-01-01 00:05:00    5\n        2000-01-01 00:06:00    6\n        2000-01-01 00:07:00    7\n        2000-01-01 00:08:00    8\n        Freq: min, dtype: int64\n\n        Downsample the series into 3 minute bins and sum the values\n        of the timestamps falling into a bin.\n\n        >>> series.resample('3min').sum()\n        2000-01-01 00:00:00     3\n        2000-01-01 00:03:00    12\n        2000-01-01 00:06:00    21\n        Freq: 3min, dtype: int64\n\n        Downsample the series into 3 minute bins as above, but label each\n        bin using the right edge instead of the left. Please note that the\n        value in the bucket used as the label is not included in the bucket,\n        which it labels. For example, in the original series the\n        bucket ``2000-01-01 00:03:00`` contains the value 3, but the summed\n        value in the resampled bucket with the label ``2000-01-01 00:03:00``\n        does not include 3 (if it did, the summed value would be 6, not 3).\n\n        >>> series.resample('3min', label='right').sum()\n        2000-01-01 00:03:00     3\n        2000-01-01 00:06:00    12\n        2000-01-01 00:09:00    21\n        Freq: 3min, dtype: int64\n\n        To include this value close the right side of the bin interval,\n        as shown below.\n\n        >>> series.resample('3min', label='right', closed='right').sum()\n        2000-01-01 00:00:00     0\n        2000-01-01 00:03:00     6\n        2000-01-01 00:06:00    15\n        2000-01-01 00:09:00    15\n        Freq: 3min, dtype: int64\n\n        Upsample the series into 30 second bins.\n\n        >>> series.resample('30s').asfreq()[0:5]   # Select first 5 rows\n        2000-01-01 00:00:00   0.0\n        2000-01-01 00:00:30   NaN\n        2000-01-01 00:01:00   1.0\n        2000-01-01 00:01:30   NaN\n        2000-01-01 00:02:00   2.0\n        Freq: 30s, dtype: float64\n\n        Upsample the series into 30 second bins and fill the ``NaN``\n        values using the ``ffill`` method.\n\n        >>> series.resample('30s').ffill()[0:5]\n        2000-01-01 00:00:00    0\n        2000-01-01 00:00:30    0\n        2000-01-01 00:01:00    1\n        2000-01-01 00:01:30    1\n        2000-01-01 00:02:00    2\n        Freq: 30s, dtype: int64\n\n        Upsample the series into 30 second bins and fill the\n        ``NaN`` values using the ``bfill`` method.\n\n        >>> series.resample('30s').bfill()[0:5]\n        2000-01-01 00:00:00    0\n        2000-01-01 00:00:30    1\n        2000-01-01 00:01:00    1\n        2000-01-01 00:01:30    2\n        2000-01-01 00:02:00    2\n        Freq: 30s, dtype: int64\n\n        Pass a custom function via ``apply``\n\n        >>> def custom_resampler(arraylike):\n        ...     return np.sum(arraylike) + 5\n        ...\n        >>> series.resample('3min').apply(custom_resampler)\n        2000-01-01 00:00:00     8\n        2000-01-01 00:03:00    17\n        2000-01-01 00:06:00    26\n        Freq: 3min, dtype: int64\n\n        For DataFrame objects, the keyword `on` can be used to specify the\n        column instead of the index for resampling.\n\n        >>> d = {{'price': [10, 11, 9, 13, 14, 18, 17, 19],\n        ...      'volume': [50, 60, 40, 100, 50, 100, 40, 50]}}\n        >>> df = pd.DataFrame(d)\n        >>> df['week_starting'] = pd.date_range('01/01/2018',\n        ...                                     periods=8,\n        ...                                     freq='W')\n        >>> df\n           price  volume week_starting\n        0     10      50    2018-01-07\n        1     11      60    2018-01-14\n        2      9      40    2018-01-21\n        3     13     100    2018-01-28\n        4     14      50    2018-02-04\n        5     18     100    2018-02-11\n        6     17      40    2018-02-18\n        7     19      50    2018-02-25\n        >>> df.resample('ME', on='week_starting').mean()\n                       price  volume\n        week_starting\n        2018-01-31     10.75    62.5\n        2018-02-28     17.00    60.0\n\n        For a DataFrame with MultiIndex, the keyword `level` can be used to\n        specify on which level the resampling needs to take place.\n\n        >>> days = pd.date_range('1/1/2000', periods=4, freq='D')\n        >>> d2 = {{'price': [10, 11, 9, 13, 14, 18, 17, 19],\n        ...       'volume': [50, 60, 40, 100, 50, 100, 40, 50]}}\n        >>> df2 = pd.DataFrame(\n        ...     d2,\n        ...     index=pd.MultiIndex.from_product(\n        ...         [days, ['morning', 'afternoon']]\n        ...     )\n        ... )\n        >>> df2\n                              price  volume\n        2000-01-01 morning       10      50\n                   afternoon     11      60\n        2000-01-02 morning        9      40\n                   afternoon     13     100\n        2000-01-03 morning       14      50\n                   afternoon     18     100\n        2000-01-04 morning       17      40\n                   afternoon     19      50\n        >>> df2.resample('D', level=0).sum()\n                    price  volume\n        2000-01-01     21     110\n        2000-01-02     22     140\n        2000-01-03     32     150\n        2000-01-04     36      90\n\n        If you want to adjust the start of the bins based on a fixed timestamp:\n\n        >>> start, end = '2000-10-01 23:30:00', '2000-10-02 00:30:00'\n        >>> rng = pd.date_range(start, end, freq='7min')\n        >>> ts = pd.Series(np.arange(len(rng)) * 3, index=rng)\n        >>> ts\n        2000-10-01 23:30:00     0\n        2000-10-01 23:37:00     3\n        2000-10-01 23:44:00     6\n        2000-10-01 23:51:00     9\n        2000-10-01 23:58:00    12\n        2000-10-02 00:05:00    15\n        2000-10-02 00:12:00    18\n        2000-10-02 00:19:00    21\n        2000-10-02 00:26:00    24\n        Freq: 7min, dtype: int64\n\n        >>> ts.resample('17min').sum()\n        2000-10-01 23:14:00     0\n        2000-10-01 23:31:00     9\n        2000-10-01 23:48:00    21\n        2000-10-02 00:05:00    54\n        2000-10-02 00:22:00    24\n        Freq: 17min, dtype: int64\n\n        >>> ts.resample('17min', origin='epoch').sum()\n        2000-10-01 23:18:00     0\n        2000-10-01 23:35:00    18\n        2000-10-01 23:52:00    27\n        2000-10-02 00:09:00    39\n        2000-10-02 00:26:00    24\n        Freq: 17min, dtype: int64\n\n        >>> ts.resample('17min', origin='2000-01-01').sum()\n        2000-10-01 23:24:00     3\n        2000-10-01 23:41:00    15\n        2000-10-01 23:58:00    45\n        2000-10-02 00:15:00    45\n        Freq: 17min, dtype: int64\n\n        If you want to adjust the start of the bins with an `offset` Timedelta, the two\n        following lines are equivalent:\n\n        >>> ts.resample('17min', origin='start').sum()\n        2000-10-01 23:30:00     9\n        2000-10-01 23:47:00    21\n        2000-10-02 00:04:00    54\n        2000-10-02 00:21:00    24\n        Freq: 17min, dtype: int64\n\n        >>> ts.resample('17min', offset='23h30min').sum()\n        2000-10-01 23:30:00     9\n        2000-10-01 23:47:00    21\n        2000-10-02 00:04:00    54\n        2000-10-02 00:21:00    24\n        Freq: 17min, dtype: int64\n\n        If you want to take the largest Timestamp as the end of the bins:\n\n        >>> ts.resample('17min', origin='end').sum()\n        2000-10-01 23:35:00     0\n        2000-10-01 23:52:00    18\n        2000-10-02 00:09:00    27\n        2000-10-02 00:26:00    63\n        Freq: 17min, dtype: int64\n\n        In contrast with the `start_day`, you can use `end_day` to take the ceiling\n        midnight of the largest Timestamp as the end of the bins and drop the bins\n        not containing data:\n\n        >>> ts.resample('17min', origin='end_day').sum()\n        2000-10-01 23:38:00     3\n        2000-10-01 23:55:00    15\n        2000-10-02 00:12:00    45\n        2000-10-02 00:29:00    45\n        Freq: 17min, dtype: int64\n        \"\"\"\n        from pandas.core.resample import get_resampler\n\n        if axis is not lib.no_default:\n            axis = self._get_axis_number(axis)\n            if axis == 1:\n                warnings.warn(\n                    \"DataFrame.resample with axis=1 is deprecated. Do \"\n                    \"`frame.T.resample(...)` without axis instead.\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n            else:\n                warnings.warn(\n                    f\"The 'axis' keyword in {type(self).__name__}.resample is \"\n                    \"deprecated and will be removed in a future version.\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n        else:\n            axis = 0\n\n        if kind is not lib.no_default:\n            # GH#55895\n            warnings.warn(\n                f\"The 'kind' keyword in {type(self).__name__}.resample is \"\n                \"deprecated and will be removed in a future version. \"\n                \"Explicitly cast the index to the desired type instead\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        else:\n            kind = None\n\n        if convention is not lib.no_default:\n            warnings.warn(\n                f\"The 'convention' keyword in {type(self).__name__}.resample is \"\n                \"deprecated and will be removed in a future version. \"\n                \"Explicitly cast PeriodIndex to DatetimeIndex before resampling \"\n                \"instead.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        else:\n            convention = \"start\"\n\n        return get_resampler(\n            cast(\"Series | DataFrame\", self),\n            freq=rule,\n            label=label,\n            closed=closed,\n            axis=axis,\n            kind=kind,\n            convention=convention,\n            key=on,\n            level=level,\n            origin=origin,\n            offset=offset,\n            group_keys=group_keys,\n        )\n\n    @final\n    def first(self, offset) -> Self:\n        \"\"\"\n        Select initial periods of time series data based on a date offset.\n\n        .. deprecated:: 2.1\n            :meth:`.first` is deprecated and will be removed in a future version.\n            Please create a mask and filter using `.loc` instead.\n\n        For a DataFrame with a sorted DatetimeIndex, this function can\n        select the first few rows based on a date offset.\n\n        Parameters\n        ----------\n        offset : str, DateOffset or dateutil.relativedelta\n            The offset length of the data that will be selected. For instance,\n            '1ME' will display all the rows having their index within the first month.\n\n        Returns\n        -------\n        Series or DataFrame\n            A subset of the caller.\n\n        Raises\n        ------\n        TypeError\n            If the index is not  a :class:`DatetimeIndex`\n\n        See Also\n        --------\n        last : Select final periods of time series based on a date offset.\n        at_time : Select values at a particular time of the day.\n        between_time : Select values between particular times of the day.\n\n        Examples\n        --------\n        >>> i = pd.date_range('2018-04-09', periods=4, freq='2D')\n        >>> ts = pd.DataFrame({'A': [1, 2, 3, 4]}, index=i)\n        >>> ts\n                    A\n        2018-04-09  1\n        2018-04-11  2\n        2018-04-13  3\n        2018-04-15  4\n\n        Get the rows for the first 3 days:\n\n        >>> ts.first('3D')\n                    A\n        2018-04-09  1\n        2018-04-11  2\n\n        Notice the data for 3 first calendar days were returned, not the first\n        3 days observed in the dataset, and therefore data for 2018-04-13 was\n        not returned.\n        \"\"\"\n        warnings.warn(\n            \"first is deprecated and will be removed in a future version. \"\n            \"Please create a mask and filter using `.loc` instead\",\n            FutureWarning,\n            stacklevel=find_stack_level(),\n        )\n        if not isinstance(self.index, DatetimeIndex):\n            raise TypeError(\"'first' only supports a DatetimeIndex index\")\n\n        if len(self.index) == 0:\n            return self.copy(deep=False)\n\n        offset = to_offset(offset)\n        if not isinstance(offset, Tick) and offset.is_on_offset(self.index[0]):\n            # GH#29623 if first value is end of period, remove offset with n = 1\n            #  before adding the real offset\n            end_date = end = self.index[0] - offset.base + offset\n        else:\n            end_date = end = self.index[0] + offset\n\n        # Tick-like, e.g. 3 weeks\n        if isinstance(offset, Tick) and end_date in self.index:\n            end = self.index.searchsorted(end_date, side=\"left\")\n            return self.iloc[:end]\n\n        return self.loc[:end]\n\n    @final\n    def last(self, offset) -> Self:\n        \"\"\"\n        Select final periods of time series data based on a date offset.\n\n        .. deprecated:: 2.1\n            :meth:`.last` is deprecated and will be removed in a future version.\n            Please create a mask and filter using `.loc` instead.\n\n        For a DataFrame with a sorted DatetimeIndex, this function\n        selects the last few rows based on a date offset.\n\n        Parameters\n        ----------\n        offset : str, DateOffset, dateutil.relativedelta\n            The offset length of the data that will be selected. For instance,\n            '3D' will display all the rows having their index within the last 3 days.\n\n        Returns\n        -------\n        Series or DataFrame\n            A subset of the caller.\n\n        Raises\n        ------\n        TypeError\n            If the index is not  a :class:`DatetimeIndex`\n\n        See Also\n        --------\n        first : Select initial periods of time series based on a date offset.\n        at_time : Select values at a particular time of the day.\n        between_time : Select values between particular times of the day.\n\n        Notes\n        -----\n        .. deprecated:: 2.1.0\n            Please create a mask and filter using `.loc` instead\n\n        Examples\n        --------\n        >>> i = pd.date_range('2018-04-09', periods=4, freq='2D')\n        >>> ts = pd.DataFrame({'A': [1, 2, 3, 4]}, index=i)\n        >>> ts\n                    A\n        2018-04-09  1\n        2018-04-11  2\n        2018-04-13  3\n        2018-04-15  4\n\n        Get the rows for the last 3 days:\n\n        >>> ts.last('3D')  # doctest: +SKIP\n                    A\n        2018-04-13  3\n        2018-04-15  4\n\n        Notice the data for 3 last calendar days were returned, not the last\n        3 observed days in the dataset, and therefore data for 2018-04-11 was\n        not returned.\n        \"\"\"\n        warnings.warn(\n            \"last is deprecated and will be removed in a future version. \"\n            \"Please create a mask and filter using `.loc` instead\",\n            FutureWarning,\n            stacklevel=find_stack_level(),\n        )\n\n        if not isinstance(self.index, DatetimeIndex):\n            raise TypeError(\"'last' only supports a DatetimeIndex index\")\n\n        if len(self.index) == 0:\n            return self.copy(deep=False)\n\n        offset = to_offset(offset)\n\n        start_date = self.index[-1] - offset\n        start = self.index.searchsorted(start_date, side=\"right\")\n        return self.iloc[start:]\n\n    @final\n    def rank(\n        self,\n        axis: Axis = 0,\n        method: Literal[\"average\", \"min\", \"max\", \"first\", \"dense\"] = \"average\",\n        numeric_only: bool_t = False,\n        na_option: Literal[\"keep\", \"top\", \"bottom\"] = \"keep\",\n        ascending: bool_t = True,\n        pct: bool_t = False,\n    ) -> Self:\n        \"\"\"\n        Compute numerical data ranks (1 through n) along axis.\n\n        By default, equal values are assigned a rank that is the average of the\n        ranks of those values.\n\n        Parameters\n        ----------\n        axis : {0 or 'index', 1 or 'columns'}, default 0\n            Index to direct ranking.\n            For `Series` this parameter is unused and defaults to 0.\n        method : {'average', 'min', 'max', 'first', 'dense'}, default 'average'\n            How to rank the group of records that have the same value (i.e. ties):\n\n            * average: average rank of the group\n            * min: lowest rank in the group\n            * max: highest rank in the group\n            * first: ranks assigned in order they appear in the array\n            * dense: like 'min', but rank always increases by 1 between groups.\n\n        numeric_only : bool, default False\n            For DataFrame objects, rank only numeric columns if set to True.\n\n            .. versionchanged:: 2.0.0\n                The default value of ``numeric_only`` is now ``False``.\n\n        na_option : {'keep', 'top', 'bottom'}, default 'keep'\n            How to rank NaN values:\n\n            * keep: assign NaN rank to NaN values\n            * top: assign lowest rank to NaN values\n            * bottom: assign highest rank to NaN values\n\n        ascending : bool, default True\n            Whether or not the elements should be ranked in ascending order.\n        pct : bool, default False\n            Whether or not to display the returned rankings in percentile\n            form.\n\n        Returns\n        -------\n        same type as caller\n            Return a Series or DataFrame with data ranks as values.\n\n        See Also\n        --------\n        core.groupby.DataFrameGroupBy.rank : Rank of values within each group.\n        core.groupby.SeriesGroupBy.rank : Rank of values within each group.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame(data={'Animal': ['cat', 'penguin', 'dog',\n        ...                                    'spider', 'snake'],\n        ...                         'Number_legs': [4, 2, 4, 8, np.nan]})\n        >>> df\n            Animal  Number_legs\n        0      cat          4.0\n        1  penguin          2.0\n        2      dog          4.0\n        3   spider          8.0\n        4    snake          NaN\n\n        Ties are assigned the mean of the ranks (by default) for the group.\n\n        >>> s = pd.Series(range(5), index=list(\"abcde\"))\n        >>> s[\"d\"] = s[\"b\"]\n        >>> s.rank()\n        a    1.0\n        b    2.5\n        c    4.0\n        d    2.5\n        e    5.0\n        dtype: float64\n\n        The following example shows how the method behaves with the above\n        parameters:\n\n        * default_rank: this is the default behaviour obtained without using\n          any parameter.\n        * max_rank: setting ``method = 'max'`` the records that have the\n          same values are ranked using the highest rank (e.g.: since 'cat'\n          and 'dog' are both in the 2nd and 3rd position, rank 3 is assigned.)\n        * NA_bottom: choosing ``na_option = 'bottom'``, if there are records\n          with NaN values they are placed at the bottom of the ranking.\n        * pct_rank: when setting ``pct = True``, the ranking is expressed as\n          percentile rank.\n\n        >>> df['default_rank'] = df['Number_legs'].rank()\n        >>> df['max_rank'] = df['Number_legs'].rank(method='max')\n        >>> df['NA_bottom'] = df['Number_legs'].rank(na_option='bottom')\n        >>> df['pct_rank'] = df['Number_legs'].rank(pct=True)\n        >>> df\n            Animal  Number_legs  default_rank  max_rank  NA_bottom  pct_rank\n        0      cat          4.0           2.5       3.0        2.5     0.625\n        1  penguin          2.0           1.0       1.0        1.0     0.250\n        2      dog          4.0           2.5       3.0        2.5     0.625\n        3   spider          8.0           4.0       4.0        4.0     1.000\n        4    snake          NaN           NaN       NaN        5.0       NaN\n        \"\"\"\n        axis_int = self._get_axis_number(axis)\n\n        if na_option not in {\"keep\", \"top\", \"bottom\"}:\n            msg = \"na_option must be one of 'keep', 'top', or 'bottom'\"\n            raise ValueError(msg)\n\n        def ranker(data):\n            if data.ndim == 2:\n                # i.e. DataFrame, we cast to ndarray\n                values = data.values\n            else:\n                # i.e. Series, can dispatch to EA\n                values = data._values\n\n            if isinstance(values, ExtensionArray):\n                ranks = values._rank(\n                    axis=axis_int,\n                    method=method,\n                    ascending=ascending,\n                    na_option=na_option,\n                    pct=pct,\n                )\n            else:\n                ranks = algos.rank(\n                    values,\n                    axis=axis_int,\n                    method=method,\n                    ascending=ascending,\n                    na_option=na_option,\n                    pct=pct,\n                )\n\n            ranks_obj = self._constructor(ranks, **data._construct_axes_dict())\n            return ranks_obj.__finalize__(self, method=\"rank\")\n\n        if numeric_only:\n            if self.ndim == 1 and not is_numeric_dtype(self.dtype):\n                # GH#47500\n                raise TypeError(\n                    \"Series.rank does not allow numeric_only=True with \"\n                    \"non-numeric dtype.\"\n                )\n            data = self._get_numeric_data()\n        else:\n            data = self\n\n        return ranker(data)\n\n    @doc(_shared_docs[\"compare\"], klass=_shared_doc_kwargs[\"klass\"])\n    def compare(\n        self,\n        other,\n        align_axis: Axis = 1,\n        keep_shape: bool_t = False,\n        keep_equal: bool_t = False,\n        result_names: Suffixes = (\"self\", \"other\"),\n    ):\n        if type(self) is not type(other):\n            cls_self, cls_other = type(self).__name__, type(other).__name__\n            raise TypeError(\n                f\"can only compare '{cls_self}' (not '{cls_other}') with '{cls_self}'\"\n            )\n\n        mask = ~((self == other) | (self.isna() & other.isna()))\n        mask.fillna(True, inplace=True)\n\n        if not keep_equal:\n            self = self.where(mask)\n            other = other.where(mask)\n\n        if not keep_shape:\n            if isinstance(self, ABCDataFrame):\n                cmask = mask.any()\n                rmask = mask.any(axis=1)\n                self = self.loc[rmask, cmask]\n                other = other.loc[rmask, cmask]\n            else:\n                self = self[mask]\n                other = other[mask]\n        if not isinstance(result_names, tuple):\n            raise TypeError(\n                f\"Passing 'result_names' as a {type(result_names)} is not \"\n                \"supported. Provide 'result_names' as a tuple instead.\"\n            )\n\n        if align_axis in (1, \"columns\"):  # This is needed for Series\n            axis = 1\n        else:\n            axis = self._get_axis_number(align_axis)\n\n        # error: List item 0 has incompatible type \"NDFrame\"; expected\n        #  \"Union[Series, DataFrame]\"\n        diff = concat(\n            [self, other],  # type: ignore[list-item]\n            axis=axis,\n            keys=result_names,\n        )\n\n        if axis >= self.ndim:\n            # No need to reorganize data if stacking on new axis\n            # This currently applies for stacking two Series on columns\n            return diff\n\n        ax = diff._get_axis(axis)\n        ax_names = np.array(ax.names)\n\n        # set index names to positions to avoid confusion\n        ax.names = np.arange(len(ax_names))\n\n        # bring self-other to inner level\n        order = list(range(1, ax.nlevels)) + [0]\n        if isinstance(diff, ABCDataFrame):\n            diff = diff.reorder_levels(order, axis=axis)\n        else:\n            diff = diff.reorder_levels(order)\n\n        # restore the index names in order\n        diff._get_axis(axis=axis).names = ax_names[order]\n\n        # reorder axis to keep things organized\n        indices = (\n            np.arange(diff.shape[axis]).reshape([2, diff.shape[axis] // 2]).T.flatten()\n        )\n        diff = diff.take(indices, axis=axis)\n\n        return diff\n\n    @final\n    @doc(\n        klass=_shared_doc_kwargs[\"klass\"],\n        axes_single_arg=_shared_doc_kwargs[\"axes_single_arg\"],\n    )\n    def align(\n        self,\n        other: NDFrameT,\n        join: AlignJoin = \"outer\",\n        axis: Axis | None = None,\n        level: Level | None = None,\n        copy: bool_t | None = None,\n        fill_value: Hashable | None = None,\n        method: FillnaOptions | None | lib.NoDefault = lib.no_default,\n        limit: int | None | lib.NoDefault = lib.no_default,\n        fill_axis: Axis | lib.NoDefault = lib.no_default,\n        broadcast_axis: Axis | None | lib.NoDefault = lib.no_default,\n    ) -> tuple[Self, NDFrameT]:\n        \"\"\"\n        Align two objects on their axes with the specified join method.\n\n        Join method is specified for each axis Index.\n\n        Parameters\n        ----------\n        other : DataFrame or Series\n        join : {{'outer', 'inner', 'left', 'right'}}, default 'outer'\n            Type of alignment to be performed.\n\n            * left: use only keys from left frame, preserve key order.\n            * right: use only keys from right frame, preserve key order.\n            * outer: use union of keys from both frames, sort keys lexicographically.\n            * inner: use intersection of keys from both frames,\n              preserve the order of the left keys.\n\n        axis : allowed axis of the other object, default None\n            Align on index (0), columns (1), or both (None).\n        level : int or level name, default None\n            Broadcast across a level, matching Index values on the\n            passed MultiIndex level.\n        copy : bool, default True\n            Always returns new objects. If copy=False and no reindexing is\n            required then original objects are returned.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n        fill_value : scalar, default np.nan\n            Value to use for missing values. Defaults to NaN, but can be any\n            \"compatible\" value.\n        method : {{'backfill', 'bfill', 'pad', 'ffill', None}}, default None\n            Method to use for filling holes in reindexed Series:\n\n            - pad / ffill: propagate last valid observation forward to next valid.\n            - backfill / bfill: use NEXT valid observation to fill gap.\n\n            .. deprecated:: 2.1\n\n        limit : int, default None\n            If method is specified, this is the maximum number of consecutive\n            NaN values to forward/backward fill. In other words, if there is\n            a gap with more than this number of consecutive NaNs, it will only\n            be partially filled. If method is not specified, this is the\n            maximum number of entries along the entire axis where NaNs will be\n            filled. Must be greater than 0 if not None.\n\n            .. deprecated:: 2.1\n\n        fill_axis : {axes_single_arg}, default 0\n            Filling axis, method and limit.\n\n            .. deprecated:: 2.1\n\n        broadcast_axis : {axes_single_arg}, default None\n            Broadcast values along this axis, if aligning two objects of\n            different dimensions.\n\n            .. deprecated:: 2.1\n\n        Returns\n        -------\n        tuple of ({klass}, type of other)\n            Aligned objects.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame(\n        ...     [[1, 2, 3, 4], [6, 7, 8, 9]], columns=[\"D\", \"B\", \"E\", \"A\"], index=[1, 2]\n        ... )\n        >>> other = pd.DataFrame(\n        ...     [[10, 20, 30, 40], [60, 70, 80, 90], [600, 700, 800, 900]],\n        ...     columns=[\"A\", \"B\", \"C\", \"D\"],\n        ...     index=[2, 3, 4],\n        ... )\n        >>> df\n           D  B  E  A\n        1  1  2  3  4\n        2  6  7  8  9\n        >>> other\n            A    B    C    D\n        2   10   20   30   40\n        3   60   70   80   90\n        4  600  700  800  900\n\n        Align on columns:\n\n        >>> left, right = df.align(other, join=\"outer\", axis=1)\n        >>> left\n           A  B   C  D  E\n        1  4  2 NaN  1  3\n        2  9  7 NaN  6  8\n        >>> right\n            A    B    C    D   E\n        2   10   20   30   40 NaN\n        3   60   70   80   90 NaN\n        4  600  700  800  900 NaN\n\n        We can also align on the index:\n\n        >>> left, right = df.align(other, join=\"outer\", axis=0)\n        >>> left\n            D    B    E    A\n        1  1.0  2.0  3.0  4.0\n        2  6.0  7.0  8.0  9.0\n        3  NaN  NaN  NaN  NaN\n        4  NaN  NaN  NaN  NaN\n        >>> right\n            A      B      C      D\n        1    NaN    NaN    NaN    NaN\n        2   10.0   20.0   30.0   40.0\n        3   60.0   70.0   80.0   90.0\n        4  600.0  700.0  800.0  900.0\n\n        Finally, the default `axis=None` will align on both index and columns:\n\n        >>> left, right = df.align(other, join=\"outer\", axis=None)\n        >>> left\n             A    B   C    D    E\n        1  4.0  2.0 NaN  1.0  3.0\n        2  9.0  7.0 NaN  6.0  8.0\n        3  NaN  NaN NaN  NaN  NaN\n        4  NaN  NaN NaN  NaN  NaN\n        >>> right\n               A      B      C      D   E\n        1    NaN    NaN    NaN    NaN NaN\n        2   10.0   20.0   30.0   40.0 NaN\n        3   60.0   70.0   80.0   90.0 NaN\n        4  600.0  700.0  800.0  900.0 NaN\n        \"\"\"\n        if (\n            method is not lib.no_default\n            or limit is not lib.no_default\n            or fill_axis is not lib.no_default\n        ):\n            # GH#51856\n            warnings.warn(\n                \"The 'method', 'limit', and 'fill_axis' keywords in \"\n                f\"{type(self).__name__}.align are deprecated and will be removed \"\n                \"in a future version. Call fillna directly on the returned objects \"\n                \"instead.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        if fill_axis is lib.no_default:\n            fill_axis = 0\n        if method is lib.no_default:\n            method = None\n        if limit is lib.no_default:\n            limit = None\n\n        if method is not None:\n            method = clean_fill_method(method)\n\n        if broadcast_axis is not lib.no_default:\n            # GH#51856\n            # TODO(3.0): enforcing this deprecation will close GH#13194\n            msg = (\n                f\"The 'broadcast_axis' keyword in {type(self).__name__}.align is \"\n                \"deprecated and will be removed in a future version.\"\n            )\n            if broadcast_axis is not None:\n                if self.ndim == 1 and other.ndim == 2:\n                    msg += (\n                        \" Use left = DataFrame({col: left for col in right.columns}, \"\n                        \"index=right.index) before calling `left.align(right)` instead.\"\n                    )\n                elif self.ndim == 2 and other.ndim == 1:\n                    msg += (\n                        \" Use right = DataFrame({col: right for col in left.columns}, \"\n                        \"index=left.index) before calling `left.align(right)` instead\"\n                    )\n            warnings.warn(msg, FutureWarning, stacklevel=find_stack_level())\n        else:\n            broadcast_axis = None\n\n        if broadcast_axis == 1 and self.ndim != other.ndim:\n            if isinstance(self, ABCSeries):\n                # this means other is a DataFrame, and we need to broadcast\n                # self\n                cons = self._constructor_expanddim\n                df = cons(\n                    {c: self for c in other.columns}, **other._construct_axes_dict()\n                )\n                # error: Incompatible return value type (got \"Tuple[DataFrame,\n                # DataFrame]\", expected \"Tuple[Self, NDFrameT]\")\n                return df._align_frame(  # type: ignore[return-value]\n                    other,  # type: ignore[arg-type]\n                    join=join,\n                    axis=axis,\n                    level=level,\n                    copy=copy,\n                    fill_value=fill_value,\n                    method=method,\n                    limit=limit,\n                    fill_axis=fill_axis,\n                )[:2]\n            elif isinstance(other, ABCSeries):\n                # this means self is a DataFrame, and we need to broadcast\n                # other\n                cons = other._constructor_expanddim\n                df = cons(\n                    {c: other for c in self.columns}, **self._construct_axes_dict()\n                )\n                # error: Incompatible return value type (got \"Tuple[NDFrameT,\n                # DataFrame]\", expected \"Tuple[Self, NDFrameT]\")\n                return self._align_frame(  # type: ignore[return-value]\n                    df,\n                    join=join,\n                    axis=axis,\n                    level=level,\n                    copy=copy,\n                    fill_value=fill_value,\n                    method=method,\n                    limit=limit,\n                    fill_axis=fill_axis,\n                )[:2]\n\n        _right: DataFrame | Series\n        if axis is not None:\n            axis = self._get_axis_number(axis)\n        if isinstance(other, ABCDataFrame):\n            left, _right, join_index = self._align_frame(\n                other,\n                join=join,\n                axis=axis,\n                level=level,\n                copy=copy,\n                fill_value=fill_value,\n                method=method,\n                limit=limit,\n                fill_axis=fill_axis,\n            )\n\n        elif isinstance(other, ABCSeries):\n            left, _right, join_index = self._align_series(\n                other,\n                join=join,\n                axis=axis,\n                level=level,\n                copy=copy,\n                fill_value=fill_value,\n                method=method,\n                limit=limit,\n                fill_axis=fill_axis,\n            )\n        else:  # pragma: no cover\n            raise TypeError(f\"unsupported type: {type(other)}\")\n\n        right = cast(NDFrameT, _right)\n        if self.ndim == 1 or axis == 0:\n            # If we are aligning timezone-aware DatetimeIndexes and the timezones\n            #  do not match, convert both to UTC.\n            if isinstance(left.index.dtype, DatetimeTZDtype):\n                if left.index.tz != right.index.tz:\n                    if join_index is not None:\n                        # GH#33671 copy to ensure we don't change the index on\n                        #  our original Series\n                        left = left.copy(deep=False)\n                        right = right.copy(deep=False)\n                        left.index = join_index\n                        right.index = join_index\n\n        left = left.__finalize__(self)\n        right = right.__finalize__(other)\n        return left, right\n\n    @final\n    def _align_frame(\n        self,\n        other: DataFrame,\n        join: AlignJoin = \"outer\",\n        axis: Axis | None = None,\n        level=None,\n        copy: bool_t | None = None,\n        fill_value=None,\n        method=None,\n        limit: int | None = None,\n        fill_axis: Axis = 0,\n    ) -> tuple[Self, DataFrame, Index | None]:\n        # defaults\n        join_index, join_columns = None, None\n        ilidx, iridx = None, None\n        clidx, cridx = None, None\n\n        is_series = isinstance(self, ABCSeries)\n\n        if (axis is None or axis == 0) and not self.index.equals(other.index):\n            join_index, ilidx, iridx = self.index.join(\n                other.index, how=join, level=level, return_indexers=True\n            )\n\n        if (\n            (axis is None or axis == 1)\n            and not is_series\n            and not self.columns.equals(other.columns)\n        ):\n            join_columns, clidx, cridx = self.columns.join(\n                other.columns, how=join, level=level, return_indexers=True\n            )\n\n        if is_series:\n            reindexers = {0: [join_index, ilidx]}\n        else:\n            reindexers = {0: [join_index, ilidx], 1: [join_columns, clidx]}\n\n        left = self._reindex_with_indexers(\n            reindexers, copy=copy, fill_value=fill_value, allow_dups=True\n        )\n        # other must be always DataFrame\n        right = other._reindex_with_indexers(\n            {0: [join_index, iridx], 1: [join_columns, cridx]},\n            copy=copy,\n            fill_value=fill_value,\n            allow_dups=True,\n        )\n\n        if method is not None:\n            left = left._pad_or_backfill(method, axis=fill_axis, limit=limit)\n            right = right._pad_or_backfill(method, axis=fill_axis, limit=limit)\n\n        return left, right, join_index\n\n    @final\n    def _align_series(\n        self,\n        other: Series,\n        join: AlignJoin = \"outer\",\n        axis: Axis | None = None,\n        level=None,\n        copy: bool_t | None = None,\n        fill_value=None,\n        method=None,\n        limit: int | None = None,\n        fill_axis: Axis = 0,\n    ) -> tuple[Self, Series, Index | None]:\n        is_series = isinstance(self, ABCSeries)\n        if copy and using_copy_on_write():\n            copy = False\n\n        if (not is_series and axis is None) or axis not in [None, 0, 1]:\n            raise ValueError(\"Must specify axis=0 or 1\")\n\n        if is_series and axis == 1:\n            raise ValueError(\"cannot align series to a series other than axis 0\")\n\n        # series/series compat, other must always be a Series\n        if not axis:\n            # equal\n            if self.index.equals(other.index):\n                join_index, lidx, ridx = None, None, None\n            else:\n                join_index, lidx, ridx = self.index.join(\n                    other.index, how=join, level=level, return_indexers=True\n                )\n\n            if is_series:\n                left = self._reindex_indexer(join_index, lidx, copy)\n            elif lidx is None or join_index is None:\n                left = self.copy(deep=copy)\n            else:\n                new_mgr = self._mgr.reindex_indexer(join_index, lidx, axis=1, copy=copy)\n                left = self._constructor_from_mgr(new_mgr, axes=new_mgr.axes)\n\n            right = other._reindex_indexer(join_index, ridx, copy)\n\n        else:\n            # one has > 1 ndim\n            fdata = self._mgr\n            join_index = self.axes[1]\n            lidx, ridx = None, None\n            if not join_index.equals(other.index):\n                join_index, lidx, ridx = join_index.join(\n                    other.index, how=join, level=level, return_indexers=True\n                )\n\n            if lidx is not None:\n                bm_axis = self._get_block_manager_axis(1)\n                fdata = fdata.reindex_indexer(join_index, lidx, axis=bm_axis)\n\n            if copy and fdata is self._mgr:\n                fdata = fdata.copy()\n\n            left = self._constructor_from_mgr(fdata, axes=fdata.axes)\n\n            if ridx is None:\n                right = other.copy(deep=copy)\n            else:\n                right = other.reindex(join_index, level=level)\n\n        # fill\n        fill_na = notna(fill_value) or (method is not None)\n        if fill_na:\n            fill_value, method = validate_fillna_kwargs(fill_value, method)\n            if method is not None:\n                left = left._pad_or_backfill(method, limit=limit, axis=fill_axis)\n                right = right._pad_or_backfill(method, limit=limit)\n            else:\n                left = left.fillna(fill_value, limit=limit, axis=fill_axis)\n                right = right.fillna(fill_value, limit=limit)\n\n        return left, right, join_index\n\n    @final\n    def _where(\n        self,\n        cond,\n        other=lib.no_default,\n        inplace: bool_t = False,\n        axis: Axis | None = None,\n        level=None,\n        warn: bool_t = True,\n    ):\n        \"\"\"\n        Equivalent to public method `where`, except that `other` is not\n        applied as a function even if callable. Used in __setitem__.\n        \"\"\"\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n\n        if axis is not None:\n            axis = self._get_axis_number(axis)\n\n        # align the cond to same shape as myself\n        cond = common.apply_if_callable(cond, self)\n        if isinstance(cond, NDFrame):\n            # CoW: Make sure reference is not kept alive\n            if cond.ndim == 1 and self.ndim == 2:\n                cond = cond._constructor_expanddim(\n                    {i: cond for i in range(len(self.columns))},\n                    copy=False,\n                )\n                cond.columns = self.columns\n            cond = cond.align(self, join=\"right\", copy=False)[0]\n        else:\n            if not hasattr(cond, \"shape\"):\n                cond = np.asanyarray(cond)\n            if cond.shape != self.shape:\n                raise ValueError(\"Array conditional must be same shape as self\")\n            cond = self._constructor(cond, **self._construct_axes_dict(), copy=False)\n\n        # make sure we are boolean\n        fill_value = bool(inplace)\n        with warnings.catch_warnings():\n            warnings.filterwarnings(\n                \"ignore\",\n                \"Downcasting object dtype arrays\",\n                category=FutureWarning,\n            )\n            cond = cond.fillna(fill_value)\n        cond = cond.infer_objects(copy=False)\n\n        msg = \"Boolean array expected for the condition, not {dtype}\"\n\n        if not cond.empty:\n            if not isinstance(cond, ABCDataFrame):\n                # This is a single-dimensional object.\n                if not is_bool_dtype(cond):\n                    raise ValueError(msg.format(dtype=cond.dtype))\n            else:\n                for _dt in cond.dtypes:\n                    if not is_bool_dtype(_dt):\n                        raise ValueError(msg.format(dtype=_dt))\n                if cond._mgr.any_extension_types:\n                    # GH51574: avoid object ndarray conversion later on\n                    cond = cond._constructor(\n                        cond.to_numpy(dtype=bool, na_value=fill_value),\n                        **cond._construct_axes_dict(),\n                    )\n        else:\n            # GH#21947 we have an empty DataFrame/Series, could be object-dtype\n            cond = cond.astype(bool)\n\n        cond = -cond if inplace else cond\n        cond = cond.reindex(self._info_axis, axis=self._info_axis_number, copy=False)\n\n        # try to align with other\n        if isinstance(other, NDFrame):\n            # align with me\n            if other.ndim <= self.ndim:\n                # CoW: Make sure reference is not kept alive\n                other = self.align(\n                    other,\n                    join=\"left\",\n                    axis=axis,\n                    level=level,\n                    fill_value=None,\n                    copy=False,\n                )[1]\n\n                # if we are NOT aligned, raise as we cannot where index\n                if axis is None and not other._indexed_same(self):\n                    raise InvalidIndexError\n\n                if other.ndim < self.ndim:\n                    # TODO(EA2D): avoid object-dtype cast in EA case GH#38729\n                    other = other._values\n                    if axis == 0:\n                        other = np.reshape(other, (-1, 1))\n                    elif axis == 1:\n                        other = np.reshape(other, (1, -1))\n\n                    other = np.broadcast_to(other, self.shape)\n\n            # slice me out of the other\n            else:\n                raise NotImplementedError(\n                    \"cannot align with a higher dimensional NDFrame\"\n                )\n\n        elif not isinstance(other, (MultiIndex, NDFrame)):\n            # mainly just catching Index here\n            other = extract_array(other, extract_numpy=True)\n\n        if isinstance(other, (np.ndarray, ExtensionArray)):\n            if other.shape != self.shape:\n                if self.ndim != 1:\n                    # In the ndim == 1 case we may have\n                    #  other length 1, which we treat as scalar (GH#2745, GH#4192)\n                    #  or len(other) == icond.sum(), which we treat like\n                    #  __setitem__ (GH#3235)\n                    raise ValueError(\n                        \"other must be the same shape as self when an ndarray\"\n                    )\n\n            # we are the same shape, so create an actual object for alignment\n            else:\n                other = self._constructor(\n                    other, **self._construct_axes_dict(), copy=False\n                )\n\n        if axis is None:\n            axis = 0\n\n        if self.ndim == getattr(other, \"ndim\", 0):\n            align = True\n        else:\n            align = self._get_axis_number(axis) == 1\n\n        if inplace:\n            # we may have different type blocks come out of putmask, so\n            # reconstruct the block manager\n\n            new_data = self._mgr.putmask(mask=cond, new=other, align=align, warn=warn)\n            result = self._constructor_from_mgr(new_data, axes=new_data.axes)\n            return self._update_inplace(result)\n\n        else:\n            new_data = self._mgr.where(\n                other=other,\n                cond=cond,\n                align=align,\n            )\n            result = self._constructor_from_mgr(new_data, axes=new_data.axes)\n            return result.__finalize__(self)\n\n    @overload\n    def where(\n        self,\n        cond,\n        other=...,\n        *,\n        inplace: Literal[False] = ...,\n        axis: Axis | None = ...,\n        level: Level = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def where(\n        self,\n        cond,\n        other=...,\n        *,\n        inplace: Literal[True],\n        axis: Axis | None = ...,\n        level: Level = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def where(\n        self,\n        cond,\n        other=...,\n        *,\n        inplace: bool_t = ...,\n        axis: Axis | None = ...,\n        level: Level = ...,\n    ) -> Self | None:\n        ...\n\n    @final\n    @doc(\n        klass=_shared_doc_kwargs[\"klass\"],\n        cond=\"True\",\n        cond_rev=\"False\",\n        name=\"where\",\n        name_other=\"mask\",\n    )\n    def where(\n        self,\n        cond,\n        other=np.nan,\n        *,\n        inplace: bool_t = False,\n        axis: Axis | None = None,\n        level: Level | None = None,\n    ) -> Self | None:\n        \"\"\"\n        Replace values where the condition is {cond_rev}.\n\n        Parameters\n        ----------\n        cond : bool {klass}, array-like, or callable\n            Where `cond` is {cond}, keep the original value. Where\n            {cond_rev}, replace with corresponding value from `other`.\n            If `cond` is callable, it is computed on the {klass} and\n            should return boolean {klass} or array. The callable must\n            not change input {klass} (though pandas doesn't check it).\n        other : scalar, {klass}, or callable\n            Entries where `cond` is {cond_rev} are replaced with\n            corresponding value from `other`.\n            If other is callable, it is computed on the {klass} and\n            should return scalar or {klass}. The callable must not\n            change input {klass} (though pandas doesn't check it).\n            If not specified, entries will be filled with the corresponding\n            NULL value (``np.nan`` for numpy dtypes, ``pd.NA`` for extension\n            dtypes).\n        inplace : bool, default False\n            Whether to perform the operation in place on the data.\n        axis : int, default None\n            Alignment axis if needed. For `Series` this parameter is\n            unused and defaults to 0.\n        level : int, default None\n            Alignment level if needed.\n\n        Returns\n        -------\n        Same type as caller or None if ``inplace=True``.\n\n        See Also\n        --------\n        :func:`DataFrame.{name_other}` : Return an object of same shape as\n            self.\n\n        Notes\n        -----\n        The {name} method is an application of the if-then idiom. For each\n        element in the calling DataFrame, if ``cond`` is ``{cond}`` the\n        element is used; otherwise the corresponding element from the DataFrame\n        ``other`` is used. If the axis of ``other`` does not align with axis of\n        ``cond`` {klass}, the misaligned index positions will be filled with\n        {cond_rev}.\n\n        The signature for :func:`DataFrame.where` differs from\n        :func:`numpy.where`. Roughly ``df1.where(m, df2)`` is equivalent to\n        ``np.where(m, df1, df2)``.\n\n        For further details and examples see the ``{name}`` documentation in\n        :ref:`indexing <indexing.where_mask>`.\n\n        The dtype of the object takes precedence. The fill value is casted to\n        the object's dtype, if this can be done losslessly.\n\n        Examples\n        --------\n        >>> s = pd.Series(range(5))\n        >>> s.where(s > 0)\n        0    NaN\n        1    1.0\n        2    2.0\n        3    3.0\n        4    4.0\n        dtype: float64\n        >>> s.mask(s > 0)\n        0    0.0\n        1    NaN\n        2    NaN\n        3    NaN\n        4    NaN\n        dtype: float64\n\n        >>> s = pd.Series(range(5))\n        >>> t = pd.Series([True, False])\n        >>> s.where(t, 99)\n        0     0\n        1    99\n        2    99\n        3    99\n        4    99\n        dtype: int64\n        >>> s.mask(t, 99)\n        0    99\n        1     1\n        2    99\n        3    99\n        4    99\n        dtype: int64\n\n        >>> s.where(s > 1, 10)\n        0    10\n        1    10\n        2    2\n        3    3\n        4    4\n        dtype: int64\n        >>> s.mask(s > 1, 10)\n        0     0\n        1     1\n        2    10\n        3    10\n        4    10\n        dtype: int64\n\n        >>> df = pd.DataFrame(np.arange(10).reshape(-1, 2), columns=['A', 'B'])\n        >>> df\n           A  B\n        0  0  1\n        1  2  3\n        2  4  5\n        3  6  7\n        4  8  9\n        >>> m = df % 3 == 0\n        >>> df.where(m, -df)\n           A  B\n        0  0 -1\n        1 -2  3\n        2 -4 -5\n        3  6 -7\n        4 -8  9\n        >>> df.where(m, -df) == np.where(m, df, -df)\n              A     B\n        0  True  True\n        1  True  True\n        2  True  True\n        3  True  True\n        4  True  True\n        >>> df.where(m, -df) == df.mask(~m, -df)\n              A     B\n        0  True  True\n        1  True  True\n        2  True  True\n        3  True  True\n        4  True  True\n        \"\"\"\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and hasattr(self, \"_cacher\"):\n                    # see https://github.com/pandas-dev/pandas/pull/56060#discussion_r1399245221\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        other = common.apply_if_callable(other, self)\n        return self._where(cond, other, inplace, axis, level)\n\n    @overload\n    def mask(\n        self,\n        cond,\n        other=...,\n        *,\n        inplace: Literal[False] = ...,\n        axis: Axis | None = ...,\n        level: Level = ...,\n    ) -> Self:\n        ...\n\n    @overload\n    def mask(\n        self,\n        cond,\n        other=...,\n        *,\n        inplace: Literal[True],\n        axis: Axis | None = ...,\n        level: Level = ...,\n    ) -> None:\n        ...\n\n    @overload\n    def mask(\n        self,\n        cond,\n        other=...,\n        *,\n        inplace: bool_t = ...,\n        axis: Axis | None = ...,\n        level: Level = ...,\n    ) -> Self | None:\n        ...\n\n    @final\n    @doc(\n        where,\n        klass=_shared_doc_kwargs[\"klass\"],\n        cond=\"False\",\n        cond_rev=\"True\",\n        name=\"mask\",\n        name_other=\"where\",\n    )\n    def mask(\n        self,\n        cond,\n        other=lib.no_default,\n        *,\n        inplace: bool_t = False,\n        axis: Axis | None = None,\n        level: Level | None = None,\n    ) -> Self | None:\n        inplace = validate_bool_kwarg(inplace, \"inplace\")\n        if inplace:\n            if not PYPY and using_copy_on_write():\n                if sys.getrefcount(self) <= REF_COUNT:\n                    warnings.warn(\n                        _chained_assignment_method_msg,\n                        ChainedAssignmentError,\n                        stacklevel=2,\n                    )\n            elif (\n                not PYPY\n                and not using_copy_on_write()\n                and self._is_view_after_cow_rules()\n            ):\n                ctr = sys.getrefcount(self)\n                ref_count = REF_COUNT\n                if isinstance(self, ABCSeries) and hasattr(self, \"_cacher\"):\n                    # see https://github.com/pandas-dev/pandas/pull/56060#discussion_r1399245221\n                    ref_count += 1\n                if ctr <= ref_count:\n                    warnings.warn(\n                        _chained_assignment_warning_method_msg,\n                        FutureWarning,\n                        stacklevel=2,\n                    )\n\n        cond = common.apply_if_callable(cond, self)\n        other = common.apply_if_callable(other, self)\n\n        # see gh-21891\n        if not hasattr(cond, \"__invert__\"):\n            cond = np.array(cond)\n\n        return self._where(\n            ~cond,\n            other=other,\n            inplace=inplace,\n            axis=axis,\n            level=level,\n        )\n\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def shift(\n        self,\n        periods: int | Sequence[int] = 1,\n        freq=None,\n        axis: Axis = 0,\n        fill_value: Hashable = lib.no_default,\n        suffix: str | None = None,\n    ) -> Self | DataFrame:\n        \"\"\"\n        Shift index by desired number of periods with an optional time `freq`.\n\n        When `freq` is not passed, shift the index without realigning the data.\n        If `freq` is passed (in this case, the index must be date or datetime,\n        or it will raise a `NotImplementedError`), the index will be\n        increased using the periods and the `freq`. `freq` can be inferred\n        when specified as \"infer\" as long as either freq or inferred_freq\n        attribute is set in the index.\n\n        Parameters\n        ----------\n        periods : int or Sequence\n            Number of periods to shift. Can be positive or negative.\n            If an iterable of ints, the data will be shifted once by each int.\n            This is equivalent to shifting by one value at a time and\n            concatenating all resulting frames. The resulting columns will have\n            the shift suffixed to their column names. For multiple periods,\n            axis must not be 1.\n        freq : DateOffset, tseries.offsets, timedelta, or str, optional\n            Offset to use from the tseries module or time rule (e.g. 'EOM').\n            If `freq` is specified then the index values are shifted but the\n            data is not realigned. That is, use `freq` if you would like to\n            extend the index when shifting and preserve the original data.\n            If `freq` is specified as \"infer\" then it will be inferred from\n            the freq or inferred_freq attributes of the index. If neither of\n            those attributes exist, a ValueError is thrown.\n        axis : {{0 or 'index', 1 or 'columns', None}}, default None\n            Shift direction. For `Series` this parameter is unused and defaults to 0.\n        fill_value : object, optional\n            The scalar value to use for newly introduced missing values.\n            the default depends on the dtype of `self`.\n            For numeric data, ``np.nan`` is used.\n            For datetime, timedelta, or period data, etc. :attr:`NaT` is used.\n            For extension dtypes, ``self.dtype.na_value`` is used.\n        suffix : str, optional\n            If str and periods is an iterable, this is added after the column\n            name and before the shift value for each shifted column name.\n\n        Returns\n        -------\n        {klass}\n            Copy of input object, shifted.\n\n        See Also\n        --------\n        Index.shift : Shift values of Index.\n        DatetimeIndex.shift : Shift values of DatetimeIndex.\n        PeriodIndex.shift : Shift values of PeriodIndex.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({{\"Col1\": [10, 20, 15, 30, 45],\n        ...                    \"Col2\": [13, 23, 18, 33, 48],\n        ...                    \"Col3\": [17, 27, 22, 37, 52]}},\n        ...                   index=pd.date_range(\"2020-01-01\", \"2020-01-05\"))\n        >>> df\n                    Col1  Col2  Col3\n        2020-01-01    10    13    17\n        2020-01-02    20    23    27\n        2020-01-03    15    18    22\n        2020-01-04    30    33    37\n        2020-01-05    45    48    52\n\n        >>> df.shift(periods=3)\n                    Col1  Col2  Col3\n        2020-01-01   NaN   NaN   NaN\n        2020-01-02   NaN   NaN   NaN\n        2020-01-03   NaN   NaN   NaN\n        2020-01-04  10.0  13.0  17.0\n        2020-01-05  20.0  23.0  27.0\n\n        >>> df.shift(periods=1, axis=\"columns\")\n                    Col1  Col2  Col3\n        2020-01-01   NaN    10    13\n        2020-01-02   NaN    20    23\n        2020-01-03   NaN    15    18\n        2020-01-04   NaN    30    33\n        2020-01-05   NaN    45    48\n\n        >>> df.shift(periods=3, fill_value=0)\n                    Col1  Col2  Col3\n        2020-01-01     0     0     0\n        2020-01-02     0     0     0\n        2020-01-03     0     0     0\n        2020-01-04    10    13    17\n        2020-01-05    20    23    27\n\n        >>> df.shift(periods=3, freq=\"D\")\n                    Col1  Col2  Col3\n        2020-01-04    10    13    17\n        2020-01-05    20    23    27\n        2020-01-06    15    18    22\n        2020-01-07    30    33    37\n        2020-01-08    45    48    52\n\n        >>> df.shift(periods=3, freq=\"infer\")\n                    Col1  Col2  Col3\n        2020-01-04    10    13    17\n        2020-01-05    20    23    27\n        2020-01-06    15    18    22\n        2020-01-07    30    33    37\n        2020-01-08    45    48    52\n\n        >>> df['Col1'].shift(periods=[0, 1, 2])\n                    Col1_0  Col1_1  Col1_2\n        2020-01-01      10     NaN     NaN\n        2020-01-02      20    10.0     NaN\n        2020-01-03      15    20.0    10.0\n        2020-01-04      30    15.0    20.0\n        2020-01-05      45    30.0    15.0\n        \"\"\"\n        axis = self._get_axis_number(axis)\n\n        if freq is not None and fill_value is not lib.no_default:\n            # GH#53832\n            warnings.warn(\n                \"Passing a 'freq' together with a 'fill_value' silently ignores \"\n                \"the fill_value and is deprecated. This will raise in a future \"\n                \"version.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n            fill_value = lib.no_default\n\n        if periods == 0:\n            return self.copy(deep=None)\n\n        if is_list_like(periods) and isinstance(self, ABCSeries):\n            return self.to_frame().shift(\n                periods=periods, freq=freq, axis=axis, fill_value=fill_value\n            )\n        periods = cast(int, periods)\n\n        if freq is None:\n            # when freq is None, data is shifted, index is not\n            axis = self._get_axis_number(axis)\n            assert axis == 0  # axis == 1 cases handled in DataFrame.shift\n            new_data = self._mgr.shift(periods=periods, fill_value=fill_value)\n            return self._constructor_from_mgr(\n                new_data, axes=new_data.axes\n            ).__finalize__(self, method=\"shift\")\n\n        return self._shift_with_freq(periods, axis, freq)\n\n    @final\n    def _shift_with_freq(self, periods: int, axis: int, freq) -> Self:\n        # see shift.__doc__\n        # when freq is given, index is shifted, data is not\n        index = self._get_axis(axis)\n\n        if freq == \"infer\":\n            freq = getattr(index, \"freq\", None)\n\n            if freq is None:\n                freq = getattr(index, \"inferred_freq\", None)\n\n            if freq is None:\n                msg = \"Freq was not set in the index hence cannot be inferred\"\n                raise ValueError(msg)\n\n        elif isinstance(freq, str):\n            is_period = isinstance(index, PeriodIndex)\n            freq = to_offset(freq, is_period=is_period)\n\n        if isinstance(index, PeriodIndex):\n            orig_freq = to_offset(index.freq)\n            if freq != orig_freq:\n                assert orig_freq is not None  # for mypy\n                raise ValueError(\n                    f\"Given freq {freq_to_period_freqstr(freq.n, freq.name)} \"\n                    f\"does not match PeriodIndex freq \"\n                    f\"{freq_to_period_freqstr(orig_freq.n, orig_freq.name)}\"\n                )\n            new_ax = index.shift(periods)\n        else:\n            new_ax = index.shift(periods, freq)\n\n        result = self.set_axis(new_ax, axis=axis)\n        return result.__finalize__(self, method=\"shift\")\n\n    @final\n    def truncate(\n        self,\n        before=None,\n        after=None,\n        axis: Axis | None = None,\n        copy: bool_t | None = None,\n    ) -> Self:\n        \"\"\"\n        Truncate a Series or DataFrame before and after some index value.\n\n        This is a useful shorthand for boolean indexing based on index\n        values above or below certain thresholds.\n\n        Parameters\n        ----------\n        before : date, str, int\n            Truncate all rows before this index value.\n        after : date, str, int\n            Truncate all rows after this index value.\n        axis : {0 or 'index', 1 or 'columns'}, optional\n            Axis to truncate. Truncates the index (rows) by default.\n            For `Series` this parameter is unused and defaults to 0.\n        copy : bool, default is True,\n            Return a copy of the truncated section.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n\n        Returns\n        -------\n        type of caller\n            The truncated Series or DataFrame.\n\n        See Also\n        --------\n        DataFrame.loc : Select a subset of a DataFrame by label.\n        DataFrame.iloc : Select a subset of a DataFrame by position.\n\n        Notes\n        -----\n        If the index being truncated contains only datetime values,\n        `before` and `after` may be specified as strings instead of\n        Timestamps.\n\n        Examples\n        --------\n        >>> df = pd.DataFrame({'A': ['a', 'b', 'c', 'd', 'e'],\n        ...                    'B': ['f', 'g', 'h', 'i', 'j'],\n        ...                    'C': ['k', 'l', 'm', 'n', 'o']},\n        ...                   index=[1, 2, 3, 4, 5])\n        >>> df\n           A  B  C\n        1  a  f  k\n        2  b  g  l\n        3  c  h  m\n        4  d  i  n\n        5  e  j  o\n\n        >>> df.truncate(before=2, after=4)\n           A  B  C\n        2  b  g  l\n        3  c  h  m\n        4  d  i  n\n\n        The columns of a DataFrame can be truncated.\n\n        >>> df.truncate(before=\"A\", after=\"B\", axis=\"columns\")\n           A  B\n        1  a  f\n        2  b  g\n        3  c  h\n        4  d  i\n        5  e  j\n\n        For Series, only rows can be truncated.\n\n        >>> df['A'].truncate(before=2, after=4)\n        2    b\n        3    c\n        4    d\n        Name: A, dtype: object\n\n        The index values in ``truncate`` can be datetimes or string\n        dates.\n\n        >>> dates = pd.date_range('2016-01-01', '2016-02-01', freq='s')\n        >>> df = pd.DataFrame(index=dates, data={'A': 1})\n        >>> df.tail()\n                             A\n        2016-01-31 23:59:56  1\n        2016-01-31 23:59:57  1\n        2016-01-31 23:59:58  1\n        2016-01-31 23:59:59  1\n        2016-02-01 00:00:00  1\n\n        >>> df.truncate(before=pd.Timestamp('2016-01-05'),\n        ...             after=pd.Timestamp('2016-01-10')).tail()\n                             A\n        2016-01-09 23:59:56  1\n        2016-01-09 23:59:57  1\n        2016-01-09 23:59:58  1\n        2016-01-09 23:59:59  1\n        2016-01-10 00:00:00  1\n\n        Because the index is a DatetimeIndex containing only dates, we can\n        specify `before` and `after` as strings. They will be coerced to\n        Timestamps before truncation.\n\n        >>> df.truncate('2016-01-05', '2016-01-10').tail()\n                             A\n        2016-01-09 23:59:56  1\n        2016-01-09 23:59:57  1\n        2016-01-09 23:59:58  1\n        2016-01-09 23:59:59  1\n        2016-01-10 00:00:00  1\n\n        Note that ``truncate`` assumes a 0 value for any unspecified time\n        component (midnight). This differs from partial string slicing, which\n        returns any partially matching dates.\n\n        >>> df.loc['2016-01-05':'2016-01-10', :].tail()\n                             A\n        2016-01-10 23:59:55  1\n        2016-01-10 23:59:56  1\n        2016-01-10 23:59:57  1\n        2016-01-10 23:59:58  1\n        2016-01-10 23:59:59  1\n        \"\"\"\n        if axis is None:\n            axis = 0\n        axis = self._get_axis_number(axis)\n        ax = self._get_axis(axis)\n\n        # GH 17935\n        # Check that index is sorted\n        if not ax.is_monotonic_increasing and not ax.is_monotonic_decreasing:\n            raise ValueError(\"truncate requires a sorted index\")\n\n        # if we have a date index, convert to dates, otherwise\n        # treat like a slice\n        if ax._is_all_dates:\n            from pandas.core.tools.datetimes import to_datetime\n\n            before = to_datetime(before)\n            after = to_datetime(after)\n\n        if before is not None and after is not None and before > after:\n            raise ValueError(f\"Truncate: {after} must be after {before}\")\n\n        if len(ax) > 1 and ax.is_monotonic_decreasing and ax.nunique() > 1:\n            before, after = after, before\n\n        slicer = [slice(None, None)] * self._AXIS_LEN\n        slicer[axis] = slice(before, after)\n        result = self.loc[tuple(slicer)]\n\n        if isinstance(ax, MultiIndex):\n            setattr(result, self._get_axis_name(axis), ax.truncate(before, after))\n\n        result = result.copy(deep=copy and not using_copy_on_write())\n\n        return result\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def tz_convert(\n        self, tz, axis: Axis = 0, level=None, copy: bool_t | None = None\n    ) -> Self:\n        \"\"\"\n        Convert tz-aware axis to target time zone.\n\n        Parameters\n        ----------\n        tz : str or tzinfo object or None\n            Target time zone. Passing ``None`` will convert to\n            UTC and remove the timezone information.\n        axis : {{0 or 'index', 1 or 'columns'}}, default 0\n            The axis to convert\n        level : int, str, default None\n            If axis is a MultiIndex, convert a specific level. Otherwise\n            must be None.\n        copy : bool, default True\n            Also make a copy of the underlying data.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n\n        Returns\n        -------\n        {klass}\n            Object with time zone converted axis.\n\n        Raises\n        ------\n        TypeError\n            If the axis is tz-naive.\n\n        Examples\n        --------\n        Change to another time zone:\n\n        >>> s = pd.Series(\n        ...     [1],\n        ...     index=pd.DatetimeIndex(['2018-09-15 01:30:00+02:00']),\n        ... )\n        >>> s.tz_convert('Asia/Shanghai')\n        2018-09-15 07:30:00+08:00    1\n        dtype: int64\n\n        Pass None to convert to UTC and get a tz-naive index:\n\n        >>> s = pd.Series([1],\n        ...               index=pd.DatetimeIndex(['2018-09-15 01:30:00+02:00']))\n        >>> s.tz_convert(None)\n        2018-09-14 23:30:00    1\n        dtype: int64\n        \"\"\"\n        axis = self._get_axis_number(axis)\n        ax = self._get_axis(axis)\n\n        def _tz_convert(ax, tz):\n            if not hasattr(ax, \"tz_convert\"):\n                if len(ax) > 0:\n                    ax_name = self._get_axis_name(axis)\n                    raise TypeError(\n                        f\"{ax_name} is not a valid DatetimeIndex or PeriodIndex\"\n                    )\n                ax = DatetimeIndex([], tz=tz)\n            else:\n                ax = ax.tz_convert(tz)\n            return ax\n\n        # if a level is given it must be a MultiIndex level or\n        # equivalent to the axis name\n        if isinstance(ax, MultiIndex):\n            level = ax._get_level_number(level)\n            new_level = _tz_convert(ax.levels[level], tz)\n            ax = ax.set_levels(new_level, level=level)\n        else:\n            if level not in (None, 0, ax.name):\n                raise ValueError(f\"The level {level} is not valid\")\n            ax = _tz_convert(ax, tz)\n\n        result = self.copy(deep=copy and not using_copy_on_write())\n        result = result.set_axis(ax, axis=axis, copy=False)\n        return result.__finalize__(self, method=\"tz_convert\")\n\n    @final\n    @doc(klass=_shared_doc_kwargs[\"klass\"])\n    def tz_localize(\n        self,\n        tz,\n        axis: Axis = 0,\n        level=None,\n        copy: bool_t | None = None,\n        ambiguous: TimeAmbiguous = \"raise\",\n        nonexistent: TimeNonexistent = \"raise\",\n    ) -> Self:\n        \"\"\"\n        Localize tz-naive index of a Series or DataFrame to target time zone.\n\n        This operation localizes the Index. To localize the values in a\n        timezone-naive Series, use :meth:`Series.dt.tz_localize`.\n\n        Parameters\n        ----------\n        tz : str or tzinfo or None\n            Time zone to localize. Passing ``None`` will remove the\n            time zone information and preserve local time.\n        axis : {{0 or 'index', 1 or 'columns'}}, default 0\n            The axis to localize\n        level : int, str, default None\n            If axis ia a MultiIndex, localize a specific level. Otherwise\n            must be None.\n        copy : bool, default True\n            Also make a copy of the underlying data.\n\n            .. note::\n                The `copy` keyword will change behavior in pandas 3.0.\n                `Copy-on-Write\n                <https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html>`__\n                will be enabled by default, which means that all methods with a\n                `copy` keyword will use a lazy copy mechanism to defer the copy and\n                ignore the `copy` keyword. The `copy` keyword will be removed in a\n                future version of pandas.\n\n                You can already get the future behavior and improvements through\n                enabling copy on write ``pd.options.mode.copy_on_write = True``\n        ambiguous : 'infer', bool-ndarray, 'NaT', default 'raise'\n            When clocks moved backward due to DST, ambiguous times may arise.\n            For example in Central European Time (UTC+01), when going from\n            03:00 DST to 02:00 non-DST, 02:30:00 local time occurs both at\n            00:30:00 UTC and at 01:30:00 UTC. In such a situation, the\n            `ambiguous` parameter dictates how ambiguous times should be\n            handled.\n\n            - 'infer' will attempt to infer fall dst-transition hours based on\n              order\n            - bool-ndarray where True signifies a DST time, False designates\n              a non-DST time (note that this flag is only applicable for\n              ambiguous times)\n            - 'NaT' will return NaT where there are ambiguous times\n            - 'raise' will raise an AmbiguousTimeError if there are ambiguous\n              times.\n        nonexistent : str, default 'raise'\n            A nonexistent time does not exist in a particular timezone\n            where clocks moved forward due to DST. Valid values are:\n\n            - 'shift_forward' will shift the nonexistent time forward to the\n              closest existing time\n            - 'shift_backward' will shift the nonexistent time backward to the\n              closest existing time\n            - 'NaT' will return NaT where there are nonexistent times\n            - timedelta objects will shift nonexistent times by the timedelta\n            - 'raise' will raise an NonExistentTimeError if there are\n              nonexistent times.\n\n        Returns\n        -------\n        {klass}\n            Same type as the input.\n\n        Raises\n        ------\n        TypeError\n            If the TimeSeries is tz-aware and tz is not None.\n\n        Examples\n        --------\n        Localize local times:\n\n        >>> s = pd.Series(\n        ...     [1],\n        ...     index=pd.DatetimeIndex(['2018-09-15 01:30:00']),\n        ... )\n        >>> s.tz_localize('CET')\n        2018-09-15 01:30:00+02:00    1\n        dtype: int64\n\n        Pass None to convert to tz-naive index and preserve local time:\n\n        >>> s = pd.Series([1],\n        ...               index=pd.DatetimeIndex(['2018-09-15 01:30:00+02:00']))\n        >>> s.tz_localize(None)\n        2018-09-15 01:30:00    1\n        dtype: int64\n\n        Be careful with DST changes. When there is sequential data, pandas\n        can infer the DST time:\n\n        >>> s = pd.Series(range(7),\n        ...               index=pd.DatetimeIndex(['2018-10-28 01:30:00',\n        ...                                       '2018-10-28 02:00:00',\n        ...                                       '2018-10-28 02:30:00',\n        ...                                       '2018-10-28 02:00:00',\n        ...                                       '2018-10-28 02:30:00',\n        ...                                       '2018-10-28 03:00:00',\n        ...                                       '2018-10-28 03:30:00']))\n        >>> s.tz_localize('CET', ambiguous='infer')\n        2018-10-28 01:30:00+02:00    0\n        2018-10-28 02:00:00+02:00    1\n        2018-10-28 02:30:00+02:00    2\n        2018-10-28 02:00:00+01:00    3\n        2018-10-28 02:30:00+01:00    4\n        2018-10-28 03:00:00+01:00    5\n        2018-10-28 03:30:00+01:00    6\n        dtype: int64\n\n        In some cases, inferring the DST is impossible. In such cases, you can\n        pass an ndarray to the ambiguous parameter to set the DST explicitly\n\n        >>> s = pd.Series(range(3),\n        ...               index=pd.DatetimeIndex(['2018-10-28 01:20:00',\n        ...                                       '2018-10-28 02:36:00',\n        ...                                       '2018-10-28 03:46:00']))\n        >>> s.tz_localize('CET', ambiguous=np.array([True, True, False]))\n        2018-10-28 01:20:00+02:00    0\n        2018-10-28 02:36:00+02:00    1\n        2018-10-28 03:46:00+01:00    2\n        dtype: int64\n\n        If the DST transition causes nonexistent times, you can shift these\n        dates forward or backward with a timedelta object or `'shift_forward'`\n        or `'shift_backward'`.\n\n        >>> s = pd.Series(range(2),\n        ...               index=pd.DatetimeIndex(['2015-03-29 02:30:00',\n        ...                                       '2015-03-29 03:30:00']))\n        >>> s.tz_localize('Europe/Warsaw', nonexistent='shift_forward')\n        2015-03-29 03:00:00+02:00    0\n        2015-03-29 03:30:00+02:00    1\n        dtype: int64\n        >>> s.tz_localize('Europe/Warsaw', nonexistent='shift_backward')\n        2015-03-29 01:59:59.999999999+01:00    0\n        2015-03-29 03:30:00+02:00              1\n        dtype: int64\n        >>> s.tz_localize('Europe/Warsaw', nonexistent=pd.Timedelta('1h'))\n        2015-03-29 03:30:00+02:00    0\n        2015-03-29 03:30:00+02:00    1\n        dtype: int64\n        \"\"\"\n        nonexistent_options = (\"raise\", \"NaT\", \"shift_forward\", \"shift_backward\")\n        if nonexistent not in nonexistent_options and not isinstance(\n            nonexistent, dt.timedelta\n        ):\n            raise ValueError(\n                \"The nonexistent argument must be one of 'raise', \"\n                \"'NaT', 'shift_forward', 'shift_backward' or \"\n                \"a timedelta object\"\n            )\n\n        axis = self._get_axis_number(axis)\n        ax = self._get_axis(axis)\n\n        def _tz_localize(ax, tz, ambiguous, nonexistent):\n            if not hasattr(ax, \"tz_localize\"):\n                if len(ax) > 0:\n                    ax_name = self._get_axis_name(axis)\n                    raise TypeError(\n                        f\"{ax_name} is not a valid DatetimeIndex or PeriodIndex\"\n                    )\n                ax = DatetimeIndex([], tz=tz)\n            else:\n                ax = ax.tz_localize(tz, ambiguous=ambiguous, nonexistent=nonexistent)\n            return ax\n\n        # if a level is given it must be a MultiIndex level or\n        # equivalent to the axis name\n        if isinstance(ax, MultiIndex):\n            level = ax._get_level_number(level)\n            new_level = _tz_localize(ax.levels[level], tz, ambiguous, nonexistent)\n            ax = ax.set_levels(new_level, level=level)\n        else:\n            if level not in (None, 0, ax.name):\n                raise ValueError(f\"The level {level} is not valid\")\n            ax = _tz_localize(ax, tz, ambiguous, nonexistent)\n\n        result = self.copy(deep=copy and not using_copy_on_write())\n        result = result.set_axis(ax, axis=axis, copy=False)\n        return result.__finalize__(self, method=\"tz_localize\")\n\n    # ----------------------------------------------------------------------\n    # Numeric Methods\n\n    @final\n    def describe(\n        self,\n        percentiles=None,\n        include=None,\n        exclude=None,\n    ) -> Self:\n        \"\"\"\n        Generate descriptive statistics.\n\n        Descriptive statistics include those that summarize the central\n        tendency, dispersion and shape of a\n        dataset's distribution, excluding ``NaN`` values.\n\n        Analyzes both numeric and object series, as well\n        as ``DataFrame`` column sets of mixed data types. The output\n        will vary depending on what is provided. Refer to the notes\n        below for more detail.\n\n        Parameters\n        ----------\n        percentiles : list-like of numbers, optional\n            The percentiles to include in the output. All should\n            fall between 0 and 1. The default is\n            ``[.25, .5, .75]``, which returns the 25th, 50th, and\n            75th percentiles.\n        include : 'all', list-like of dtypes or None (default), optional\n            A white list of data types to include in the result. Ignored\n            for ``Series``. Here are the options:\n\n            - 'all' : All columns of the input will be included in the output.\n            - A list-like of dtypes : Limits the results to the\n              provided data types.\n              To limit the result to numeric types submit\n              ``numpy.number``. To limit it instead to object columns submit\n              the ``numpy.object`` data type. Strings\n              can also be used in the style of\n              ``select_dtypes`` (e.g. ``df.describe(include=['O'])``). To\n              select pandas categorical columns, use ``'category'``\n            - None (default) : The result will include all numeric columns.\n        exclude : list-like of dtypes or None (default), optional,\n            A black list of data types to omit from the result. Ignored\n            for ``Series``. Here are the options:\n\n            - A list-like of dtypes : Excludes the provided data types\n              from the result. To exclude numeric types submit\n              ``numpy.number``. To exclude object columns submit the data\n              type ``numpy.object``. Strings can also be used in the style of\n              ``select_dtypes`` (e.g. ``df.describe(exclude=['O'])``). To\n              exclude pandas categorical columns, use ``'category'``\n            - None (default) : The result will exclude nothing.\n\n        Returns\n        -------\n        Series or DataFrame\n            Summary statistics of the Series or Dataframe provided.\n\n        See Also\n        --------\n        DataFrame.count: Count number of non-NA/null observations.\n        DataFrame.max: Maximum of the values in the object.\n        DataFrame.min: Minimum of the values in the object.\n        DataFrame.mean: Mean of the values.\n        DataFrame.std: Standard deviation of the observations.\n        DataFrame.select_dtypes: Subset of a DataFrame including/excluding\n            columns based on their dtype.\n\n        Notes\n        -----\n        For numeric data, the result's index will include ``count``,\n        ``mean``, ``std``, ``min``, ``max`` as well as lower, ``50`` and\n        upper percentiles. By default the lower percentile is ``25`` and the\n        upper percentile is ``75``. The ``50`` percentile is the\n        same as the median.\n\n        For object data (e.g. strings or timestamps), the result's index\n        will include ``count``, ``unique``, ``top``, and ``freq``. The ``top``\n        is the most common value. The ``freq`` is the most common value's\n        frequency. Timestamps also include the ``first`` and ``last`` items.\n\n        If multiple object values have the highest count, then the\n        ``count`` and ``top`` results will be arbitrarily chosen from\n        among those with the highest count.\n\n        For mixed data types provided via a ``DataFrame``, the default is to\n        return only an analysis of numeric columns. If the dataframe consists\n        only of object and categorical data without any numeric columns, the\n        default is to return an analysis of both the object and categorical\n        columns. If ``include='all'`` is provided as an option, the result\n        will include a union of attributes of each type.\n\n        The `include` and `exclude` parameters can be used to limit\n        which columns in a ``DataFrame`` are analyzed for the output.\n        The parameters are ignored when analyzing a ``Series``.\n\n        Examples\n        --------\n        Describing a numeric ``Series``.\n\n        >>> s = pd.Series([1, 2, 3])\n        >>> s.describe()\n        count    3.0\n        mean     2.0\n        std      1.0\n        min      1.0\n        25%      1.5\n        50%      2.0\n        75%      2.5\n        max      3.0\n        dtype: float64\n\n        Describing a categorical ``Series``.\n\n        >>> s = pd.Series(['a', 'a', 'b', 'c'])\n        >>> s.describe()\n        count     4\n        unique    3\n        top       a\n        freq      2\n        dtype: object\n\n        Describing a timestamp ``Series``.\n\n        >>> s = pd.Series([\n        ...     np.datetime64(\"2000-01-01\"),\n        ...     np.datetime64(\"2010-01-01\"),\n        ...     np.datetime64(\"2010-01-01\")\n        ... ])\n        >>> s.describe()\n        count                      3\n        mean     2006-09-01 08:00:00\n        min      2000-01-01 00:00:00\n        25%      2004-12-31 12:00:00\n        50%      2010-01-01 00:00:00\n        75%      2010-01-01 00:00:00\n        max      2010-01-01 00:00:00\n        dtype: object\n\n        Describing a ``DataFrame``. By default only numeric fields\n        are returned.\n\n        >>> df = pd.DataFrame({'categorical': pd.Categorical(['d', 'e', 'f']),\n        ...                    'numeric': [1, 2, 3],\n        ...                    'object': ['a', 'b', 'c']\n        ...                    })\n        >>> df.describe()\n               numeric\n        count      3.0\n        mean       2.0\n        std        1.0\n        min        1.0\n        25%        1.5\n        50%        2.0\n        75%        2.5\n        max        3.0\n\n        Describing all columns of a ``DataFrame`` regardless of data type.\n\n        >>> df.describe(include='all')  # doctest: +SKIP\n               categorical  numeric object\n        count            3      3.0      3\n        unique           3      NaN      3\n        top              f      NaN      a\n        freq             1      NaN      1\n        mean           NaN      2.0    NaN\n        std            NaN      1.0    NaN\n        min            NaN      1.0    NaN\n        25%            NaN      1.5    NaN\n        50%            NaN      2.0    NaN\n        75%            NaN      2.5    NaN\n        max            NaN      3.0    NaN\n\n        Describing a column from a ``DataFrame`` by accessing it as\n        an attribute.\n\n        >>> df.numeric.describe()\n        count    3.0\n        mean     2.0\n        std      1.0\n        min      1.0\n        25%      1.5\n        50%      2.0\n        75%      2.5\n        max      3.0\n        Name: numeric, dtype: float64\n\n        Including only numeric columns in a ``DataFrame`` description.\n\n        >>> df.describe(include=[np.number])\n               numeric\n        count      3.0\n        mean       2.0\n        std        1.0\n        min        1.0\n        25%        1.5\n        50%        2.0\n        75%        2.5\n        max        3.0\n\n        Including only string columns in a ``DataFrame`` description.\n\n        >>> df.describe(include=[object])  # doctest: +SKIP\n               object\n        count       3\n        unique      3\n        top         a\n        freq        1\n\n        Including only categorical columns from a ``DataFrame`` description.\n\n        >>> df.describe(include=['category'])\n               categorical\n        count            3\n        unique           3\n        top              d\n        freq             1\n\n        Excluding numeric columns from a ``DataFrame`` description.\n\n        >>> df.describe(exclude=[np.number])  # doctest: +SKIP\n               categorical object\n        count            3      3\n        unique           3      3\n        top              f      a\n        freq             1      1\n\n        Excluding object columns from a ``DataFrame`` description.\n\n        >>> df.describe(exclude=[object])  # doctest: +SKIP\n               categorical  numeric\n        count            3      3.0\n        unique           3      NaN\n        top              f      NaN\n        freq             1      NaN\n        mean           NaN      2.0\n        std            NaN      1.0\n        min            NaN      1.0\n        25%            NaN      1.5\n        50%            NaN      2.0\n        75%            NaN      2.5\n        max            NaN      3.0\n        \"\"\"\n        return describe_ndframe(\n            obj=self,\n            include=include,\n            exclude=exclude,\n            percentiles=percentiles,\n        ).__finalize__(self, method=\"describe\")\n\n    @final\n    def pct_change(\n        self,\n        periods: int = 1,\n        fill_method: FillnaOptions | None | lib.NoDefault = lib.no_default,\n        limit: int | None | lib.NoDefault = lib.no_default,\n        freq=None,\n        **kwargs,\n    ) -> Self:\n        \"\"\"\n        Fractional change between the current and a prior element.\n\n        Computes the fractional change from the immediately previous row by\n        default. This is useful in comparing the fraction of change in a time\n        series of elements.\n\n        .. note::\n\n            Despite the name of this method, it calculates fractional change\n            (also known as per unit change or relative change) and not\n            percentage change. If you need the percentage change, multiply\n            these values by 100.\n\n        Parameters\n        ----------\n        periods : int, default 1\n            Periods to shift for forming percent change.\n        fill_method : {'backfill', 'bfill', 'pad', 'ffill', None}, default 'pad'\n            How to handle NAs **before** computing percent changes.\n\n            .. deprecated:: 2.1\n                All options of `fill_method` are deprecated except `fill_method=None`.\n\n        limit : int, default None\n            The number of consecutive NAs to fill before stopping.\n\n            .. deprecated:: 2.1\n\n        freq : DateOffset, timedelta, or str, optional\n            Increment to use from time series API (e.g. 'ME' or BDay()).\n        **kwargs\n            Additional keyword arguments are passed into\n            `DataFrame.shift` or `Series.shift`.\n\n        Returns\n        -------\n        Series or DataFrame\n            The same type as the calling object.\n\n        See Also\n        --------\n        Series.diff : Compute the difference of two elements in a Series.\n        DataFrame.diff : Compute the difference of two elements in a DataFrame.\n        Series.shift : Shift the index by some number of periods.\n        DataFrame.shift : Shift the index by some number of periods.\n\n        Examples\n        --------\n        **Series**\n\n        >>> s = pd.Series([90, 91, 85])\n        >>> s\n        0    90\n        1    91\n        2    85\n        dtype: int64\n\n        >>> s.pct_change()\n        0         NaN\n        1    0.011111\n        2   -0.065934\n        dtype: float64\n\n        >>> s.pct_change(periods=2)\n        0         NaN\n        1         NaN\n        2   -0.055556\n        dtype: float64\n\n        See the percentage change in a Series where filling NAs with last\n        valid observation forward to next valid.\n\n        >>> s = pd.Series([90, 91, None, 85])\n        >>> s\n        0    90.0\n        1    91.0\n        2     NaN\n        3    85.0\n        dtype: float64\n\n        >>> s.ffill().pct_change()\n        0         NaN\n        1    0.011111\n        2    0.000000\n        3   -0.065934\n        dtype: float64\n\n        **DataFrame**\n\n        Percentage change in French franc, Deutsche Mark, and Italian lira from\n        1980-01-01 to 1980-03-01.\n\n        >>> df = pd.DataFrame({\n        ...     'FR': [4.0405, 4.0963, 4.3149],\n        ...     'GR': [1.7246, 1.7482, 1.8519],\n        ...     'IT': [804.74, 810.01, 860.13]},\n        ...     index=['1980-01-01', '1980-02-01', '1980-03-01'])\n        >>> df\n                        FR      GR      IT\n        1980-01-01  4.0405  1.7246  804.74\n        1980-02-01  4.0963  1.7482  810.01\n        1980-03-01  4.3149  1.8519  860.13\n\n        >>> df.pct_change()\n                          FR        GR        IT\n        1980-01-01       NaN       NaN       NaN\n        1980-02-01  0.013810  0.013684  0.006549\n        1980-03-01  0.053365  0.059318  0.061876\n\n        Percentage of change in GOOG and APPL stock volume. Shows computing\n        the percentage change between columns.\n\n        >>> df = pd.DataFrame({\n        ...     '2016': [1769950, 30586265],\n        ...     '2015': [1500923, 40912316],\n        ...     '2014': [1371819, 41403351]},\n        ...     index=['GOOG', 'APPL'])\n        >>> df\n                  2016      2015      2014\n        GOOG   1769950   1500923   1371819\n        APPL  30586265  40912316  41403351\n\n        >>> df.pct_change(axis='columns', periods=-1)\n                  2016      2015  2014\n        GOOG  0.179241  0.094112   NaN\n        APPL -0.252395 -0.011860   NaN\n        \"\"\"\n        # GH#53491\n        if fill_method not in (lib.no_default, None) or limit is not lib.no_default:\n            warnings.warn(\n                \"The 'fill_method' keyword being not None and the 'limit' keyword in \"\n                f\"{type(self).__name__}.pct_change are deprecated and will be removed \"\n                \"in a future version. Either fill in any non-leading NA values prior \"\n                \"to calling pct_change or specify 'fill_method=None' to not fill NA \"\n                \"values.\",\n                FutureWarning,\n                stacklevel=find_stack_level(),\n            )\n        if fill_method is lib.no_default:\n            if limit is lib.no_default:\n                cols = self.items() if self.ndim == 2 else [(None, self)]\n                for _, col in cols:\n                    mask = col.isna().values\n                    mask = mask[np.argmax(~mask) :]\n                    if mask.any():\n                        warnings.warn(\n                            \"The default fill_method='pad' in \"\n                            f\"{type(self).__name__}.pct_change is deprecated and will \"\n                            \"be removed in a future version. Either fill in any \"\n                            \"non-leading NA values prior to calling pct_change or \"\n                            \"specify 'fill_method=None' to not fill NA values.\",\n                            FutureWarning,\n                            stacklevel=find_stack_level(),\n                        )\n                        break\n            fill_method = \"pad\"\n        if limit is lib.no_default:\n            limit = None\n\n        axis = self._get_axis_number(kwargs.pop(\"axis\", \"index\"))\n        if fill_method is None:\n            data = self\n        else:\n            data = self._pad_or_backfill(fill_method, axis=axis, limit=limit)\n\n        shifted = data.shift(periods=periods, freq=freq, axis=axis, **kwargs)\n        # Unsupported left operand type for / (\"Self\")\n        rs = data / shifted - 1  # type: ignore[operator]\n        if freq is not None:\n            # Shift method is implemented differently when freq is not None\n            # We want to restore the original index\n            rs = rs.loc[~rs.index.duplicated()]\n            rs = rs.reindex_like(data)\n        return rs.__finalize__(self, method=\"pct_change\")\n\n    @final\n    def _logical_func(\n        self,\n        name: str,\n        func,\n        axis: Axis | None = 0,\n        bool_only: bool_t = False,\n        skipna: bool_t = True,\n        **kwargs,\n    ) -> Series | bool_t:\n        nv.validate_logical_func((), kwargs, fname=name)\n        validate_bool_kwarg(skipna, \"skipna\", none_allowed=False)\n\n        if self.ndim > 1 and axis is None:\n            # Reduce along one dimension then the other, to simplify DataFrame._reduce\n            res = self._logical_func(\n                name, func, axis=0, bool_only=bool_only, skipna=skipna, **kwargs\n            )\n            # error: Item \"bool\" of \"Series | bool\" has no attribute \"_logical_func\"\n            return res._logical_func(  # type: ignore[union-attr]\n                name, func, skipna=skipna, **kwargs\n            )\n        elif axis is None:\n            axis = 0\n\n        if (\n            self.ndim > 1\n            and axis == 1\n            and len(self._mgr.arrays) > 1\n            # TODO(EA2D): special-case not needed\n            and all(x.ndim == 2 for x in self._mgr.arrays)\n            and not kwargs\n        ):\n            # Fastpath avoiding potentially expensive transpose\n            obj = self\n            if bool_only:\n                obj = self._get_bool_data()\n            return obj._reduce_axis1(name, func, skipna=skipna)\n\n        return self._reduce(\n            func,\n            name=name,\n            axis=axis,\n            skipna=skipna,\n            numeric_only=bool_only,\n            filter_type=\"bool\",\n        )\n\n    def any(\n        self,\n        axis: Axis | None = 0,\n        bool_only: bool_t = False,\n        skipna: bool_t = True,\n        **kwargs,\n    ) -> Series | bool_t:\n        return self._logical_func(\n            \"any\", nanops.nanany, axis, bool_only, skipna, **kwargs\n        )\n\n    def all(\n        self,\n        axis: Axis = 0,\n        bool_only: bool_t = False,\n        skipna: bool_t = True,\n        **kwargs,\n    ) -> Series | bool_t:\n        return self._logical_func(\n            \"all\", nanops.nanall, axis, bool_only, skipna, **kwargs\n        )\n\n    @final\n    def _accum_func(\n        self,\n        name: str,\n        func,\n        axis: Axis | None = None,\n        skipna: bool_t = True,\n        *args,\n        **kwargs,\n    ):\n        skipna = nv.validate_cum_func_with_skipna(skipna, args, kwargs, name)\n        if axis is None:\n            axis = 0\n        else:\n            axis = self._get_axis_number(axis)\n\n        if axis == 1:\n            return self.T._accum_func(\n                name, func, axis=0, skipna=skipna, *args, **kwargs  # noqa: B026\n            ).T\n\n        def block_accum_func(blk_values):\n            values = blk_values.T if hasattr(blk_values, \"T\") else blk_values\n\n            result: np.ndarray | ExtensionArray\n            if isinstance(values, ExtensionArray):\n                result = values._accumulate(name, skipna=skipna, **kwargs)\n            else:\n                result = nanops.na_accum_func(values, func, skipna=skipna)\n\n            result = result.T if hasattr(result, \"T\") else result\n            return result\n\n        result = self._mgr.apply(block_accum_func)\n\n        return self._constructor_from_mgr(result, axes=result.axes).__finalize__(\n            self, method=name\n        )\n\n    def cummax(self, axis: Axis | None = None, skipna: bool_t = True, *args, **kwargs):\n        return self._accum_func(\n            \"cummax\", np.maximum.accumulate, axis, skipna, *args, **kwargs\n        )\n\n    def cummin(self, axis: Axis | None = None, skipna: bool_t = True, *args, **kwargs):\n        return self._accum_func(\n            \"cummin\", np.minimum.accumulate, axis, skipna, *args, **kwargs\n        )\n\n    def cumsum(self, axis: Axis | None = None, skipna: bool_t = True, *args, **kwargs):\n        return self._accum_func(\"cumsum\", np.cumsum, axis, skipna, *args, **kwargs)\n\n    def cumprod(self, axis: Axis | None = None, skipna: bool_t = True, *args, **kwargs):\n        return self._accum_func(\"cumprod\", np.cumprod, axis, skipna, *args, **kwargs)\n\n    @final\n    def _stat_function_ddof(\n        self,\n        name: str,\n        func,\n        axis: Axis | None | lib.NoDefault = lib.no_default,\n        skipna: bool_t = True,\n        ddof: int = 1,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        nv.validate_stat_ddof_func((), kwargs, fname=name)\n        validate_bool_kwarg(skipna, \"skipna\", none_allowed=False)\n\n        if axis is None:\n            if self.ndim > 1:\n                warnings.warn(\n                    f\"The behavior of {type(self).__name__}.{name} with axis=None \"\n                    \"is deprecated, in a future version this will reduce over both \"\n                    \"axes and return a scalar. To retain the old behavior, pass \"\n                    \"axis=0 (or do not pass axis)\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n            axis = 0\n        elif axis is lib.no_default:\n            axis = 0\n\n        return self._reduce(\n            func, name, axis=axis, numeric_only=numeric_only, skipna=skipna, ddof=ddof\n        )\n\n    def sem(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        ddof: int = 1,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        return self._stat_function_ddof(\n            \"sem\", nanops.nansem, axis, skipna, ddof, numeric_only, **kwargs\n        )\n\n    def var(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        ddof: int = 1,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        return self._stat_function_ddof(\n            \"var\", nanops.nanvar, axis, skipna, ddof, numeric_only, **kwargs\n        )\n\n    def std(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        ddof: int = 1,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        return self._stat_function_ddof(\n            \"std\", nanops.nanstd, axis, skipna, ddof, numeric_only, **kwargs\n        )\n\n    @final\n    def _stat_function(\n        self,\n        name: str,\n        func,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ):\n        assert name in [\"median\", \"mean\", \"min\", \"max\", \"kurt\", \"skew\"], name\n        nv.validate_func(name, (), kwargs)\n\n        validate_bool_kwarg(skipna, \"skipna\", none_allowed=False)\n\n        return self._reduce(\n            func, name=name, axis=axis, skipna=skipna, numeric_only=numeric_only\n        )\n\n    def min(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ):\n        return self._stat_function(\n            \"min\",\n            nanops.nanmin,\n            axis,\n            skipna,\n            numeric_only,\n            **kwargs,\n        )\n\n    def max(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ):\n        return self._stat_function(\n            \"max\",\n            nanops.nanmax,\n            axis,\n            skipna,\n            numeric_only,\n            **kwargs,\n        )\n\n    def mean(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        return self._stat_function(\n            \"mean\", nanops.nanmean, axis, skipna, numeric_only, **kwargs\n        )\n\n    def median(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        return self._stat_function(\n            \"median\", nanops.nanmedian, axis, skipna, numeric_only, **kwargs\n        )\n\n    def skew(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        return self._stat_function(\n            \"skew\", nanops.nanskew, axis, skipna, numeric_only, **kwargs\n        )\n\n    def kurt(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        **kwargs,\n    ) -> Series | float:\n        return self._stat_function(\n            \"kurt\", nanops.nankurt, axis, skipna, numeric_only, **kwargs\n        )\n\n    kurtosis = kurt\n\n    @final\n    def _min_count_stat_function(\n        self,\n        name: str,\n        func,\n        axis: Axis | None | lib.NoDefault = lib.no_default,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        min_count: int = 0,\n        **kwargs,\n    ):\n        assert name in [\"sum\", \"prod\"], name\n        nv.validate_func(name, (), kwargs)\n\n        validate_bool_kwarg(skipna, \"skipna\", none_allowed=False)\n\n        if axis is None:\n            if self.ndim > 1:\n                warnings.warn(\n                    f\"The behavior of {type(self).__name__}.{name} with axis=None \"\n                    \"is deprecated, in a future version this will reduce over both \"\n                    \"axes and return a scalar. To retain the old behavior, pass \"\n                    \"axis=0 (or do not pass axis)\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n            axis = 0\n        elif axis is lib.no_default:\n            axis = 0\n\n        return self._reduce(\n            func,\n            name=name,\n            axis=axis,\n            skipna=skipna,\n            numeric_only=numeric_only,\n            min_count=min_count,\n        )\n\n    def sum(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        min_count: int = 0,\n        **kwargs,\n    ):\n        return self._min_count_stat_function(\n            \"sum\", nanops.nansum, axis, skipna, numeric_only, min_count, **kwargs\n        )\n\n    def prod(\n        self,\n        axis: Axis | None = 0,\n        skipna: bool_t = True,\n        numeric_only: bool_t = False,\n        min_count: int = 0,\n        **kwargs,\n    ):\n        return self._min_count_stat_function(\n            \"prod\",\n            nanops.nanprod,\n            axis,\n            skipna,\n            numeric_only,\n            min_count,\n            **kwargs,\n        )\n\n    product = prod\n\n    @final\n    @doc(Rolling)\n    def rolling(\n        self,\n        window: int | dt.timedelta | str | BaseOffset | BaseIndexer,\n        min_periods: int | None = None,\n        center: bool_t = False,\n        win_type: str | None = None,\n        on: str | None = None,\n        axis: Axis | lib.NoDefault = lib.no_default,\n        closed: IntervalClosedType | None = None,\n        step: int | None = None,\n        method: str = \"single\",\n    ) -> Window | Rolling:\n        if axis is not lib.no_default:\n            axis = self._get_axis_number(axis)\n            name = \"rolling\"\n            if axis == 1:\n                warnings.warn(\n                    f\"Support for axis=1 in {type(self).__name__}.{name} is \"\n                    \"deprecated and will be removed in a future version. \"\n                    f\"Use obj.T.{name}(...) instead\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n            else:\n                warnings.warn(\n                    f\"The 'axis' keyword in {type(self).__name__}.{name} is \"\n                    \"deprecated and will be removed in a future version. \"\n                    \"Call the method without the axis keyword instead.\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n        else:\n            axis = 0\n\n        if win_type is not None:\n            return Window(\n                self,\n                window=window,\n                min_periods=min_periods,\n                center=center,\n                win_type=win_type,\n                on=on,\n                axis=axis,\n                closed=closed,\n                step=step,\n                method=method,\n            )\n\n        return Rolling(\n            self,\n            window=window,\n            min_periods=min_periods,\n            center=center,\n            win_type=win_type,\n            on=on,\n            axis=axis,\n            closed=closed,\n            step=step,\n            method=method,\n        )\n\n    @final\n    @doc(Expanding)\n    def expanding(\n        self,\n        min_periods: int = 1,\n        axis: Axis | lib.NoDefault = lib.no_default,\n        method: Literal[\"single\", \"table\"] = \"single\",\n    ) -> Expanding:\n        if axis is not lib.no_default:\n            axis = self._get_axis_number(axis)\n            name = \"expanding\"\n            if axis == 1:\n                warnings.warn(\n                    f\"Support for axis=1 in {type(self).__name__}.{name} is \"\n                    \"deprecated and will be removed in a future version. \"\n                    f\"Use obj.T.{name}(...) instead\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n            else:\n                warnings.warn(\n                    f\"The 'axis' keyword in {type(self).__name__}.{name} is \"\n                    \"deprecated and will be removed in a future version. \"\n                    \"Call the method without the axis keyword instead.\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n        else:\n            axis = 0\n        return Expanding(self, min_periods=min_periods, axis=axis, method=method)\n\n    @final\n    @doc(ExponentialMovingWindow)\n    def ewm(\n        self,\n        com: float | None = None,\n        span: float | None = None,\n        halflife: float | TimedeltaConvertibleTypes | None = None,\n        alpha: float | None = None,\n        min_periods: int | None = 0,\n        adjust: bool_t = True,\n        ignore_na: bool_t = False,\n        axis: Axis | lib.NoDefault = lib.no_default,\n        times: np.ndarray | DataFrame | Series | None = None,\n        method: Literal[\"single\", \"table\"] = \"single\",\n    ) -> ExponentialMovingWindow:\n        if axis is not lib.no_default:\n            axis = self._get_axis_number(axis)\n            name = \"ewm\"\n            if axis == 1:\n                warnings.warn(\n                    f\"Support for axis=1 in {type(self).__name__}.{name} is \"\n                    \"deprecated and will be removed in a future version. \"\n                    f\"Use obj.T.{name}(...) instead\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n            else:\n                warnings.warn(\n                    f\"The 'axis' keyword in {type(self).__name__}.{name} is \"\n                    \"deprecated and will be removed in a future version. \"\n                    \"Call the method without the axis keyword instead.\",\n                    FutureWarning,\n                    stacklevel=find_stack_level(),\n                )\n        else:\n            axis = 0\n\n        return ExponentialMovingWindow(\n            self,\n            com=com,\n            span=span,\n            halflife=halflife,\n            alpha=alpha,\n            min_periods=min_periods,\n            adjust=adjust,\n            ignore_na=ignore_na,\n            axis=axis,\n            times=times,\n            method=method,\n        )\n\n    # ----------------------------------------------------------------------\n    # Arithmetic Methods\n\n    @final\n    def _inplace_method(self, other, op) -> Self:\n        \"\"\"\n        Wrap arithmetic method to operate inplace.\n        \"\"\"\n        warn = True\n        if not PYPY and warn_copy_on_write():\n            if sys.getrefcount(self) <= REF_COUNT + 2:\n                # we are probably in an inplace setitem context (e.g. df['a'] += 1)\n                warn = False\n\n        result = op(self, other)\n\n        if (\n            self.ndim == 1\n            and result._indexed_same(self)\n            and result.dtype == self.dtype\n            and not using_copy_on_write()\n            and not (warn_copy_on_write() and not warn)\n        ):\n            # GH#36498 this inplace op can _actually_ be inplace.\n            # Item \"ArrayManager\" of \"Union[ArrayManager, SingleArrayManager,\n            # BlockManager, SingleBlockManager]\" has no attribute \"setitem_inplace\"\n            self._mgr.setitem_inplace(  # type: ignore[union-attr]\n                slice(None), result._values, warn=warn\n            )\n            return self\n\n        # Delete cacher\n        self._reset_cacher()\n\n        # this makes sure that we are aligned like the input\n        # we are updating inplace so we want to ignore is_copy\n        self._update_inplace(\n            result.reindex_like(self, copy=False), verify_is_copy=False\n        )\n        return self\n\n    @final\n    def __iadd__(self, other) -> Self:\n        # error: Unsupported left operand type for + (\"Type[NDFrame]\")\n        return self._inplace_method(other, type(self).__add__)  # type: ignore[operator]\n\n    @final\n    def __isub__(self, other) -> Self:\n        # error: Unsupported left operand type for - (\"Type[NDFrame]\")\n        return self._inplace_method(other, type(self).__sub__)  # type: ignore[operator]\n\n    @final\n    def __imul__(self, other) -> Self:\n        # error: Unsupported left operand type for * (\"Type[NDFrame]\")\n        return self._inplace_method(other, type(self).__mul__)  # type: ignore[operator]\n\n    @final\n    def __itruediv__(self, other) -> Self:\n        # error: Unsupported left operand type for / (\"Type[NDFrame]\")\n        return self._inplace_method(\n            other, type(self).__truediv__  # type: ignore[operator]\n        )\n\n    @final\n    def __ifloordiv__(self, other) -> Self:\n        # error: Unsupported left operand type for // (\"Type[NDFrame]\")\n        return self._inplace_method(\n            other, type(self).__floordiv__  # type: ignore[operator]\n        )\n\n    @final\n    def __imod__(self, other) -> Self:\n        # error: Unsupported left operand type for % (\"Type[NDFrame]\")\n        return self._inplace_method(other, type(self).__mod__)  # type: ignore[operator]\n\n    @final\n    def __ipow__(self, other) -> Self:\n        # error: Unsupported left operand type for ** (\"Type[NDFrame]\")\n        return self._inplace_method(other, type(self).__pow__)  # type: ignore[operator]\n\n    @final\n    def __iand__(self, other) -> Self:\n        # error: Unsupported left operand type for & (\"Type[NDFrame]\")\n        return self._inplace_method(other, type(self).__and__)  # type: ignore[operator]\n\n    @final\n    def __ior__(self, other) -> Self:\n        return self._inplace_method(other, type(self).__or__)\n\n    @final\n    def __ixor__(self, other) -> Self:\n        # error: Unsupported left operand type for ^ (\"Type[NDFrame]\")\n        return self._inplace_method(other, type(self).__xor__)  # type: ignore[operator]\n\n    # ----------------------------------------------------------------------\n    # Misc methods\n\n    @final\n    def _find_valid_index(self, *, how: str) -> Hashable | None:\n        \"\"\"\n        Retrieves the index of the first valid value.\n\n        Parameters\n        ----------\n        how : {'first', 'last'}\n            Use this parameter to change between the first or last valid index.\n\n        Returns\n        -------\n        idx_first_valid : type of index\n        \"\"\"\n        is_valid = self.notna().values\n        idxpos = find_valid_index(how=how, is_valid=is_valid)\n        if idxpos is None:\n            return None\n        return self.index[idxpos]\n\n    @final\n    @doc(position=\"first\", klass=_shared_doc_kwargs[\"klass\"])\n    def first_valid_index(self) -> Hashable | None:\n        \"\"\"\n        Return index for {position} non-NA value or None, if no non-NA value is found.\n\n        Returns\n        -------\n        type of index\n\n        Examples\n        --------\n        For Series:\n\n        >>> s = pd.Series([None, 3, 4])\n        >>> s.first_valid_index()\n        1\n        >>> s.last_valid_index()\n        2\n\n        >>> s = pd.Series([None, None])\n        >>> print(s.first_valid_index())\n        None\n        >>> print(s.last_valid_index())\n        None\n\n        If all elements in Series are NA/null, returns None.\n\n        >>> s = pd.Series()\n        >>> print(s.first_valid_index())\n        None\n        >>> print(s.last_valid_index())\n        None\n\n        If Series is empty, returns None.\n\n        For DataFrame:\n\n        >>> df = pd.DataFrame({{'A': [None, None, 2], 'B': [None, 3, 4]}})\n        >>> df\n             A      B\n        0  NaN    NaN\n        1  NaN    3.0\n        2  2.0    4.0\n        >>> df.first_valid_index()\n        1\n        >>> df.last_valid_index()\n        2\n\n        >>> df = pd.DataFrame({{'A': [None, None, None], 'B': [None, None, None]}})\n        >>> df\n             A      B\n        0  None   None\n        1  None   None\n        2  None   None\n        >>> print(df.first_valid_index())\n        None\n        >>> print(df.last_valid_index())\n        None\n\n        If all elements in DataFrame are NA/null, returns None.\n\n        >>> df = pd.DataFrame()\n        >>> df\n        Empty DataFrame\n        Columns: []\n        Index: []\n        >>> print(df.first_valid_index())\n        None\n        >>> print(df.last_valid_index())\n        None\n\n        If DataFrame is empty, returns None.\n        \"\"\"\n        return self._find_valid_index(how=\"first\")\n\n    @final\n    @doc(first_valid_index, position=\"last\", klass=_shared_doc_kwargs[\"klass\"])\n    def last_valid_index(self) -> Hashable | None:\n        return self._find_valid_index(how=\"last\")\n\n\n_num_doc = \"\"\"\n{desc}\n\nParameters\n----------\naxis : {axis_descr}\n    Axis for the function to be applied on.\n    For `Series` this parameter is unused and defaults to 0.\n\n    For DataFrames, specifying ``axis=None`` will apply the aggregation\n    across both axes.\n\n    .. versionadded:: 2.0.0\n\nskipna : bool, default True\n    Exclude NA/null values when computing the result.\nnumeric_only : bool, default False\n    Include only float, int, boolean columns. Not implemented for Series.\n\n{min_count}\\\n**kwargs\n    Additional keyword arguments to be passed to the function.\n\nReturns\n-------\n{name1} or scalar\\\n{see_also}\\\n{examples}\n\"\"\"\n\n_sum_prod_doc = \"\"\"\n{desc}\n\nParameters\n----------\naxis : {axis_descr}\n    Axis for the function to be applied on.\n    For `Series` this parameter is unused and defaults to 0.\n\n    .. warning::\n\n        The behavior of DataFrame.{name} with ``axis=None`` is deprecated,\n        in a future version this will reduce over both axes and return a scalar\n        To retain the old behavior, pass axis=0 (or do not pass axis).\n\n    .. versionadded:: 2.0.0\n\nskipna : bool, default True\n    Exclude NA/null values when computing the result.\nnumeric_only : bool, default False\n    Include only float, int, boolean columns. Not implemented for Series.\n\n{min_count}\\\n**kwargs\n    Additional keyword arguments to be passed to the function.\n\nReturns\n-------\n{name1} or scalar\\\n{see_also}\\\n{examples}\n\"\"\"\n\n_num_ddof_doc = \"\"\"\n{desc}\n\nParameters\n----------\naxis : {axis_descr}\n    For `Series` this parameter is unused and defaults to 0.\n\n    .. warning::\n\n        The behavior of DataFrame.{name} with ``axis=None`` is deprecated,\n        in a future version this will reduce over both axes and return a scalar\n        To retain the old behavior, pass axis=0 (or do not pass axis).\n\nskipna : bool, default True\n    Exclude NA/null values. If an entire row/column is NA, the result\n    will be NA.\nddof : int, default 1\n    Delta Degrees of Freedom. The divisor used in calculations is N - ddof,\n    where N represents the number of elements.\nnumeric_only : bool, default False\n    Include only float, int, boolean columns. Not implemented for Series.\n\nReturns\n-------\n{name1} or {name2} (if level specified) \\\n{notes}\\\n{examples}\n\"\"\"\n\n_std_notes = \"\"\"\n\nNotes\n-----\nTo have the same behaviour as `numpy.std`, use `ddof=0` (instead of the\ndefault `ddof=1`)\"\"\"\n\n_std_examples = \"\"\"\n\nExamples\n--------\n>>> df = pd.DataFrame({'person_id': [0, 1, 2, 3],\n...                    'age': [21, 25, 62, 43],\n...                    'height': [1.61, 1.87, 1.49, 2.01]}\n...                   ).set_index('person_id')\n>>> df\n           age  height\nperson_id\n0           21    1.61\n1           25    1.87\n2           62    1.49\n3           43    2.01\n\nThe standard deviation of the columns can be found as follows:\n\n>>> df.std()\nage       18.786076\nheight     0.237417\ndtype: float64\n\nAlternatively, `ddof=0` can be set to normalize by N instead of N-1:\n\n>>> df.std(ddof=0)\nage       16.269219\nheight     0.205609\ndtype: float64\"\"\"\n\n_var_examples = \"\"\"\n\nExamples\n--------\n>>> df = pd.DataFrame({'person_id': [0, 1, 2, 3],\n...                    'age': [21, 25, 62, 43],\n...                    'height': [1.61, 1.87, 1.49, 2.01]}\n...                   ).set_index('person_id')\n>>> df\n           age  height\nperson_id\n0           21    1.61\n1           25    1.87\n2           62    1.49\n3           43    2.01\n\n>>> df.var()\nage       352.916667\nheight      0.056367\ndtype: float64\n\nAlternatively, ``ddof=0`` can be set to normalize by N instead of N-1:\n\n>>> df.var(ddof=0)\nage       264.687500\nheight      0.042275\ndtype: float64\"\"\"\n\n_bool_doc = \"\"\"\n{desc}\n\nParameters\n----------\naxis : {{0 or 'index', 1 or 'columns', None}}, default 0\n    Indicate which axis or axes should be reduced. For `Series` this parameter\n    is unused and defaults to 0.\n\n    * 0 / 'index' : reduce the index, return a Series whose index is the\n      original column labels.\n    * 1 / 'columns' : reduce the columns, return a Series whose index is the\n      original index.\n    * None : reduce all axes, return a scalar.\n\nbool_only : bool, default False\n    Include only boolean columns. Not implemented for Series.\nskipna : bool, default True\n    Exclude NA/null values. If the entire row/column is NA and skipna is\n    True, then the result will be {empty_value}, as for an empty row/column.\n    If skipna is False, then NA are treated as True, because these are not\n    equal to zero.\n**kwargs : any, default None\n    Additional keywords have no effect but might be accepted for\n    compatibility with NumPy.\n\nReturns\n-------\n{name1} or {name2}\n    If level is specified, then, {name2} is returned; otherwise, {name1}\n    is returned.\n\n{see_also}\n{examples}\"\"\"\n\n_all_desc = \"\"\"\\\nReturn whether all elements are True, potentially over an axis.\n\nReturns True unless there at least one element within a series or\nalong a Dataframe axis that is False or equivalent (e.g. zero or\nempty).\"\"\"\n\n_all_examples = \"\"\"\\\nExamples\n--------\n**Series**\n\n>>> pd.Series([True, True]).all()\nTrue\n>>> pd.Series([True, False]).all()\nFalse\n>>> pd.Series([], dtype=\"float64\").all()\nTrue\n>>> pd.Series([np.nan]).all()\nTrue\n>>> pd.Series([np.nan]).all(skipna=False)\nTrue\n\n**DataFrames**\n\nCreate a dataframe from a dictionary.\n\n>>> df = pd.DataFrame({'col1': [True, True], 'col2': [True, False]})\n>>> df\n   col1   col2\n0  True   True\n1  True  False\n\nDefault behaviour checks if values in each column all return True.\n\n>>> df.all()\ncol1     True\ncol2    False\ndtype: bool\n\nSpecify ``axis='columns'`` to check if values in each row all return True.\n\n>>> df.all(axis='columns')\n0     True\n1    False\ndtype: bool\n\nOr ``axis=None`` for whether every value is True.\n\n>>> df.all(axis=None)\nFalse\n\"\"\"\n\n_all_see_also = \"\"\"\\\nSee Also\n--------\nSeries.all : Return True if all elements are True.\nDataFrame.any : Return True if one (or more) elements are True.\n\"\"\"\n\n_cnum_doc = \"\"\"\nReturn cumulative {desc} over a DataFrame or Series axis.\n\nReturns a DataFrame or Series of the same size containing the cumulative\n{desc}.\n\nParameters\n----------\naxis : {{0 or 'index', 1 or 'columns'}}, default 0\n    The index or the name of the axis. 0 is equivalent to None or 'index'.\n    For `Series` this parameter is unused and defaults to 0.\nskipna : bool, default True\n    Exclude NA/null values. If an entire row/column is NA, the result\n    will be NA.\n*args, **kwargs\n    Additional keywords have no effect but might be accepted for\n    compatibility with NumPy.\n\nReturns\n-------\n{name1} or {name2}\n    Return cumulative {desc} of {name1} or {name2}.\n\nSee Also\n--------\ncore.window.expanding.Expanding.{accum_func_name} : Similar functionality\n    but ignores ``NaN`` values.\n{name2}.{accum_func_name} : Return the {desc} over\n    {name2} axis.\n{name2}.cummax : Return cumulative maximum over {name2} axis.\n{name2}.cummin : Return cumulative minimum over {name2} axis.\n{name2}.cumsum : Return cumulative sum over {name2} axis.\n{name2}.cumprod : Return cumulative product over {name2} axis.\n\n{examples}\"\"\"\n\n_cummin_examples = \"\"\"\\\nExamples\n--------\n**Series**\n\n>>> s = pd.Series([2, np.nan, 5, -1, 0])\n>>> s\n0    2.0\n1    NaN\n2    5.0\n3   -1.0\n4    0.0\ndtype: float64\n\nBy default, NA values are ignored.\n\n>>> s.cummin()\n0    2.0\n1    NaN\n2    2.0\n3   -1.0\n4   -1.0\ndtype: float64\n\nTo include NA values in the operation, use ``skipna=False``\n\n>>> s.cummin(skipna=False)\n0    2.0\n1    NaN\n2    NaN\n3    NaN\n4    NaN\ndtype: float64\n\n**DataFrame**\n\n>>> df = pd.DataFrame([[2.0, 1.0],\n...                    [3.0, np.nan],\n...                    [1.0, 0.0]],\n...                   columns=list('AB'))\n>>> df\n     A    B\n0  2.0  1.0\n1  3.0  NaN\n2  1.0  0.0\n\nBy default, iterates over rows and finds the minimum\nin each column. This is equivalent to ``axis=None`` or ``axis='index'``.\n\n>>> df.cummin()\n     A    B\n0  2.0  1.0\n1  2.0  NaN\n2  1.0  0.0\n\nTo iterate over columns and find the minimum in each row,\nuse ``axis=1``\n\n>>> df.cummin(axis=1)\n     A    B\n0  2.0  1.0\n1  3.0  NaN\n2  1.0  0.0\n\"\"\"\n\n_cumsum_examples = \"\"\"\\\nExamples\n--------\n**Series**\n\n>>> s = pd.Series([2, np.nan, 5, -1, 0])\n>>> s\n0    2.0\n1    NaN\n2    5.0\n3   -1.0\n4    0.0\ndtype: float64\n\nBy default, NA values are ignored.\n\n>>> s.cumsum()\n0    2.0\n1    NaN\n2    7.0\n3    6.0\n4    6.0\ndtype: float64\n\nTo include NA values in the operation, use ``skipna=False``\n\n>>> s.cumsum(skipna=False)\n0    2.0\n1    NaN\n2    NaN\n3    NaN\n4    NaN\ndtype: float64\n\n**DataFrame**\n\n>>> df = pd.DataFrame([[2.0, 1.0],\n...                    [3.0, np.nan],\n...                    [1.0, 0.0]],\n...                   columns=list('AB'))\n>>> df\n     A    B\n0  2.0  1.0\n1  3.0  NaN\n2  1.0  0.0\n\nBy default, iterates over rows and finds the sum\nin each column. This is equivalent to ``axis=None`` or ``axis='index'``.\n\n>>> df.cumsum()\n     A    B\n0  2.0  1.0\n1  5.0  NaN\n2  6.0  1.0\n\nTo iterate over columns and find the sum in each row,\nuse ``axis=1``\n\n>>> df.cumsum(axis=1)\n     A    B\n0  2.0  3.0\n1  3.0  NaN\n2  1.0  1.0\n\"\"\"\n\n_cumprod_examples = \"\"\"\\\nExamples\n--------\n**Series**\n\n>>> s = pd.Series([2, np.nan, 5, -1, 0])\n>>> s\n0    2.0\n1    NaN\n2    5.0\n3   -1.0\n4    0.0\ndtype: float64\n\nBy default, NA values are ignored.\n\n>>> s.cumprod()\n0     2.0\n1     NaN\n2    10.0\n3   -10.0\n4    -0.0\ndtype: float64\n\nTo include NA values in the operation, use ``skipna=False``\n\n>>> s.cumprod(skipna=False)\n0    2.0\n1    NaN\n2    NaN\n3    NaN\n4    NaN\ndtype: float64\n\n**DataFrame**\n\n>>> df = pd.DataFrame([[2.0, 1.0],\n...                    [3.0, np.nan],\n...                    [1.0, 0.0]],\n...                   columns=list('AB'))\n>>> df\n     A    B\n0  2.0  1.0\n1  3.0  NaN\n2  1.0  0.0\n\nBy default, iterates over rows and finds the product\nin each column. This is equivalent to ``axis=None`` or ``axis='index'``.\n\n>>> df.cumprod()\n     A    B\n0  2.0  1.0\n1  6.0  NaN\n2  6.0  0.0\n\nTo iterate over columns and find the product in each row,\nuse ``axis=1``\n\n>>> df.cumprod(axis=1)\n     A    B\n0  2.0  2.0\n1  3.0  NaN\n2  1.0  0.0\n\"\"\"\n\n_cummax_examples = \"\"\"\\\nExamples\n--------\n**Series**\n\n>>> s = pd.Series([2, np.nan, 5, -1, 0])\n>>> s\n0    2.0\n1    NaN\n2    5.0\n3   -1.0\n4    0.0\ndtype: float64\n\nBy default, NA values are ignored.\n\n>>> s.cummax()\n0    2.0\n1    NaN\n2    5.0\n3    5.0\n4    5.0\ndtype: float64\n\nTo include NA values in the operation, use ``skipna=False``\n\n>>> s.cummax(skipna=False)\n0    2.0\n1    NaN\n2    NaN\n3    NaN\n4    NaN\ndtype: float64\n\n**DataFrame**\n\n>>> df = pd.DataFrame([[2.0, 1.0],\n...                    [3.0, np.nan],\n...                    [1.0, 0.0]],\n...                   columns=list('AB'))\n>>> df\n     A    B\n0  2.0  1.0\n1  3.0  NaN\n2  1.0  0.0\n\nBy default, iterates over rows and finds the maximum\nin each column. This is equivalent to ``axis=None`` or ``axis='index'``.\n\n>>> df.cummax()\n     A    B\n0  2.0  1.0\n1  3.0  NaN\n2  3.0  1.0\n\nTo iterate over columns and find the maximum in each row,\nuse ``axis=1``\n\n>>> df.cummax(axis=1)\n     A    B\n0  2.0  2.0\n1  3.0  NaN\n2  1.0  1.0\n\"\"\"\n\n_any_see_also = \"\"\"\\\nSee Also\n--------\nnumpy.any : Numpy version of this method.\nSeries.any : Return whether any element is True.\nSeries.all : Return whether all elements are True.\nDataFrame.any : Return whether any element is True over requested axis.\nDataFrame.all : Return whether all elements are True over requested axis.\n\"\"\"\n\n_any_desc = \"\"\"\\\nReturn whether any element is True, potentially over an axis.\n\nReturns False unless there is at least one element within a series or\nalong a Dataframe axis that is True or equivalent (e.g. non-zero or\nnon-empty).\"\"\"\n\n_any_examples = \"\"\"\\\nExamples\n--------\n**Series**\n\nFor Series input, the output is a scalar indicating whether any element\nis True.\n\n>>> pd.Series([False, False]).any()\nFalse\n>>> pd.Series([True, False]).any()\nTrue\n>>> pd.Series([], dtype=\"float64\").any()\nFalse\n>>> pd.Series([np.nan]).any()\nFalse\n>>> pd.Series([np.nan]).any(skipna=False)\nTrue\n\n**DataFrame**\n\nWhether each column contains at least one True element (the default).\n\n>>> df = pd.DataFrame({\"A\": [1, 2], \"B\": [0, 2], \"C\": [0, 0]})\n>>> df\n   A  B  C\n0  1  0  0\n1  2  2  0\n\n>>> df.any()\nA     True\nB     True\nC    False\ndtype: bool\n\nAggregating over the columns.\n\n>>> df = pd.DataFrame({\"A\": [True, False], \"B\": [1, 2]})\n>>> df\n       A  B\n0   True  1\n1  False  2\n\n>>> df.any(axis='columns')\n0    True\n1    True\ndtype: bool\n\n>>> df = pd.DataFrame({\"A\": [True, False], \"B\": [1, 0]})\n>>> df\n       A  B\n0   True  1\n1  False  0\n\n>>> df.any(axis='columns')\n0    True\n1    False\ndtype: bool\n\nAggregating over the entire DataFrame with ``axis=None``.\n\n>>> df.any(axis=None)\nTrue\n\n`any` for an empty DataFrame is an empty Series.\n\n>>> pd.DataFrame([]).any()\nSeries([], dtype: bool)\n\"\"\"\n\n_shared_docs[\n    \"stat_func_example\"\n] = \"\"\"\n\nExamples\n--------\n>>> idx = pd.MultiIndex.from_arrays([\n...     ['warm', 'warm', 'cold', 'cold'],\n...     ['dog', 'falcon', 'fish', 'spider']],\n...     names=['blooded', 'animal'])\n>>> s = pd.Series([4, 2, 0, 8], name='legs', index=idx)\n>>> s\nblooded  animal\nwarm     dog       4\n         falcon    2\ncold     fish      0\n         spider    8\nName: legs, dtype: int64\n\n>>> s.{stat_func}()\n{default_output}\"\"\"\n\n_sum_examples = _shared_docs[\"stat_func_example\"].format(\n    stat_func=\"sum\", verb=\"Sum\", default_output=14, level_output_0=6, level_output_1=8\n)\n\n_sum_examples += \"\"\"\n\nBy default, the sum of an empty or all-NA Series is ``0``.\n\n>>> pd.Series([], dtype=\"float64\").sum()  # min_count=0 is the default\n0.0\n\nThis can be controlled with the ``min_count`` parameter. For example, if\nyou'd like the sum of an empty series to be NaN, pass ``min_count=1``.\n\n>>> pd.Series([], dtype=\"float64\").sum(min_count=1)\nnan\n\nThanks to the ``skipna`` parameter, ``min_count`` handles all-NA and\nempty series identically.\n\n>>> pd.Series([np.nan]).sum()\n0.0\n\n>>> pd.Series([np.nan]).sum(min_count=1)\nnan\"\"\"\n\n_max_examples: str = _shared_docs[\"stat_func_example\"].format(\n    stat_func=\"max\", verb=\"Max\", default_output=8, level_output_0=4, level_output_1=8\n)\n\n_min_examples: str = _shared_docs[\"stat_func_example\"].format(\n    stat_func=\"min\", verb=\"Min\", default_output=0, level_output_0=2, level_output_1=0\n)\n\n_stat_func_see_also = \"\"\"\n\nSee Also\n--------\nSeries.sum : Return the sum.\nSeries.min : Return the minimum.\nSeries.max : Return the maximum.\nSeries.idxmin : Return the index of the minimum.\nSeries.idxmax : Return the index of the maximum.\nDataFrame.sum : Return the sum over the requested axis.\nDataFrame.min : Return the minimum over the requested axis.\nDataFrame.max : Return the maximum over the requested axis.\nDataFrame.idxmin : Return the index of the minimum over the requested axis.\nDataFrame.idxmax : Return the index of the maximum over the requested axis.\"\"\"\n\n_prod_examples = \"\"\"\n\nExamples\n--------\nBy default, the product of an empty or all-NA Series is ``1``\n\n>>> pd.Series([], dtype=\"float64\").prod()\n1.0\n\nThis can be controlled with the ``min_count`` parameter\n\n>>> pd.Series([], dtype=\"float64\").prod(min_count=1)\nnan\n\nThanks to the ``skipna`` parameter, ``min_count`` handles all-NA and\nempty series identically.\n\n>>> pd.Series([np.nan]).prod()\n1.0\n\n>>> pd.Series([np.nan]).prod(min_count=1)\nnan\"\"\"\n\n_min_count_stub = \"\"\"\\\nmin_count : int, default 0\n    The required number of valid values to perform the operation. If fewer than\n    ``min_count`` non-NA values are present the result will be NA.\n\"\"\"\n\n\ndef make_doc(name: str, ndim: int) -> str:\n    \"\"\"\n    Generate the docstring for a Series/DataFrame reduction.\n    \"\"\"\n    if ndim == 1:\n        name1 = \"scalar\"\n        name2 = \"Series\"\n        axis_descr = \"{index (0)}\"\n    else:\n        name1 = \"Series\"\n        name2 = \"DataFrame\"\n        axis_descr = \"{index (0), columns (1)}\"\n\n    if name == \"any\":\n        base_doc = _bool_doc\n        desc = _any_desc\n        see_also = _any_see_also\n        examples = _any_examples\n        kwargs = {\"empty_value\": \"False\"}\n    elif name == \"all\":\n        base_doc = _bool_doc\n        desc = _all_desc\n        see_also = _all_see_also\n        examples = _all_examples\n        kwargs = {\"empty_value\": \"True\"}\n    elif name == \"min\":\n        base_doc = _num_doc\n        desc = (\n            \"Return the minimum of the values over the requested axis.\\n\\n\"\n            \"If you want the *index* of the minimum, use ``idxmin``. This is \"\n            \"the equivalent of the ``numpy.ndarray`` method ``argmin``.\"\n        )\n        see_also = _stat_func_see_also\n        examples = _min_examples\n        kwargs = {\"min_count\": \"\"}\n    elif name == \"max\":\n        base_doc = _num_doc\n        desc = (\n            \"Return the maximum of the values over the requested axis.\\n\\n\"\n            \"If you want the *index* of the maximum, use ``idxmax``. This is \"\n            \"the equivalent of the ``numpy.ndarray`` method ``argmax``.\"\n        )\n        see_also = _stat_func_see_also\n        examples = _max_examples\n        kwargs = {\"min_count\": \"\"}\n\n    elif name == \"sum\":\n        base_doc = _sum_prod_doc\n        desc = (\n            \"Return the sum of the values over the requested axis.\\n\\n\"\n            \"This is equivalent to the method ``numpy.sum``.\"\n        )\n        see_also = _stat_func_see_also\n        examples = _sum_examples\n        kwargs = {\"min_count\": _min_count_stub}\n\n    elif name == \"prod\":\n        base_doc = _sum_prod_doc\n        desc = \"Return the product of the values over the requested axis.\"\n        see_also = _stat_func_see_also\n        examples = _prod_examples\n        kwargs = {\"min_count\": _min_count_stub}\n\n    elif name == \"median\":\n        base_doc = _num_doc\n        desc = \"Return the median of the values over the requested axis.\"\n        see_also = \"\"\n        examples = \"\"\"\n\n            Examples\n            --------\n            >>> s = pd.Series([1, 2, 3])\n            >>> s.median()\n            2.0\n\n            With a DataFrame\n\n            >>> df = pd.DataFrame({'a': [1, 2], 'b': [2, 3]}, index=['tiger', 'zebra'])\n            >>> df\n                   a   b\n            tiger  1   2\n            zebra  2   3\n            >>> df.median()\n            a   1.5\n            b   2.5\n            dtype: float64\n\n            Using axis=1\n\n            >>> df.median(axis=1)\n            tiger   1.5\n            zebra   2.5\n            dtype: float64\n\n            In this case, `numeric_only` should be set to `True`\n            to avoid getting an error.\n\n            >>> df = pd.DataFrame({'a': [1, 2], 'b': ['T', 'Z']},\n            ...                   index=['tiger', 'zebra'])\n            >>> df.median(numeric_only=True)\n            a   1.5\n            dtype: float64\"\"\"\n        kwargs = {\"min_count\": \"\"}\n\n    elif name == \"mean\":\n        base_doc = _num_doc\n        desc = \"Return the mean of the values over the requested axis.\"\n        see_also = \"\"\n        examples = \"\"\"\n\n            Examples\n            --------\n            >>> s = pd.Series([1, 2, 3])\n            >>> s.mean()\n            2.0\n\n            With a DataFrame\n\n            >>> df = pd.DataFrame({'a': [1, 2], 'b': [2, 3]}, index=['tiger', 'zebra'])\n            >>> df\n                   a   b\n            tiger  1   2\n            zebra  2   3\n            >>> df.mean()\n            a   1.5\n            b   2.5\n            dtype: float64\n\n            Using axis=1\n\n            >>> df.mean(axis=1)\n            tiger   1.5\n            zebra   2.5\n            dtype: float64\n\n            In this case, `numeric_only` should be set to `True` to avoid\n            getting an error.\n\n            >>> df = pd.DataFrame({'a': [1, 2], 'b': ['T', 'Z']},\n            ...                   index=['tiger', 'zebra'])\n            >>> df.mean(numeric_only=True)\n            a   1.5\n            dtype: float64\"\"\"\n        kwargs = {\"min_count\": \"\"}\n\n    elif name == \"var\":\n        base_doc = _num_ddof_doc\n        desc = (\n            \"Return unbiased variance over requested axis.\\n\\nNormalized by \"\n            \"N-1 by default. This can be changed using the ddof argument.\"\n        )\n        examples = _var_examples\n        see_also = \"\"\n        kwargs = {\"notes\": \"\"}\n\n    elif name == \"std\":\n        base_doc = _num_ddof_doc\n        desc = (\n            \"Return sample standard deviation over requested axis.\"\n            \"\\n\\nNormalized by N-1 by default. This can be changed using the \"\n            \"ddof argument.\"\n        )\n        examples = _std_examples\n        see_also = \"\"\n        kwargs = {\"notes\": _std_notes}\n\n    elif name == \"sem\":\n        base_doc = _num_ddof_doc\n        desc = (\n            \"Return unbiased standard error of the mean over requested \"\n            \"axis.\\n\\nNormalized by N-1 by default. This can be changed \"\n            \"using the ddof argument\"\n        )\n        examples = \"\"\"\n\n            Examples\n            --------\n            >>> s = pd.Series([1, 2, 3])\n            >>> s.sem().round(6)\n            0.57735\n\n            With a DataFrame\n\n            >>> df = pd.DataFrame({'a': [1, 2], 'b': [2, 3]}, index=['tiger', 'zebra'])\n            >>> df\n                   a   b\n            tiger  1   2\n            zebra  2   3\n            >>> df.sem()\n            a   0.5\n            b   0.5\n            dtype: float64\n\n            Using axis=1\n\n            >>> df.sem(axis=1)\n            tiger   0.5\n            zebra   0.5\n            dtype: float64\n\n            In this case, `numeric_only` should be set to `True`\n            to avoid getting an error.\n\n            >>> df = pd.DataFrame({'a': [1, 2], 'b': ['T', 'Z']},\n            ...                   index=['tiger', 'zebra'])\n            >>> df.sem(numeric_only=True)\n            a   0.5\n            dtype: float64\"\"\"\n        see_also = \"\"\n        kwargs = {\"notes\": \"\"}\n\n    elif name == \"skew\":\n        base_doc = _num_doc\n        desc = \"Return unbiased skew over requested axis.\\n\\nNormalized by N-1.\"\n        see_also = \"\"\n        examples = \"\"\"\n\n            Examples\n            --------\n            >>> s = pd.Series([1, 2, 3])\n            >>> s.skew()\n            0.0\n\n            With a DataFrame\n\n            >>> df = pd.DataFrame({'a': [1, 2, 3], 'b': [2, 3, 4], 'c': [1, 3, 5]},\n            ...                   index=['tiger', 'zebra', 'cow'])\n            >>> df\n                    a   b   c\n            tiger   1   2   1\n            zebra   2   3   3\n            cow     3   4   5\n            >>> df.skew()\n            a   0.0\n            b   0.0\n            c   0.0\n            dtype: float64\n\n            Using axis=1\n\n            >>> df.skew(axis=1)\n            tiger   1.732051\n            zebra  -1.732051\n            cow     0.000000\n            dtype: float64\n\n            In this case, `numeric_only` should be set to `True` to avoid\n            getting an error.\n\n            >>> df = pd.DataFrame({'a': [1, 2, 3], 'b': ['T', 'Z', 'X']},\n            ...                   index=['tiger', 'zebra', 'cow'])\n            >>> df.skew(numeric_only=True)\n            a   0.0\n            dtype: float64\"\"\"\n        kwargs = {\"min_count\": \"\"}\n    elif name == \"kurt\":\n        base_doc = _num_doc\n        desc = (\n            \"Return unbiased kurtosis over requested axis.\\n\\n\"\n            \"Kurtosis obtained using Fisher's definition of\\n\"\n            \"kurtosis (kurtosis of normal == 0.0). Normalized \"\n            \"by N-1.\"\n        )\n        see_also = \"\"\n        examples = \"\"\"\n\n            Examples\n            --------\n            >>> s = pd.Series([1, 2, 2, 3], index=['cat', 'dog', 'dog', 'mouse'])\n            >>> s\n            cat    1\n            dog    2\n            dog    2\n            mouse  3\n            dtype: int64\n            >>> s.kurt()\n            1.5\n\n            With a DataFrame\n\n            >>> df = pd.DataFrame({'a': [1, 2, 2, 3], 'b': [3, 4, 4, 4]},\n            ...                   index=['cat', 'dog', 'dog', 'mouse'])\n            >>> df\n                   a   b\n              cat  1   3\n              dog  2   4\n              dog  2   4\n            mouse  3   4\n            >>> df.kurt()\n            a   1.5\n            b   4.0\n            dtype: float64\n\n            With axis=None\n\n            >>> df.kurt(axis=None).round(6)\n            -0.988693\n\n            Using axis=1\n\n            >>> df = pd.DataFrame({'a': [1, 2], 'b': [3, 4], 'c': [3, 4], 'd': [1, 2]},\n            ...                   index=['cat', 'dog'])\n            >>> df.kurt(axis=1)\n            cat   -6.0\n            dog   -6.0\n            dtype: float64\"\"\"\n        kwargs = {\"min_count\": \"\"}\n\n    elif name == \"cumsum\":\n        base_doc = _cnum_doc\n        desc = \"sum\"\n        see_also = \"\"\n        examples = _cumsum_examples\n        kwargs = {\"accum_func_name\": \"sum\"}\n\n    elif name == \"cumprod\":\n        base_doc = _cnum_doc\n        desc = \"product\"\n        see_also = \"\"\n        examples = _cumprod_examples\n        kwargs = {\"accum_func_name\": \"prod\"}\n\n    elif name == \"cummin\":\n        base_doc = _cnum_doc\n        desc = \"minimum\"\n        see_also = \"\"\n        examples = _cummin_examples\n        kwargs = {\"accum_func_name\": \"min\"}\n\n    elif name == \"cummax\":\n        base_doc = _cnum_doc\n        desc = \"maximum\"\n        see_also = \"\"\n        examples = _cummax_examples\n        kwargs = {\"accum_func_name\": \"max\"}\n\n    else:\n        raise NotImplementedError\n\n    docstr = base_doc.format(\n        desc=desc,\n        name=name,\n        name1=name1,\n        name2=name2,\n        axis_descr=axis_descr,\n        see_also=see_also,\n        examples=examples,\n        **kwargs,\n    )\n    return docstr\n", 13953], "C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py": ["import json\nimport warnings\n\nimport numpy as np\nimport pandas as pd\nfrom pandas import DataFrame, Series\n\nimport shapely.errors\nfrom shapely.geometry import mapping, shape\nfrom shapely.geometry.base import BaseGeometry\n\nimport geopandas.io\nfrom geopandas.array import GeometryArray, GeometryDtype, from_shapely, to_wkb, to_wkt\nfrom geopandas.base import GeoPandasBase, is_geometry_type\nfrom geopandas.explore import _explore\nfrom geopandas.geoseries import GeoSeries\n\nfrom ._compat import HAS_PYPROJ, PANDAS_GE_30\nfrom ._decorator import doc\n\nif PANDAS_GE_30:\n    from pandas.core.accessor import Accessor\nelse:\n    from pandas.core.accessor import CachedAccessor as Accessor\n\n\ndef _geodataframe_constructor_with_fallback(*args, **kwargs):\n    \"\"\"\n    A flexible constructor for GeoDataFrame._constructor, which falls back\n    to returning a DataFrame (if a certain operation does not preserve the\n    geometry column)\n    \"\"\"\n    df = GeoDataFrame(*args, **kwargs)\n    geometry_cols_mask = df.dtypes == \"geometry\"\n    if len(geometry_cols_mask) == 0 or geometry_cols_mask.sum() == 0:\n        df = pd.DataFrame(df)\n\n    return df\n\n\ndef _ensure_geometry(data, crs=None):\n    \"\"\"\n    Ensure the data is of geometry dtype or converted to it.\n\n    If input is a (Geo)Series, output is a GeoSeries, otherwise output\n    is GeometryArray.\n\n    If the input is a GeometryDtype with a set CRS, `crs` is ignored.\n    \"\"\"\n    if is_geometry_type(data):\n        if isinstance(data, Series):\n            data = GeoSeries(data)\n        if data.crs is None and crs is not None:\n            # Avoids caching issues/crs sharing issues\n            data = data.copy()\n            if isinstance(data, GeometryArray):\n                data.crs = crs\n            else:\n                data.array.crs = crs\n        return data\n    else:\n        if isinstance(data, Series):\n            out = from_shapely(np.asarray(data), crs=crs)\n            return GeoSeries(out, index=data.index, name=data.name)\n        else:\n            out = from_shapely(data, crs=crs)\n            return out\n\n\ncrs_mismatch_error = (\n    \"CRS mismatch between CRS of the passed geometries \"\n    \"and 'crs'. Use 'GeoDataFrame.set_crs(crs, \"\n    \"allow_override=True)' to overwrite CRS or \"\n    \"'GeoDataFrame.to_crs(crs)' to reproject geometries. \"\n)\n\n\nclass GeoDataFrame(GeoPandasBase, DataFrame):\n    \"\"\"\n    A GeoDataFrame object is a pandas.DataFrame that has one or more columns\n    containing geometry. In addition to the standard DataFrame constructor arguments,\n    GeoDataFrame also accepts the following keyword arguments:\n\n    Parameters\n    ----------\n    crs : value (optional)\n        Coordinate Reference System of the geometry objects. Can be anything accepted by\n        :meth:`pyproj.CRS.from_user_input() <pyproj.crs.CRS.from_user_input>`,\n        such as an authority string (eg \"EPSG:4326\") or a WKT string.\n    geometry : str or array-like (optional)\n        Value to use as the active geometry column.\n        If str, treated as column name to use. If array-like, it will be\n        added as new column named 'geometry' on the GeoDataFrame and set as the\n        active geometry column.\n\n        Note that if ``geometry`` is a (Geo)Series with a\n        name, the name will not be used, a column named \"geometry\" will still be\n        added. To preserve the name, you can use :meth:`~GeoDataFrame.rename_geometry`\n        to update the geometry column name.\n\n    Examples\n    --------\n    Constructing GeoDataFrame from a dictionary.\n\n    >>> from shapely.geometry import Point\n    >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n    >>> gdf = geopandas.GeoDataFrame(d, crs=\"EPSG:4326\")\n    >>> gdf\n        col1     geometry\n    0  name1  POINT (1 2)\n    1  name2  POINT (2 1)\n\n    Notice that the inferred dtype of 'geometry' columns is geometry.\n\n    >>> gdf.dtypes\n    col1          object\n    geometry    geometry\n    dtype: object\n\n    Constructing GeoDataFrame from a pandas DataFrame with a column of WKT geometries:\n\n    >>> import pandas as pd\n    >>> d = {'col1': ['name1', 'name2'], 'wkt': ['POINT (1 2)', 'POINT (2 1)']}\n    >>> df = pd.DataFrame(d)\n    >>> gs = geopandas.GeoSeries.from_wkt(df['wkt'])\n    >>> gdf = geopandas.GeoDataFrame(df, geometry=gs, crs=\"EPSG:4326\")\n    >>> gdf\n        col1          wkt     geometry\n    0  name1  POINT (1 2)  POINT (1 2)\n    1  name2  POINT (2 1)  POINT (2 1)\n\n    See also\n    --------\n    GeoSeries : Series object designed to store shapely geometry objects\n    \"\"\"\n\n    _metadata = [\"_geometry_column_name\"]\n\n    _internal_names = DataFrame._internal_names + [\"geometry\"]\n    _internal_names_set = set(_internal_names)\n\n    _geometry_column_name = None\n\n    def __init__(self, data=None, *args, geometry=None, crs=None, **kwargs):\n        if (\n            kwargs.get(\"copy\") is None\n            and isinstance(data, DataFrame)\n            and not isinstance(data, GeoDataFrame)\n        ):\n            kwargs.update(copy=True)\n        super().__init__(data, *args, **kwargs)\n\n        # set_geometry ensures the geometry data have the proper dtype,\n        # but is not called if `geometry=None` ('geometry' column present\n        # in the data), so therefore need to ensure it here manually\n        # but within a try/except because currently non-geometries are\n        # allowed in that case\n        # TODO do we want to raise / return normal DataFrame in this case?\n\n        # if gdf passed in and geo_col is set, we use that for geometry\n        if geometry is None and isinstance(data, GeoDataFrame):\n            self._geometry_column_name = data._geometry_column_name\n            if crs is not None and data.crs != crs:\n                raise ValueError(crs_mismatch_error)\n\n        if (\n            geometry is None\n            and self.columns.nlevels == 1\n            and \"geometry\" in self.columns\n        ):\n            # Check for multiple columns with name \"geometry\". If there are,\n            # self[\"geometry\"] is a gdf and constructor gets recursively recalled\n            # by pandas internals trying to access this\n            if (self.columns == \"geometry\").sum() > 1:\n                raise ValueError(\n                    \"GeoDataFrame does not support multiple columns \"\n                    \"using the geometry column name 'geometry'.\"\n                )\n\n            # only if we have actual geometry values -> call set_geometry\n            try:\n                if (\n                    hasattr(self[\"geometry\"].values, \"crs\")\n                    and self[\"geometry\"].values.crs\n                    and crs\n                    and not self[\"geometry\"].values.crs == crs\n                ):\n                    raise ValueError(crs_mismatch_error)\n                self[\"geometry\"] = _ensure_geometry(self[\"geometry\"].values, crs)\n            except TypeError:\n                pass\n            else:\n                geometry = \"geometry\"\n\n        if geometry is not None:\n            if (\n                hasattr(geometry, \"crs\")\n                and geometry.crs\n                and crs\n                and not geometry.crs == crs\n            ):\n                raise ValueError(crs_mismatch_error)\n\n            if hasattr(geometry, \"name\") and geometry.name not in (\"geometry\", None):\n                # __init__ always creates geometry col named \"geometry\"\n                # rename as `set_geometry` respects the given series name\n                geometry = geometry.rename(\"geometry\")\n\n            self.set_geometry(geometry, inplace=True, crs=crs)\n\n        if geometry is None and crs:\n            raise ValueError(\n                \"Assigning CRS to a GeoDataFrame without a geometry column is not \"\n                \"supported. Supply geometry using the 'geometry=' keyword argument, \"\n                \"or by providing a DataFrame with column name 'geometry'\",\n            )\n\n    def __setattr__(self, attr, val):\n        # have to special case geometry b/c pandas tries to use as column...\n        if attr == \"geometry\":\n            object.__setattr__(self, attr, val)\n        else:\n            super().__setattr__(attr, val)\n\n    def _get_geometry(self):\n        if self._geometry_column_name not in self:\n            if self._geometry_column_name is None:\n                msg = (\n                    \"You are calling a geospatial method on the GeoDataFrame, \"\n                    \"but the active geometry column to use has not been set. \"\n                )\n            else:\n                msg = (\n                    \"You are calling a geospatial method on the GeoDataFrame, \"\n                    f\"but the active geometry column ('{self._geometry_column_name}') \"\n                    \"is not present. \"\n                )\n            geo_cols = list(self.columns[self.dtypes == \"geometry\"])\n            if len(geo_cols) > 0:\n                msg += (\n                    f\"\\nThere are columns with geometry data type ({geo_cols}), and \"\n                    \"you can either set one as the active geometry with \"\n                    'df.set_geometry(\"name\") or access the column as a '\n                    'GeoSeries (df[\"name\"]) and call the method directly on it.'\n                )\n            else:\n                msg += (\n                    \"\\nThere are no existing columns with geometry data type. You can \"\n                    \"add a geometry column as the active geometry column with \"\n                    \"df.set_geometry. \"\n                )\n\n            raise AttributeError(msg)\n        return self[self._geometry_column_name]\n\n    def _set_geometry(self, col):\n        if not pd.api.types.is_list_like(col):\n            raise ValueError(\"Must use a list-like to set the geometry property\")\n        self._persist_old_default_geometry_colname()\n        self.set_geometry(col, inplace=True)\n\n    geometry = property(\n        fget=_get_geometry, fset=_set_geometry, doc=\"Geometry data for GeoDataFrame\"\n    )\n\n    def set_geometry(self, col, drop=None, inplace=False, crs=None):\n        \"\"\"\n        Set the GeoDataFrame geometry using either an existing column or\n        the specified input. By default yields a new object.\n\n        The original geometry column is replaced with the input.\n\n        Parameters\n        ----------\n        col : column label or array-like\n            An existing column name or values to set as the new geometry column.\n            If values (array-like, (Geo)Series) are passed, then if they are named\n            (Series) the new geometry column will have the corresponding name,\n            otherwise the existing geometry column will be replaced. If there is\n            no existing geometry column, the new geometry column will use the\n            default name \"geometry\".\n        drop : boolean, default False\n            When specifying a named Series or an existing column name for `col`,\n            controls if the previous geometry column should be dropped from the\n            result. The default of False keeps both the old and new geometry column.\n\n            .. deprecated:: 1.0.0\n\n        inplace : boolean, default False\n            Modify the GeoDataFrame in place (do not create a new object)\n        crs : pyproj.CRS, optional\n            Coordinate system to use. The value can be anything accepted\n            by :meth:`pyproj.CRS.from_user_input() <pyproj.crs.CRS.from_user_input>`,\n            such as an authority string (eg \"EPSG:4326\") or a WKT string.\n            If passed, overrides both DataFrame and col's crs.\n            Otherwise, tries to get crs from passed col values or DataFrame.\n\n        Examples\n        --------\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(d, crs=\"EPSG:4326\")\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n\n        Passing an array:\n\n        >>> df1 = gdf.set_geometry([Point(0,0), Point(1,1)])\n        >>> df1\n            col1     geometry\n        0  name1  POINT (0 0)\n        1  name2  POINT (1 1)\n\n        Using existing column:\n\n        >>> gdf[\"buffered\"] = gdf.buffer(2)\n        >>> df2 = gdf.set_geometry(\"buffered\")\n        >>> df2.geometry\n        0    POLYGON ((3 2, 2.99037 1.80397, 2.96157 1.6098...\n        1    POLYGON ((4 1, 3.99037 0.80397, 3.96157 0.6098...\n        Name: buffered, dtype: geometry\n\n        Returns\n        -------\n        GeoDataFrame\n\n        See also\n        --------\n        GeoDataFrame.rename_geometry : rename an active geometry column\n        \"\"\"\n        # Most of the code here is taken from DataFrame.set_index()\n        if inplace:\n            frame = self\n        else:\n            if PANDAS_GE_30:\n                frame = self.copy(deep=False)\n            else:\n                frame = self.copy()\n\n        geo_column_name = self._geometry_column_name\n\n        if geo_column_name is None:\n            geo_column_name = \"geometry\"\n        if isinstance(col, (Series, list, np.ndarray, GeometryArray)):\n            if drop:\n                msg = (\n                    \"The `drop` keyword argument is deprecated and has no effect when \"\n                    \"`col` is an array-like value. You should stop passing `drop` to \"\n                    \"`set_geometry` when this is the case.\"\n                )\n                warnings.warn(msg, category=FutureWarning, stacklevel=2)\n            if isinstance(col, Series) and col.name is not None:\n                geo_column_name = col.name\n\n            level = col\n        elif hasattr(col, \"ndim\") and col.ndim > 1:\n            raise ValueError(\"Must pass array with one dimension only.\")\n        else:  # should be a colname\n            try:\n                level = frame[col]\n            except KeyError:\n                raise ValueError(\"Unknown column %s\" % col)\n            if isinstance(level, DataFrame):\n                raise ValueError(\n                    \"GeoDataFrame does not support setting the geometry column where \"\n                    \"the column name is shared by multiple columns.\"\n                )\n\n            given_colname_drop_msg = (\n                \"The `drop` keyword argument is deprecated and in future the only \"\n                \"supported behaviour will match drop=False. To silence this \"\n                \"warning and adopt the future behaviour, stop providing \"\n                \"`drop` as a keyword to `set_geometry`. To replicate the \"\n                \"`drop=True` behaviour you should update \"\n                \"your code to\\n`geo_col_name = gdf.active_geometry_name;\"\n                \" gdf.set_geometry(new_geo_col).drop(\"\n                \"columns=geo_col_name).rename_geometry(geo_col_name)`.\"\n            )\n\n            if drop is False:  # specifically False, not falsy i.e. None\n                # User supplied False explicitly, but arg is deprecated\n                warnings.warn(\n                    given_colname_drop_msg,\n                    category=FutureWarning,\n                    stacklevel=2,\n                )\n            if drop:\n                del frame[col]\n                warnings.warn(\n                    given_colname_drop_msg,\n                    category=FutureWarning,\n                    stacklevel=2,\n                )\n            else:\n                # if not dropping, set the active geometry name to the given col name\n                geo_column_name = col\n\n        if not crs:\n            crs = getattr(level, \"crs\", None)\n\n        # Check that we are using a listlike of geometries\n        level = _ensure_geometry(level, crs=crs)\n        # ensure_geometry only sets crs on level if it has crs==None\n        if isinstance(level, GeoSeries):\n            level.array.crs = crs\n        else:\n            level.crs = crs\n        # update _geometry_column_name prior to assignment\n        # to avoid default is None warning\n        frame._geometry_column_name = geo_column_name\n        frame[geo_column_name] = level\n\n        if not inplace:\n            return frame\n\n    def rename_geometry(self, col, inplace=False):\n        \"\"\"\n        Renames the GeoDataFrame geometry column to\n        the specified name. By default yields a new object.\n\n        The original geometry column is replaced with the input.\n\n        Parameters\n        ----------\n        col : new geometry column label\n        inplace : boolean, default False\n            Modify the GeoDataFrame in place (do not create a new object)\n\n        Examples\n        --------\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> df = geopandas.GeoDataFrame(d, crs=\"EPSG:4326\")\n        >>> df1 = df.rename_geometry('geom1')\n        >>> df1.geometry.name\n        'geom1'\n        >>> df.rename_geometry('geom1', inplace=True)\n        >>> df.geometry.name\n        'geom1'\n\n        Returns\n        -------\n        geodataframe : GeoDataFrame\n\n        See also\n        --------\n        GeoDataFrame.set_geometry : set the active geometry\n        \"\"\"\n        geometry_col = self.geometry.name\n        if col in self.columns:\n            raise ValueError(f\"Column named {col} already exists\")\n        else:\n            if not inplace:\n                return self.rename(columns={geometry_col: col}).set_geometry(\n                    col, inplace=inplace\n                )\n            self.rename(columns={geometry_col: col}, inplace=inplace)\n            self.set_geometry(col, inplace=inplace)\n\n    @property\n    def active_geometry_name(self):\n        \"\"\"Return the name of the active geometry column\n\n        Returns a string name if a GeoDataFrame has an active geometry column set.\n        Otherwise returns None. You can also access the active geometry column using the\n        ``.geometry`` property. You can set a GeoSeries to be an active geometry\n        using the :meth:`~GeoDataFrame.set_geometry` method.\n\n        Returns\n        -------\n        str\n            name of an active geometry column or None\n\n        See also\n        --------\n        GeoDataFrame.set_geometry : set the active geometry\n        \"\"\"\n        return self._geometry_column_name\n\n    @property\n    def crs(self):\n        \"\"\"\n        The Coordinate Reference System (CRS) represented as a ``pyproj.CRS``\n        object.\n\n        Returns None if the CRS is not set, and to set the value it\n        :getter: Returns a ``pyproj.CRS`` or None. When setting, the value\n        can be anything accepted by\n        :meth:`pyproj.CRS.from_user_input() <pyproj.crs.CRS.from_user_input>`,\n        such as an authority string (eg \"EPSG:4326\") or a WKT string.\n\n        Examples\n        --------\n\n        >>> gdf.crs  # doctest: +SKIP\n        <Geographic 2D CRS: EPSG:4326>\n        Name: WGS 84\n        Axis Info [ellipsoidal]:\n        - Lat[north]: Geodetic latitude (degree)\n        - Lon[east]: Geodetic longitude (degree)\n        Area of Use:\n        - name: World\n        - bounds: (-180.0, -90.0, 180.0, 90.0)\n        Datum: World Geodetic System 1984\n        - Ellipsoid: WGS 84\n        - Prime Meridian: Greenwich\n\n        See also\n        --------\n        GeoDataFrame.set_crs : assign CRS\n        GeoDataFrame.to_crs : re-project to another CRS\n\n        \"\"\"\n        try:\n            return self.geometry.crs\n        except AttributeError:\n            raise AttributeError(\n                \"The CRS attribute of a GeoDataFrame without an active \"\n                \"geometry column is not defined. Use GeoDataFrame.set_geometry \"\n                \"to set the active geometry column.\"\n            )\n\n    @crs.setter\n    def crs(self, value):\n        \"\"\"Sets the value of the crs\"\"\"\n        if self._geometry_column_name is None:\n            raise ValueError(\n                \"Assigning CRS to a GeoDataFrame without a geometry column is not \"\n                \"supported. Use GeoDataFrame.set_geometry to set the active \"\n                \"geometry column.\",\n            )\n\n        if hasattr(self.geometry.values, \"crs\"):\n            if self.crs is not None:\n                warnings.warn(\n                    \"Overriding the CRS of a GeoDataFrame that already has CRS. \"\n                    \"This unsafe behavior will be deprecated in future versions. \"\n                    \"Use GeoDataFrame.set_crs method instead\",\n                    stacklevel=2,\n                    category=DeprecationWarning,\n                )\n            self.geometry.values.crs = value\n        else:\n            # column called 'geometry' without geometry\n            raise ValueError(\n                \"Assigning CRS to a GeoDataFrame without an active geometry \"\n                \"column is not supported. Use GeoDataFrame.set_geometry to set \"\n                \"the active geometry column.\",\n            )\n\n    def __setstate__(self, state):\n        # overriding DataFrame method for compat with older pickles (CRS handling)\n        crs = None\n        if isinstance(state, dict):\n            if \"crs\" in state and \"_crs\" not in state:\n                crs = state.pop(\"crs\", None)\n            else:\n                crs = state.pop(\"_crs\", None)\n            if crs is not None and not HAS_PYPROJ:\n                raise ImportError(\n                    \"Unpickling a GeoDataFrame with CRS requires the 'pyproj' package, \"\n                    \"but it is not installed or does not import correctly. \"\n                )\n            elif crs is not None:\n                from pyproj import CRS\n\n                crs = CRS.from_user_input(crs)\n\n        super().__setstate__(state)\n\n        # for some versions that didn't yet have CRS at array level -> crs is set\n        # at GeoDataFrame level with '_crs' (and not 'crs'), so without propagating\n        # to the GeoSeries/GeometryArray\n        try:\n            if crs is not None:\n                if self.geometry.values.crs is None:\n                    self.crs = crs\n        except Exception:\n            pass\n\n    @classmethod\n    def from_dict(cls, data, geometry=None, crs=None, **kwargs):\n        \"\"\"\n        Construct GeoDataFrame from dict of array-like or dicts by\n        overriding DataFrame.from_dict method with geometry and crs\n\n        Parameters\n        ----------\n        data : dict\n            Of the form {field : array-like} or {field : dict}.\n        geometry : str or array (optional)\n            If str, column to use as geometry. If array, will be set as 'geometry'\n            column on GeoDataFrame.\n        crs : str or dict (optional)\n            Coordinate reference system to set on the resulting frame.\n        kwargs : key-word arguments\n            These arguments are passed to DataFrame.from_dict\n\n        Returns\n        -------\n        GeoDataFrame\n\n        \"\"\"\n        dataframe = DataFrame.from_dict(data, **kwargs)\n        return cls(dataframe, geometry=geometry, crs=crs)\n\n    @classmethod\n    def from_file(cls, filename, **kwargs):\n        \"\"\"Alternate constructor to create a ``GeoDataFrame`` from a file.\n\n        It is recommended to use :func:`geopandas.read_file` instead.\n\n        Can load a ``GeoDataFrame`` from a file in any format recognized by\n        `pyogrio`. See http://pyogrio.readthedocs.io/ for details.\n\n        Parameters\n        ----------\n        filename : str\n            File path or file handle to read from. Depending on which kwargs\n            are included, the content of filename may vary. See\n            :func:`pyogrio.read_dataframe` for usage details.\n        kwargs : key-word arguments\n            These arguments are passed to :func:`pyogrio.read_dataframe`, and can be\n            used to access multi-layer data, data stored within archives (zip files),\n            etc.\n\n        Examples\n        --------\n        >>> import geodatasets\n        >>> path = geodatasets.get_path('nybb')\n        >>> gdf = geopandas.GeoDataFrame.from_file(path)\n        >>> gdf  # doctest: +SKIP\n           BoroCode       BoroName     Shape_Leng    Shape_Area                 \\\n                          geometry\n        0         5  Staten Island  330470.010332  1.623820e+09  MULTIPOLYGON ((\\\n(970217.022 145643.332, 970227....\n        1         4         Queens  896344.047763  3.045213e+09  MULTIPOLYGON ((\\\n(1029606.077 156073.814, 102957...\n        2         3       Brooklyn  741080.523166  1.937479e+09  MULTIPOLYGON ((\\\n(1021176.479 151374.797, 102100...\n        3         1      Manhattan  359299.096471  6.364715e+08  MULTIPOLYGON ((\\\n(981219.056 188655.316, 980940....\n        4         2          Bronx  464392.991824  1.186925e+09  MULTIPOLYGON ((\\\n(1012821.806 229228.265, 101278...\n\n        The recommended method of reading files is :func:`geopandas.read_file`:\n\n        >>> gdf = geopandas.read_file(path)\n\n        See also\n        --------\n        read_file : read file to GeoDataFame\n        GeoDataFrame.to_file : write GeoDataFrame to file\n\n        \"\"\"\n        return geopandas.io.file._read_file(filename, **kwargs)\n\n    @classmethod\n    def from_features(cls, features, crs=None, columns=None):\n        \"\"\"\n        Alternate constructor to create GeoDataFrame from an iterable of\n        features or a feature collection.\n\n        Parameters\n        ----------\n        features\n            - Iterable of features, where each element must be a feature\n              dictionary or implement the __geo_interface__.\n            - Feature collection, where the 'features' key contains an\n              iterable of features.\n            - Object holding a feature collection that implements the\n              ``__geo_interface__``.\n        crs : str or dict (optional)\n            Coordinate reference system to set on the resulting frame.\n        columns : list of column names, optional\n            Optionally specify the column names to include in the output frame.\n            This does not overwrite the property names of the input, but can\n            ensure a consistent output format.\n\n        Returns\n        -------\n        GeoDataFrame\n\n        Notes\n        -----\n        For more information about the ``__geo_interface__``, see\n        https://gist.github.com/sgillies/2217756\n\n        Examples\n        --------\n        >>> feature_coll = {\n        ...     \"type\": \"FeatureCollection\",\n        ...     \"features\": [\n        ...         {\n        ...             \"id\": \"0\",\n        ...             \"type\": \"Feature\",\n        ...             \"properties\": {\"col1\": \"name1\"},\n        ...             \"geometry\": {\"type\": \"Point\", \"coordinates\": (1.0, 2.0)},\n        ...             \"bbox\": (1.0, 2.0, 1.0, 2.0),\n        ...         },\n        ...         {\n        ...             \"id\": \"1\",\n        ...             \"type\": \"Feature\",\n        ...             \"properties\": {\"col1\": \"name2\"},\n        ...             \"geometry\": {\"type\": \"Point\", \"coordinates\": (2.0, 1.0)},\n        ...             \"bbox\": (2.0, 1.0, 2.0, 1.0),\n        ...         },\n        ...     ],\n        ...     \"bbox\": (1.0, 1.0, 2.0, 2.0),\n        ... }\n        >>> df = geopandas.GeoDataFrame.from_features(feature_coll)\n        >>> df\n              geometry   col1\n        0  POINT (1 2)  name1\n        1  POINT (2 1)  name2\n\n        \"\"\"\n        # Handle feature collections\n        if hasattr(features, \"__geo_interface__\"):\n            fs = features.__geo_interface__\n        else:\n            fs = features\n\n        if isinstance(fs, dict) and fs.get(\"type\") == \"FeatureCollection\":\n            features_lst = fs[\"features\"]\n        else:\n            features_lst = features\n\n        rows = []\n        for feature in features_lst:\n            # load geometry\n            if hasattr(feature, \"__geo_interface__\"):\n                feature = feature.__geo_interface__\n            row = {\n                \"geometry\": shape(feature[\"geometry\"]) if feature[\"geometry\"] else None\n            }\n            # load properties\n            properties = feature[\"properties\"]\n            if properties is None:\n                properties = {}\n            row.update(properties)\n            rows.append(row)\n        return cls(rows, columns=columns, crs=crs)\n\n    @classmethod\n    def from_postgis(\n        cls,\n        sql,\n        con,\n        geom_col=\"geom\",\n        crs=None,\n        index_col=None,\n        coerce_float=True,\n        parse_dates=None,\n        params=None,\n        chunksize=None,\n    ):\n        \"\"\"\n        Alternate constructor to create a ``GeoDataFrame`` from a sql query\n        containing a geometry column in WKB representation.\n\n        Parameters\n        ----------\n        sql : string\n        con : sqlalchemy.engine.Connection or sqlalchemy.engine.Engine\n        geom_col : string, default 'geom'\n            column name to convert to shapely geometries\n        crs : optional\n            Coordinate reference system to use for the returned GeoDataFrame\n        index_col : string or list of strings, optional, default: None\n            Column(s) to set as index(MultiIndex)\n        coerce_float : boolean, default True\n            Attempt to convert values of non-string, non-numeric objects (like\n            decimal.Decimal) to floating point, useful for SQL result sets\n        parse_dates : list or dict, default None\n            - List of column names to parse as dates.\n            - Dict of ``{column_name: format string}`` where format string is\n              strftime compatible in case of parsing string times, or is one of\n              (D, s, ns, ms, us) in case of parsing integer timestamps.\n            - Dict of ``{column_name: arg dict}``, where the arg dict\n              corresponds to the keyword arguments of\n              :func:`pandas.to_datetime`. Especially useful with databases\n              without native Datetime support, such as SQLite.\n        params : list, tuple or dict, optional, default None\n            List of parameters to pass to execute method.\n        chunksize : int, default None\n            If specified, return an iterator where chunksize is the number\n            of rows to include in each chunk.\n\n        Examples\n        --------\n        PostGIS\n\n        >>> from sqlalchemy import create_engine  # doctest: +SKIP\n        >>> db_connection_url = \"postgresql://myusername:mypassword@myhost:5432/mydb\"\n        >>> con = create_engine(db_connection_url)  # doctest: +SKIP\n        >>> sql = \"SELECT geom, highway FROM roads\"\n        >>> df = geopandas.GeoDataFrame.from_postgis(sql, con)  # doctest: +SKIP\n\n        SpatiaLite\n\n        >>> sql = \"SELECT ST_Binary(geom) AS geom, highway FROM roads\"\n        >>> df = geopandas.GeoDataFrame.from_postgis(sql, con)  # doctest: +SKIP\n\n        The recommended method of reading from PostGIS is\n        :func:`geopandas.read_postgis`:\n\n        >>> df = geopandas.read_postgis(sql, con)  # doctest: +SKIP\n\n        See also\n        --------\n        geopandas.read_postgis : read PostGIS database to GeoDataFrame\n        \"\"\"\n\n        df = geopandas.io.sql._read_postgis(\n            sql,\n            con,\n            geom_col=geom_col,\n            crs=crs,\n            index_col=index_col,\n            coerce_float=coerce_float,\n            parse_dates=parse_dates,\n            params=params,\n            chunksize=chunksize,\n        )\n\n        return df\n\n    @classmethod\n    def from_arrow(cls, table, geometry=None):\n        \"\"\"\n        Construct a GeoDataFrame from a Arrow table object based on GeoArrow\n        extension types.\n\n        See https://geoarrow.org/ for details on the GeoArrow specification.\n\n        This functions accepts any tabular Arrow object implementing\n        the `Arrow PyCapsule Protocol`_ (i.e. having an ``__arrow_c_array__``\n        or ``__arrow_c_stream__`` method).\n\n        .. _Arrow PyCapsule Protocol: https://arrow.apache.org/docs/format/CDataInterface/PyCapsuleInterface.html\n\n        .. versionadded:: 1.0\n\n        Parameters\n        ----------\n        table : pyarrow.Table or Arrow-compatible table\n            Any tabular object implementing the Arrow PyCapsule Protocol\n            (i.e. has an ``__arrow_c_array__`` or ``__arrow_c_stream__``\n            method). This table should have at least one column with a\n            geoarrow geometry type.\n        geometry : str, default None\n            The name of the geometry column to set as the active geometry\n            column. If None, the first geometry column found will be used.\n\n        Returns\n        -------\n        GeoDataFrame\n\n        \"\"\"\n        from geopandas.io._geoarrow import arrow_to_geopandas\n\n        return arrow_to_geopandas(table, geometry=geometry)\n\n    def to_json(\n        self, na=\"null\", show_bbox=False, drop_id=False, to_wgs84=False, **kwargs\n    ):\n        \"\"\"\n        Returns a GeoJSON representation of the ``GeoDataFrame`` as a string.\n\n        Parameters\n        ----------\n        na : {'null', 'drop', 'keep'}, default 'null'\n            Indicates how to output missing (NaN) values in the GeoDataFrame.\n            See below.\n        show_bbox : bool, optional, default: False\n            Include bbox (bounds) in the geojson\n        drop_id : bool, default: False\n            Whether to retain the index of the GeoDataFrame as the id property\n            in the generated GeoJSON. Default is False, but may want True\n            if the index is just arbitrary row numbers.\n        to_wgs84: bool, optional, default: False\n            If the CRS is set on the active geometry column it is exported as\n            WGS84 (EPSG:4326) to meet the `2016 GeoJSON specification\n            <https://tools.ietf.org/html/rfc7946>`_.\n            Set to True to force re-projection and set to False to ignore CRS. False by\n            default.\n\n        Notes\n        -----\n        The remaining *kwargs* are passed to json.dumps().\n\n        Missing (NaN) values in the GeoDataFrame can be represented as follows:\n\n        - ``null``: output the missing entries as JSON null.\n        - ``drop``: remove the property from the feature. This applies to each\n          feature individually so that features may have different properties.\n        - ``keep``: output the missing entries as NaN.\n\n        If the GeoDataFrame has a defined CRS, its definition will be included\n        in the output unless it is equal to WGS84 (default GeoJSON CRS) or not\n        possible to represent in the URN OGC format, or unless ``to_wgs84=True``\n        is specified.\n\n        Examples\n        --------\n\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(d, crs=\"EPSG:3857\")\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n\n        >>> gdf.to_json()\n        '{\"type\": \"FeatureCollection\", \"features\": [{\"id\": \"0\", \"type\": \"Feature\", \\\n\"properties\": {\"col1\": \"name1\"}, \"geometry\": {\"type\": \"Point\", \"coordinates\": [1.0,\\\n 2.0]}}, {\"id\": \"1\", \"type\": \"Feature\", \"properties\": {\"col1\": \"name2\"}, \"geometry\"\\\n: {\"type\": \"Point\", \"coordinates\": [2.0, 1.0]}}], \"crs\": {\"type\": \"name\", \"properti\\\nes\": {\"name\": \"urn:ogc:def:crs:EPSG::3857\"}}}'\n\n        Alternatively, you can write GeoJSON to file:\n\n        >>> gdf.to_file(path, driver=\"GeoJSON\")  # doctest: +SKIP\n\n        See also\n        --------\n        GeoDataFrame.to_file : write GeoDataFrame to file\n\n        \"\"\"\n        if to_wgs84:\n            if self.crs:\n                df = self.to_crs(epsg=4326)\n            else:\n                raise ValueError(\n                    \"CRS is not set. Cannot re-project to WGS84 (EPSG:4326).\"\n                )\n        else:\n            df = self\n\n        geo = df.to_geo_dict(na=na, show_bbox=show_bbox, drop_id=drop_id)\n\n        # if the geometry is not in WGS84, include CRS in the JSON\n        if df.crs is not None and not df.crs.equals(\"epsg:4326\"):\n            auth_crsdef = self.crs.to_authority()\n            allowed_authorities = [\"EDCS\", \"EPSG\", \"OGC\", \"SI\", \"UCUM\"]\n\n            if auth_crsdef is None or auth_crsdef[0] not in allowed_authorities:\n                warnings.warn(\n                    \"GeoDataFrame's CRS is not representable in URN OGC \"\n                    \"format. Resulting JSON will contain no CRS information.\",\n                    stacklevel=2,\n                )\n            else:\n                authority, code = auth_crsdef\n                ogc_crs = f\"urn:ogc:def:crs:{authority}::{code}\"\n                geo[\"crs\"] = {\"type\": \"name\", \"properties\": {\"name\": ogc_crs}}\n\n        return json.dumps(geo, **kwargs)\n\n    @property\n    def __geo_interface__(self):\n        \"\"\"Returns a ``GeoDataFrame`` as a python feature collection.\n\n        Implements the `geo_interface`. The returned python data structure\n        represents the ``GeoDataFrame`` as a GeoJSON-like\n        ``FeatureCollection``.\n\n        This differs from :meth:`to_geo_dict` only in that it is a property with\n        default args instead of a method.\n\n        CRS of the dataframe is not passed on to the output, unlike\n        :meth:`~GeoDataFrame.to_json()`.\n\n        Examples\n        --------\n\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(d, crs=\"EPSG:4326\")\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n\n        >>> gdf.__geo_interface__\n        {'type': 'FeatureCollection', 'features': [{'id': '0', 'type': 'Feature', \\\n'properties': {'col1': 'name1'}, 'geometry': {'type': 'Point', 'coordinates': (1.0\\\n, 2.0)}, 'bbox': (1.0, 2.0, 1.0, 2.0)}, {'id': '1', 'type': 'Feature', 'properties\\\n': {'col1': 'name2'}, 'geometry': {'type': 'Point', 'coordinates': (2.0, 1.0)}, 'b\\\nbox': (2.0, 1.0, 2.0, 1.0)}], 'bbox': (1.0, 1.0, 2.0, 2.0)}\n        \"\"\"\n        return self.to_geo_dict(na=\"null\", show_bbox=True, drop_id=False)\n\n    def iterfeatures(self, na=\"null\", show_bbox=False, drop_id=False):\n        \"\"\"\n        Returns an iterator that yields feature dictionaries that comply with\n        __geo_interface__\n\n        Parameters\n        ----------\n        na : str, optional\n            Options are {'null', 'drop', 'keep'}, default 'null'.\n            Indicates how to output missing (NaN) values in the GeoDataFrame\n\n            - null: output the missing entries as JSON null\n            - drop: remove the property from the feature. This applies to each feature \\\nindividually so that features may have different properties\n            - keep: output the missing entries as NaN\n\n        show_bbox : bool, optional\n            Include bbox (bounds) in the geojson. Default False.\n        drop_id : bool, default: False\n            Whether to retain the index of the GeoDataFrame as the id property\n            in the generated GeoJSON. Default is False, but may want True\n            if the index is just arbitrary row numbers.\n\n        Examples\n        --------\n\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(d, crs=\"EPSG:4326\")\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n\n        >>> feature = next(gdf.iterfeatures())\n        >>> feature\n        {'id': '0', 'type': 'Feature', 'properties': {'col1': 'name1'}, 'geometry': {\\\n'type': 'Point', 'coordinates': (1.0, 2.0)}}\n        \"\"\"\n        if na not in [\"null\", \"drop\", \"keep\"]:\n            raise ValueError(\"Unknown na method {0}\".format(na))\n\n        if self._geometry_column_name not in self:\n            raise AttributeError(\n                \"No geometry data set (expected in column '%s').\"\n                % self._geometry_column_name\n            )\n\n        ids = np.array(self.index, copy=False)\n        geometries = np.array(self[self._geometry_column_name], copy=False)\n\n        if not self.columns.is_unique:\n            raise ValueError(\"GeoDataFrame cannot contain duplicated column names.\")\n\n        properties_cols = self.columns.drop(self._geometry_column_name)\n\n        if len(properties_cols) > 0:\n            # convert to object to get python scalars.\n            properties_cols = self[properties_cols]\n            properties = properties_cols.astype(object)\n            na_mask = pd.isna(properties_cols).values\n\n            if na == \"null\":\n                properties[na_mask] = None\n\n            for i, row in enumerate(properties.values):\n                geom = geometries[i]\n\n                if na == \"drop\":\n                    na_mask_row = na_mask[i]\n                    properties_items = {\n                        k: v\n                        for k, v, na in zip(properties_cols, row, na_mask_row)\n                        if not na\n                    }\n                else:\n                    properties_items = dict(zip(properties_cols, row))\n\n                if drop_id:\n                    feature = {}\n                else:\n                    feature = {\"id\": str(ids[i])}\n\n                feature[\"type\"] = \"Feature\"\n                feature[\"properties\"] = properties_items\n                feature[\"geometry\"] = mapping(geom) if geom else None\n\n                if show_bbox:\n                    feature[\"bbox\"] = geom.bounds if geom else None\n\n                yield feature\n\n        else:\n            for fid, geom in zip(ids, geometries):\n                if drop_id:\n                    feature = {}\n                else:\n                    feature = {\"id\": str(fid)}\n\n                feature[\"type\"] = \"Feature\"\n                feature[\"properties\"] = {}\n                feature[\"geometry\"] = mapping(geom) if geom else None\n\n                if show_bbox:\n                    feature[\"bbox\"] = geom.bounds if geom else None\n\n                yield feature\n\n    def to_geo_dict(self, na=\"null\", show_bbox=False, drop_id=False):\n        \"\"\"\n        Returns a python feature collection representation of the GeoDataFrame\n        as a dictionary with a list of features based on the ``__geo_interface__``\n        GeoJSON-like specification.\n\n        Parameters\n        ----------\n        na : str, optional\n            Options are {'null', 'drop', 'keep'}, default 'null'.\n            Indicates how to output missing (NaN) values in the GeoDataFrame\n\n            - null: output the missing entries as JSON null\n            - drop: remove the property from the feature. This applies to each feature \\\nindividually so that features may have different properties\n            - keep: output the missing entries as NaN\n\n        show_bbox : bool, optional\n            Include bbox (bounds) in the geojson. Default False.\n        drop_id : bool, default: False\n            Whether to retain the index of the GeoDataFrame as the id property\n            in the generated dictionary. Default is False, but may want True\n            if the index is just arbitrary row numbers.\n\n        Examples\n        --------\n\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(d)\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n\n        >>> gdf.to_geo_dict()\n        {'type': 'FeatureCollection', 'features': [{'id': '0', 'type': 'Feature', '\\\nproperties': {'col1': 'name1'}, 'geometry': {'type': 'Point', 'coordinates': (1.0, \\\n2.0)}}, {'id': '1', 'type': 'Feature', 'properties': {'col1': 'name2'}, 'geometry':\\\n {'type': 'Point', 'coordinates': (2.0, 1.0)}}]}\n\n        See also\n        --------\n        GeoDataFrame.to_json : return a GeoDataFrame as a GeoJSON string\n\n        \"\"\"\n        geo = {\n            \"type\": \"FeatureCollection\",\n            \"features\": list(\n                self.iterfeatures(na=na, show_bbox=show_bbox, drop_id=drop_id)\n            ),\n        }\n\n        if show_bbox:\n            geo[\"bbox\"] = tuple(self.total_bounds)\n\n        return geo\n\n    def to_wkb(self, hex=False, **kwargs):\n        \"\"\"\n        Encode all geometry columns in the GeoDataFrame to WKB.\n\n        Parameters\n        ----------\n        hex : bool\n            If true, export the WKB as a hexadecimal string.\n            The default is to return a binary bytes object.\n        kwargs\n            Additional keyword args will be passed to\n            :func:`shapely.to_wkb`.\n\n        Returns\n        -------\n        DataFrame\n            geometry columns are encoded to WKB\n        \"\"\"\n\n        df = DataFrame(self.copy())\n\n        # Encode all geometry columns to WKB\n        for col in df.columns[df.dtypes == \"geometry\"]:\n            df[col] = to_wkb(df[col].values, hex=hex, **kwargs)\n\n        return df\n\n    def to_wkt(self, **kwargs):\n        \"\"\"\n        Encode all geometry columns in the GeoDataFrame to WKT.\n\n        Parameters\n        ----------\n        kwargs\n            Keyword args will be passed to :func:`shapely.to_wkt`.\n\n        Returns\n        -------\n        DataFrame\n            geometry columns are encoded to WKT\n        \"\"\"\n\n        df = DataFrame(self.copy())\n\n        # Encode all geometry columns to WKT\n        for col in df.columns[df.dtypes == \"geometry\"]:\n            df[col] = to_wkt(df[col].values, **kwargs)\n\n        return df\n\n    def to_arrow(\n        self, *, index=None, geometry_encoding=\"WKB\", interleaved=True, include_z=None\n    ):\n        \"\"\"Encode a GeoDataFrame to GeoArrow format.\n\n        See https://geoarrow.org/ for details on the GeoArrow specification.\n\n        This functions returns a generic Arrow data object implementing\n        the `Arrow PyCapsule Protocol`_ (i.e. having an ``__arrow_c_stream__``\n        method). This object can then be consumed by your Arrow implementation\n        of choice that supports this protocol.\n\n        .. _Arrow PyCapsule Protocol: https://arrow.apache.org/docs/format/CDataInterface/PyCapsuleInterface.html\n\n        .. versionadded:: 1.0\n\n        Parameters\n        ----------\n        index : bool, default None\n            If ``True``, always include the dataframe's index(es) as columns\n            in the file output.\n            If ``False``, the index(es) will not be written to the file.\n            If ``None``, the index(ex) will be included as columns in the file\n            output except `RangeIndex` which is stored as metadata only.\n        geometry_encoding : {'WKB', 'geoarrow' }, default 'WKB'\n            The GeoArrow encoding to use for the data conversion.\n        interleaved : bool, default True\n            Only relevant for 'geoarrow' encoding. If True, the geometries'\n            coordinates are interleaved in a single fixed size list array.\n            If False, the coordinates are stored as separate arrays in a\n            struct type.\n        include_z : bool, default None\n            Only relevant for 'geoarrow' encoding (for WKB, the dimensionality\n            of the individial geometries is preserved).\n            If False, return 2D geometries. If True, include the third dimension\n            in the output (if a geometry has no third dimension, the z-coordinates\n            will be NaN). By default, will infer the dimensionality from the\n            input geometries. Note that this inference can be unreliable with\n            empty geometries (for a guaranteed result, it is recommended to\n            specify the keyword).\n\n        Returns\n        -------\n        ArrowTable\n            A generic Arrow table object with geometry columns encoded to\n            GeoArrow.\n\n        Examples\n        --------\n        >>> from shapely.geometry import Point\n        >>> data = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(data)\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n\n        >>> arrow_table = gdf.to_arrow()\n        >>> arrow_table\n        <geopandas.io._geoarrow.ArrowTable object at ...>\n\n        The returned data object needs to be consumed by a library implementing\n        the Arrow PyCapsule Protocol. For example, wrapping the data as a\n        pyarrow.Table (requires pyarrow >= 14.0):\n\n        >>> import pyarrow as pa\n        >>> table = pa.table(arrow_table)\n        >>> table\n        pyarrow.Table\n        col1: string\n        geometry: binary\n        ----\n        col1: [[\"name1\",\"name2\"]]\n        geometry: [[0101000000000000000000F03F0000000000000040,\\\n01010000000000000000000040000000000000F03F]]\n\n        \"\"\"\n        from geopandas.io._geoarrow import ArrowTable, geopandas_to_arrow\n\n        table, _ = geopandas_to_arrow(\n            self,\n            index=index,\n            geometry_encoding=geometry_encoding,\n            interleaved=interleaved,\n            include_z=include_z,\n        )\n        return ArrowTable(table)\n\n    def to_parquet(\n        self,\n        path,\n        index=None,\n        compression=\"snappy\",\n        geometry_encoding=\"WKB\",\n        write_covering_bbox=False,\n        schema_version=None,\n        **kwargs,\n    ):\n        \"\"\"Write a GeoDataFrame to the Parquet format.\n\n        By default, all geometry columns present are serialized to WKB format\n        in the file.\n\n        Requires 'pyarrow'.\n\n        .. versionadded:: 0.8\n\n        Parameters\n        ----------\n        path : str, path object\n        index : bool, default None\n            If ``True``, always include the dataframe's index(es) as columns\n            in the file output.\n            If ``False``, the index(es) will not be written to the file.\n            If ``None``, the index(ex) will be included as columns in the file\n            output except `RangeIndex` which is stored as metadata only.\n        compression : {'snappy', 'gzip', 'brotli', None}, default 'snappy'\n            Name of the compression to use. Use ``None`` for no compression.\n        geometry_encoding : {'WKB', 'geoarrow'}, default 'WKB'\n            The encoding to use for the geometry columns. Defaults to \"WKB\"\n            for maximum interoperability. Specify \"geoarrow\" to use one of the\n            native GeoArrow-based single-geometry type encodings.\n            Note: the \"geoarrow\" option is part of the newer GeoParquet 1.1\n            specification, should be considered as experimental, and may not\n            be supported by all readers.\n        write_covering_bbox : bool, default False\n            Writes the bounding box column for each row entry with column\n            name 'bbox'. Writing a bbox column can be computationally\n            expensive, but allows you to specify a `bbox` in :\n            func:`read_parquet` for filtered reading.\n            Note: this bbox column is part of the newer GeoParquet 1.1\n            specification and should be considered as experimental. While\n            writing the column is backwards compatible, using it for filtering\n            may not be supported by all readers.\n        schema_version : {'0.1.0', '0.4.0', '1.0.0', '1.1.0', None}\n            GeoParquet specification version; if not provided, will default to\n            latest supported stable version (1.0.0).\n        kwargs\n            Additional keyword arguments passed to :func:`pyarrow.parquet.write_table`.\n\n        Examples\n        --------\n\n        >>> gdf.to_parquet('data.parquet')  # doctest: +SKIP\n\n        See also\n        --------\n        GeoDataFrame.to_feather : write GeoDataFrame to feather\n        GeoDataFrame.to_file : write GeoDataFrame to file\n        \"\"\"\n\n        # Accept engine keyword for compatibility with pandas.DataFrame.to_parquet\n        # The only engine currently supported by GeoPandas is pyarrow, so no\n        # other engine should be specified.\n        engine = kwargs.pop(\"engine\", \"auto\")\n        if engine not in (\"auto\", \"pyarrow\"):\n            raise ValueError(\n                \"GeoPandas only supports using pyarrow as the engine for \"\n                f\"to_parquet: {engine!r} passed instead.\"\n            )\n\n        from geopandas.io.arrow import _to_parquet\n\n        _to_parquet(\n            self,\n            path,\n            compression=compression,\n            geometry_encoding=geometry_encoding,\n            index=index,\n            schema_version=schema_version,\n            write_covering_bbox=write_covering_bbox,\n            **kwargs,\n        )\n\n    def to_feather(\n        self, path, index=None, compression=None, schema_version=None, **kwargs\n    ):\n        \"\"\"Write a GeoDataFrame to the Feather format.\n\n        Any geometry columns present are serialized to WKB format in the file.\n\n        Requires 'pyarrow' >= 0.17.\n\n        .. versionadded:: 0.8\n\n        Parameters\n        ----------\n        path : str, path object\n        index : bool, default None\n            If ``True``, always include the dataframe's index(es) as columns\n            in the file output.\n            If ``False``, the index(es) will not be written to the file.\n            If ``None``, the index(ex) will be included as columns in the file\n            output except `RangeIndex` which is stored as metadata only.\n        compression : {'zstd', 'lz4', 'uncompressed'}, optional\n            Name of the compression to use. Use ``\"uncompressed\"`` for no\n            compression. By default uses LZ4 if available, otherwise uncompressed.\n        schema_version : {'0.1.0', '0.4.0', '1.0.0', None}\n            GeoParquet specification version; if not provided will default to\n            latest supported version.\n        kwargs\n            Additional keyword arguments passed to to\n            :func:`pyarrow.feather.write_feather`.\n\n        Examples\n        --------\n\n        >>> gdf.to_feather('data.feather')  # doctest: +SKIP\n\n        See also\n        --------\n        GeoDataFrame.to_parquet : write GeoDataFrame to parquet\n        GeoDataFrame.to_file : write GeoDataFrame to file\n        \"\"\"\n\n        from geopandas.io.arrow import _to_feather\n\n        _to_feather(\n            self,\n            path,\n            index=index,\n            compression=compression,\n            schema_version=schema_version,\n            **kwargs,\n        )\n\n    def to_file(self, filename, driver=None, schema=None, index=None, **kwargs):\n        \"\"\"Write the ``GeoDataFrame`` to a file.\n\n        By default, an ESRI shapefile is written, but any OGR data source\n        supported by Pyogrio or Fiona can be written. A dictionary of supported OGR\n        providers is available via:\n\n        >>> import pyogrio\n        >>> pyogrio.list_drivers()  # doctest: +SKIP\n\n        Parameters\n        ----------\n        filename : string\n            File path or file handle to write to. The path may specify a\n            GDAL VSI scheme.\n        driver : string, default None\n            The OGR format driver used to write the vector file.\n            If not specified, it attempts to infer it from the file extension.\n            If no extension is specified, it saves ESRI Shapefile to a folder.\n        schema : dict, default None\n            If specified, the schema dictionary is passed to Fiona to\n            better control how the file is written. If None, GeoPandas\n            will determine the schema based on each column's dtype.\n            Not supported for the \"pyogrio\" engine.\n        index : bool, default None\n            If True, write index into one or more columns (for MultiIndex).\n            Default None writes the index into one or more columns only if\n            the index is named, is a MultiIndex, or has a non-integer data\n            type. If False, no index is written.\n\n            .. versionadded:: 0.7\n                Previously the index was not written.\n        mode : string, default 'w'\n            The write mode, 'w' to overwrite the existing file and 'a' to append.\n            Not all drivers support appending. The drivers that support appending\n            are listed in fiona.supported_drivers or\n            https://github.com/Toblerity/Fiona/blob/master/fiona/drvsupport.py\n        crs : pyproj.CRS, default None\n            If specified, the CRS is passed to Fiona to\n            better control how the file is written. If None, GeoPandas\n            will determine the crs based on crs df attribute.\n            The value can be anything accepted\n            by :meth:`pyproj.CRS.from_user_input() <pyproj.crs.CRS.from_user_input>`,\n            such as an authority string (eg \"EPSG:4326\") or a WKT string. The keyword\n            is not supported for the \"pyogrio\" engine.\n        engine : str, \"pyogrio\" or \"fiona\"\n            The underlying library that is used to write the file. Currently, the\n            supported options are \"pyogrio\" and \"fiona\". Defaults to \"pyogrio\" if\n            installed, otherwise tries \"fiona\".\n        metadata : dict[str, str], default None\n            Optional metadata to be stored in the file. Keys and values must be\n            strings. Supported only for \"GPKG\" driver.\n        **kwargs :\n            Keyword args to be passed to the engine, and can be used to write\n            to multi-layer data, store data within archives (zip files), etc.\n            In case of the \"pyogrio\" engine, the keyword arguments are passed to\n            `pyogrio.write_dataframe`. In case of the \"fiona\" engine, the keyword\n            arguments are passed to fiona.open`. For more information on possible\n            keywords, type: ``import pyogrio; help(pyogrio.write_dataframe)``.\n\n        Notes\n        -----\n        The format drivers will attempt to detect the encoding of your data, but\n        may fail. In this case, the proper encoding can be specified explicitly\n        by using the encoding keyword parameter, e.g. ``encoding='utf-8'``.\n\n        See Also\n        --------\n        GeoSeries.to_file\n        GeoDataFrame.to_postgis : write GeoDataFrame to PostGIS database\n        GeoDataFrame.to_parquet : write GeoDataFrame to parquet\n        GeoDataFrame.to_feather : write GeoDataFrame to feather\n\n        Examples\n        --------\n\n        >>> gdf.to_file('dataframe.shp')  # doctest: +SKIP\n\n        >>> gdf.to_file('dataframe.gpkg', driver='GPKG', layer='name')  # doctest: +SKIP\n\n        >>> gdf.to_file('dataframe.geojson', driver='GeoJSON')  # doctest: +SKIP\n\n        With selected drivers you can also append to a file with `mode=\"a\"`:\n\n        >>> gdf.to_file('dataframe.shp', mode=\"a\")  # doctest: +SKIP\n\n        Using the engine-specific keyword arguments it is possible to e.g. create a\n        spatialite file with a custom layer name:\n\n        >>> gdf.to_file(\n        ...     'dataframe.sqlite', driver='SQLite', spatialite=True, layer='test'\n        ... )  # doctest: +SKIP\n\n        \"\"\"\n        from geopandas.io.file import _to_file\n\n        _to_file(self, filename, driver, schema, index, **kwargs)\n\n    def set_crs(self, crs=None, epsg=None, inplace=False, allow_override=False):\n        \"\"\"\n        Set the Coordinate Reference System (CRS) of the ``GeoDataFrame``.\n\n        If there are multiple geometry columns within the GeoDataFrame, only\n        the CRS of the active geometry column is set.\n\n        Pass ``None`` to remove CRS from the active geometry column.\n\n        Notes\n        -----\n        The underlying geometries are not transformed to this CRS. To\n        transform the geometries to a new CRS, use the ``to_crs`` method.\n\n        Parameters\n        ----------\n        crs : pyproj.CRS | None, optional\n            The value can be anything accepted\n            by :meth:`pyproj.CRS.from_user_input() <pyproj.crs.CRS.from_user_input>`,\n            such as an authority string (eg \"EPSG:4326\") or a WKT string.\n        epsg : int, optional\n            EPSG code specifying the projection.\n        inplace : bool, default False\n            If True, the CRS of the GeoDataFrame will be changed in place\n            (while still returning the result) instead of making a copy of\n            the GeoDataFrame.\n        allow_override : bool, default False\n            If the the GeoDataFrame already has a CRS, allow to replace the\n            existing CRS, even when both are not equal.\n\n        Examples\n        --------\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(d)\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n\n        Setting CRS to a GeoDataFrame without one:\n\n        >>> gdf.crs is None\n        True\n\n        >>> gdf = gdf.set_crs('epsg:3857')\n        >>> gdf.crs  # doctest: +SKIP\n        <Projected CRS: EPSG:3857>\n        Name: WGS 84 / Pseudo-Mercator\n        Axis Info [cartesian]:\n        - X[east]: Easting (metre)\n        - Y[north]: Northing (metre)\n        Area of Use:\n        - name: World - 85\u00b0S to 85\u00b0N\n        - bounds: (-180.0, -85.06, 180.0, 85.06)\n        Coordinate Operation:\n        - name: Popular Visualisation Pseudo-Mercator\n        - method: Popular Visualisation Pseudo Mercator\n        Datum: World Geodetic System 1984\n        - Ellipsoid: WGS 84\n        - Prime Meridian: Greenwich\n\n        Overriding existing CRS:\n\n        >>> gdf = gdf.set_crs(4326, allow_override=True)\n\n        Without ``allow_override=True``, ``set_crs`` returns an error if you try to\n        override CRS.\n\n        See also\n        --------\n        GeoDataFrame.to_crs : re-project to another CRS\n\n        \"\"\"\n        if not inplace:\n            df = self.copy()\n        else:\n            df = self\n        df.geometry = df.geometry.set_crs(\n            crs=crs, epsg=epsg, allow_override=allow_override, inplace=True\n        )\n        return df\n\n    def to_crs(self, crs=None, epsg=None, inplace=False):\n        \"\"\"Transform geometries to a new coordinate reference system.\n\n        Transform all geometries in an active geometry column to a different coordinate\n        reference system.  The ``crs`` attribute on the current GeoSeries must\n        be set.  Either ``crs`` or ``epsg`` may be specified for output.\n\n        This method will transform all points in all objects. It has no notion\n        of projecting entire geometries.  All segments joining points are\n        assumed to be lines in the current projection, not geodesics. Objects\n        crossing the dateline (or other projection boundary) will have\n        undesirable behavior.\n\n        Parameters\n        ----------\n        crs : pyproj.CRS, optional if `epsg` is specified\n            The value can be anything accepted by\n            :meth:`pyproj.CRS.from_user_input() <pyproj.crs.CRS.from_user_input>`,\n            such as an authority string (eg \"EPSG:4326\") or a WKT string.\n        epsg : int, optional if `crs` is specified\n            EPSG code specifying output projection.\n        inplace : bool, optional, default: False\n            Whether to return a new GeoDataFrame or do the transformation in\n            place.\n\n        Returns\n        -------\n        GeoDataFrame\n\n        Examples\n        --------\n        >>> from shapely.geometry import Point\n        >>> d = {'col1': ['name1', 'name2'], 'geometry': [Point(1, 2), Point(2, 1)]}\n        >>> gdf = geopandas.GeoDataFrame(d, crs=4326)\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n        >>> gdf.crs  # doctest: +SKIP\n        <Geographic 2D CRS: EPSG:4326>\n        Name: WGS 84\n        Axis Info [ellipsoidal]:\n        - Lat[north]: Geodetic latitude (degree)\n        - Lon[east]: Geodetic longitude (degree)\n        Area of Use:\n        - name: World\n        - bounds: (-180.0, -90.0, 180.0, 90.0)\n        Datum: World Geodetic System 1984\n        - Ellipsoid: WGS 84\n        - Prime Meridian: Greenwich\n\n        >>> gdf = gdf.to_crs(3857)\n        >>> gdf\n            col1                       geometry\n        0  name1  POINT (111319.491 222684.209)\n        1  name2  POINT (222638.982 111325.143)\n        >>> gdf.crs  # doctest: +SKIP\n        <Projected CRS: EPSG:3857>\n        Name: WGS 84 / Pseudo-Mercator\n        Axis Info [cartesian]:\n        - X[east]: Easting (metre)\n        - Y[north]: Northing (metre)\n        Area of Use:\n        - name: World - 85\u00b0S to 85\u00b0N\n        - bounds: (-180.0, -85.06, 180.0, 85.06)\n        Coordinate Operation:\n        - name: Popular Visualisation Pseudo-Mercator\n        - method: Popular Visualisation Pseudo Mercator\n        Datum: World Geodetic System 1984\n        - Ellipsoid: WGS 84\n        - Prime Meridian: Greenwich\n\n        See also\n        --------\n        GeoDataFrame.set_crs : assign CRS without re-projection\n        \"\"\"\n        if inplace:\n            df = self\n        else:\n            df = self.copy()\n        geom = df.geometry.to_crs(crs=crs, epsg=epsg)\n        df.geometry = geom\n        if not inplace:\n            return df\n\n    def estimate_utm_crs(self, datum_name=\"WGS 84\"):\n        \"\"\"Returns the estimated UTM CRS based on the bounds of the dataset.\n\n        .. versionadded:: 0.9\n\n        Parameters\n        ----------\n        datum_name : str, optional\n            The name of the datum to use in the query. Default is WGS 84.\n\n        Returns\n        -------\n        pyproj.CRS\n\n        Examples\n        --------\n        >>> import geodatasets\n        >>> df = geopandas.read_file(\n        ...     geodatasets.get_path(\"geoda.chicago_health\")\n        ... )\n        >>> df.estimate_utm_crs()  # doctest: +SKIP\n        <Derived Projected CRS: EPSG:32616>\n        Name: WGS 84 / UTM zone 16N\n        Axis Info [cartesian]:\n        - E[east]: Easting (metre)\n        - N[north]: Northing (metre)\n        Area of Use:\n        - name: Between 90\u00b0W and 84\u00b0W, northern hemisphere between equator and 84\u00b0N...\n        - bounds: (-90.0, 0.0, -84.0, 84.0)\n        Coordinate Operation:\n        - name: UTM zone 16N\n        - method: Transverse Mercator\n        Datum: World Geodetic System 1984 ensemble\n        - Ellipsoid: WGS 84\n        - Prime Meridian: Greenwich\n        \"\"\"\n        return self.geometry.estimate_utm_crs(datum_name=datum_name)\n\n    def __getitem__(self, key):\n        \"\"\"\n        If the result is a column containing only 'geometry', return a\n        GeoSeries. If it's a DataFrame with any columns of GeometryDtype,\n        return a GeoDataFrame.\n        \"\"\"\n        result = super().__getitem__(key)\n        # Custom logic to avoid waiting for pandas GH51895\n        # result is not geometry dtype for multi-indexes\n        if (\n            pd.api.types.is_scalar(key)\n            and key == \"\"\n            and isinstance(self.columns, pd.MultiIndex)\n            and isinstance(result, Series)\n            and not is_geometry_type(result)\n        ):\n            loc = self.columns.get_loc(key)\n            # squeeze stops multilevel columns from returning a gdf\n            result = self.iloc[:, loc].squeeze(axis=\"columns\")\n        geo_col = self._geometry_column_name\n        if isinstance(result, Series) and isinstance(result.dtype, GeometryDtype):\n            result.__class__ = GeoSeries\n        elif isinstance(result, DataFrame):\n            if (result.dtypes == \"geometry\").sum() > 0:\n                result.__class__ = GeoDataFrame\n                if geo_col in result:\n                    result._geometry_column_name = geo_col\n            else:\n                result.__class__ = DataFrame\n        return result\n\n    def _persist_old_default_geometry_colname(self):\n        \"\"\"Internal util to temporarily persist the default geometry column\n        name of 'geometry' for backwards compatibility.\"\"\"\n        # self.columns check required to avoid this warning in __init__\n        if self._geometry_column_name is None and \"geometry\" not in self.columns:\n            msg = (\n                \"You are adding a column named 'geometry' to a GeoDataFrame \"\n                \"constructed without an active geometry column. Currently, \"\n                \"this automatically sets the active geometry column to 'geometry' \"\n                \"but in the future that will no longer happen. Instead, either \"\n                \"provide geometry to the GeoDataFrame constructor \"\n                \"(GeoDataFrame(... geometry=GeoSeries()) or use \"\n                \"`set_geometry('geometry')` \"\n                \"to explicitly set the active geometry column.\"\n            )\n            warnings.warn(msg, category=FutureWarning, stacklevel=3)\n            self._geometry_column_name = \"geometry\"\n\n    def __setitem__(self, key, value):\n        \"\"\"\n        Overwritten to preserve CRS of GeometryArray in cases like\n        df['geometry'] = [geom... for geom in df.geometry]\n        \"\"\"\n\n        if not pd.api.types.is_list_like(key) and (\n            key == self._geometry_column_name\n            or key == \"geometry\"\n            and self._geometry_column_name is None\n        ):\n            if pd.api.types.is_scalar(value) or isinstance(value, BaseGeometry):\n                value = [value] * self.shape[0]\n            try:\n                if self._geometry_column_name is not None:\n                    crs = getattr(self, \"crs\", None)\n                else:  # don't use getattr, because a col \"crs\" might exist\n                    crs = None\n                value = _ensure_geometry(value, crs=crs)\n                if key == \"geometry\":\n                    self._persist_old_default_geometry_colname()\n            except TypeError:\n                warnings.warn(\n                    \"Geometry column does not contain geometry.\",\n                    stacklevel=2,\n                )\n        super().__setitem__(key, value)\n\n    #\n    # Implement pandas methods\n    #\n    @doc(pd.DataFrame)\n    def copy(self, deep=True):\n        copied = super().copy(deep=deep)\n        if type(copied) is pd.DataFrame:\n            copied.__class__ = GeoDataFrame\n            copied._geometry_column_name = self._geometry_column_name\n        return copied\n\n    @doc(pd.DataFrame)\n    def apply(self, func, axis=0, raw=False, result_type=None, args=(), **kwargs):\n        result = super().apply(\n            func, axis=axis, raw=raw, result_type=result_type, args=args, **kwargs\n        )\n        # Reconstruct gdf if it was lost by apply\n        if (\n            isinstance(result, DataFrame)\n            and self._geometry_column_name in result.columns\n        ):\n            # axis=1 apply will split GeometryDType to object, try and cast back\n            try:\n                result = result.set_geometry(self._geometry_column_name)\n            except TypeError:\n                pass\n            else:\n                if self.crs is not None and result.crs is None:\n                    result.set_crs(self.crs, inplace=True)\n        elif isinstance(result, Series) and result.dtype == \"object\":\n            # Try reconstruct series GeometryDtype if lost by apply\n            # If all none and object dtype assert list of nones is more likely\n            # intended than list of null geometry.\n            if not result.isna().all():\n                try:\n                    # not enough info about func to preserve CRS\n                    result = _ensure_geometry(result)\n\n                except (TypeError, shapely.errors.GeometryTypeError):\n                    pass\n\n        return result\n\n    @property\n    def _constructor(self):\n        return _geodataframe_constructor_with_fallback\n\n    def _constructor_from_mgr(self, mgr, axes):\n        # replicate _geodataframe_constructor_with_fallback behaviour\n        # unless safe to skip\n        if not any(isinstance(block.dtype, GeometryDtype) for block in mgr.blocks):\n            return _geodataframe_constructor_with_fallback(\n                pd.DataFrame._from_mgr(mgr, axes)\n            )\n        gdf = GeoDataFrame._from_mgr(mgr, axes)\n        # _from_mgr doesn't preserve metadata (expect __finalize__ to be called)\n        # still need to mimic __init__ behaviour with geometry=None\n        if (gdf.columns == \"geometry\").sum() == 1:  # only if \"geometry\" is single col\n            gdf._geometry_column_name = \"geometry\"\n        return gdf\n\n    @property\n    def _constructor_sliced(self):\n        def _geodataframe_constructor_sliced(*args, **kwargs):\n            \"\"\"\n            A specialized (Geo)Series constructor which can fall back to a\n            Series if a certain operation does not produce geometries:\n\n            - We only return a GeoSeries if the data is actually of geometry\n              dtype (and so we don't try to convert geometry objects such as\n              the normal GeoSeries(..) constructor does with `_ensure_geometry`).\n            - When we get here from obtaining a row or column from a\n              GeoDataFrame, the goal is to only return a GeoSeries for a\n              geometry column, and not return a GeoSeries for a row that happened\n              to come from a DataFrame with only geometry dtype columns (and\n              thus could have a geometry dtype). Therefore, we don't return a\n              GeoSeries if we are sure we are in a row selection case (by\n              checking the identity of the index)\n            \"\"\"\n            srs = pd.Series(*args, **kwargs)\n            is_row_proxy = srs.index.is_(self.columns)\n            if is_geometry_type(srs) and not is_row_proxy:\n                srs = GeoSeries(srs)\n            return srs\n\n        return _geodataframe_constructor_sliced\n\n    def _constructor_sliced_from_mgr(self, mgr, axes):\n        is_row_proxy = mgr.index.is_(self.columns)\n\n        if isinstance(mgr.blocks[0].dtype, GeometryDtype) and not is_row_proxy:\n            return GeoSeries._from_mgr(mgr, axes)\n        return Series._from_mgr(mgr, axes)\n\n    def __finalize__(self, other, method=None, **kwargs):\n        \"\"\"propagate metadata from other to self\"\"\"\n        self = super().__finalize__(other, method=method, **kwargs)\n\n        # merge operation: using metadata of the left object\n        if method == \"merge\":\n            for name in self._metadata:\n                object.__setattr__(self, name, getattr(other.left, name, None))\n        # concat operation: using metadata of the first object\n        elif method == \"concat\":\n            for name in self._metadata:\n                object.__setattr__(self, name, getattr(other.objs[0], name, None))\n\n            if (self.columns == self._geometry_column_name).sum() > 1:\n                raise ValueError(\n                    \"Concat operation has resulted in multiple columns using \"\n                    f\"the geometry column name '{self._geometry_column_name}'.\\n\"\n                    \"Please ensure this column from the first DataFrame is not \"\n                    \"repeated.\"\n                )\n        elif method == \"unstack\":\n            # unstack adds multiindex columns and reshapes data.\n            # it never makes sense to retain geometry column\n            self._geometry_column_name = None\n            self._crs = None\n        return self\n\n    def dissolve(\n        self,\n        by=None,\n        aggfunc=\"first\",\n        as_index=True,\n        level=None,\n        sort=True,\n        observed=False,\n        dropna=True,\n        method=\"unary\",\n        **kwargs,\n    ):\n        \"\"\"\n        Dissolve geometries within `groupby` into single observation.\n        This is accomplished by applying the `union_all` method\n        to all geometries within a groupself.\n\n        Observations associated with each `groupby` group will be aggregated\n        using the `aggfunc`.\n\n        Parameters\n        ----------\n        by : str or list-like, default None\n            Column(s) whose values define the groups to be dissolved. If None,\n            the entire GeoDataFrame is considered as a single group. If a list-like\n            object is provided, the values in the list are treated as categorical\n            labels, and polygons will be combined based on the equality of\n            these categorical labels.\n        aggfunc : function or string, default \"first\"\n            Aggregation function for manipulation of data associated\n            with each group. Passed to pandas `groupby.agg` method.\n            Accepted combinations are:\n\n            - function\n            - string function name\n            - list of functions and/or function names, e.g. [np.sum, 'mean']\n            - dict of axis labels -> functions, function names or list of such.\n        as_index : boolean, default True\n            If true, groupby columns become index of result.\n        level : int or str or sequence of int or sequence of str, default None\n            If the axis is a MultiIndex (hierarchical), group by a\n            particular level or levels.\n        sort : bool, default True\n            Sort group keys. Get better performance by turning this off.\n            Note this does not influence the order of observations within\n            each group. Groupby preserves the order of rows within each group.\n        observed : bool, default False\n            This only applies if any of the groupers are Categoricals.\n            If True: only show observed values for categorical groupers.\n            If False: show all values for categorical groupers.\n        dropna : bool, default True\n            If True, and if group keys contain NA values, NA values\n            together with row/column will be dropped. If False, NA\n            values will also be treated as the key in groups.\n        method : str (default ``\"unary\"``)\n            The method to use for the union. Options are:\n\n            * ``\"unary\"``: use the unary union algorithm. This option is the most robust\n              but can be slow for large numbers of geometries (default).\n            * ``\"coverage\"``: use the coverage union algorithm. This option is optimized\n              for non-overlapping polygons and can be significantly faster than the\n              unary union algorithm. However, it can produce invalid geometries if the\n              polygons overlap.\n\n        **kwargs :\n            Keyword arguments to be passed to the pandas `DataFrameGroupby.agg` method\n            which is used by `dissolve`. In particular, `numeric_only` may be\n            supplied, which will be required in pandas 2.0 for certain aggfuncs.\n\n            .. versionadded:: 0.13.0\n        Returns\n        -------\n        GeoDataFrame\n\n        Examples\n        --------\n        >>> from shapely.geometry import Point\n        >>> d = {\n        ...     \"col1\": [\"name1\", \"name2\", \"name1\"],\n        ...     \"geometry\": [Point(1, 2), Point(2, 1), Point(0, 1)],\n        ... }\n        >>> gdf = geopandas.GeoDataFrame(d, crs=4326)\n        >>> gdf\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name2  POINT (2 1)\n        2  name1  POINT (0 1)\n\n        >>> dissolved = gdf.dissolve('col1')\n        >>> dissolved  # doctest: +SKIP\n                                geometry\n        col1\n        name1  MULTIPOINT ((0 1), (1 2))\n        name2                POINT (2 1)\n\n        See also\n        --------\n        GeoDataFrame.explode : explode multi-part geometries into single geometries\n\n        \"\"\"\n\n        if by is None and level is None:\n            by = np.zeros(len(self), dtype=\"int64\")\n\n        groupby_kwargs = {\n            \"by\": by,\n            \"level\": level,\n            \"sort\": sort,\n            \"observed\": observed,\n            \"dropna\": dropna,\n        }\n\n        # Process non-spatial component\n        data = self.drop(labels=self.geometry.name, axis=1)\n        with warnings.catch_warnings(record=True) as record:\n            aggregated_data = data.groupby(**groupby_kwargs).agg(aggfunc, **kwargs)\n        for w in record:\n            if str(w.message).startswith(\"The default value of numeric_only\"):\n                msg = (\n                    f\"The default value of numeric_only in aggfunc='{aggfunc}' \"\n                    \"within pandas.DataFrameGroupBy.agg used in dissolve is \"\n                    \"deprecated. In pandas 2.0, numeric_only will default to False. \"\n                    \"Either specify numeric_only as additional argument in dissolve() \"\n                    \"or select only columns which should be valid for the function.\"\n                )\n                warnings.warn(msg, FutureWarning, stacklevel=2)\n            else:\n                # Only want to capture specific warning,\n                # other warnings from pandas should be passed through\n                # TODO this is not an ideal approach\n                warnings.showwarning(\n                    w.message, w.category, w.filename, w.lineno, w.file, w.line\n                )\n\n        aggregated_data.columns = aggregated_data.columns.to_flat_index()\n\n        # Process spatial component\n        def merge_geometries(block):\n            merged_geom = block.union_all(method=method)\n            return merged_geom\n\n        g = self.groupby(group_keys=False, **groupby_kwargs)[self.geometry.name].agg(\n            merge_geometries\n        )\n\n        # Aggregate\n        aggregated_geometry = GeoDataFrame(g, geometry=self.geometry.name, crs=self.crs)\n        # Recombine\n        aggregated = aggregated_geometry.join(aggregated_data)\n\n        # Reset if requested\n        if not as_index:\n            aggregated = aggregated.reset_index()\n\n        return aggregated\n\n    # overrides the pandas native explode method to break up features geometrically\n    def explode(self, column=None, ignore_index=False, index_parts=False, **kwargs):\n        \"\"\"\n        Explode multi-part geometries into multiple single geometries.\n\n        Each row containing a multi-part geometry will be split into\n        multiple rows with single geometries, thereby increasing the vertical\n        size of the GeoDataFrame.\n\n        Parameters\n        ----------\n        column : string, default None\n            Column to explode. In the case of a geometry column, multi-part\n            geometries are converted to single-part.\n            If None, the active geometry column is used.\n        ignore_index : bool, default False\n            If True, the resulting index will be labelled 0, 1, \u2026, n - 1,\n            ignoring `index_parts`.\n        index_parts : boolean, default False\n            If True, the resulting index will be a multi-index (original\n            index with an additional level indicating the multiple\n            geometries: a new zero-based index for each single part geometry\n            per multi-part geometry).\n\n        Returns\n        -------\n        GeoDataFrame\n            Exploded geodataframe with each single geometry\n            as a separate entry in the geodataframe.\n\n        Examples\n        --------\n\n        >>> from shapely.geometry import MultiPoint\n        >>> d = {\n        ...     \"col1\": [\"name1\", \"name2\"],\n        ...     \"geometry\": [\n        ...         MultiPoint([(1, 2), (3, 4)]),\n        ...         MultiPoint([(2, 1), (0, 0)]),\n        ...     ],\n        ... }\n        >>> gdf = geopandas.GeoDataFrame(d, crs=4326)\n        >>> gdf\n            col1               geometry\n        0  name1  MULTIPOINT ((1 2), (3 4))\n        1  name2  MULTIPOINT ((2 1), (0 0))\n\n        >>> exploded = gdf.explode(index_parts=True)\n        >>> exploded\n              col1     geometry\n        0 0  name1  POINT (1 2)\n          1  name1  POINT (3 4)\n        1 0  name2  POINT (2 1)\n          1  name2  POINT (0 0)\n\n        >>> exploded = gdf.explode(index_parts=False)\n        >>> exploded\n            col1     geometry\n        0  name1  POINT (1 2)\n        0  name1  POINT (3 4)\n        1  name2  POINT (2 1)\n        1  name2  POINT (0 0)\n\n        >>> exploded = gdf.explode(ignore_index=True)\n        >>> exploded\n            col1     geometry\n        0  name1  POINT (1 2)\n        1  name1  POINT (3 4)\n        2  name2  POINT (2 1)\n        3  name2  POINT (0 0)\n\n        See also\n        --------\n        GeoDataFrame.dissolve : dissolve geometries into a single observation.\n\n        \"\"\"\n\n        # If no column is specified then default to the active geometry column\n        if column is None:\n            column = self.geometry.name\n        # If the specified column is not a geometry dtype use pandas explode\n        if not isinstance(self[column].dtype, GeometryDtype):\n            return super().explode(column, ignore_index=ignore_index, **kwargs)\n\n        exploded_geom = self.geometry.reset_index(drop=True).explode(index_parts=True)\n\n        df = self.drop(self._geometry_column_name, axis=1).take(\n            exploded_geom.index.droplevel(-1)\n        )\n        df[exploded_geom.name] = exploded_geom.values\n        df = df.set_geometry(self._geometry_column_name).__finalize__(self)\n\n        if ignore_index:\n            df.reset_index(inplace=True, drop=True)\n        elif index_parts:\n            # reset to MultiIndex, otherwise df index is only first level of\n            # exploded GeoSeries index.\n            df = df.set_index(\n                exploded_geom.index.droplevel(\n                    list(range(exploded_geom.index.nlevels - 1))\n                ),\n                append=True,\n            )\n\n        return df\n\n    # overrides the pandas astype method to ensure the correct return type\n    # should be removable when pandas 1.4 is dropped\n    def astype(self, dtype, copy=None, errors=\"raise\", **kwargs):\n        \"\"\"\n        Cast a pandas object to a specified dtype ``dtype``.\n        Returns a GeoDataFrame when the geometry column is kept as geometries,\n        otherwise returns a pandas DataFrame.\n        See the pandas.DataFrame.astype docstring for more details.\n        Returns\n        -------\n        GeoDataFrame or DataFrame\n        \"\"\"\n        if not PANDAS_GE_30 and copy is None:\n            copy = True\n        if copy is not None:\n            kwargs[\"copy\"] = copy\n\n        df = super().astype(dtype, errors=errors, **kwargs)\n\n        try:\n            geoms = df[self._geometry_column_name]\n            if is_geometry_type(geoms):\n                return geopandas.GeoDataFrame(df, geometry=self._geometry_column_name)\n        except KeyError:\n            pass\n        # if the geometry column is converted to non-geometries or did not exist\n        # do not return a GeoDataFrame\n        return pd.DataFrame(df)\n\n    def to_postgis(\n        self,\n        name,\n        con,\n        schema=None,\n        if_exists=\"fail\",\n        index=False,\n        index_label=None,\n        chunksize=None,\n        dtype=None,\n    ):\n        \"\"\"\n        Upload GeoDataFrame into PostGIS database.\n\n        This method requires SQLAlchemy and GeoAlchemy2, and a PostgreSQL\n        Python driver (psycopg or psycopg2) to be installed.\n\n        It is also possible to use :meth:`~GeoDataFrame.to_file` to write to a database.\n        Especially for file geodatabases like GeoPackage or SpatiaLite this can be\n        easier.\n\n        Parameters\n        ----------\n        name : str\n            Name of the target table.\n        con : sqlalchemy.engine.Connection or sqlalchemy.engine.Engine\n            Active connection to the PostGIS database.\n        if_exists : {'fail', 'replace', 'append'}, default 'fail'\n            How to behave if the table already exists:\n\n            - fail: Raise a ValueError.\n            - replace: Drop the table before inserting new values.\n            - append: Insert new values to the existing table.\n        schema : string, optional\n            Specify the schema. If None, use default schema: 'public'.\n        index : bool, default False\n            Write DataFrame index as a column.\n            Uses *index_label* as the column name in the table.\n        index_label : string or sequence, default None\n            Column label for index column(s).\n            If None is given (default) and index is True,\n            then the index names are used.\n        chunksize : int, optional\n            Rows will be written in batches of this size at a time.\n            By default, all rows will be written at once.\n        dtype : dict of column name to SQL type, default None\n            Specifying the datatype for columns.\n            The keys should be the column names and the values\n            should be the SQLAlchemy types.\n\n        Examples\n        --------\n\n        >>> from sqlalchemy import create_engine\n        >>> engine = create_engine(\"postgresql://myusername:mypassword@myhost:5432\\\n/mydatabase\")  # doctest: +SKIP\n        >>> gdf.to_postgis(\"my_table\", engine)  # doctest: +SKIP\n\n        See also\n        --------\n        GeoDataFrame.to_file : write GeoDataFrame to file\n        read_postgis : read PostGIS database to GeoDataFrame\n\n        \"\"\"\n        geopandas.io.sql._write_postgis(\n            self, name, con, schema, if_exists, index, index_label, chunksize, dtype\n        )\n\n    plot = Accessor(\"plot\", geopandas.plotting.GeoplotAccessor)\n\n    @doc(_explore)\n    def explore(self, *args, **kwargs):\n        return _explore(self, *args, **kwargs)\n\n    def sjoin(self, df, *args, **kwargs):\n        \"\"\"Spatial join of two GeoDataFrames.\n\n        See the User Guide page :doc:`../../user_guide/mergingdata` for details.\n\n        Parameters\n        ----------\n        df : GeoDataFrame\n        how : string, default 'inner'\n            The type of join:\n\n            * 'left': use keys from left_df; retain only left_df geometry column\n            * 'right': use keys from right_df; retain only right_df geometry column\n            * 'inner': use intersection of keys from both dfs; retain only\n              left_df geometry column\n\n        predicate : string, default 'intersects'\n            Binary predicate. Valid values are determined by the spatial index used.\n            You can check the valid values in left_df or right_df as\n            ``left_df.sindex.valid_query_predicates`` or\n            ``right_df.sindex.valid_query_predicates``\n        lsuffix : string, default 'left'\n            Suffix to apply to overlapping column names (left GeoDataFrame).\n        rsuffix : string, default 'right'\n            Suffix to apply to overlapping column names (right GeoDataFrame).\n        distance : number or array_like, optional\n            Distance(s) around each input geometry within which to query the tree\n            for the 'dwithin' predicate. If array_like, must be\n            one-dimesional with length equal to length of left GeoDataFrame.\n            Required if ``predicate='dwithin'``.\n        on_attribute : string, list or tuple\n            Column name(s) to join on as an additional join restriction on top\n            of the spatial predicate. These must be found in both DataFrames.\n            If set, observations are joined only if the predicate applies\n            and values in specified columns match.\n\n        Examples\n        --------\n        >>> import geodatasets\n        >>> chicago = geopandas.read_file(\n        ...     geodatasets.get_path(\"geoda.chicago_commpop\")\n        ... )\n        >>> groceries = geopandas.read_file(\n        ...     geodatasets.get_path(\"geoda.groceries\")\n        ... ).to_crs(chicago.crs)\n\n        >>> chicago.head()  # doctest: +SKIP\n                 community  ...                                           geometry\n        0          DOUGLAS  ...  MULTIPOLYGON (((-87.60914 41.84469, -87.60915 ...\n        1          OAKLAND  ...  MULTIPOLYGON (((-87.59215 41.81693, -87.59231 ...\n        2      FULLER PARK  ...  MULTIPOLYGON (((-87.62880 41.80189, -87.62879 ...\n        3  GRAND BOULEVARD  ...  MULTIPOLYGON (((-87.60671 41.81681, -87.60670 ...\n        4          KENWOOD  ...  MULTIPOLYGON (((-87.59215 41.81693, -87.59215 ...\n\n        [5 rows x 9 columns]\n\n        >>> groceries.head()  # doctest: +SKIP\n           OBJECTID     Ycoord  ...  Category                           geometry\n        0        16  41.973266  ...       NaN  MULTIPOINT ((-87.65661 41.97321))\n        1        18  41.696367  ...       NaN  MULTIPOINT ((-87.68136 41.69713))\n        2        22  41.868634  ...       NaN  MULTIPOINT ((-87.63918 41.86847))\n        3        23  41.877590  ...       new  MULTIPOINT ((-87.65495 41.87783))\n        4        27  41.737696  ...       NaN  MULTIPOINT ((-87.62715 41.73623))\n        [5 rows x 8 columns]\n\n        >>> groceries_w_communities = groceries.sjoin(chicago)\n        >>> groceries_w_communities[[\"OBJECTID\", \"community\", \"geometry\"]].head()\n           OBJECTID       community                           geometry\n        0        16          UPTOWN  MULTIPOINT ((-87.65661 41.97321))\n        1        18     MORGAN PARK  MULTIPOINT ((-87.68136 41.69713))\n        2        22  NEAR WEST SIDE  MULTIPOINT ((-87.63918 41.86847))\n        3        23  NEAR WEST SIDE  MULTIPOINT ((-87.65495 41.87783))\n        4        27         CHATHAM  MULTIPOINT ((-87.62715 41.73623))\n\n        Notes\n        -----\n        Every operation in GeoPandas is planar, i.e. the potential third\n        dimension is not taken into account.\n\n        See also\n        --------\n        GeoDataFrame.sjoin_nearest : nearest neighbor join\n        sjoin : equivalent top-level function\n        \"\"\"\n        return geopandas.sjoin(left_df=self, right_df=df, *args, **kwargs)  # noqa: B026\n\n    def sjoin_nearest(\n        self,\n        right,\n        how=\"inner\",\n        max_distance=None,\n        lsuffix=\"left\",\n        rsuffix=\"right\",\n        distance_col=None,\n        exclusive=False,\n    ):\n        \"\"\"\n        Spatial join of two GeoDataFrames based on the distance between their\n        geometries.\n\n        Results will include multiple output records for a single input record\n        where there are multiple equidistant nearest or intersected neighbors.\n\n        See the User Guide page\n        https://geopandas.readthedocs.io/en/latest/docs/user_guide/mergingdata.html\n        for more details.\n\n\n        Parameters\n        ----------\n        right : GeoDataFrame\n        how : string, default 'inner'\n            The type of join:\n\n            * 'left': use keys from left_df; retain only left_df geometry column\n            * 'right': use keys from right_df; retain only right_df geometry column\n            * 'inner': use intersection of keys from both dfs; retain only\n              left_df geometry column\n\n        max_distance : float, default None\n            Maximum distance within which to query for nearest geometry.\n            Must be greater than 0.\n            The max_distance used to search for nearest items in the tree may have a\n            significant impact on performance by reducing the number of input\n            geometries that are evaluated for nearest items in the tree.\n        lsuffix : string, default 'left'\n            Suffix to apply to overlapping column names (left GeoDataFrame).\n        rsuffix : string, default 'right'\n            Suffix to apply to overlapping column names (right GeoDataFrame).\n        distance_col : string, default None\n            If set, save the distances computed between matching geometries under a\n            column of this name in the joined GeoDataFrame.\n        exclusive : bool, optional, default False\n            If True, the nearest geometries that are equal to the input geometry\n            will not be returned, default False.\n            Requires Shapely >= 2.0\n\n        Examples\n        --------\n        >>> import geodatasets\n        >>> groceries = geopandas.read_file(\n        ...     geodatasets.get_path(\"geoda.groceries\")\n        ... )\n        >>> chicago = geopandas.read_file(\n        ...     geodatasets.get_path(\"geoda.chicago_health\")\n        ... ).to_crs(groceries.crs)\n\n        >>> chicago.head()  # doctest: +SKIP\n           ComAreaID  ...                                           geometry\n        0         35  ...  POLYGON ((-87.60914 41.84469, -87.60915 41.844...\n        1         36  ...  POLYGON ((-87.59215 41.81693, -87.59231 41.816...\n        2         37  ...  POLYGON ((-87.62880 41.80189, -87.62879 41.801...\n        3         38  ...  POLYGON ((-87.60671 41.81681, -87.60670 41.816...\n        4         39  ...  POLYGON ((-87.59215 41.81693, -87.59215 41.816...\n        [5 rows x 87 columns]\n\n        >>> groceries.head()  # doctest: +SKIP\n           OBJECTID     Ycoord  ...  Category                           geometry\n        0        16  41.973266  ...       NaN  MULTIPOINT ((-87.65661 41.97321))\n        1        18  41.696367  ...       NaN  MULTIPOINT ((-87.68136 41.69713))\n        2        22  41.868634  ...       NaN  MULTIPOINT ((-87.63918 41.86847))\n        3        23  41.877590  ...       new  MULTIPOINT ((-87.65495 41.87783))\n        4        27  41.737696  ...       NaN  MULTIPOINT ((-87.62715 41.73623))\n        [5 rows x 8 columns]\n\n        >>> groceries_w_communities = groceries.sjoin_nearest(chicago)\n        >>> groceries_w_communities[[\"Chain\", \"community\", \"geometry\"]].head(2)\n                       Chain    community                                geometry\n        0     VIET HOA PLAZA       UPTOWN   MULTIPOINT ((1168268.672 1933554.35))\n        1  COUNTY FAIR FOODS  MORGAN PARK  MULTIPOINT ((1162302.618 1832900.224))\n\n\n        To include the distances:\n\n        >>> groceries_w_communities = groceries.sjoin_nearest(chicago, \\\ndistance_col=\"distances\")\n        >>> groceries_w_communities[[\"Chain\", \"community\", \\\n\"distances\"]].head(2)\n                       Chain    community  distances\n        0     VIET HOA PLAZA       UPTOWN        0.0\n        1  COUNTY FAIR FOODS  MORGAN PARK        0.0\n\n        In the following example, we get multiple groceries for Uptown because all\n        results are equidistant (in this case zero because they intersect).\n        In fact, we get 4 results in total:\n\n        >>> chicago_w_groceries = groceries.sjoin_nearest(chicago, \\\ndistance_col=\"distances\", how=\"right\")\n        >>> uptown_results = \\\nchicago_w_groceries[chicago_w_groceries[\"community\"] == \"UPTOWN\"]\n        >>> uptown_results[[\"Chain\", \"community\"]]\n                    Chain community\n        30  VIET HOA PLAZA    UPTOWN\n        30      JEWEL OSCO    UPTOWN\n        30          TARGET    UPTOWN\n        30       Mariano's    UPTOWN\n\n        See also\n        --------\n        GeoDataFrame.sjoin : binary predicate joins\n        sjoin_nearest : equivalent top-level function\n\n        Notes\n        -----\n        Since this join relies on distances, results will be inaccurate\n        if your geometries are in a geographic CRS.\n\n        Every operation in GeoPandas is planar, i.e. the potential third\n        dimension is not taken into account.\n        \"\"\"\n        return geopandas.sjoin_nearest(\n            self,\n            right,\n            how=how,\n            max_distance=max_distance,\n            lsuffix=lsuffix,\n            rsuffix=rsuffix,\n            distance_col=distance_col,\n            exclusive=exclusive,\n        )\n\n    def clip(self, mask, keep_geom_type=False, sort=False):\n        \"\"\"Clip points, lines, or polygon geometries to the mask extent.\n\n        Both layers must be in the same Coordinate Reference System (CRS).\n        The GeoDataFrame will be clipped to the full extent of the ``mask`` object.\n\n        If there are multiple polygons in mask, data from the GeoDataFrame will be\n        clipped to the total boundary of all polygons in mask.\n\n        Parameters\n        ----------\n        mask : GeoDataFrame, GeoSeries, (Multi)Polygon, list-like\n            Polygon vector layer used to clip the GeoDataFrame.\n            The mask's geometry is dissolved into one geometric feature\n            and intersected with GeoDataFrame.\n            If the mask is list-like with four elements ``(minx, miny, maxx, maxy)``,\n            ``clip`` will use a faster rectangle clipping\n            (:meth:`~GeoSeries.clip_by_rect`), possibly leading to slightly different\n            results.\n        keep_geom_type : boolean, default False\n            If True, return only geometries of original type in case of intersection\n            resulting in multiple geometry types or GeometryCollections.\n            If False, return all resulting geometries (potentially mixed types).\n        sort : boolean, default False\n            If True, the order of rows in the clipped GeoDataFrame will be preserved at\n            small performance cost. If False the order of rows in the clipped\n            GeoDataFrame will be random.\n\n        Returns\n        -------\n        GeoDataFrame\n            Vector data (points, lines, polygons) from the GeoDataFrame clipped to\n            polygon boundary from mask.\n\n        See also\n        --------\n        clip : equivalent top-level function\n\n        Examples\n        --------\n        Clip points (grocery stores) with polygons (the Near West Side community):\n\n        >>> import geodatasets\n        >>> chicago = geopandas.read_file(\n        ...     geodatasets.get_path(\"geoda.chicago_health\")\n        ... )\n        >>> near_west_side = chicago[chicago[\"community\"] == \"NEAR WEST SIDE\"]\n        >>> groceries = geopandas.read_file(\n        ...     geodatasets.get_path(\"geoda.groceries\")\n        ... ).to_crs(chicago.crs)\n        >>> groceries.shape\n        (148, 8)\n\n        >>> nws_groceries = groceries.clip(near_west_side)\n        >>> nws_groceries.shape\n        (7, 8)\n        \"\"\"\n        return geopandas.clip(self, mask=mask, keep_geom_type=keep_geom_type, sort=sort)\n\n    def overlay(self, right, how=\"intersection\", keep_geom_type=None, make_valid=True):\n        \"\"\"Perform spatial overlay between GeoDataFrames.\n\n        Currently only supports data GeoDataFrames with uniform geometry types,\n        i.e. containing only (Multi)Polygons, or only (Multi)Points, or a\n        combination of (Multi)LineString and LinearRing shapes.\n        Implements several methods that are all effectively subsets of the union.\n\n        See the User Guide page :doc:`../../user_guide/set_operations` for details.\n\n        Parameters\n        ----------\n        right : GeoDataFrame\n        how : string\n            Method of spatial overlay: 'intersection', 'union',\n            'identity', 'symmetric_difference' or 'difference'.\n        keep_geom_type : bool\n            If True, return only geometries of the same geometry type the GeoDataFrame\n            has, if False, return all resulting geometries. Default is None,\n            which will set keep_geom_type to True but warn upon dropping\n            geometries.\n        make_valid : bool, default True\n            If True, any invalid input geometries are corrected with a call to\n            make_valid(), if False, a `ValueError` is raised if any input geometries\n            are invalid.\n\n        Returns\n        -------\n        df : GeoDataFrame\n            GeoDataFrame with new set of polygons and attributes\n            resulting from the overlay\n\n        Examples\n        --------\n        >>> from shapely.geometry import Polygon\n        >>> polys1 = geopandas.GeoSeries([Polygon([(0,0), (2,0), (2,2), (0,2)]),\n        ...                               Polygon([(2,2), (4,2), (4,4), (2,4)])])\n        >>> polys2 = geopandas.GeoSeries([Polygon([(1,1), (3,1), (3,3), (1,3)]),\n        ...                               Polygon([(3,3), (5,3), (5,5), (3,5)])])\n        >>> df1 = geopandas.GeoDataFrame({'geometry': polys1, 'df1_data':[1,2]})\n        >>> df2 = geopandas.GeoDataFrame({'geometry': polys2, 'df2_data':[1,2]})\n\n        >>> df1.overlay(df2, how='union')\n           df1_data  df2_data                                           geometry\n        0       1.0       1.0                POLYGON ((2 2, 2 1, 1 1, 1 2, 2 2))\n        1       2.0       1.0                POLYGON ((2 2, 2 3, 3 3, 3 2, 2 2))\n        2       2.0       2.0                POLYGON ((4 4, 4 3, 3 3, 3 4, 4 4))\n        3       1.0       NaN      POLYGON ((2 0, 0 0, 0 2, 1 2, 1 1, 2 1, 2 0))\n        4       2.0       NaN  MULTIPOLYGON (((3 4, 3 3, 2 3, 2 4, 3 4)), ((4...\n        5       NaN       1.0  MULTIPOLYGON (((2 3, 2 2, 1 2, 1 3, 2 3)), ((3...\n        6       NaN       2.0      POLYGON ((3 5, 5 5, 5 3, 4 3, 4 4, 3 4, 3 5))\n\n        >>> df1.overlay(df2, how='intersection')\n           df1_data  df2_data                             geometry\n        0         1         1  POLYGON ((2 2, 2 1, 1 1, 1 2, 2 2))\n        1         2         1  POLYGON ((2 2, 2 3, 3 3, 3 2, 2 2))\n        2         2         2  POLYGON ((4 4, 4 3, 3 3, 3 4, 4 4))\n\n        >>> df1.overlay(df2, how='symmetric_difference')\n           df1_data  df2_data                                           geometry\n        0       1.0       NaN      POLYGON ((2 0, 0 0, 0 2, 1 2, 1 1, 2 1, 2 0))\n        1       2.0       NaN  MULTIPOLYGON (((3 4, 3 3, 2 3, 2 4, 3 4)), ((4...\n        2       NaN       1.0  MULTIPOLYGON (((2 3, 2 2, 1 2, 1 3, 2 3)), ((3...\n        3       NaN       2.0      POLYGON ((3 5, 5 5, 5 3, 4 3, 4 4, 3 4, 3 5))\n\n        >>> df1.overlay(df2, how='difference')\n                                                    geometry  df1_data\n        0      POLYGON ((2 0, 0 0, 0 2, 1 2, 1 1, 2 1, 2 0))         1\n        1  MULTIPOLYGON (((3 4, 3 3, 2 3, 2 4, 3 4)), ((4...         2\n\n        >>> df1.overlay(df2, how='identity')\n           df1_data  df2_data                                           geometry\n        0       1.0       1.0                POLYGON ((2 2, 2 1, 1 1, 1 2, 2 2))\n        1       2.0       1.0                POLYGON ((2 2, 2 3, 3 3, 3 2, 2 2))\n        2       2.0       2.0                POLYGON ((4 4, 4 3, 3 3, 3 4, 4 4))\n        3       1.0       NaN      POLYGON ((2 0, 0 0, 0 2, 1 2, 1 1, 2 1, 2 0))\n        4       2.0       NaN  MULTIPOLYGON (((3 4, 3 3, 2 3, 2 4, 3 4)), ((4...\n\n        See also\n        --------\n        GeoDataFrame.sjoin : spatial join\n        overlay : equivalent top-level function\n\n        Notes\n        -----\n        Every operation in GeoPandas is planar, i.e. the potential third\n        dimension is not taken into account.\n        \"\"\"\n        return geopandas.overlay(\n            self, right, how=how, keep_geom_type=keep_geom_type, make_valid=make_valid\n        )\n\n\ndef _dataframe_set_geometry(self, col, drop=None, inplace=False, crs=None):\n    if inplace:\n        raise ValueError(\n            \"Can't do inplace setting when converting from DataFrame to GeoDataFrame\"\n        )\n    gf = GeoDataFrame(self)\n    # this will copy so that BlockManager gets copied\n    return gf.set_geometry(col, drop=drop, inplace=False, crs=crs)\n\n\nDataFrame.set_geometry = _dataframe_set_geometry\n", 2690], "C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py": ["\"\"\"Support for various GEOS geometry operations\n\"\"\"\n\nfrom warnings import warn\n\nimport shapely\nfrom shapely.algorithms.polylabel import polylabel  # noqa\nfrom shapely.errors import GeometryTypeError, ShapelyDeprecationWarning\nfrom shapely.geometry import (\n    GeometryCollection,\n    LineString,\n    MultiLineString,\n    MultiPoint,\n    Point,\n    Polygon,\n    shape,\n)\nfrom shapely.geometry.base import BaseGeometry, BaseMultipartGeometry\nfrom shapely.geometry.polygon import orient as orient_\nfrom shapely.prepared import prep\n\n__all__ = [\n    \"cascaded_union\",\n    \"linemerge\",\n    \"operator\",\n    \"polygonize\",\n    \"polygonize_full\",\n    \"transform\",\n    \"unary_union\",\n    \"triangulate\",\n    \"voronoi_diagram\",\n    \"split\",\n    \"nearest_points\",\n    \"validate\",\n    \"snap\",\n    \"shared_paths\",\n    \"clip_by_rect\",\n    \"orient\",\n    \"substring\",\n]\n\n\nclass CollectionOperator:\n    def shapeup(self, ob):\n        if isinstance(ob, BaseGeometry):\n            return ob\n        else:\n            try:\n                return shape(ob)\n            except (ValueError, AttributeError):\n                return LineString(ob)\n\n    def polygonize(self, lines):\n        \"\"\"Creates polygons from a source of lines\n\n        The source may be a MultiLineString, a sequence of LineString objects,\n        or a sequence of objects than can be adapted to LineStrings.\n        \"\"\"\n        source = getattr(lines, \"geoms\", None) or lines\n        try:\n            source = iter(source)\n        except TypeError:\n            source = [source]\n        finally:\n            obs = [self.shapeup(line) for line in source]\n        collection = shapely.polygonize(obs)\n        return collection.geoms\n\n    def polygonize_full(self, lines):\n        \"\"\"Creates polygons from a source of lines, returning the polygons\n        and leftover geometries.\n\n        The source may be a MultiLineString, a sequence of LineString objects,\n        or a sequence of objects than can be adapted to LineStrings.\n\n        Returns a tuple of objects: (polygons, cut edges, dangles, invalid ring\n        lines). Each are a geometry collection.\n\n        Dangles are edges which have one or both ends which are not incident on\n        another edge endpoint. Cut edges are connected at both ends but do not\n        form part of polygon. Invalid ring lines form rings which are invalid\n        (bowties, etc).\n        \"\"\"\n        source = getattr(lines, \"geoms\", None) or lines\n        try:\n            source = iter(source)\n        except TypeError:\n            source = [source]\n        finally:\n            obs = [self.shapeup(line) for line in source]\n        return shapely.polygonize_full(obs)\n\n    def linemerge(self, lines, directed=False):\n        \"\"\"Merges all connected lines from a source\n\n        The source may be a MultiLineString, a sequence of LineString objects,\n        or a sequence of objects than can be adapted to LineStrings.  Returns a\n        LineString or MultiLineString when lines are not contiguous.\n        \"\"\"\n        source = None\n        if getattr(lines, \"geom_type\", None) == \"MultiLineString\":\n            source = lines\n        elif hasattr(lines, \"geoms\"):\n            # other Multi geometries\n            source = MultiLineString([ls.coords for ls in lines.geoms])\n        elif hasattr(lines, \"__iter__\"):\n            try:\n                source = MultiLineString([ls.coords for ls in lines])\n            except AttributeError:\n                source = MultiLineString(lines)\n        if source is None:\n            raise ValueError(f\"Cannot linemerge {lines}\")\n        return shapely.line_merge(source, directed=directed)\n\n    def cascaded_union(self, geoms):\n        \"\"\"Returns the union of a sequence of geometries\n\n        .. deprecated:: 1.8\n            This function was superseded by :meth:`unary_union`.\n        \"\"\"\n        warn(\n            \"The 'cascaded_union()' function is deprecated. \"\n            \"Use 'unary_union()' instead.\",\n            ShapelyDeprecationWarning,\n            stacklevel=2,\n        )\n        return shapely.union_all(geoms, axis=None)\n\n    def unary_union(self, geoms):\n        \"\"\"Returns the union of a sequence of geometries\n\n        Usually used to convert a collection into the smallest set of polygons\n        that cover the same area.\n        \"\"\"\n        return shapely.union_all(geoms, axis=None)\n\n\noperator = CollectionOperator()\npolygonize = operator.polygonize\npolygonize_full = operator.polygonize_full\nlinemerge = operator.linemerge\ncascaded_union = operator.cascaded_union\nunary_union = operator.unary_union\n\n\ndef triangulate(geom, tolerance=0.0, edges=False):\n    \"\"\"Creates the Delaunay triangulation and returns a list of geometries\n\n    The source may be any geometry type. All vertices of the geometry will be\n    used as the points of the triangulation.\n\n    From the GEOS documentation:\n    tolerance is the snapping tolerance used to improve the robustness of\n    the triangulation computation. A tolerance of 0.0 specifies that no\n    snapping will take place.\n\n    If edges is False, a list of Polygons (triangles) will be returned.\n    Otherwise the list of LineString edges is returned.\n\n    \"\"\"\n    collection = shapely.delaunay_triangles(geom, tolerance=tolerance, only_edges=edges)\n    return [g for g in collection.geoms]\n\n\ndef voronoi_diagram(geom, envelope=None, tolerance=0.0, edges=False):\n    \"\"\"\n    Constructs a Voronoi Diagram [1] from the given geometry.\n    Returns a list of geometries.\n\n    Parameters\n    ----------\n    geom: geometry\n        the input geometry whose vertices will be used to calculate\n        the final diagram.\n    envelope: geometry, None\n        clipping envelope for the returned diagram, automatically\n        determined if None. The diagram will be clipped to the larger\n        of this envelope or an envelope surrounding the sites.\n    tolerance: float, 0.0\n        sets the snapping tolerance used to improve the robustness\n        of the computation. A tolerance of 0.0 specifies that no\n        snapping will take place.\n    edges: bool, False\n        If False, return regions as polygons. Else, return only\n        edges e.g. LineStrings.\n\n    GEOS documentation can be found at [2]\n\n    Returns\n    -------\n    GeometryCollection\n        geometries representing the Voronoi regions.\n\n    Notes\n    -----\n    The tolerance `argument` can be finicky and is known to cause the\n    algorithm to fail in several cases. If you're using `tolerance`\n    and getting a failure, try removing it. The test cases in\n    tests/test_voronoi_diagram.py show more details.\n\n\n    References\n    ----------\n    [1] https://en.wikipedia.org/wiki/Voronoi_diagram\n    [2] https://geos.osgeo.org/doxygen/geos__c_8h_source.html  (line 730)\n    \"\"\"\n    try:\n        result = shapely.voronoi_polygons(\n            geom, tolerance=tolerance, extend_to=envelope, only_edges=edges\n        )\n    except shapely.GEOSException as err:\n        errstr = \"Could not create Voronoi Diagram with the specified inputs \"\n        errstr += f\"({err!s}).\"\n        if tolerance:\n            errstr += \" Try running again with default tolerance value.\"\n        raise ValueError(errstr) from err\n\n    if result.geom_type != \"GeometryCollection\":\n        return GeometryCollection([result])\n    return result\n\n\ndef validate(geom):\n    return shapely.is_valid_reason(geom)\n\n\ndef transform(func, geom):\n    \"\"\"Applies `func` to all coordinates of `geom` and returns a new\n    geometry of the same type from the transformed coordinates.\n\n    `func` maps x, y, and optionally z to output xp, yp, zp. The input\n    parameters may iterable types like lists or arrays or single values.\n    The output shall be of the same type. Scalars in, scalars out.\n    Lists in, lists out.\n\n    For example, here is an identity function applicable to both types\n    of input.\n\n      def id_func(x, y, z=None):\n          return tuple(filter(None, [x, y, z]))\n\n      g2 = transform(id_func, g1)\n\n    Using pyproj >= 2.1, this example will accurately project Shapely geometries:\n\n      import pyproj\n\n      wgs84 = pyproj.CRS('EPSG:4326')\n      utm = pyproj.CRS('EPSG:32618')\n\n      project = pyproj.Transformer.from_crs(wgs84, utm, always_xy=True).transform\n\n      g2 = transform(project, g1)\n\n    Note that the always_xy kwarg is required here as Shapely geometries only support\n    X,Y coordinate ordering.\n\n    Lambda expressions such as the one in\n\n      g2 = transform(lambda x, y, z=None: (x+1.0, y+1.0), g1)\n\n    also satisfy the requirements for `func`.\n    \"\"\"\n    if geom.is_empty:\n        return geom\n    if geom.geom_type in (\"Point\", \"LineString\", \"LinearRing\", \"Polygon\"):\n\n        # First we try to apply func to x, y, z sequences. When func is\n        # optimized for sequences, this is the fastest, though zipping\n        # the results up to go back into the geometry constructors adds\n        # extra cost.\n        try:\n            if geom.geom_type in (\"Point\", \"LineString\", \"LinearRing\"):\n                return type(geom)(zip(*func(*zip(*geom.coords))))\n            elif geom.geom_type == \"Polygon\":\n                shell = type(geom.exterior)(zip(*func(*zip(*geom.exterior.coords))))\n                holes = list(\n                    type(ring)(zip(*func(*zip(*ring.coords))))\n                    for ring in geom.interiors\n                )\n                return type(geom)(shell, holes)\n\n        # A func that assumes x, y, z are single values will likely raise a\n        # TypeError, in which case we'll try again.\n        except TypeError:\n            if geom.geom_type in (\"Point\", \"LineString\", \"LinearRing\"):\n                return type(geom)([func(*c) for c in geom.coords])\n            elif geom.geom_type == \"Polygon\":\n                shell = type(geom.exterior)([func(*c) for c in geom.exterior.coords])\n                holes = list(\n                    type(ring)([func(*c) for c in ring.coords])\n                    for ring in geom.interiors\n                )\n                return type(geom)(shell, holes)\n\n    elif geom.geom_type.startswith(\"Multi\") or geom.geom_type == \"GeometryCollection\":\n        return type(geom)([transform(func, part) for part in geom.geoms])\n    else:\n        raise GeometryTypeError(f\"Type {geom.geom_type!r} not recognized\")\n\n\ndef nearest_points(g1, g2):\n    \"\"\"Returns the calculated nearest points in the input geometries\n\n    The points are returned in the same order as the input geometries.\n    \"\"\"\n    seq = shapely.shortest_line(g1, g2)\n    if seq is None:\n        if g1.is_empty:\n            raise ValueError(\"The first input geometry is empty\")\n        else:\n            raise ValueError(\"The second input geometry is empty\")\n\n    p1 = shapely.get_point(seq, 0)\n    p2 = shapely.get_point(seq, 1)\n    return (p1, p2)\n\n\ndef snap(g1, g2, tolerance):\n    \"\"\"\n    Snaps an input geometry (g1) to reference (g2) geometry's vertices.\n\n    Parameters\n    ----------\n    g1 : geometry\n        The first geometry\n    g2 : geometry\n        The second geometry\n    tolerance : float\n        The snapping tolerance\n\n    Refer to :func:`shapely.snap` for full documentation.\n    \"\"\"\n\n    return shapely.snap(g1, g2, tolerance)\n\n\ndef shared_paths(g1, g2):\n    \"\"\"Find paths shared between the two given lineal geometries\n\n    Returns a GeometryCollection with two elements:\n     - First element is a MultiLineString containing shared paths with the\n       same direction for both inputs.\n     - Second element is a MultiLineString containing shared paths with the\n       opposite direction for the two inputs.\n\n    Parameters\n    ----------\n    g1 : geometry\n        The first geometry\n    g2 : geometry\n        The second geometry\n    \"\"\"\n    if not isinstance(g1, LineString):\n        raise GeometryTypeError(\"First geometry must be a LineString\")\n    if not isinstance(g2, LineString):\n        raise GeometryTypeError(\"Second geometry must be a LineString\")\n    return shapely.shared_paths(g1, g2)\n\n\nclass SplitOp:\n    @staticmethod\n    def _split_polygon_with_line(poly, splitter):\n        \"\"\"Split a Polygon with a LineString\"\"\"\n        if not isinstance(poly, Polygon):\n            raise GeometryTypeError(\"First argument must be a Polygon\")\n        if not isinstance(splitter, LineString):\n            raise GeometryTypeError(\"Second argument must be a LineString\")\n\n        union = poly.boundary.union(splitter)\n\n        # greatly improves split performance for big geometries with many\n        # holes (the following contains checks) with minimal overhead\n        # for common cases\n        poly = prep(poly)\n\n        # some polygonized geometries may be holes, we do not want them\n        # that's why we test if the original polygon (poly) contains\n        # an inner point of polygonized geometry (pg)\n        return [\n            pg for pg in polygonize(union) if poly.contains(pg.representative_point())\n        ]\n\n    @staticmethod\n    def _split_line_with_line(line, splitter):\n        \"\"\"Split a LineString with another (Multi)LineString or (Multi)Polygon\"\"\"\n\n        # if splitter is a polygon, pick it's boundary\n        if splitter.geom_type in (\"Polygon\", \"MultiPolygon\"):\n            splitter = splitter.boundary\n\n        if not isinstance(line, LineString):\n            raise GeometryTypeError(\"First argument must be a LineString\")\n        if not isinstance(splitter, LineString) and not isinstance(\n            splitter, MultiLineString\n        ):\n            raise GeometryTypeError(\n                \"Second argument must be either a LineString or a MultiLineString\"\n            )\n\n        # |    s\\l   | Interior | Boundary | Exterior |\n        # |----------|----------|----------|----------|\n        # | Interior |  0 or F  |    *     |    *     |   At least one of these two must be 0\n        # | Boundary |  0 or F  |    *     |    *     |   So either '0********' or '[0F]**0*****'\n        # | Exterior |    *     |    *     |    *     |   No overlapping interiors ('1********')\n        relation = splitter.relate(line)\n        if relation[0] == \"1\":\n            # The lines overlap at some segment (linear intersection of interiors)\n            raise ValueError(\"Input geometry segment overlaps with the splitter.\")\n        elif relation[0] == \"0\" or relation[3] == \"0\":\n            # The splitter crosses or touches the line's interior --> return multilinestring from the split\n            return line.difference(splitter)\n        else:\n            # The splitter does not cross or touch the line's interior --> return collection with identity line\n            return [line]\n\n    @staticmethod\n    def _split_line_with_point(line, splitter):\n        \"\"\"Split a LineString with a Point\"\"\"\n        if not isinstance(line, LineString):\n            raise GeometryTypeError(\"First argument must be a LineString\")\n        if not isinstance(splitter, Point):\n            raise GeometryTypeError(\"Second argument must be a Point\")\n\n        # check if point is in the interior of the line\n        if not line.relate_pattern(splitter, \"0********\"):\n            # point not on line interior --> return collection with single identity line\n            # (REASONING: Returning a list with the input line reference and creating a\n            # GeometryCollection at the general split function prevents unnecessary copying\n            # of linestrings in multipoint splitting function)\n            return [line]\n        elif line.coords[0] == splitter.coords[0]:\n            # if line is a closed ring the previous test doesn't behave as desired\n            return [line]\n\n        # point is on line, get the distance from the first point on line\n        distance_on_line = line.project(splitter)\n        coords = list(line.coords)\n        # split the line at the point and create two new lines\n        current_position = 0.0\n        for i in range(len(coords) - 1):\n            point1 = coords[i]\n            point2 = coords[i + 1]\n            dx = point1[0] - point2[0]\n            dy = point1[1] - point2[1]\n            segment_length = (dx**2 + dy**2) ** 0.5\n            current_position += segment_length\n            if distance_on_line == current_position:\n                # splitter is exactly on a vertex\n                return [LineString(coords[: i + 2]), LineString(coords[i + 1 :])]\n            elif distance_on_line < current_position:\n                # splitter is between two vertices\n                return [\n                    LineString(coords[: i + 1] + [splitter.coords[0]]),\n                    LineString([splitter.coords[0]] + coords[i + 1 :]),\n                ]\n        return [line]\n\n    @staticmethod\n    def _split_line_with_multipoint(line, splitter):\n        \"\"\"Split a LineString with a MultiPoint\"\"\"\n\n        if not isinstance(line, LineString):\n            raise GeometryTypeError(\"First argument must be a LineString\")\n        if not isinstance(splitter, MultiPoint):\n            raise GeometryTypeError(\"Second argument must be a MultiPoint\")\n\n        chunks = [line]\n        for pt in splitter.geoms:\n            new_chunks = []\n            for chunk in filter(lambda x: not x.is_empty, chunks):\n                # add the newly split 2 lines or the same line if not split\n                new_chunks.extend(SplitOp._split_line_with_point(chunk, pt))\n            chunks = new_chunks\n\n        return chunks\n\n    @staticmethod\n    def split(geom, splitter):\n        \"\"\"\n        Splits a geometry by another geometry and returns a collection of geometries. This function is the theoretical\n        opposite of the union of the split geometry parts. If the splitter does not split the geometry, a collection\n        with a single geometry equal to the input geometry is returned.\n        The function supports:\n          - Splitting a (Multi)LineString by a (Multi)Point or (Multi)LineString or (Multi)Polygon\n          - Splitting a (Multi)Polygon by a LineString\n\n        It may be convenient to snap the splitter with low tolerance to the geometry. For example in the case\n        of splitting a line by a point, the point must be exactly on the line, for the line to be correctly split.\n        When splitting a line by a polygon, the boundary of the polygon is used for the operation.\n        When splitting a line by another line, a ValueError is raised if the two overlap at some segment.\n\n        Parameters\n        ----------\n        geom : geometry\n            The geometry to be split\n        splitter : geometry\n            The geometry that will split the input geom\n\n        Example\n        -------\n        >>> pt = Point((1, 1))\n        >>> line = LineString([(0,0), (2,2)])\n        >>> result = split(line, pt)\n        >>> result.wkt\n        'GEOMETRYCOLLECTION (LINESTRING (0 0, 1 1), LINESTRING (1 1, 2 2))'\n        \"\"\"\n\n        if geom.geom_type in (\"MultiLineString\", \"MultiPolygon\"):\n            return GeometryCollection(\n                [i for part in geom.geoms for i in SplitOp.split(part, splitter).geoms]\n            )\n\n        elif geom.geom_type == \"LineString\":\n            if splitter.geom_type in (\n                \"LineString\",\n                \"MultiLineString\",\n                \"Polygon\",\n                \"MultiPolygon\",\n            ):\n                split_func = SplitOp._split_line_with_line\n            elif splitter.geom_type == \"Point\":\n                split_func = SplitOp._split_line_with_point\n            elif splitter.geom_type == \"MultiPoint\":\n                split_func = SplitOp._split_line_with_multipoint\n            else:\n                raise GeometryTypeError(\n                    f\"Splitting a LineString with a {splitter.geom_type} is not supported\"\n                )\n\n        elif geom.geom_type == \"Polygon\":\n            if splitter.geom_type == \"LineString\":\n                split_func = SplitOp._split_polygon_with_line\n            else:\n                raise GeometryTypeError(\n                    f\"Splitting a Polygon with a {splitter.geom_type} is not supported\"\n                )\n\n        else:\n            raise GeometryTypeError(\n                f\"Splitting {geom.geom_type} geometry is not supported\"\n            )\n\n        return GeometryCollection(split_func(geom, splitter))\n\n\nsplit = SplitOp.split\n\n\ndef substring(geom, start_dist, end_dist, normalized=False):\n    \"\"\"Return a line segment between specified distances along a LineString\n\n    Negative distance values are taken as measured in the reverse\n    direction from the end of the geometry. Out-of-range index\n    values are handled by clamping them to the valid range of values.\n\n    If the start distance equals the end distance, a Point is returned.\n\n    If the start distance is actually beyond the end distance, then the\n    reversed substring is returned such that the start distance is\n    at the first coordinate.\n\n    Parameters\n    ----------\n    geom : LineString\n        The geometry to get a substring of.\n    start_dist : float\n        The distance along `geom` of the start of the substring.\n    end_dist : float\n        The distance along `geom` of the end of the substring.\n    normalized : bool, False\n        Whether the distance parameters are interpreted as a\n        fraction of the geometry's length.\n\n    Returns\n    -------\n    Union[Point, LineString]\n        The substring between `start_dist` and `end_dist` or a Point\n        if they are at the same location.\n\n    Raises\n    ------\n    TypeError\n        If `geom` is not a LineString.\n\n    Examples\n    --------\n    >>> from shapely.geometry import LineString\n    >>> from shapely.ops import substring\n    >>> ls = LineString((i, 0) for i in range(6))\n    >>> ls.wkt\n    'LINESTRING (0 0, 1 0, 2 0, 3 0, 4 0, 5 0)'\n    >>> substring(ls, start_dist=1, end_dist=3).wkt\n    'LINESTRING (1 0, 2 0, 3 0)'\n    >>> substring(ls, start_dist=3, end_dist=1).wkt\n    'LINESTRING (3 0, 2 0, 1 0)'\n    >>> substring(ls, start_dist=1, end_dist=-3).wkt\n    'LINESTRING (1 0, 2 0)'\n    >>> substring(ls, start_dist=0.2, end_dist=-0.6, normalized=True).wkt\n    'LINESTRING (1 0, 2 0)'\n\n    Returning a `Point` when `start_dist` and `end_dist` are at the\n    same location.\n\n    >>> substring(ls, 2.5, -2.5).wkt\n    'POINT (2.5 0)'\n    \"\"\"\n\n    if not isinstance(geom, LineString):\n        raise GeometryTypeError(\n            \"Can only calculate a substring of LineString geometries. \"\n            f\"A {geom.geom_type} was provided.\"\n        )\n\n    # Filter out cases in which to return a point\n    if start_dist == end_dist:\n        return geom.interpolate(start_dist, normalized)\n    elif not normalized and start_dist >= geom.length and end_dist >= geom.length:\n        return geom.interpolate(geom.length, normalized)\n    elif not normalized and -start_dist >= geom.length and -end_dist >= geom.length:\n        return geom.interpolate(0, normalized)\n    elif normalized and start_dist >= 1 and end_dist >= 1:\n        return geom.interpolate(1, normalized)\n    elif normalized and -start_dist >= 1 and -end_dist >= 1:\n        return geom.interpolate(0, normalized)\n\n    if normalized:\n        start_dist *= geom.length\n        end_dist *= geom.length\n\n    # Filter out cases where distances meet at a middle point from opposite ends.\n    if start_dist < 0 < end_dist and abs(start_dist) + end_dist == geom.length:\n        return geom.interpolate(end_dist)\n    elif end_dist < 0 < start_dist and abs(end_dist) + start_dist == geom.length:\n        return geom.interpolate(start_dist)\n\n    start_point = geom.interpolate(start_dist)\n    end_point = geom.interpolate(end_dist)\n\n    if start_dist < 0:\n        start_dist = geom.length + start_dist  # Values may still be negative,\n    if end_dist < 0:  # but only in the out-of-range\n        end_dist = geom.length + end_dist  # sense, not the wrap-around sense.\n\n    reverse = start_dist > end_dist\n    if reverse:\n        start_dist, end_dist = end_dist, start_dist\n\n    if start_dist < 0:\n        start_dist = 0  # to avoid duplicating the first vertex\n\n    if reverse:\n        vertex_list = [tuple(*end_point.coords)]\n    else:\n        vertex_list = [tuple(*start_point.coords)]\n\n    coords = list(geom.coords)\n    current_distance = 0\n    for p1, p2 in zip(coords, coords[1:]):\n        if start_dist < current_distance < end_dist:\n            vertex_list.append(p1)\n        elif current_distance >= end_dist:\n            break\n\n        current_distance += ((p2[0] - p1[0]) ** 2 + (p2[1] - p1[1]) ** 2) ** 0.5\n\n    if reverse:\n        vertex_list.append(tuple(*start_point.coords))\n        # reverse direction result\n        vertex_list = reversed(vertex_list)\n    else:\n        vertex_list.append(tuple(*end_point.coords))\n\n    return LineString(vertex_list)\n\n\ndef clip_by_rect(geom, xmin, ymin, xmax, ymax):\n    \"\"\"Returns the portion of a geometry within a rectangle\n\n    The geometry is clipped in a fast but possibly dirty way. The output is\n    not guaranteed to be valid. No exceptions will be raised for topological\n    errors.\n\n    Parameters\n    ----------\n    geom : geometry\n        The geometry to be clipped\n    xmin : float\n        Minimum x value of the rectangle\n    ymin : float\n        Minimum y value of the rectangle\n    xmax : float\n        Maximum x value of the rectangle\n    ymax : float\n        Maximum y value of the rectangle\n\n    Notes\n    -----\n    Requires GEOS >= 3.5.0\n    New in 1.7.\n    \"\"\"\n    if geom.is_empty:\n        return geom\n    return shapely.clip_by_rect(geom, xmin, ymin, xmax, ymax)\n\n\ndef orient(geom, sign=1.0):\n    \"\"\"A properly oriented copy of the given geometry.\n\n    The signed area of the result will have the given sign. A sign of\n    1.0 means that the coordinates of the product's exterior rings will\n    be oriented counter-clockwise.\n\n    Parameters\n    ----------\n    geom : Geometry\n        The original geometry. May be a Polygon, MultiPolygon, or\n        GeometryCollection.\n    sign : float, optional.\n        The sign of the result's signed area.\n\n    Returns\n    -------\n    Geometry\n\n    \"\"\"\n    if isinstance(geom, BaseMultipartGeometry):\n        return geom.__class__(\n            list(\n                map(\n                    lambda geom: orient(geom, sign),\n                    geom.geoms,\n                )\n            )\n        )\n    if isinstance(geom, (Polygon,)):\n        return orient_(geom, sign)\n    return geom\n", 738], "C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py": ["\"\"\"Base geometry class and utilities\n\nNote: a third, z, coordinate value may be used when constructing\ngeometry objects, but has no effect on geometric analysis. All\noperations are performed in the x-y plane. Thus, geometries with\ndifferent z values may intersect or be equal.\n\"\"\"\nimport re\nfrom warnings import warn\n\nimport numpy as np\n\nimport shapely\nfrom shapely._geometry_helpers import _geom_factory\nfrom shapely.constructive import BufferCapStyle, BufferJoinStyle\nfrom shapely.coords import CoordinateSequence\nfrom shapely.errors import GeometryTypeError, GEOSException, ShapelyDeprecationWarning\n\nGEOMETRY_TYPES = [\n    \"Point\",\n    \"LineString\",\n    \"LinearRing\",\n    \"Polygon\",\n    \"MultiPoint\",\n    \"MultiLineString\",\n    \"MultiPolygon\",\n    \"GeometryCollection\",\n]\n\n\ndef geom_factory(g, parent=None):\n    \"\"\"\n    Creates a Shapely geometry instance from a pointer to a GEOS geometry.\n\n    .. warning::\n        The GEOS library used to create the the GEOS geometry pointer\n        and the GEOS library used by Shapely must be exactly the same, or\n        unexpected results or segfaults may occur.\n\n    .. deprecated:: 2.0\n        Deprecated in Shapely 2.0, and will be removed in a future version.\n    \"\"\"\n    warn(\n        \"The 'geom_factory' function is deprecated in Shapely 2.0, and will be \"\n        \"removed in a future version\",\n        DeprecationWarning,\n        stacklevel=2,\n    )\n    return _geom_factory(g)\n\n\ndef dump_coords(geom):\n    \"\"\"Dump coordinates of a geometry in the same order as data packing\"\"\"\n    if not isinstance(geom, BaseGeometry):\n        raise ValueError(\n            \"Must be instance of a geometry class; found \" + geom.__class__.__name__\n        )\n    elif geom.geom_type in (\"Point\", \"LineString\", \"LinearRing\"):\n        return geom.coords[:]\n    elif geom.geom_type == \"Polygon\":\n        return geom.exterior.coords[:] + [i.coords[:] for i in geom.interiors]\n    elif geom.geom_type.startswith(\"Multi\") or geom.geom_type == \"GeometryCollection\":\n        # Recursive call\n        return [dump_coords(part) for part in geom.geoms]\n    else:\n        raise GeometryTypeError(\"Unhandled geometry type: \" + repr(geom.geom_type))\n\n\ndef _maybe_unpack(result):\n    if result.ndim == 0:\n        # convert numpy 0-d array / scalar to python scalar\n        return result.item()\n    else:\n        # >=1 dim array\n        return result\n\n\nclass CAP_STYLE:\n    round = BufferCapStyle.round\n    flat = BufferCapStyle.flat\n    square = BufferCapStyle.square\n\n\nclass JOIN_STYLE:\n    round = BufferJoinStyle.round\n    mitre = BufferJoinStyle.mitre\n    bevel = BufferJoinStyle.bevel\n\n\nclass BaseGeometry(shapely.Geometry):\n    \"\"\"\n    Provides GEOS spatial predicates and topological operations.\n\n    \"\"\"\n\n    __slots__ = []\n\n    def __new__(self):\n        warn(\n            \"Directly calling the base class 'BaseGeometry()' is deprecated, and \"\n            \"will raise an error in the future. To create an empty geometry, \"\n            \"use one of the subclasses instead, for example 'GeometryCollection()'.\",\n            ShapelyDeprecationWarning,\n            stacklevel=2,\n        )\n        return shapely.from_wkt(\"GEOMETRYCOLLECTION EMPTY\")\n\n    @property\n    def _ndim(self):\n        return shapely.get_coordinate_dimension(self)\n\n    def __bool__(self):\n        return self.is_empty is False\n\n    def __nonzero__(self):\n        return self.__bool__()\n\n    def __format__(self, format_spec):\n        \"\"\"Format a geometry using a format specification.\"\"\"\n        # bypass regexp for simple cases\n        if format_spec == \"\":\n            return shapely.to_wkt(self, rounding_precision=-1)\n        elif format_spec == \"x\":\n            return shapely.to_wkb(self, hex=True).lower()\n        elif format_spec == \"X\":\n            return shapely.to_wkb(self, hex=True)\n\n        # fmt: off\n        format_spec_regexp = (\n            \"(?:0?\\\\.(?P<prec>[0-9]+))?\"\n            \"(?P<fmt_code>[fFgGxX]?)\"\n        )\n        # fmt: on\n        match = re.fullmatch(format_spec_regexp, format_spec)\n        if match is None:\n            raise ValueError(f\"invalid format specifier: {format_spec}\")\n\n        prec, fmt_code = match.groups()\n\n        if prec:\n            prec = int(prec)\n        else:\n            # GEOS has a default rounding_precision -1\n            prec = -1\n\n        if not fmt_code:\n            fmt_code = \"g\"\n\n        if fmt_code in (\"g\", \"G\"):\n            res = shapely.to_wkt(self, rounding_precision=prec, trim=True)\n        elif fmt_code in (\"f\", \"F\"):\n            res = shapely.to_wkt(self, rounding_precision=prec, trim=False)\n        elif fmt_code in (\"x\", \"X\"):\n            raise ValueError(\"hex representation does not specify precision\")\n        else:\n            raise NotImplementedError(f\"unhandled fmt_code: {fmt_code}\")\n\n        if fmt_code.isupper():\n            return res.upper()\n        else:\n            return res\n\n    def __repr__(self):\n        try:\n            wkt = super().__str__()\n        except (GEOSException, ValueError):\n            # we never want a repr() to fail; that can be very confusing\n            return \"<shapely.{} Exception in WKT writer>\".format(\n                self.__class__.__name__\n            )\n\n        # the total length is limited to 80 characters including brackets\n        max_length = 78\n        if len(wkt) > max_length:\n            return f\"<{wkt[: max_length - 3]}...>\"\n\n        return f\"<{wkt}>\"\n\n    def __str__(self):\n        return self.wkt\n\n    def __reduce__(self):\n        return (shapely.from_wkb, (shapely.to_wkb(self, include_srid=True),))\n\n    # Operators\n    # ---------\n\n    def __and__(self, other):\n        return self.intersection(other)\n\n    def __or__(self, other):\n        return self.union(other)\n\n    def __sub__(self, other):\n        return self.difference(other)\n\n    def __xor__(self, other):\n        return self.symmetric_difference(other)\n\n    def __eq__(self, other):\n        if not isinstance(other, BaseGeometry):\n            return NotImplemented\n        # equal_nan=False is the default, but not yet available for older numpy\n        # TODO updated once we require numpy >= 1.19\n        return type(other) == type(self) and np.array_equal(\n            self.coords, other.coords  # , equal_nan=False\n        )\n\n    def __ne__(self, other):\n        if not isinstance(other, BaseGeometry):\n            return NotImplemented\n        return not self.__eq__(other)\n\n    def __hash__(self):\n        return super().__hash__()\n\n    # Coordinate access\n    # -----------------\n\n    @property\n    def coords(self):\n        \"\"\"Access to geometry's coordinates (CoordinateSequence)\"\"\"\n        coords_array = shapely.get_coordinates(self, include_z=self.has_z)\n        return CoordinateSequence(coords_array)\n\n    @property\n    def xy(self):\n        \"\"\"Separate arrays of X and Y coordinate values\"\"\"\n        raise NotImplementedError\n\n    # Python feature protocol\n\n    @property\n    def __geo_interface__(self):\n        \"\"\"Dictionary representation of the geometry\"\"\"\n        raise NotImplementedError\n\n    # Type of geometry and its representations\n    # ----------------------------------------\n\n    def geometryType(self):\n        warn(\n            \"The 'GeometryType()' method is deprecated, and will be removed in \"\n            \"the future. You can use the 'geom_type' attribute instead.\",\n            ShapelyDeprecationWarning,\n            stacklevel=2,\n        )\n        return self.geom_type\n\n    @property\n    def type(self):\n        warn(\n            \"The 'type' attribute is deprecated, and will be removed in \"\n            \"the future. You can use the 'geom_type' attribute instead.\",\n            ShapelyDeprecationWarning,\n            stacklevel=2,\n        )\n        return self.geom_type\n\n    @property\n    def wkt(self):\n        \"\"\"WKT representation of the geometry\"\"\"\n        # TODO(shapely-2.0) keep default of not trimming?\n        return shapely.to_wkt(self, rounding_precision=-1)\n\n    @property\n    def wkb(self):\n        \"\"\"WKB representation of the geometry\"\"\"\n        return shapely.to_wkb(self)\n\n    @property\n    def wkb_hex(self):\n        \"\"\"WKB hex representation of the geometry\"\"\"\n        return shapely.to_wkb(self, hex=True)\n\n    def svg(self, scale_factor=1.0, **kwargs):\n        \"\"\"Raises NotImplementedError\"\"\"\n        raise NotImplementedError\n\n    def _repr_svg_(self):\n        \"\"\"SVG representation for iPython notebook\"\"\"\n        svg_top = (\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" '\n            'xmlns:xlink=\"http://www.w3.org/1999/xlink\" '\n        )\n        if self.is_empty:\n            return svg_top + \"/>\"\n        else:\n            # Establish SVG canvas that will fit all the data + small space\n            xmin, ymin, xmax, ymax = self.bounds\n            if xmin == xmax and ymin == ymax:\n                # This is a point; buffer using an arbitrary size\n                xmin, ymin, xmax, ymax = self.buffer(1).bounds\n            else:\n                # Expand bounds by a fraction of the data ranges\n                expand = 0.04  # or 4%, same as R plots\n                widest_part = max([xmax - xmin, ymax - ymin])\n                expand_amount = widest_part * expand\n                xmin -= expand_amount\n                ymin -= expand_amount\n                xmax += expand_amount\n                ymax += expand_amount\n            dx = xmax - xmin\n            dy = ymax - ymin\n            width = min([max([100.0, dx]), 300])\n            height = min([max([100.0, dy]), 300])\n            try:\n                scale_factor = max([dx, dy]) / max([width, height])\n            except ZeroDivisionError:\n                scale_factor = 1.0\n            view_box = f\"{xmin} {ymin} {dx} {dy}\"\n            transform = f\"matrix(1,0,0,-1,0,{ymax + ymin})\"\n            return svg_top + (\n                'width=\"{1}\" height=\"{2}\" viewBox=\"{0}\" '\n                'preserveAspectRatio=\"xMinYMin meet\">'\n                '<g transform=\"{3}\">{4}</g></svg>'\n            ).format(view_box, width, height, transform, self.svg(scale_factor))\n\n    @property\n    def geom_type(self):\n        \"\"\"Name of the geometry's type, such as 'Point'\"\"\"\n        return GEOMETRY_TYPES[shapely.get_type_id(self)]\n\n    # Real-valued properties and methods\n    # ----------------------------------\n\n    @property\n    def area(self):\n        \"\"\"Unitless area of the geometry (float)\"\"\"\n        return float(shapely.area(self))\n\n    def distance(self, other):\n        \"\"\"Unitless distance to other geometry (float)\"\"\"\n        return _maybe_unpack(shapely.distance(self, other))\n\n    def hausdorff_distance(self, other):\n        \"\"\"Unitless hausdorff distance to other geometry (float)\"\"\"\n        return _maybe_unpack(shapely.hausdorff_distance(self, other))\n\n    @property\n    def length(self):\n        \"\"\"Unitless length of the geometry (float)\"\"\"\n        return float(shapely.length(self))\n\n    @property\n    def minimum_clearance(self):\n        \"\"\"Unitless distance by which a node could be moved to produce an invalid geometry (float)\"\"\"\n        return float(shapely.minimum_clearance(self))\n\n    # Topological properties\n    # ----------------------\n\n    @property\n    def boundary(self):\n        \"\"\"Returns a lower dimension geometry that bounds the object\n\n        The boundary of a polygon is a line, the boundary of a line is a\n        collection of points. The boundary of a point is an empty (null)\n        collection.\n        \"\"\"\n        return shapely.boundary(self)\n\n    @property\n    def bounds(self):\n        \"\"\"Returns minimum bounding region (minx, miny, maxx, maxy)\"\"\"\n        return tuple(shapely.bounds(self).tolist())\n\n    @property\n    def centroid(self):\n        \"\"\"Returns the geometric center of the object\"\"\"\n        return shapely.centroid(self)\n\n    def point_on_surface(self):\n        \"\"\"Returns a point guaranteed to be within the object, cheaply.\n\n        Alias of `representative_point`.\n        \"\"\"\n        return shapely.point_on_surface(self)\n\n    def representative_point(self):\n        \"\"\"Returns a point guaranteed to be within the object, cheaply.\n\n        Alias of `point_on_surface`.\n        \"\"\"\n        return shapely.point_on_surface(self)\n\n    @property\n    def convex_hull(self):\n        \"\"\"Imagine an elastic band stretched around the geometry: that's a\n        convex hull, more or less\n\n        The convex hull of a three member multipoint, for example, is a\n        triangular polygon.\n        \"\"\"\n        return shapely.convex_hull(self)\n\n    @property\n    def envelope(self):\n        \"\"\"A figure that envelopes the geometry\"\"\"\n        return shapely.envelope(self)\n\n    @property\n    def oriented_envelope(self):\n        \"\"\"\n        Returns the oriented envelope (minimum rotated rectangle) that\n        encloses the geometry.\n\n        Unlike envelope this rectangle is not constrained to be parallel to the\n        coordinate axes. If the convex hull of the object is a degenerate (line\n        or point) this degenerate is returned.\n\n        Alias of `minimum_rotated_rectangle`.\n        \"\"\"\n        return shapely.oriented_envelope(self)\n\n    @property\n    def minimum_rotated_rectangle(self):\n        \"\"\"\n        Returns the oriented envelope (minimum rotated rectangle) that\n        encloses the geometry.\n\n        Unlike `envelope` this rectangle is not constrained to be parallel to the\n        coordinate axes. If the convex hull of the object is a degenerate (line\n        or point) this degenerate is returned.\n\n        Alias of `oriented_envelope`.\n        \"\"\"\n        return shapely.oriented_envelope(self)\n\n    def buffer(\n        self,\n        distance,\n        quad_segs=16,\n        cap_style=\"round\",\n        join_style=\"round\",\n        mitre_limit=5.0,\n        single_sided=False,\n        **kwargs,\n    ):\n        \"\"\"Get a geometry that represents all points within a distance\n        of this geometry.\n\n        A positive distance produces a dilation, a negative distance an\n        erosion. A very small or zero distance may sometimes be used to\n        \"tidy\" a polygon.\n\n        Parameters\n        ----------\n        distance : float\n            The distance to buffer around the object.\n        resolution : int, optional\n            The resolution of the buffer around each vertex of the\n            object.\n        quad_segs : int, optional\n            Sets the number of line segments used to approximate an\n            angle fillet.\n        cap_style : shapely.BufferCapStyle or {'round', 'square', 'flat'}, default 'round'\n            Specifies the shape of buffered line endings. BufferCapStyle.round ('round')\n            results in circular line endings (see ``quad_segs``). Both BufferCapStyle.square\n            ('square') and BufferCapStyle.flat ('flat') result in rectangular line endings,\n            only BufferCapStyle.flat ('flat') will end at the original vertex,\n            while BufferCapStyle.square ('square') involves adding the buffer width.\n        join_style : shapely.BufferJoinStyle or {'round', 'mitre', 'bevel'}, default 'round'\n            Specifies the shape of buffered line midpoints. BufferJoinStyle.ROUND ('round')\n            results in rounded shapes. BufferJoinStyle.bevel ('bevel') results in a beveled\n            edge that touches the original vertex. BufferJoinStyle.mitre ('mitre') results\n            in a single vertex that is beveled depending on the ``mitre_limit`` parameter.\n        mitre_limit : float, optional\n            The mitre limit ratio is used for very sharp corners. The\n            mitre ratio is the ratio of the distance from the corner to\n            the end of the mitred offset corner. When two line segments\n            meet at a sharp angle, a miter join will extend the original\n            geometry. To prevent unreasonable geometry, the mitre limit\n            allows controlling the maximum length of the join corner.\n            Corners with a ratio which exceed the limit will be beveled.\n        single_side : bool, optional\n            The side used is determined by the sign of the buffer\n            distance:\n\n                a positive distance indicates the left-hand side\n                a negative distance indicates the right-hand side\n\n            The single-sided buffer of point geometries is the same as\n            the regular buffer.  The End Cap Style for single-sided\n            buffers is always ignored, and forced to the equivalent of\n            CAP_FLAT.\n        quadsegs : int, optional\n            Deprecated alias for `quad_segs`.\n\n        Returns\n        -------\n        Geometry\n\n        Notes\n        -----\n        The return value is a strictly two-dimensional geometry. All\n        Z coordinates of the original geometry will be ignored.\n\n        Examples\n        --------\n        >>> from shapely.wkt import loads\n        >>> g = loads('POINT (0.0 0.0)')\n\n        16-gon approx of a unit radius circle:\n\n        >>> g.buffer(1.0).area  # doctest: +ELLIPSIS\n        3.1365484905459...\n\n        128-gon approximation:\n\n        >>> g.buffer(1.0, 128).area  # doctest: +ELLIPSIS\n        3.141513801144...\n\n        triangle approximation:\n\n        >>> g.buffer(1.0, 3).area\n        3.0\n        >>> list(g.buffer(1.0, cap_style=BufferCapStyle.square).exterior.coords)\n        [(1.0, 1.0), (1.0, -1.0), (-1.0, -1.0), (-1.0, 1.0), (1.0, 1.0)]\n        >>> g.buffer(1.0, cap_style=BufferCapStyle.square).area\n        4.0\n\n        \"\"\"\n        quadsegs = kwargs.pop(\"quadsegs\", None)\n        if quadsegs is not None:\n            warn(\n                \"The `quadsegs` argument is deprecated. Use `quad_segs` instead.\",\n                FutureWarning,\n            )\n            quad_segs = quadsegs\n\n        # TODO deprecate `resolution` keyword for shapely 2.1\n        resolution = kwargs.pop(\"resolution\", None)\n        if resolution is not None:\n            quad_segs = resolution\n        if kwargs:\n            kwarg = list(kwargs.keys())[0]  # noqa\n            raise TypeError(f\"buffer() got an unexpected keyword argument '{kwarg}'\")\n\n        if mitre_limit == 0.0:\n            raise ValueError(\"Cannot compute offset from zero-length line segment\")\n        elif not np.isfinite(distance).all():\n            raise ValueError(\"buffer distance must be finite\")\n\n        return shapely.buffer(\n            self,\n            distance,\n            quad_segs=quad_segs,\n            cap_style=cap_style,\n            join_style=join_style,\n            mitre_limit=mitre_limit,\n            single_sided=single_sided,\n        )\n\n    def simplify(self, tolerance, preserve_topology=True):\n        \"\"\"Returns a simplified geometry produced by the Douglas-Peucker\n        algorithm\n\n        Coordinates of the simplified geometry will be no more than the\n        tolerance distance from the original. Unless the topology preserving\n        option is used, the algorithm may produce self-intersecting or\n        otherwise invalid geometries.\n        \"\"\"\n        return shapely.simplify(self, tolerance, preserve_topology=preserve_topology)\n\n    def normalize(self):\n        \"\"\"Converts geometry to normal form (or canonical form).\n\n        This method orders the coordinates, rings of a polygon and parts of\n        multi geometries consistently. Typically useful for testing purposes\n        (for example in combination with `equals_exact`).\n\n        Examples\n        --------\n        >>> from shapely import MultiLineString\n        >>> line = MultiLineString([[(0, 0), (1, 1)], [(3, 3), (2, 2)]])\n        >>> line.normalize()\n        <MULTILINESTRING ((2 2, 3 3), (0 0, 1 1))>\n        \"\"\"\n        return shapely.normalize(self)\n\n    # Overlay operations\n    # ---------------------------\n\n    def difference(self, other, grid_size=None):\n        \"\"\"\n        Returns the difference of the geometries.\n\n        Refer to `shapely.difference` for full documentation.\n        \"\"\"\n        return shapely.difference(self, other, grid_size=grid_size)\n\n    def intersection(self, other, grid_size=None):\n        \"\"\"\n        Returns the intersection of the geometries.\n\n        Refer to `shapely.intersection` for full documentation.\n        \"\"\"\n        return shapely.intersection(self, other, grid_size=grid_size)\n\n    def symmetric_difference(self, other, grid_size=None):\n        \"\"\"\n        Returns the symmetric difference of the geometries.\n\n        Refer to `shapely.symmetric_difference` for full documentation.\n        \"\"\"\n        return shapely.symmetric_difference(self, other, grid_size=grid_size)\n\n    def union(self, other, grid_size=None):\n        \"\"\"\n        Returns the union of the geometries.\n\n        Refer to `shapely.union` for full documentation.\n        \"\"\"\n        return shapely.union(self, other, grid_size=grid_size)\n\n    # Unary predicates\n    # ----------------\n\n    @property\n    def has_z(self):\n        \"\"\"True if the geometry's coordinate sequence(s) have z values (are\n        3-dimensional)\"\"\"\n        return bool(shapely.has_z(self))\n\n    @property\n    def is_empty(self):\n        \"\"\"True if the set of points in this geometry is empty, else False\"\"\"\n        return bool(shapely.is_empty(self))\n\n    @property\n    def is_ring(self):\n        \"\"\"True if the geometry is a closed ring, else False\"\"\"\n        return bool(shapely.is_ring(self))\n\n    @property\n    def is_closed(self):\n        \"\"\"True if the geometry is closed, else False\n\n        Applicable only to 1-D geometries.\"\"\"\n        if self.geom_type == \"LinearRing\":\n            return True\n        return bool(shapely.is_closed(self))\n\n    @property\n    def is_simple(self):\n        \"\"\"True if the geometry is simple, meaning that any self-intersections\n        are only at boundary points, else False\"\"\"\n        return bool(shapely.is_simple(self))\n\n    @property\n    def is_valid(self):\n        \"\"\"True if the geometry is valid (definition depends on sub-class),\n        else False\"\"\"\n        return bool(shapely.is_valid(self))\n\n    # Binary predicates\n    # -----------------\n\n    def relate(self, other):\n        \"\"\"Returns the DE-9IM intersection matrix for the two geometries\n        (string)\"\"\"\n        return shapely.relate(self, other)\n\n    def covers(self, other):\n        \"\"\"Returns True if the geometry covers the other, else False\"\"\"\n        return _maybe_unpack(shapely.covers(self, other))\n\n    def covered_by(self, other):\n        \"\"\"Returns True if the geometry is covered by the other, else False\"\"\"\n        return _maybe_unpack(shapely.covered_by(self, other))\n\n    def contains(self, other):\n        \"\"\"Returns True if the geometry contains the other, else False\"\"\"\n        return _maybe_unpack(shapely.contains(self, other))\n\n    def contains_properly(self, other):\n        \"\"\"\n        Returns True if the geometry completely contains the other, with no\n        common boundary points, else False\n\n        Refer to `shapely.contains_properly` for full documentation.\n        \"\"\"\n        return _maybe_unpack(shapely.contains_properly(self, other))\n\n    def crosses(self, other):\n        \"\"\"Returns True if the geometries cross, else False\"\"\"\n        return _maybe_unpack(shapely.crosses(self, other))\n\n    def disjoint(self, other):\n        \"\"\"Returns True if geometries are disjoint, else False\"\"\"\n        return _maybe_unpack(shapely.disjoint(self, other))\n\n    def equals(self, other):\n        \"\"\"Returns True if geometries are equal, else False.\n\n        This method considers point-set equality (or topological\n        equality), and is equivalent to (self.within(other) &\n        self.contains(other)).\n\n        Examples\n        --------\n        >>> LineString(\n        ...     [(0, 0), (2, 2)]\n        ... ).equals(\n        ...     LineString([(0, 0), (1, 1), (2, 2)])\n        ... )\n        True\n\n        Returns\n        -------\n        bool\n\n        \"\"\"\n        return _maybe_unpack(shapely.equals(self, other))\n\n    def intersects(self, other):\n        \"\"\"Returns True if geometries intersect, else False\"\"\"\n        return _maybe_unpack(shapely.intersects(self, other))\n\n    def overlaps(self, other):\n        \"\"\"Returns True if geometries overlap, else False\"\"\"\n        return _maybe_unpack(shapely.overlaps(self, other))\n\n    def touches(self, other):\n        \"\"\"Returns True if geometries touch, else False\"\"\"\n        return _maybe_unpack(shapely.touches(self, other))\n\n    def within(self, other):\n        \"\"\"Returns True if geometry is within the other, else False\"\"\"\n        return _maybe_unpack(shapely.within(self, other))\n\n    def dwithin(self, other, distance):\n        \"\"\"\n        Returns True if geometry is within a given distance from the other, else False.\n\n        Refer to `shapely.dwithin` for full documentation.\n        \"\"\"\n        return _maybe_unpack(shapely.dwithin(self, other, distance))\n\n    def equals_exact(self, other, tolerance):\n        \"\"\"True if geometries are equal to within a specified\n        tolerance.\n\n        Parameters\n        ----------\n        other : BaseGeometry\n            The other geometry object in this comparison.\n        tolerance : float\n            Absolute tolerance in the same units as coordinates.\n\n        This method considers coordinate equality, which requires\n        coordinates to be equal and in the same order for all components\n        of a geometry.\n\n        Because of this it is possible for \"equals()\" to be True for two\n        geometries and \"equals_exact()\" to be False.\n\n        Examples\n        --------\n        >>> LineString(\n        ...     [(0, 0), (2, 2)]\n        ... ).equals_exact(\n        ...     LineString([(0, 0), (1, 1), (2, 2)]),\n        ...     1e-6\n        ... )\n        False\n\n        Returns\n        -------\n        bool\n\n        \"\"\"\n        return _maybe_unpack(shapely.equals_exact(self, other, tolerance))\n\n    def almost_equals(self, other, decimal=6):\n        \"\"\"True if geometries are equal at all coordinates to a\n        specified decimal place.\n\n        .. deprecated:: 1.8.0\n            The 'almost_equals()' method is deprecated\n            and will be removed in Shapely 2.1 because the name is\n            confusing. The 'equals_exact()' method should be used\n            instead.\n\n        Refers to approximate coordinate equality, which requires\n        coordinates to be approximately equal and in the same order for\n        all components of a geometry.\n\n        Because of this it is possible for \"equals()\" to be True for two\n        geometries and \"almost_equals()\" to be False.\n\n        Examples\n        --------\n        >>> LineString(\n        ...     [(0, 0), (2, 2)]\n        ... ).equals_exact(\n        ...     LineString([(0, 0), (1, 1), (2, 2)]),\n        ...     1e-6\n        ... )\n        False\n\n        Returns\n        -------\n        bool\n\n        \"\"\"\n        warn(\n            \"The 'almost_equals()' method is deprecated and will be \"\n            \"removed in Shapely 2.1; use 'equals_exact()' instead\",\n            ShapelyDeprecationWarning,\n            stacklevel=2,\n        )\n        return self.equals_exact(other, 0.5 * 10 ** (-decimal))\n\n    def relate_pattern(self, other, pattern):\n        \"\"\"Returns True if the DE-9IM string code for the relationship between\n        the geometries satisfies the pattern, else False\"\"\"\n        return _maybe_unpack(shapely.relate_pattern(self, other, pattern))\n\n    # Linear referencing\n    # ------------------\n\n    def line_locate_point(self, other, normalized=False):\n        \"\"\"Returns the distance along this geometry to a point nearest the\n        specified point\n\n        If the normalized arg is True, return the distance normalized to the\n        length of the linear geometry.\n\n        Alias of `project`.\n        \"\"\"\n        return shapely.line_locate_point(self, other, normalized=normalized)\n\n    def project(self, other, normalized=False):\n        \"\"\"Returns the distance along this geometry to a point nearest the\n        specified point\n\n        If the normalized arg is True, return the distance normalized to the\n        length of the linear geometry.\n\n        Alias of `line_locate_point`.\n        \"\"\"\n        return shapely.line_locate_point(self, other, normalized=normalized)\n\n    def line_interpolate_point(self, distance, normalized=False):\n        \"\"\"Return a point at the specified distance along a linear geometry\n\n        Negative length values are taken as measured in the reverse\n        direction from the end of the geometry. Out-of-range index\n        values are handled by clamping them to the valid range of values.\n        If the normalized arg is True, the distance will be interpreted as a\n        fraction of the geometry's length.\n\n        Alias of `interpolate`.\n        \"\"\"\n        return shapely.line_interpolate_point(self, distance, normalized=normalized)\n\n    def interpolate(self, distance, normalized=False):\n        \"\"\"Return a point at the specified distance along a linear geometry\n\n        Negative length values are taken as measured in the reverse\n        direction from the end of the geometry. Out-of-range index\n        values are handled by clamping them to the valid range of values.\n        If the normalized arg is True, the distance will be interpreted as a\n        fraction of the geometry's length.\n\n        Alias of `line_interpolate_point`.\n        \"\"\"\n        return shapely.line_interpolate_point(self, distance, normalized=normalized)\n\n    def segmentize(self, max_segment_length):\n        \"\"\"Adds vertices to line segments based on maximum segment length.\n\n        Additional vertices will be added to every line segment in an input geometry\n        so that segments are no longer than the provided maximum segment length. New\n        vertices will evenly subdivide each segment.\n\n        Only linear components of input geometries are densified; other geometries\n        are returned unmodified.\n\n        Parameters\n        ----------\n        max_segment_length : float or array_like\n            Additional vertices will be added so that all line segments are no\n            longer this value.  Must be greater than 0.\n\n        Examples\n        --------\n        >>> from shapely import LineString, Polygon\n        >>> LineString([(0, 0), (0, 10)]).segmentize(max_segment_length=5)\n        <LINESTRING (0 0, 0 5, 0 10)>\n        >>> Polygon([(0, 0), (10, 0), (10, 10), (0, 10), (0, 0)]).segmentize(max_segment_length=5)\n        <POLYGON ((0 0, 5 0, 10 0, 10 5, 10 10, 5 10, 0 10, 0 5, 0 0))>\n        \"\"\"\n        return shapely.segmentize(self, max_segment_length)\n\n    def reverse(self):\n        \"\"\"Returns a copy of this geometry with the order of coordinates reversed.\n\n        If the geometry is a polygon with interior rings, the interior rings are also\n        reversed.\n\n        Points are unchanged.\n\n        See also\n        --------\n        is_ccw : Checks if a geometry is clockwise.\n\n        Examples\n        --------\n        >>> from shapely import LineString, Polygon\n        >>> LineString([(0, 0), (1, 2)]).reverse()\n        <LINESTRING (1 2, 0 0)>\n        >>> Polygon([(0, 0), (1, 0), (1, 1), (0, 1), (0, 0)]).reverse()\n        <POLYGON ((0 0, 0 1, 1 1, 1 0, 0 0))>\n        \"\"\"\n        return shapely.reverse(self)\n\n\nclass BaseMultipartGeometry(BaseGeometry):\n\n    __slots__ = []\n\n    @property\n    def coords(self):\n        raise NotImplementedError(\n            \"Sub-geometries may have coordinate sequences, \"\n            \"but multi-part geometries do not\"\n        )\n\n    @property\n    def geoms(self):\n        return GeometrySequence(self)\n\n    def __bool__(self):\n        return self.is_empty is False\n\n    def __eq__(self, other):\n        if not isinstance(other, BaseGeometry):\n            return NotImplemented\n        return (\n            type(other) == type(self)\n            and len(self.geoms) == len(other.geoms)\n            and all(a == b for a, b in zip(self.geoms, other.geoms))\n        )\n\n    def __hash__(self):\n        return super().__hash__()\n\n    def svg(self, scale_factor=1.0, color=None):\n        \"\"\"Returns a group of SVG elements for the multipart geometry.\n\n        Parameters\n        ==========\n        scale_factor : float\n            Multiplication factor for the SVG stroke-width.  Default is 1.\n        color : str, optional\n            Hex string for stroke or fill color. Default is to use \"#66cc99\"\n            if geometry is valid, and \"#ff3333\" if invalid.\n        \"\"\"\n        if self.is_empty:\n            return \"<g />\"\n        if color is None:\n            color = \"#66cc99\" if self.is_valid else \"#ff3333\"\n        return \"<g>\" + \"\".join(p.svg(scale_factor, color) for p in self.geoms) + \"</g>\"\n\n\nclass GeometrySequence:\n    \"\"\"\n    Iterative access to members of a homogeneous multipart geometry.\n    \"\"\"\n\n    # Attributes\n    # ----------\n    # _parent : object\n    #     Parent (Shapely) geometry\n    _parent = None\n\n    def __init__(self, parent):\n        self._parent = parent\n\n    def _get_geom_item(self, i):\n        return shapely.get_geometry(self._parent, i)\n\n    def __iter__(self):\n        for i in range(self.__len__()):\n            yield self._get_geom_item(i)\n\n    def __len__(self):\n        return shapely.get_num_geometries(self._parent)\n\n    def __getitem__(self, key):\n        m = self.__len__()\n        if isinstance(key, (int, np.integer)):\n            if key + m < 0 or key >= m:\n                raise IndexError(\"index out of range\")\n            if key < 0:\n                i = m + key\n            else:\n                i = key\n            return self._get_geom_item(i)\n        elif isinstance(key, slice):\n            res = []\n            start, stop, stride = key.indices(m)\n            for i in range(start, stop, stride):\n                res.append(self._get_geom_item(i))\n            return type(self._parent)(res or None)\n        else:\n            raise TypeError(\"key must be an index or slice\")\n\n\nclass EmptyGeometry(BaseGeometry):\n    def __new__(self):\n        \"\"\"Create an empty geometry.\"\"\"\n        warn(\n            \"The 'EmptyGeometry()' constructor to create an empty geometry is \"\n            \"deprecated, and will raise an error in the future. Use one of the \"\n            \"geometry subclasses instead, for example 'GeometryCollection()'.\",\n            ShapelyDeprecationWarning,\n            stacklevel=2,\n        )\n        return shapely.from_wkt(\"GEOMETRYCOLLECTION EMPTY\")\n", 1023], "C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py": ["\"\"\"Implementation of JSONDecoder\n\"\"\"\nimport re\n\nfrom json import scanner\ntry:\n    from _json import scanstring as c_scanstring\nexcept ImportError:\n    c_scanstring = None\n\n__all__ = ['JSONDecoder', 'JSONDecodeError']\n\nFLAGS = re.VERBOSE | re.MULTILINE | re.DOTALL\n\nNaN = float('nan')\nPosInf = float('inf')\nNegInf = float('-inf')\n\n\nclass JSONDecodeError(ValueError):\n    \"\"\"Subclass of ValueError with the following additional properties:\n\n    msg: The unformatted error message\n    doc: The JSON document being parsed\n    pos: The start index of doc where parsing failed\n    lineno: The line corresponding to pos\n    colno: The column corresponding to pos\n\n    \"\"\"\n    # Note that this exception is used from _json\n    def __init__(self, msg, doc, pos):\n        lineno = doc.count('\\n', 0, pos) + 1\n        colno = pos - doc.rfind('\\n', 0, pos)\n        errmsg = '%s: line %d column %d (char %d)' % (msg, lineno, colno, pos)\n        ValueError.__init__(self, errmsg)\n        self.msg = msg\n        self.doc = doc\n        self.pos = pos\n        self.lineno = lineno\n        self.colno = colno\n\n    def __reduce__(self):\n        return self.__class__, (self.msg, self.doc, self.pos)\n\n\n_CONSTANTS = {\n    '-Infinity': NegInf,\n    'Infinity': PosInf,\n    'NaN': NaN,\n}\n\n\nSTRINGCHUNK = re.compile(r'(.*?)([\"\\\\\\x00-\\x1f])', FLAGS)\nBACKSLASH = {\n    '\"': '\"', '\\\\': '\\\\', '/': '/',\n    'b': '\\b', 'f': '\\f', 'n': '\\n', 'r': '\\r', 't': '\\t',\n}\n\ndef _decode_uXXXX(s, pos):\n    esc = s[pos + 1:pos + 5]\n    if len(esc) == 4 and esc[1] not in 'xX':\n        try:\n            return int(esc, 16)\n        except ValueError:\n            pass\n    msg = \"Invalid \\\\uXXXX escape\"\n    raise JSONDecodeError(msg, s, pos)\n\ndef py_scanstring(s, end, strict=True,\n        _b=BACKSLASH, _m=STRINGCHUNK.match):\n    \"\"\"Scan the string s for a JSON string. End is the index of the\n    character in s after the quote that started the JSON string.\n    Unescapes all valid JSON string escape sequences and raises ValueError\n    on attempt to decode an invalid string. If strict is False then literal\n    control characters are allowed in the string.\n\n    Returns a tuple of the decoded string and the index of the character in s\n    after the end quote.\"\"\"\n    chunks = []\n    _append = chunks.append\n    begin = end - 1\n    while 1:\n        chunk = _m(s, end)\n        if chunk is None:\n            raise JSONDecodeError(\"Unterminated string starting at\", s, begin)\n        end = chunk.end()\n        content, terminator = chunk.groups()\n        # Content is contains zero or more unescaped string characters\n        if content:\n            _append(content)\n        # Terminator is the end of string, a literal control character,\n        # or a backslash denoting that an escape sequence follows\n        if terminator == '\"':\n            break\n        elif terminator != '\\\\':\n            if strict:\n                #msg = \"Invalid control character %r at\" % (terminator,)\n                msg = \"Invalid control character {0!r} at\".format(terminator)\n                raise JSONDecodeError(msg, s, end)\n            else:\n                _append(terminator)\n                continue\n        try:\n            esc = s[end]\n        except IndexError:\n            raise JSONDecodeError(\"Unterminated string starting at\",\n                                  s, begin) from None\n        # If not a unicode escape sequence, must be in the lookup table\n        if esc != 'u':\n            try:\n                char = _b[esc]\n            except KeyError:\n                msg = \"Invalid \\\\escape: {0!r}\".format(esc)\n                raise JSONDecodeError(msg, s, end)\n            end += 1\n        else:\n            uni = _decode_uXXXX(s, end)\n            end += 5\n            if 0xd800 <= uni <= 0xdbff and s[end:end + 2] == '\\\\u':\n                uni2 = _decode_uXXXX(s, end + 1)\n                if 0xdc00 <= uni2 <= 0xdfff:\n                    uni = 0x10000 + (((uni - 0xd800) << 10) | (uni2 - 0xdc00))\n                    end += 6\n            char = chr(uni)\n        _append(char)\n    return ''.join(chunks), end\n\n\n# Use speedup if available\nscanstring = c_scanstring or py_scanstring\n\nWHITESPACE = re.compile(r'[ \\t\\n\\r]*', FLAGS)\nWHITESPACE_STR = ' \\t\\n\\r'\n\n\ndef JSONObject(s_and_end, strict, scan_once, object_hook, object_pairs_hook,\n               memo=None, _w=WHITESPACE.match, _ws=WHITESPACE_STR):\n    s, end = s_and_end\n    pairs = []\n    pairs_append = pairs.append\n    # Backwards compatibility\n    if memo is None:\n        memo = {}\n    memo_get = memo.setdefault\n    # Use a slice to prevent IndexError from being raised, the following\n    # check will raise a more specific ValueError if the string is empty\n    nextchar = s[end:end + 1]\n    # Normally we expect nextchar == '\"'\n    if nextchar != '\"':\n        if nextchar in _ws:\n            end = _w(s, end).end()\n            nextchar = s[end:end + 1]\n        # Trivial empty object\n        if nextchar == '}':\n            if object_pairs_hook is not None:\n                result = object_pairs_hook(pairs)\n                return result, end + 1\n            pairs = {}\n            if object_hook is not None:\n                pairs = object_hook(pairs)\n            return pairs, end + 1\n        elif nextchar != '\"':\n            raise JSONDecodeError(\n                \"Expecting property name enclosed in double quotes\", s, end)\n    end += 1\n    while True:\n        key, end = scanstring(s, end, strict)\n        key = memo_get(key, key)\n        # To skip some function call overhead we optimize the fast paths where\n        # the JSON key separator is \": \" or just \":\".\n        if s[end:end + 1] != ':':\n            end = _w(s, end).end()\n            if s[end:end + 1] != ':':\n                raise JSONDecodeError(\"Expecting ':' delimiter\", s, end)\n        end += 1\n\n        try:\n            if s[end] in _ws:\n                end += 1\n                if s[end] in _ws:\n                    end = _w(s, end + 1).end()\n        except IndexError:\n            pass\n\n        try:\n            value, end = scan_once(s, end)\n        except StopIteration as err:\n            raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n        pairs_append((key, value))\n        try:\n            nextchar = s[end]\n            if nextchar in _ws:\n                end = _w(s, end + 1).end()\n                nextchar = s[end]\n        except IndexError:\n            nextchar = ''\n        end += 1\n\n        if nextchar == '}':\n            break\n        elif nextchar != ',':\n            raise JSONDecodeError(\"Expecting ',' delimiter\", s, end - 1)\n        end = _w(s, end).end()\n        nextchar = s[end:end + 1]\n        end += 1\n        if nextchar != '\"':\n            raise JSONDecodeError(\n                \"Expecting property name enclosed in double quotes\", s, end - 1)\n    if object_pairs_hook is not None:\n        result = object_pairs_hook(pairs)\n        return result, end\n    pairs = dict(pairs)\n    if object_hook is not None:\n        pairs = object_hook(pairs)\n    return pairs, end\n\ndef JSONArray(s_and_end, scan_once, _w=WHITESPACE.match, _ws=WHITESPACE_STR):\n    s, end = s_and_end\n    values = []\n    nextchar = s[end:end + 1]\n    if nextchar in _ws:\n        end = _w(s, end + 1).end()\n        nextchar = s[end:end + 1]\n    # Look-ahead for trivial empty array\n    if nextchar == ']':\n        return values, end + 1\n    _append = values.append\n    while True:\n        try:\n            value, end = scan_once(s, end)\n        except StopIteration as err:\n            raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n        _append(value)\n        nextchar = s[end:end + 1]\n        if nextchar in _ws:\n            end = _w(s, end + 1).end()\n            nextchar = s[end:end + 1]\n        end += 1\n        if nextchar == ']':\n            break\n        elif nextchar != ',':\n            raise JSONDecodeError(\"Expecting ',' delimiter\", s, end - 1)\n        try:\n            if s[end] in _ws:\n                end += 1\n                if s[end] in _ws:\n                    end = _w(s, end + 1).end()\n        except IndexError:\n            pass\n\n    return values, end\n\n\nclass JSONDecoder(object):\n    \"\"\"Simple JSON <http://json.org> decoder\n\n    Performs the following translations in decoding by default:\n\n    +---------------+-------------------+\n    | JSON          | Python            |\n    +===============+===================+\n    | object        | dict              |\n    +---------------+-------------------+\n    | array         | list              |\n    +---------------+-------------------+\n    | string        | str               |\n    +---------------+-------------------+\n    | number (int)  | int               |\n    +---------------+-------------------+\n    | number (real) | float             |\n    +---------------+-------------------+\n    | true          | True              |\n    +---------------+-------------------+\n    | false         | False             |\n    +---------------+-------------------+\n    | null          | None              |\n    +---------------+-------------------+\n\n    It also understands ``NaN``, ``Infinity``, and ``-Infinity`` as\n    their corresponding ``float`` values, which is outside the JSON spec.\n\n    \"\"\"\n\n    def __init__(self, *, object_hook=None, parse_float=None,\n            parse_int=None, parse_constant=None, strict=True,\n            object_pairs_hook=None):\n        \"\"\"``object_hook``, if specified, will be called with the result\n        of every JSON object decoded and its return value will be used in\n        place of the given ``dict``.  This can be used to provide custom\n        deserializations (e.g. to support JSON-RPC class hinting).\n\n        ``object_pairs_hook``, if specified will be called with the result of\n        every JSON object decoded with an ordered list of pairs.  The return\n        value of ``object_pairs_hook`` will be used instead of the ``dict``.\n        This feature can be used to implement custom decoders.\n        If ``object_hook`` is also defined, the ``object_pairs_hook`` takes\n        priority.\n\n        ``parse_float``, if specified, will be called with the string\n        of every JSON float to be decoded. By default this is equivalent to\n        float(num_str). This can be used to use another datatype or parser\n        for JSON floats (e.g. decimal.Decimal).\n\n        ``parse_int``, if specified, will be called with the string\n        of every JSON int to be decoded. By default this is equivalent to\n        int(num_str). This can be used to use another datatype or parser\n        for JSON integers (e.g. float).\n\n        ``parse_constant``, if specified, will be called with one of the\n        following strings: -Infinity, Infinity, NaN.\n        This can be used to raise an exception if invalid JSON numbers\n        are encountered.\n\n        If ``strict`` is false (true is the default), then control\n        characters will be allowed inside strings.  Control characters in\n        this context are those with character codes in the 0-31 range,\n        including ``'\\\\t'`` (tab), ``'\\\\n'``, ``'\\\\r'`` and ``'\\\\0'``.\n        \"\"\"\n        self.object_hook = object_hook\n        self.parse_float = parse_float or float\n        self.parse_int = parse_int or int\n        self.parse_constant = parse_constant or _CONSTANTS.__getitem__\n        self.strict = strict\n        self.object_pairs_hook = object_pairs_hook\n        self.parse_object = JSONObject\n        self.parse_array = JSONArray\n        self.parse_string = scanstring\n        self.memo = {}\n        self.scan_once = scanner.make_scanner(self)\n\n\n    def decode(self, s, _w=WHITESPACE.match):\n        \"\"\"Return the Python representation of ``s`` (a ``str`` instance\n        containing a JSON document).\n\n        \"\"\"\n        obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n        end = _w(s, end).end()\n        if end != len(s):\n            raise JSONDecodeError(\"Extra data\", s, end)\n        return obj\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n\n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n\n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n            raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n        return obj, end\n", 356]}, "functions": {"inner (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py:271)": ["C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\typing.py", 271], "__new__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\polygon.py:62)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\polygon.py", 62], "wrapped (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py:62)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\decorators.py", 62], "__new__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\polygon.py:221)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\polygon.py", 221], "getpreferredencoding (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\_bootlocale.py:11)": ["C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\_bootlocale.py", 11], "loads (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:299)": ["C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py", 299], "load (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:274)": ["C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py", 274], "<listcomp> (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:65)": ["C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py", 65], "join (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py:77)": ["C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\ntpath.py", 77], "<listcomp> (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:66)": ["C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py", 66], "_check_engine (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:115)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py", 115], "_expand_user (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:173)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py", 173], "_is_url (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:182)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py", 182], "_read_file_pyogrio (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:458)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py", 458], "_read_file (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py:190)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\io\\file.py", 190], "__contains__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py:2076)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\pandas\\core\\generic.py", 2076], "__getitem__ (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:1744)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py", 1744], "_get_geometry (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py:225)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\geopandas\\geodataframe.py", 225], "unary_union (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py:129)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\ops.py", 129], "convex_hull (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:387)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py", 387], "_maybe_unpack (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:69)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py", 69], "intersects (C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py:717)": ["C:\\Users\\Vecto\\AppData\\Roaming\\Python\\Python39\\site-packages\\shapely\\geometry\\base.py", 717], "find_s57_within_range_native (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:39)": ["C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py", 39], "decode (C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py:332)": ["C:\\Users\\Vecto\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py", 332], "find_s57_within_range (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:16)": ["C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py", 16], "<module> (C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py:1)": ["C:\\Users\\Vecto\\WorkSpace\\00000000 temp codes\\S57_coverage_checker\\search.py", 1]}}}